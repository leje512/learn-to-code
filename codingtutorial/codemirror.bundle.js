(function (exports) {
   'use strict';

   /**
   The data structure for documents. @nonabstract
   */
   class Text {
       /**
       @internal
       */
       constructor() { }
       /**
       Get the line description around the given position.
       */
       lineAt(pos) {
           if (pos < 0 || pos > this.length)
               throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);
           return this.lineInner(pos, false, 1, 0);
       }
       /**
       Get the description for the given (1-based) line number.
       */
       line(n) {
           if (n < 1 || n > this.lines)
               throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);
           return this.lineInner(n, true, 1, 0);
       }
       /**
       Replace a range of the text with the given content.
       */
       replace(from, to, text) {
           let parts = [];
           this.decompose(0, from, parts, 2 /* Open.To */);
           if (text.length)
               text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);
           this.decompose(to, this.length, parts, 1 /* Open.From */);
           return TextNode.from(parts, this.length - (to - from) + text.length);
       }
       /**
       Append another document to this one.
       */
       append(other) {
           return this.replace(this.length, this.length, other);
       }
       /**
       Retrieve the text between the given points.
       */
       slice(from, to = this.length) {
           let parts = [];
           this.decompose(from, to, parts, 0);
           return TextNode.from(parts, to - from);
       }
       /**
       Test whether this text is equal to another instance.
       */
       eq(other) {
           if (other == this)
               return true;
           if (other.length != this.length || other.lines != this.lines)
               return false;
           let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);
           let a = new RawTextCursor(this), b = new RawTextCursor(other);
           for (let skip = start, pos = start;;) {
               a.next(skip);
               b.next(skip);
               skip = 0;
               if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)
                   return false;
               pos += a.value.length;
               if (a.done || pos >= end)
                   return true;
           }
       }
       /**
       Iterate over the text. When `dir` is `-1`, iteration happens
       from end to start. This will return lines and the breaks between
       them as separate strings.
       */
       iter(dir = 1) { return new RawTextCursor(this, dir); }
       /**
       Iterate over a range of the text. When `from` > `to`, the
       iterator will run in reverse.
       */
       iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }
       /**
       Return a cursor that iterates over the given range of lines,
       _without_ returning the line breaks between, and yielding empty
       strings for empty lines.
       
       When `from` and `to` are given, they should be 1-based line numbers.
       */
       iterLines(from, to) {
           let inner;
           if (from == null) {
               inner = this.iter();
           }
           else {
               if (to == null)
                   to = this.lines + 1;
               let start = this.line(from).from;
               inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));
           }
           return new LineCursor(inner);
       }
       /**
       @internal
       */
       toString() { return this.sliceString(0); }
       /**
       Convert the document to an array of lines (which can be
       deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
       */
       toJSON() {
           let lines = [];
           this.flatten(lines);
           return lines;
       }
       /**
       Create a `Text` instance for the given array of lines.
       */
       static of(text) {
           if (text.length == 0)
               throw new RangeError("A document must have at least one line");
           if (text.length == 1 && !text[0])
               return Text.empty;
           return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));
       }
   }
   // Leaves store an array of line strings. There are always line breaks
   // between these strings. Leaves are limited in size and have to be
   // contained in TextNode instances for bigger documents.
   class TextLeaf extends Text {
       constructor(text, length = textLength(text)) {
           super();
           this.text = text;
           this.length = length;
       }
       get lines() { return this.text.length; }
       get children() { return null; }
       lineInner(target, isLine, line, offset) {
           for (let i = 0;; i++) {
               let string = this.text[i], end = offset + string.length;
               if ((isLine ? line : end) >= target)
                   return new Line(offset, end, line, string);
               offset = end + 1;
               line++;
           }
       }
       decompose(from, to, target, open) {
           let text = from <= 0 && to >= this.length ? this
               : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));
           if (open & 1 /* Open.From */) {
               let prev = target.pop();
               let joined = appendText(text.text, prev.text.slice(), 0, text.length);
               if (joined.length <= 32 /* Tree.Branch */) {
                   target.push(new TextLeaf(joined, prev.length + text.length));
               }
               else {
                   let mid = joined.length >> 1;
                   target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));
               }
           }
           else {
               target.push(text);
           }
       }
       replace(from, to, text) {
           if (!(text instanceof TextLeaf))
               return super.replace(from, to, text);
           let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);
           let newLen = this.length + text.length - (to - from);
           if (lines.length <= 32 /* Tree.Branch */)
               return new TextLeaf(lines, newLen);
           return TextNode.from(TextLeaf.split(lines, []), newLen);
       }
       sliceString(from, to = this.length, lineSep = "\n") {
           let result = "";
           for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {
               let line = this.text[i], end = pos + line.length;
               if (pos > from && i)
                   result += lineSep;
               if (from < end && to > pos)
                   result += line.slice(Math.max(0, from - pos), to - pos);
               pos = end + 1;
           }
           return result;
       }
       flatten(target) {
           for (let line of this.text)
               target.push(line);
       }
       scanIdentical() { return 0; }
       static split(text, target) {
           let part = [], len = -1;
           for (let line of text) {
               part.push(line);
               len += line.length + 1;
               if (part.length == 32 /* Tree.Branch */) {
                   target.push(new TextLeaf(part, len));
                   part = [];
                   len = -1;
               }
           }
           if (len > -1)
               target.push(new TextLeaf(part, len));
           return target;
       }
   }
   // Nodes provide the tree structure of the `Text` type. They store a
   // number of other nodes or leaves, taking care to balance themselves
   // on changes. There are implied line breaks _between_ the children of
   // a node (but not before the first or after the last child).
   class TextNode extends Text {
       constructor(children, length) {
           super();
           this.children = children;
           this.length = length;
           this.lines = 0;
           for (let child of children)
               this.lines += child.lines;
       }
       lineInner(target, isLine, line, offset) {
           for (let i = 0;; i++) {
               let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;
               if ((isLine ? endLine : end) >= target)
                   return child.lineInner(target, isLine, line, offset);
               offset = end + 1;
               line = endLine + 1;
           }
       }
       decompose(from, to, target, open) {
           for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {
               let child = this.children[i], end = pos + child.length;
               if (from <= end && to >= pos) {
                   let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));
                   if (pos >= from && end <= to && !childOpen)
                       target.push(child);
                   else
                       child.decompose(from - pos, to - pos, target, childOpen);
               }
               pos = end + 1;
           }
       }
       replace(from, to, text) {
           if (text.lines < this.lines)
               for (let i = 0, pos = 0; i < this.children.length; i++) {
                   let child = this.children[i], end = pos + child.length;
                   // Fast path: if the change only affects one child and the
                   // child's size remains in the acceptable range, only update
                   // that child
                   if (from >= pos && to <= end) {
                       let updated = child.replace(from - pos, to - pos, text);
                       let totalLines = this.lines - child.lines + updated.lines;
                       if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&
                           updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {
                           let copy = this.children.slice();
                           copy[i] = updated;
                           return new TextNode(copy, this.length - (to - from) + text.length);
                       }
                       return super.replace(pos, end, updated);
                   }
                   pos = end + 1;
               }
           return super.replace(from, to, text);
       }
       sliceString(from, to = this.length, lineSep = "\n") {
           let result = "";
           for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {
               let child = this.children[i], end = pos + child.length;
               if (pos > from && i)
                   result += lineSep;
               if (from < end && to > pos)
                   result += child.sliceString(from - pos, to - pos, lineSep);
               pos = end + 1;
           }
           return result;
       }
       flatten(target) {
           for (let child of this.children)
               child.flatten(target);
       }
       scanIdentical(other, dir) {
           if (!(other instanceof TextNode))
               return 0;
           let length = 0;
           let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]
               : [this.children.length - 1, other.children.length - 1, -1, -1];
           for (;; iA += dir, iB += dir) {
               if (iA == eA || iB == eB)
                   return length;
               let chA = this.children[iA], chB = other.children[iB];
               if (chA != chB)
                   return length + chA.scanIdentical(chB, dir);
               length += chA.length + 1;
           }
       }
       static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {
           let lines = 0;
           for (let ch of children)
               lines += ch.lines;
           if (lines < 32 /* Tree.Branch */) {
               let flat = [];
               for (let ch of children)
                   ch.flatten(flat);
               return new TextLeaf(flat, length);
           }
           let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;
           let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];
           function add(child) {
               let last;
               if (child.lines > maxChunk && child instanceof TextNode) {
                   for (let node of child.children)
                       add(node);
               }
               else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {
                   flush();
                   chunked.push(child);
               }
               else if (child instanceof TextLeaf && currentLines &&
                   (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&
                   child.lines + last.lines <= 32 /* Tree.Branch */) {
                   currentLines += child.lines;
                   currentLen += child.length + 1;
                   currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);
               }
               else {
                   if (currentLines + child.lines > chunk)
                       flush();
                   currentLines += child.lines;
                   currentLen += child.length + 1;
                   currentChunk.push(child);
               }
           }
           function flush() {
               if (currentLines == 0)
                   return;
               chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));
               currentLen = -1;
               currentLines = currentChunk.length = 0;
           }
           for (let child of children)
               add(child);
           flush();
           return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);
       }
   }
   Text.empty = /*@__PURE__*/new TextLeaf([""], 0);
   function textLength(text) {
       let length = -1;
       for (let line of text)
           length += line.length + 1;
       return length;
   }
   function appendText(text, target, from = 0, to = 1e9) {
       for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {
           let line = text[i], end = pos + line.length;
           if (end >= from) {
               if (end > to)
                   line = line.slice(0, to - pos);
               if (pos < from)
                   line = line.slice(from - pos);
               if (first) {
                   target[target.length - 1] += line;
                   first = false;
               }
               else
                   target.push(line);
           }
           pos = end + 1;
       }
       return target;
   }
   function sliceText(text, from, to) {
       return appendText(text, [""], from, to);
   }
   class RawTextCursor {
       constructor(text, dir = 1) {
           this.dir = dir;
           this.done = false;
           this.lineBreak = false;
           this.value = "";
           this.nodes = [text];
           this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];
       }
       nextInner(skip, dir) {
           this.done = this.lineBreak = false;
           for (;;) {
               let last = this.nodes.length - 1;
               let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;
               let size = top instanceof TextLeaf ? top.text.length : top.children.length;
               if (offset == (dir > 0 ? size : 0)) {
                   if (last == 0) {
                       this.done = true;
                       this.value = "";
                       return this;
                   }
                   if (dir > 0)
                       this.offsets[last - 1]++;
                   this.nodes.pop();
                   this.offsets.pop();
               }
               else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {
                   this.offsets[last] += dir;
                   if (skip == 0) {
                       this.lineBreak = true;
                       this.value = "\n";
                       return this;
                   }
                   skip--;
               }
               else if (top instanceof TextLeaf) {
                   // Move to the next string
                   let next = top.text[offset + (dir < 0 ? -1 : 0)];
                   this.offsets[last] += dir;
                   if (next.length > Math.max(0, skip)) {
                       this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);
                       return this;
                   }
                   skip -= next.length;
               }
               else {
                   let next = top.children[offset + (dir < 0 ? -1 : 0)];
                   if (skip > next.length) {
                       skip -= next.length;
                       this.offsets[last] += dir;
                   }
                   else {
                       if (dir < 0)
                           this.offsets[last]--;
                       this.nodes.push(next);
                       this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);
                   }
               }
           }
       }
       next(skip = 0) {
           if (skip < 0) {
               this.nextInner(-skip, (-this.dir));
               skip = this.value.length;
           }
           return this.nextInner(skip, this.dir);
       }
   }
   class PartialTextCursor {
       constructor(text, start, end) {
           this.value = "";
           this.done = false;
           this.cursor = new RawTextCursor(text, start > end ? -1 : 1);
           this.pos = start > end ? text.length : 0;
           this.from = Math.min(start, end);
           this.to = Math.max(start, end);
       }
       nextInner(skip, dir) {
           if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {
               this.value = "";
               this.done = true;
               return this;
           }
           skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);
           let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;
           if (skip > limit)
               skip = limit;
           limit -= skip;
           let { value } = this.cursor.next(skip);
           this.pos += (value.length + skip) * dir;
           this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);
           this.done = !this.value;
           return this;
       }
       next(skip = 0) {
           if (skip < 0)
               skip = Math.max(skip, this.from - this.pos);
           else if (skip > 0)
               skip = Math.min(skip, this.to - this.pos);
           return this.nextInner(skip, this.cursor.dir);
       }
       get lineBreak() { return this.cursor.lineBreak && this.value != ""; }
   }
   class LineCursor {
       constructor(inner) {
           this.inner = inner;
           this.afterBreak = true;
           this.value = "";
           this.done = false;
       }
       next(skip = 0) {
           let { done, lineBreak, value } = this.inner.next(skip);
           if (done) {
               this.done = true;
               this.value = "";
           }
           else if (lineBreak) {
               if (this.afterBreak) {
                   this.value = "";
               }
               else {
                   this.afterBreak = true;
                   this.next();
               }
           }
           else {
               this.value = value;
               this.afterBreak = false;
           }
           return this;
       }
       get lineBreak() { return false; }
   }
   if (typeof Symbol != "undefined") {
       Text.prototype[Symbol.iterator] = function () { return this.iter(); };
       RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =
           LineCursor.prototype[Symbol.iterator] = function () { return this; };
   }
   /**
   This type describes a line in the document. It is created
   on-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).
   */
   class Line {
       /**
       @internal
       */
       constructor(
       /**
       The position of the start of the line.
       */
       from, 
       /**
       The position at the end of the line (_before_ the line break,
       or at the end of document for the last line).
       */
       to, 
       /**
       This line's line number (1-based).
       */
       number, 
       /**
       The line's content.
       */
       text) {
           this.from = from;
           this.to = to;
           this.number = number;
           this.text = text;
       }
       /**
       The length of the line (not including any line break after it).
       */
       get length() { return this.to - this.from; }
   }

   // Compressed representation of the Grapheme_Cluster_Break=Extend
   // information from
   // http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.
   // Each pair of elements represents a range, as an offet from the
   // previous range and a length. Numbers are in base-36, with the empty
   // string being a shorthand for 1.
   let extend = /*@__PURE__*/"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map(s => s ? parseInt(s, 36) : 1);
   // Convert offsets into absolute values
   for (let i = 1; i < extend.length; i++)
       extend[i] += extend[i - 1];
   function isExtendingChar(code) {
       for (let i = 1; i < extend.length; i += 2)
           if (extend[i] > code)
               return extend[i - 1] <= code;
       return false;
   }
   function isRegionalIndicator(code) {
       return code >= 0x1F1E6 && code <= 0x1F1FF;
   }
   const ZWJ = 0x200d;
   /**
   Returns a next grapheme cluster break _after_ (not equal to)
   `pos`, if `forward` is true, or before otherwise. Returns `pos`
   itself if no further cluster break is available in the string.
   Moves across surrogate pairs, extending characters (when
   `includeExtending` is true), characters joined with zero-width
   joiners, and flag emoji.
   */
   function findClusterBreak(str, pos, forward = true, includeExtending = true) {
       return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);
   }
   function nextClusterBreak(str, pos, includeExtending) {
       if (pos == str.length)
           return pos;
       // If pos is in the middle of a surrogate pair, move to its start
       if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))
           pos--;
       let prev = codePointAt(str, pos);
       pos += codePointSize(prev);
       while (pos < str.length) {
           let next = codePointAt(str, pos);
           if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {
               pos += codePointSize(next);
               prev = next;
           }
           else if (isRegionalIndicator(next)) {
               let countBefore = 0, i = pos - 2;
               while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {
                   countBefore++;
                   i -= 2;
               }
               if (countBefore % 2 == 0)
                   break;
               else
                   pos += 2;
           }
           else {
               break;
           }
       }
       return pos;
   }
   function prevClusterBreak(str, pos, includeExtending) {
       while (pos > 0) {
           let found = nextClusterBreak(str, pos - 2, includeExtending);
           if (found < pos)
               return found;
           pos--;
       }
       return 0;
   }
   function surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }
   function surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }
   /**
   Find the code point at the given position in a string (like the
   [`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)
   string method).
   */
   function codePointAt(str, pos) {
       let code0 = str.charCodeAt(pos);
       if (!surrogateHigh(code0) || pos + 1 == str.length)
           return code0;
       let code1 = str.charCodeAt(pos + 1);
       if (!surrogateLow(code1))
           return code0;
       return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;
   }
   /**
   Given a Unicode codepoint, return the JavaScript string that
   respresents it (like
   [`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).
   */
   function fromCodePoint(code) {
       if (code <= 0xffff)
           return String.fromCharCode(code);
       code -= 0x10000;
       return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);
   }
   /**
   The amount of positions a character takes up a JavaScript string.
   */
   function codePointSize(code) { return code < 0x10000 ? 1 : 2; }

   const DefaultSplit = /\r\n?|\n/;
   /**
   Distinguishes different ways in which positions can be mapped.
   */
   var MapMode = /*@__PURE__*/(function (MapMode) {
       /**
       Map a position to a valid new position, even when its context
       was deleted.
       */
       MapMode[MapMode["Simple"] = 0] = "Simple";
       /**
       Return null if deletion happens across the position.
       */
       MapMode[MapMode["TrackDel"] = 1] = "TrackDel";
       /**
       Return null if the character _before_ the position is deleted.
       */
       MapMode[MapMode["TrackBefore"] = 2] = "TrackBefore";
       /**
       Return null if the character _after_ the position is deleted.
       */
       MapMode[MapMode["TrackAfter"] = 3] = "TrackAfter";
   return MapMode})(MapMode || (MapMode = {}));
   /**
   A change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)
   that doesn't store the inserted text. As such, it can't be
   applied, but is cheaper to store and manipulate.
   */
   class ChangeDesc {
       // Sections are encoded as pairs of integers. The first is the
       // length in the current document, and the second is -1 for
       // unaffected sections, and the length of the replacement content
       // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
       // 0), and a replacement two positive numbers.
       /**
       @internal
       */
       constructor(
       /**
       @internal
       */
       sections) {
           this.sections = sections;
       }
       /**
       The length of the document before the change.
       */
       get length() {
           let result = 0;
           for (let i = 0; i < this.sections.length; i += 2)
               result += this.sections[i];
           return result;
       }
       /**
       The length of the document after the change.
       */
       get newLength() {
           let result = 0;
           for (let i = 0; i < this.sections.length; i += 2) {
               let ins = this.sections[i + 1];
               result += ins < 0 ? this.sections[i] : ins;
           }
           return result;
       }
       /**
       False when there are actual changes in this set.
       */
       get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }
       /**
       Iterate over the unchanged parts left by these changes. `posA`
       provides the position of the range in the old document, `posB`
       the new position in the changed document.
       */
       iterGaps(f) {
           for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {
               let len = this.sections[i++], ins = this.sections[i++];
               if (ins < 0) {
                   f(posA, posB, len);
                   posB += len;
               }
               else {
                   posB += ins;
               }
               posA += len;
           }
       }
       /**
       Iterate over the ranges changed by these changes. (See
       [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
       variant that also provides you with the inserted text.)
       `fromA`/`toA` provides the extent of the change in the starting
       document, `fromB`/`toB` the extent of the replacement in the
       changed document.
       
       When `individual` is true, adjacent changes (which are kept
       separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
       reported separately.
       */
       iterChangedRanges(f, individual = false) {
           iterChanges(this, f, individual);
       }
       /**
       Get a description of the inverted form of these changes.
       */
       get invertedDesc() {
           let sections = [];
           for (let i = 0; i < this.sections.length;) {
               let len = this.sections[i++], ins = this.sections[i++];
               if (ins < 0)
                   sections.push(len, ins);
               else
                   sections.push(ins, len);
           }
           return new ChangeDesc(sections);
       }
       /**
       Compute the combined effect of applying another set of changes
       after this one. The length of the document after this set should
       match the length before `other`.
       */
       composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }
       /**
       Map this description, which should start with the same document
       as `other`, over another set of changes, so that it can be
       applied after it. When `before` is true, map as if the changes
       in `other` happened before the ones in `this`.
       */
       mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }
       mapPos(pos, assoc = -1, mode = MapMode.Simple) {
           let posA = 0, posB = 0;
           for (let i = 0; i < this.sections.length;) {
               let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;
               if (ins < 0) {
                   if (endA > pos)
                       return posB + (pos - posA);
                   posB += len;
               }
               else {
                   if (mode != MapMode.Simple && endA >= pos &&
                       (mode == MapMode.TrackDel && posA < pos && endA > pos ||
                           mode == MapMode.TrackBefore && posA < pos ||
                           mode == MapMode.TrackAfter && endA > pos))
                       return null;
                   if (endA > pos || endA == pos && assoc < 0 && !len)
                       return pos == posA || assoc < 0 ? posB : posB + ins;
                   posB += ins;
               }
               posA = endA;
           }
           if (pos > posA)
               throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);
           return posB;
       }
       /**
       Check whether these changes touch a given range. When one of the
       changes entirely covers the range, the string `"cover"` is
       returned.
       */
       touchesRange(from, to = from) {
           for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {
               let len = this.sections[i++], ins = this.sections[i++], end = pos + len;
               if (ins >= 0 && pos <= to && end >= from)
                   return pos < from && end > to ? "cover" : true;
               pos = end;
           }
           return false;
       }
       /**
       @internal
       */
       toString() {
           let result = "";
           for (let i = 0; i < this.sections.length;) {
               let len = this.sections[i++], ins = this.sections[i++];
               result += (result ? " " : "") + len + (ins >= 0 ? ":" + ins : "");
           }
           return result;
       }
       /**
       Serialize this change desc to a JSON-representable value.
       */
       toJSON() { return this.sections; }
       /**
       Create a change desc from its JSON representation (as produced
       by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
       */
       static fromJSON(json) {
           if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != "number"))
               throw new RangeError("Invalid JSON representation of ChangeDesc");
           return new ChangeDesc(json);
       }
       /**
       @internal
       */
       static create(sections) { return new ChangeDesc(sections); }
   }
   /**
   A change set represents a group of modifications to a document. It
   stores the document length, and can only be applied to documents
   with exactly that length.
   */
   class ChangeSet extends ChangeDesc {
       constructor(sections, 
       /**
       @internal
       */
       inserted) {
           super(sections);
           this.inserted = inserted;
       }
       /**
       Apply the changes to a document, returning the modified
       document.
       */
       apply(doc) {
           if (this.length != doc.length)
               throw new RangeError("Applying change set to a document with the wrong length");
           iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);
           return doc;
       }
       mapDesc(other, before = false) { return mapSet(this, other, before, true); }
       /**
       Given the document as it existed _before_ the changes, return a
       change set that represents the inverse of this set, which could
       be used to go from the document created by the changes back to
       the document as it existed before the changes.
       */
       invert(doc) {
           let sections = this.sections.slice(), inserted = [];
           for (let i = 0, pos = 0; i < sections.length; i += 2) {
               let len = sections[i], ins = sections[i + 1];
               if (ins >= 0) {
                   sections[i] = ins;
                   sections[i + 1] = len;
                   let index = i >> 1;
                   while (inserted.length < index)
                       inserted.push(Text.empty);
                   inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);
               }
               pos += len;
           }
           return new ChangeSet(sections, inserted);
       }
       /**
       Combine two subsequent change sets into a single set. `other`
       must start in the document produced by `this`. If `this` goes
       `docA` → `docB` and `other` represents `docB` → `docC`, the
       returned value will represent the change `docA` → `docC`.
       */
       compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }
       /**
       Given another change set starting in the same document, maps this
       change set over the other, producing a new change set that can be
       applied to the document produced by applying `other`. When
       `before` is `true`, order changes as if `this` comes before
       `other`, otherwise (the default) treat `other` as coming first.
       
       Given two changes `A` and `B`, `A.compose(B.map(A))` and
       `B.compose(A.map(B, true))` will produce the same document. This
       provides a basic form of [operational
       transformation](https://en.wikipedia.org/wiki/Operational_transformation),
       and can be used for collaborative editing.
       */
       map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }
       /**
       Iterate over the changed ranges in the document, calling `f` for
       each, with the range in the original document (`fromA`-`toA`)
       and the range that replaces it in the new document
       (`fromB`-`toB`).
       
       When `individual` is true, adjacent changes are reported
       separately.
       */
       iterChanges(f, individual = false) {
           iterChanges(this, f, individual);
       }
       /**
       Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
       set.
       */
       get desc() { return ChangeDesc.create(this.sections); }
       /**
       @internal
       */
       filter(ranges) {
           let resultSections = [], resultInserted = [], filteredSections = [];
           let iter = new SectionIter(this);
           done: for (let i = 0, pos = 0;;) {
               let next = i == ranges.length ? 1e9 : ranges[i++];
               while (pos < next || pos == next && iter.len == 0) {
                   if (iter.done)
                       break done;
                   let len = Math.min(iter.len, next - pos);
                   addSection(filteredSections, len, -1);
                   let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;
                   addSection(resultSections, len, ins);
                   if (ins > 0)
                       addInsert(resultInserted, resultSections, iter.text);
                   iter.forward(len);
                   pos += len;
               }
               let end = ranges[i++];
               while (pos < end) {
                   if (iter.done)
                       break done;
                   let len = Math.min(iter.len, end - pos);
                   addSection(resultSections, len, -1);
                   addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);
                   iter.forward(len);
                   pos += len;
               }
           }
           return { changes: new ChangeSet(resultSections, resultInserted),
               filtered: ChangeDesc.create(filteredSections) };
       }
       /**
       Serialize this change set to a JSON-representable value.
       */
       toJSON() {
           let parts = [];
           for (let i = 0; i < this.sections.length; i += 2) {
               let len = this.sections[i], ins = this.sections[i + 1];
               if (ins < 0)
                   parts.push(len);
               else if (ins == 0)
                   parts.push([len]);
               else
                   parts.push([len].concat(this.inserted[i >> 1].toJSON()));
           }
           return parts;
       }
       /**
       Create a change set for the given changes, for a document of the
       given length, using `lineSep` as line separator.
       */
       static of(changes, length, lineSep) {
           let sections = [], inserted = [], pos = 0;
           let total = null;
           function flush(force = false) {
               if (!force && !sections.length)
                   return;
               if (pos < length)
                   addSection(sections, length - pos, -1);
               let set = new ChangeSet(sections, inserted);
               total = total ? total.compose(set.map(total)) : set;
               sections = [];
               inserted = [];
               pos = 0;
           }
           function process(spec) {
               if (Array.isArray(spec)) {
                   for (let sub of spec)
                       process(sub);
               }
               else if (spec instanceof ChangeSet) {
                   if (spec.length != length)
                       throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);
                   flush();
                   total = total ? total.compose(spec.map(total)) : spec;
               }
               else {
                   let { from, to = from, insert } = spec;
                   if (from > to || from < 0 || to > length)
                       throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);
                   let insText = !insert ? Text.empty : typeof insert == "string" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;
                   let insLen = insText.length;
                   if (from == to && insLen == 0)
                       return;
                   if (from < pos)
                       flush();
                   if (from > pos)
                       addSection(sections, from - pos, -1);
                   addSection(sections, to - from, insLen);
                   addInsert(inserted, sections, insText);
                   pos = to;
               }
           }
           process(changes);
           flush(!total);
           return total;
       }
       /**
       Create an empty changeset of the given length.
       */
       static empty(length) {
           return new ChangeSet(length ? [length, -1] : [], []);
       }
       /**
       Create a changeset from its JSON representation (as produced by
       [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
       */
       static fromJSON(json) {
           if (!Array.isArray(json))
               throw new RangeError("Invalid JSON representation of ChangeSet");
           let sections = [], inserted = [];
           for (let i = 0; i < json.length; i++) {
               let part = json[i];
               if (typeof part == "number") {
                   sections.push(part, -1);
               }
               else if (!Array.isArray(part) || typeof part[0] != "number" || part.some((e, i) => i && typeof e != "string")) {
                   throw new RangeError("Invalid JSON representation of ChangeSet");
               }
               else if (part.length == 1) {
                   sections.push(part[0], 0);
               }
               else {
                   while (inserted.length < i)
                       inserted.push(Text.empty);
                   inserted[i] = Text.of(part.slice(1));
                   sections.push(part[0], inserted[i].length);
               }
           }
           return new ChangeSet(sections, inserted);
       }
       /**
       @internal
       */
       static createSet(sections, inserted) {
           return new ChangeSet(sections, inserted);
       }
   }
   function addSection(sections, len, ins, forceJoin = false) {
       if (len == 0 && ins <= 0)
           return;
       let last = sections.length - 2;
       if (last >= 0 && ins <= 0 && ins == sections[last + 1])
           sections[last] += len;
       else if (len == 0 && sections[last] == 0)
           sections[last + 1] += ins;
       else if (forceJoin) {
           sections[last] += len;
           sections[last + 1] += ins;
       }
       else
           sections.push(len, ins);
   }
   function addInsert(values, sections, value) {
       if (value.length == 0)
           return;
       let index = (sections.length - 2) >> 1;
       if (index < values.length) {
           values[values.length - 1] = values[values.length - 1].append(value);
       }
       else {
           while (values.length < index)
               values.push(Text.empty);
           values.push(value);
       }
   }
   function iterChanges(desc, f, individual) {
       let inserted = desc.inserted;
       for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {
           let len = desc.sections[i++], ins = desc.sections[i++];
           if (ins < 0) {
               posA += len;
               posB += len;
           }
           else {
               let endA = posA, endB = posB, text = Text.empty;
               for (;;) {
                   endA += len;
                   endB += ins;
                   if (ins && inserted)
                       text = text.append(inserted[(i - 2) >> 1]);
                   if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)
                       break;
                   len = desc.sections[i++];
                   ins = desc.sections[i++];
               }
               f(posA, endA, posB, endB, text);
               posA = endA;
               posB = endB;
           }
       }
   }
   function mapSet(setA, setB, before, mkSet = false) {
       // Produce a copy of setA that applies to the document after setB
       // has been applied (assuming both start at the same document).
       let sections = [], insert = mkSet ? [] : null;
       let a = new SectionIter(setA), b = new SectionIter(setB);
       // Iterate over both sets in parallel. inserted tracks, for changes
       // in A that have to be processed piece-by-piece, whether their
       // content has been inserted already, and refers to the section
       // index.
       for (let inserted = -1;;) {
           if (a.ins == -1 && b.ins == -1) {
               // Move across ranges skipped by both sets.
               let len = Math.min(a.len, b.len);
               addSection(sections, len, -1);
               a.forward(len);
               b.forward(len);
           }
           else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {
               // If there's a change in B that comes before the next change in
               // A (ordered by start pos, then len, then before flag), skip
               // that (and process any changes in A it covers).
               let len = b.len;
               addSection(sections, b.ins, -1);
               while (len) {
                   let piece = Math.min(a.len, len);
                   if (a.ins >= 0 && inserted < a.i && a.len <= piece) {
                       addSection(sections, 0, a.ins);
                       if (insert)
                           addInsert(insert, sections, a.text);
                       inserted = a.i;
                   }
                   a.forward(piece);
                   len -= piece;
               }
               b.next();
           }
           else if (a.ins >= 0) {
               // Process the part of a change in A up to the start of the next
               // non-deletion change in B (if overlapping).
               let len = 0, left = a.len;
               while (left) {
                   if (b.ins == -1) {
                       let piece = Math.min(left, b.len);
                       len += piece;
                       left -= piece;
                       b.forward(piece);
                   }
                   else if (b.ins == 0 && b.len < left) {
                       left -= b.len;
                       b.next();
                   }
                   else {
                       break;
                   }
               }
               addSection(sections, len, inserted < a.i ? a.ins : 0);
               if (insert && inserted < a.i)
                   addInsert(insert, sections, a.text);
               inserted = a.i;
               a.forward(a.len - left);
           }
           else if (a.done && b.done) {
               return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);
           }
           else {
               throw new Error("Mismatched change set lengths");
           }
       }
   }
   function composeSets(setA, setB, mkSet = false) {
       let sections = [];
       let insert = mkSet ? [] : null;
       let a = new SectionIter(setA), b = new SectionIter(setB);
       for (let open = false;;) {
           if (a.done && b.done) {
               return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);
           }
           else if (a.ins == 0) { // Deletion in A
               addSection(sections, a.len, 0, open);
               a.next();
           }
           else if (b.len == 0 && !b.done) { // Insertion in B
               addSection(sections, 0, b.ins, open);
               if (insert)
                   addInsert(insert, sections, b.text);
               b.next();
           }
           else if (a.done || b.done) {
               throw new Error("Mismatched change set lengths");
           }
           else {
               let len = Math.min(a.len2, b.len), sectionLen = sections.length;
               if (a.ins == -1) {
                   let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;
                   addSection(sections, len, insB, open);
                   if (insert && insB)
                       addInsert(insert, sections, b.text);
               }
               else if (b.ins == -1) {
                   addSection(sections, a.off ? 0 : a.len, len, open);
                   if (insert)
                       addInsert(insert, sections, a.textBit(len));
               }
               else {
                   addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);
                   if (insert && !b.off)
                       addInsert(insert, sections, b.text);
               }
               open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);
               a.forward2(len);
               b.forward(len);
           }
       }
   }
   class SectionIter {
       constructor(set) {
           this.set = set;
           this.i = 0;
           this.next();
       }
       next() {
           let { sections } = this.set;
           if (this.i < sections.length) {
               this.len = sections[this.i++];
               this.ins = sections[this.i++];
           }
           else {
               this.len = 0;
               this.ins = -2;
           }
           this.off = 0;
       }
       get done() { return this.ins == -2; }
       get len2() { return this.ins < 0 ? this.len : this.ins; }
       get text() {
           let { inserted } = this.set, index = (this.i - 2) >> 1;
           return index >= inserted.length ? Text.empty : inserted[index];
       }
       textBit(len) {
           let { inserted } = this.set, index = (this.i - 2) >> 1;
           return index >= inserted.length && !len ? Text.empty
               : inserted[index].slice(this.off, len == null ? undefined : this.off + len);
       }
       forward(len) {
           if (len == this.len)
               this.next();
           else {
               this.len -= len;
               this.off += len;
           }
       }
       forward2(len) {
           if (this.ins == -1)
               this.forward(len);
           else if (len == this.ins)
               this.next();
           else {
               this.ins -= len;
               this.off += len;
           }
       }
   }

   /**
   A single selection range. When
   [`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)
   is enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold
   multiple ranges. By default, selections hold exactly one range.
   */
   class SelectionRange {
       constructor(
       /**
       The lower boundary of the range.
       */
       from, 
       /**
       The upper boundary of the range.
       */
       to, flags) {
           this.from = from;
           this.to = to;
           this.flags = flags;
       }
       /**
       The anchor of the range—the side that doesn't move when you
       extend it.
       */
       get anchor() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.to : this.from; }
       /**
       The head of the range, which is moved when the range is
       [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
       */
       get head() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.from : this.to; }
       /**
       True when `anchor` and `head` are at the same position.
       */
       get empty() { return this.from == this.to; }
       /**
       If this is a cursor that is explicitly associated with the
       character on one of its sides, this returns the side. -1 means
       the character before its position, 1 the character after, and 0
       means no association.
       */
       get assoc() { return this.flags & 4 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 8 /* RangeFlag.AssocAfter */ ? 1 : 0; }
       /**
       The bidirectional text level associated with this cursor, if
       any.
       */
       get bidiLevel() {
           let level = this.flags & 3 /* RangeFlag.BidiLevelMask */;
           return level == 3 ? null : level;
       }
       /**
       The goal column (stored vertical offset) associated with a
       cursor. This is used to preserve the vertical position when
       [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
       lines of different length.
       */
       get goalColumn() {
           let value = this.flags >> 5 /* RangeFlag.GoalColumnOffset */;
           return value == 33554431 /* RangeFlag.NoGoalColumn */ ? undefined : value;
       }
       /**
       Map this range through a change, producing a valid range in the
       updated document.
       */
       map(change, assoc = -1) {
           let from, to;
           if (this.empty) {
               from = to = change.mapPos(this.from, assoc);
           }
           else {
               from = change.mapPos(this.from, 1);
               to = change.mapPos(this.to, -1);
           }
           return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);
       }
       /**
       Extend this range to cover at least `from` to `to`.
       */
       extend(from, to = from) {
           if (from <= this.anchor && to >= this.anchor)
               return EditorSelection.range(from, to);
           let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;
           return EditorSelection.range(this.anchor, head);
       }
       /**
       Compare this range to another range.
       */
       eq(other) {
           return this.anchor == other.anchor && this.head == other.head;
       }
       /**
       Return a JSON-serializable object representing the range.
       */
       toJSON() { return { anchor: this.anchor, head: this.head }; }
       /**
       Convert a JSON representation of a range to a `SelectionRange`
       instance.
       */
       static fromJSON(json) {
           if (!json || typeof json.anchor != "number" || typeof json.head != "number")
               throw new RangeError("Invalid JSON representation for SelectionRange");
           return EditorSelection.range(json.anchor, json.head);
       }
       /**
       @internal
       */
       static create(from, to, flags) {
           return new SelectionRange(from, to, flags);
       }
   }
   /**
   An editor selection holds one or more selection ranges.
   */
   class EditorSelection {
       constructor(
       /**
       The ranges in the selection, sorted by position. Ranges cannot
       overlap (but they may touch, if they aren't empty).
       */
       ranges, 
       /**
       The index of the _main_ range in the selection (which is
       usually the range that was added last).
       */
       mainIndex) {
           this.ranges = ranges;
           this.mainIndex = mainIndex;
       }
       /**
       Map a selection through a change. Used to adjust the selection
       position for changes.
       */
       map(change, assoc = -1) {
           if (change.empty)
               return this;
           return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);
       }
       /**
       Compare this selection to another selection.
       */
       eq(other) {
           if (this.ranges.length != other.ranges.length ||
               this.mainIndex != other.mainIndex)
               return false;
           for (let i = 0; i < this.ranges.length; i++)
               if (!this.ranges[i].eq(other.ranges[i]))
                   return false;
           return true;
       }
       /**
       Get the primary selection range. Usually, you should make sure
       your code applies to _all_ ranges, by using methods like
       [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
       */
       get main() { return this.ranges[this.mainIndex]; }
       /**
       Make sure the selection only has one range. Returns a selection
       holding only the main range from this selection.
       */
       asSingle() {
           return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);
       }
       /**
       Extend this selection with an extra range.
       */
       addRange(range, main = true) {
           return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);
       }
       /**
       Replace a given range with another range, and then normalize the
       selection to merge and sort ranges if necessary.
       */
       replaceRange(range, which = this.mainIndex) {
           let ranges = this.ranges.slice();
           ranges[which] = range;
           return EditorSelection.create(ranges, this.mainIndex);
       }
       /**
       Convert this selection to an object that can be serialized to
       JSON.
       */
       toJSON() {
           return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };
       }
       /**
       Create a selection from a JSON representation.
       */
       static fromJSON(json) {
           if (!json || !Array.isArray(json.ranges) || typeof json.main != "number" || json.main >= json.ranges.length)
               throw new RangeError("Invalid JSON representation for EditorSelection");
           return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);
       }
       /**
       Create a selection holding a single range.
       */
       static single(anchor, head = anchor) {
           return new EditorSelection([EditorSelection.range(anchor, head)], 0);
       }
       /**
       Sort and merge the given set of ranges, creating a valid
       selection.
       */
       static create(ranges, mainIndex = 0) {
           if (ranges.length == 0)
               throw new RangeError("A selection needs at least one range");
           for (let pos = 0, i = 0; i < ranges.length; i++) {
               let range = ranges[i];
               if (range.empty ? range.from <= pos : range.from < pos)
                   return EditorSelection.normalized(ranges.slice(), mainIndex);
               pos = range.to;
           }
           return new EditorSelection(ranges, mainIndex);
       }
       /**
       Create a cursor selection range at the given position. You can
       safely ignore the optional arguments in most situations.
       */
       static cursor(pos, assoc = 0, bidiLevel, goalColumn) {
           return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* RangeFlag.AssocBefore */ : 8 /* RangeFlag.AssocAfter */) |
               (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |
               ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */));
       }
       /**
       Create a selection range.
       */
       static range(anchor, head, goalColumn) {
           let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */;
           return head < anchor ? SelectionRange.create(head, anchor, 16 /* RangeFlag.Inverted */ | goal | 8 /* RangeFlag.AssocAfter */)
               : SelectionRange.create(anchor, head, goal | (head > anchor ? 4 /* RangeFlag.AssocBefore */ : 0));
       }
       /**
       @internal
       */
       static normalized(ranges, mainIndex = 0) {
           let main = ranges[mainIndex];
           ranges.sort((a, b) => a.from - b.from);
           mainIndex = ranges.indexOf(main);
           for (let i = 1; i < ranges.length; i++) {
               let range = ranges[i], prev = ranges[i - 1];
               if (range.empty ? range.from <= prev.to : range.from < prev.to) {
                   let from = prev.from, to = Math.max(range.to, prev.to);
                   if (i <= mainIndex)
                       mainIndex--;
                   ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));
               }
           }
           return new EditorSelection(ranges, mainIndex);
       }
   }
   function checkSelection(selection, docLength) {
       for (let range of selection.ranges)
           if (range.to > docLength)
               throw new RangeError("Selection points outside of document");
   }

   let nextID = 0;
   /**
   A facet is a labeled value that is associated with an editor
   state. It takes inputs from any number of extensions, and combines
   those into a single output value.

   Examples of uses of facets are the [tab
   size](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor
   attributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update
   listeners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).
   */
   class Facet {
       constructor(
       /**
       @internal
       */
       combine, 
       /**
       @internal
       */
       compareInput, 
       /**
       @internal
       */
       compare, isStatic, enables) {
           this.combine = combine;
           this.compareInput = compareInput;
           this.compare = compare;
           this.isStatic = isStatic;
           /**
           @internal
           */
           this.id = nextID++;
           this.default = combine([]);
           this.extensions = typeof enables == "function" ? enables(this) : enables;
       }
       /**
       Define a new facet.
       */
       static define(config = {}) {
           return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray$1 : (a, b) => a === b), !!config.static, config.enables);
       }
       /**
       Returns an extension that adds the given value to this facet.
       */
       of(value) {
           return new FacetProvider([], this, 0 /* Provider.Static */, value);
       }
       /**
       Create an extension that computes a value for the facet from a
       state. You must take care to declare the parts of the state that
       this value depends on, since your function is only called again
       for a new state when one of those parts changed.
       
       In cases where your value depends only on a single field, you'll
       want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
       */
       compute(deps, get) {
           if (this.isStatic)
               throw new Error("Can't compute a static facet");
           return new FacetProvider(deps, this, 1 /* Provider.Single */, get);
       }
       /**
       Create an extension that computes zero or more values for this
       facet from a state.
       */
       computeN(deps, get) {
           if (this.isStatic)
               throw new Error("Can't compute a static facet");
           return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);
       }
       from(field, get) {
           if (!get)
               get = x => x;
           return this.compute([field], state => get(state.field(field)));
       }
   }
   function sameArray$1(a, b) {
       return a == b || a.length == b.length && a.every((e, i) => e === b[i]);
   }
   class FacetProvider {
       constructor(dependencies, facet, type, value) {
           this.dependencies = dependencies;
           this.facet = facet;
           this.type = type;
           this.value = value;
           this.id = nextID++;
       }
       dynamicSlot(addresses) {
           var _a;
           let getter = this.value;
           let compare = this.facet.compareInput;
           let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;
           let depDoc = false, depSel = false, depAddrs = [];
           for (let dep of this.dependencies) {
               if (dep == "doc")
                   depDoc = true;
               else if (dep == "selection")
                   depSel = true;
               else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)
                   depAddrs.push(addresses[dep.id]);
           }
           return {
               create(state) {
                   state.values[idx] = getter(state);
                   return 1 /* SlotStatus.Changed */;
               },
               update(state, tr) {
                   if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {
                       let newVal = getter(state);
                       if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {
                           state.values[idx] = newVal;
                           return 1 /* SlotStatus.Changed */;
                       }
                   }
                   return 0;
               },
               reconfigure: (state, oldState) => {
                   let newVal = getter(state);
                   let oldAddr = oldState.config.address[id];
                   if (oldAddr != null) {
                       let oldVal = getAddr(oldState, oldAddr);
                       if (this.dependencies.every(dep => {
                           return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :
                               dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;
                       }) || (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))) {
                           state.values[idx] = oldVal;
                           return 0;
                       }
                   }
                   state.values[idx] = newVal;
                   return 1 /* SlotStatus.Changed */;
               }
           };
       }
   }
   function compareArray(a, b, compare) {
       if (a.length != b.length)
           return false;
       for (let i = 0; i < a.length; i++)
           if (!compare(a[i], b[i]))
               return false;
       return true;
   }
   function ensureAll(state, addrs) {
       let changed = false;
       for (let addr of addrs)
           if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)
               changed = true;
       return changed;
   }
   function dynamicFacetSlot(addresses, facet, providers) {
       let providerAddrs = providers.map(p => addresses[p.id]);
       let providerTypes = providers.map(p => p.type);
       let dynamic = providerAddrs.filter(p => !(p & 1));
       let idx = addresses[facet.id] >> 1;
       function get(state) {
           let values = [];
           for (let i = 0; i < providerAddrs.length; i++) {
               let value = getAddr(state, providerAddrs[i]);
               if (providerTypes[i] == 2 /* Provider.Multi */)
                   for (let val of value)
                       values.push(val);
               else
                   values.push(value);
           }
           return facet.combine(values);
       }
       return {
           create(state) {
               for (let addr of providerAddrs)
                   ensureAddr(state, addr);
               state.values[idx] = get(state);
               return 1 /* SlotStatus.Changed */;
           },
           update(state, tr) {
               if (!ensureAll(state, dynamic))
                   return 0;
               let value = get(state);
               if (facet.compare(value, state.values[idx]))
                   return 0;
               state.values[idx] = value;
               return 1 /* SlotStatus.Changed */;
           },
           reconfigure(state, oldState) {
               let depChanged = ensureAll(state, providerAddrs);
               let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);
               if (oldProviders && !depChanged && sameArray$1(providers, oldProviders)) {
                   state.values[idx] = oldValue;
                   return 0;
               }
               let value = get(state);
               if (facet.compare(value, oldValue)) {
                   state.values[idx] = oldValue;
                   return 0;
               }
               state.values[idx] = value;
               return 1 /* SlotStatus.Changed */;
           }
       };
   }
   const initField = /*@__PURE__*/Facet.define({ static: true });
   /**
   Fields can store additional information in an editor state, and
   keep it in sync with the rest of the state.
   */
   class StateField {
       constructor(
       /**
       @internal
       */
       id, createF, updateF, compareF, 
       /**
       @internal
       */
       spec) {
           this.id = id;
           this.createF = createF;
           this.updateF = updateF;
           this.compareF = compareF;
           this.spec = spec;
           /**
           @internal
           */
           this.provides = undefined;
       }
       /**
       Define a state field.
       */
       static define(config) {
           let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);
           if (config.provide)
               field.provides = config.provide(field);
           return field;
       }
       create(state) {
           let init = state.facet(initField).find(i => i.field == this);
           return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);
       }
       /**
       @internal
       */
       slot(addresses) {
           let idx = addresses[this.id] >> 1;
           return {
               create: (state) => {
                   state.values[idx] = this.create(state);
                   return 1 /* SlotStatus.Changed */;
               },
               update: (state, tr) => {
                   let oldVal = state.values[idx];
                   let value = this.updateF(oldVal, tr);
                   if (this.compareF(oldVal, value))
                       return 0;
                   state.values[idx] = value;
                   return 1 /* SlotStatus.Changed */;
               },
               reconfigure: (state, oldState) => {
                   if (oldState.config.address[this.id] != null) {
                       state.values[idx] = oldState.field(this);
                       return 0;
                   }
                   state.values[idx] = this.create(state);
                   return 1 /* SlotStatus.Changed */;
               }
           };
       }
       /**
       Returns an extension that enables this field and overrides the
       way it is initialized. Can be useful when you need to provide a
       non-default starting value for the field.
       */
       init(create) {
           return [this, initField.of({ field: this, create })];
       }
       /**
       State field instances can be used as
       [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
       given state.
       */
       get extension() { return this; }
   }
   const Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
   function prec(value) {
       return (ext) => new PrecExtension(ext, value);
   }
   /**
   By default extensions are registered in the order they are found
   in the flattened form of nested array that was provided.
   Individual extension values can be assigned a precedence to
   override this. Extensions that do not have a precedence set get
   the precedence of the nearest parent with a precedence, or
   [`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The
   final ordering of extensions is determined by first sorting by
   precedence and then by order within each precedence.
   */
   const Prec = {
       /**
       The highest precedence level, for extensions that should end up
       near the start of the precedence ordering.
       */
       highest: /*@__PURE__*/prec(Prec_.highest),
       /**
       A higher-than-default precedence, for extensions that should
       come before those with default precedence.
       */
       high: /*@__PURE__*/prec(Prec_.high),
       /**
       The default precedence, which is also used for extensions
       without an explicit precedence.
       */
       default: /*@__PURE__*/prec(Prec_.default),
       /**
       A lower-than-default precedence.
       */
       low: /*@__PURE__*/prec(Prec_.low),
       /**
       The lowest precedence level. Meant for things that should end up
       near the end of the extension order.
       */
       lowest: /*@__PURE__*/prec(Prec_.lowest)
   };
   class PrecExtension {
       constructor(inner, prec) {
           this.inner = inner;
           this.prec = prec;
       }
   }
   /**
   Extension compartments can be used to make a configuration
   dynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your
   configuration in a compartment, you can later
   [replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a
   transaction.
   */
   class Compartment {
       /**
       Create an instance of this compartment to add to your [state
       configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
       */
       of(ext) { return new CompartmentInstance(this, ext); }
       /**
       Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
       reconfigures this compartment.
       */
       reconfigure(content) {
           return Compartment.reconfigure.of({ compartment: this, extension: content });
       }
       /**
       Get the current content of the compartment in the state, or
       `undefined` if it isn't present.
       */
       get(state) {
           return state.config.compartments.get(this);
       }
   }
   class CompartmentInstance {
       constructor(compartment, inner) {
           this.compartment = compartment;
           this.inner = inner;
       }
   }
   class Configuration {
       constructor(base, compartments, dynamicSlots, address, staticValues, facets) {
           this.base = base;
           this.compartments = compartments;
           this.dynamicSlots = dynamicSlots;
           this.address = address;
           this.staticValues = staticValues;
           this.facets = facets;
           this.statusTemplate = [];
           while (this.statusTemplate.length < dynamicSlots.length)
               this.statusTemplate.push(0 /* SlotStatus.Unresolved */);
       }
       staticFacet(facet) {
           let addr = this.address[facet.id];
           return addr == null ? facet.default : this.staticValues[addr >> 1];
       }
       static resolve(base, compartments, oldState) {
           let fields = [];
           let facets = Object.create(null);
           let newCompartments = new Map();
           for (let ext of flatten(base, compartments, newCompartments)) {
               if (ext instanceof StateField)
                   fields.push(ext);
               else
                   (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);
           }
           let address = Object.create(null);
           let staticValues = [];
           let dynamicSlots = [];
           for (let field of fields) {
               address[field.id] = dynamicSlots.length << 1;
               dynamicSlots.push(a => field.slot(a));
           }
           let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;
           for (let id in facets) {
               let providers = facets[id], facet = providers[0].facet;
               let oldProviders = oldFacets && oldFacets[id] || [];
               if (providers.every(p => p.type == 0 /* Provider.Static */)) {
                   address[facet.id] = (staticValues.length << 1) | 1;
                   if (sameArray$1(oldProviders, providers)) {
                       staticValues.push(oldState.facet(facet));
                   }
                   else {
                       let value = facet.combine(providers.map(p => p.value));
                       staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);
                   }
               }
               else {
                   for (let p of providers) {
                       if (p.type == 0 /* Provider.Static */) {
                           address[p.id] = (staticValues.length << 1) | 1;
                           staticValues.push(p.value);
                       }
                       else {
                           address[p.id] = dynamicSlots.length << 1;
                           dynamicSlots.push(a => p.dynamicSlot(a));
                       }
                   }
                   address[facet.id] = dynamicSlots.length << 1;
                   dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));
               }
           }
           let dynamic = dynamicSlots.map(f => f(address));
           return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);
       }
   }
   function flatten(extension, compartments, newCompartments) {
       let result = [[], [], [], [], []];
       let seen = new Map();
       function inner(ext, prec) {
           let known = seen.get(ext);
           if (known != null) {
               if (known <= prec)
                   return;
               let found = result[known].indexOf(ext);
               if (found > -1)
                   result[known].splice(found, 1);
               if (ext instanceof CompartmentInstance)
                   newCompartments.delete(ext.compartment);
           }
           seen.set(ext, prec);
           if (Array.isArray(ext)) {
               for (let e of ext)
                   inner(e, prec);
           }
           else if (ext instanceof CompartmentInstance) {
               if (newCompartments.has(ext.compartment))
                   throw new RangeError(`Duplicate use of compartment in extensions`);
               let content = compartments.get(ext.compartment) || ext.inner;
               newCompartments.set(ext.compartment, content);
               inner(content, prec);
           }
           else if (ext instanceof PrecExtension) {
               inner(ext.inner, ext.prec);
           }
           else if (ext instanceof StateField) {
               result[prec].push(ext);
               if (ext.provides)
                   inner(ext.provides, prec);
           }
           else if (ext instanceof FacetProvider) {
               result[prec].push(ext);
               if (ext.facet.extensions)
                   inner(ext.facet.extensions, Prec_.default);
           }
           else {
               let content = ext.extension;
               if (!content)
                   throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
               inner(content, prec);
           }
       }
       inner(extension, Prec_.default);
       return result.reduce((a, b) => a.concat(b));
   }
   function ensureAddr(state, addr) {
       if (addr & 1)
           return 2 /* SlotStatus.Computed */;
       let idx = addr >> 1;
       let status = state.status[idx];
       if (status == 4 /* SlotStatus.Computing */)
           throw new Error("Cyclic dependency between fields and/or facets");
       if (status & 2 /* SlotStatus.Computed */)
           return status;
       state.status[idx] = 4 /* SlotStatus.Computing */;
       let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);
       return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;
   }
   function getAddr(state, addr) {
       return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];
   }

   const languageData = /*@__PURE__*/Facet.define();
   const allowMultipleSelections = /*@__PURE__*/Facet.define({
       combine: values => values.some(v => v),
       static: true
   });
   const lineSeparator = /*@__PURE__*/Facet.define({
       combine: values => values.length ? values[0] : undefined,
       static: true
   });
   const changeFilter = /*@__PURE__*/Facet.define();
   const transactionFilter = /*@__PURE__*/Facet.define();
   const transactionExtender = /*@__PURE__*/Facet.define();
   const readOnly = /*@__PURE__*/Facet.define({
       combine: values => values.length ? values[0] : false
   });

   /**
   Annotations are tagged values that are used to add metadata to
   transactions in an extensible way. They should be used to model
   things that effect the entire transaction (such as its [time
   stamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its
   [origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen
   _alongside_ the other changes made by the transaction, [state
   effects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.
   */
   class Annotation {
       /**
       @internal
       */
       constructor(
       /**
       The annotation type.
       */
       type, 
       /**
       The value of this annotation.
       */
       value) {
           this.type = type;
           this.value = value;
       }
       /**
       Define a new type of annotation.
       */
       static define() { return new AnnotationType(); }
   }
   /**
   Marker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).
   */
   class AnnotationType {
       /**
       Create an instance of this annotation.
       */
       of(value) { return new Annotation(this, value); }
   }
   /**
   Representation of a type of state effect. Defined with
   [`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).
   */
   class StateEffectType {
       /**
       @internal
       */
       constructor(
       // The `any` types in these function types are there to work
       // around TypeScript issue #37631, where the type guard on
       // `StateEffect.is` mysteriously stops working when these properly
       // have type `Value`.
       /**
       @internal
       */
       map) {
           this.map = map;
       }
       /**
       Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
       type.
       */
       of(value) { return new StateEffect(this, value); }
   }
   /**
   State effects can be used to represent additional effects
   associated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They
   are often useful to model changes to custom [state
   fields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in
   document or selection changes.
   */
   class StateEffect {
       /**
       @internal
       */
       constructor(
       /**
       @internal
       */
       type, 
       /**
       The value of this effect.
       */
       value) {
           this.type = type;
           this.value = value;
       }
       /**
       Map this effect through a position mapping. Will return
       `undefined` when that ends up deleting the effect.
       */
       map(mapping) {
           let mapped = this.type.map(this.value, mapping);
           return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);
       }
       /**
       Tells you whether this effect object is of a given
       [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
       */
       is(type) { return this.type == type; }
       /**
       Define a new effect type. The type parameter indicates the type
       of values that his effect holds.
       */
       static define(spec = {}) {
           return new StateEffectType(spec.map || (v => v));
       }
       /**
       Map an array of effects through a change set.
       */
       static mapEffects(effects, mapping) {
           if (!effects.length)
               return effects;
           let result = [];
           for (let effect of effects) {
               let mapped = effect.map(mapping);
               if (mapped)
                   result.push(mapped);
           }
           return result;
       }
   }
   /**
   This effect can be used to reconfigure the root extensions of
   the editor. Doing this will discard any extensions
   [appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset
   the content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)
   compartments.
   */
   StateEffect.reconfigure = /*@__PURE__*/StateEffect.define();
   /**
   Append extensions to the top-level configuration of the editor.
   */
   StateEffect.appendConfig = /*@__PURE__*/StateEffect.define();
   /**
   Changes to the editor state are grouped into transactions.
   Typically, a user action creates a single transaction, which may
   contain any number of document changes, may change the selection,
   or have other effects. Create a transaction by calling
   [`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately
   dispatch one by calling
   [`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).
   */
   class Transaction {
       constructor(
       /**
       The state from which the transaction starts.
       */
       startState, 
       /**
       The document changes made by this transaction.
       */
       changes, 
       /**
       The selection set by this transaction, or undefined if it
       doesn't explicitly set a selection.
       */
       selection, 
       /**
       The effects added to the transaction.
       */
       effects, 
       /**
       @internal
       */
       annotations, 
       /**
       Whether the selection should be scrolled into view after this
       transaction is dispatched.
       */
       scrollIntoView) {
           this.startState = startState;
           this.changes = changes;
           this.selection = selection;
           this.effects = effects;
           this.annotations = annotations;
           this.scrollIntoView = scrollIntoView;
           /**
           @internal
           */
           this._doc = null;
           /**
           @internal
           */
           this._state = null;
           if (selection)
               checkSelection(selection, changes.newLength);
           if (!annotations.some((a) => a.type == Transaction.time))
               this.annotations = annotations.concat(Transaction.time.of(Date.now()));
       }
       /**
       @internal
       */
       static create(startState, changes, selection, effects, annotations, scrollIntoView) {
           return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);
       }
       /**
       The new document produced by the transaction. Contrary to
       [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
       force the entire new state to be computed right away, so it is
       recommended that [transaction
       filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
       when they need to look at the new document.
       */
       get newDoc() {
           return this._doc || (this._doc = this.changes.apply(this.startState.doc));
       }
       /**
       The new selection produced by the transaction. If
       [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
       this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
       current selection through the changes made by the transaction.
       */
       get newSelection() {
           return this.selection || this.startState.selection.map(this.changes);
       }
       /**
       The new state created by the transaction. Computed on demand
       (but retained for subsequent access), so it is recommended not to
       access it in [transaction
       filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
       */
       get state() {
           if (!this._state)
               this.startState.applyTransaction(this);
           return this._state;
       }
       /**
       Get the value of the given annotation type, if any.
       */
       annotation(type) {
           for (let ann of this.annotations)
               if (ann.type == type)
                   return ann.value;
           return undefined;
       }
       /**
       Indicates whether the transaction changed the document.
       */
       get docChanged() { return !this.changes.empty; }
       /**
       Indicates whether this transaction reconfigures the state
       (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
       with a top-level configuration
       [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
       */
       get reconfigured() { return this.startState.config != this.state.config; }
       /**
       Returns true if the transaction has a [user
       event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
       or more specific than `event`. For example, if the transaction
       has `"select.pointer"` as user event, `"select"` and
       `"select.pointer"` will match it.
       */
       isUserEvent(event) {
           let e = this.annotation(Transaction.userEvent);
           return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == "."));
       }
   }
   /**
   Annotation used to store transaction timestamps. Automatically
   added to every transaction, holding `Date.now()`.
   */
   Transaction.time = /*@__PURE__*/Annotation.define();
   /**
   Annotation used to associate a transaction with a user interface
   event. Holds a string identifying the event, using a
   dot-separated format to support attaching more specific
   information. The events used by the core libraries are:

    - `"input"` when content is entered
      - `"input.type"` for typed input
        - `"input.type.compose"` for composition
      - `"input.paste"` for pasted input
      - `"input.drop"` when adding content with drag-and-drop
      - `"input.complete"` when autocompleting
    - `"delete"` when the user deletes content
      - `"delete.selection"` when deleting the selection
      - `"delete.forward"` when deleting forward from the selection
      - `"delete.backward"` when deleting backward from the selection
      - `"delete.cut"` when cutting to the clipboard
    - `"move"` when content is moved
      - `"move.drop"` when content is moved within the editor through drag-and-drop
    - `"select"` when explicitly changing the selection
      - `"select.pointer"` when selecting with a mouse or other pointing device
    - `"undo"` and `"redo"` for history actions

   Use [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check
   whether the annotation matches a given event.
   */
   Transaction.userEvent = /*@__PURE__*/Annotation.define();
   /**
   Annotation indicating whether a transaction should be added to
   the undo history or not.
   */
   Transaction.addToHistory = /*@__PURE__*/Annotation.define();
   /**
   Annotation indicating (when present and true) that a transaction
   represents a change made by some other actor, not the user. This
   is used, for example, to tag other people's changes in
   collaborative editing.
   */
   Transaction.remote = /*@__PURE__*/Annotation.define();
   function joinRanges(a, b) {
       let result = [];
       for (let iA = 0, iB = 0;;) {
           let from, to;
           if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {
               from = a[iA++];
               to = a[iA++];
           }
           else if (iB < b.length) {
               from = b[iB++];
               to = b[iB++];
           }
           else
               return result;
           if (!result.length || result[result.length - 1] < from)
               result.push(from, to);
           else if (result[result.length - 1] < to)
               result[result.length - 1] = to;
       }
   }
   function mergeTransaction(a, b, sequential) {
       var _a;
       let mapForA, mapForB, changes;
       if (sequential) {
           mapForA = b.changes;
           mapForB = ChangeSet.empty(b.changes.length);
           changes = a.changes.compose(b.changes);
       }
       else {
           mapForA = b.changes.map(a.changes);
           mapForB = a.changes.mapDesc(b.changes, true);
           changes = a.changes.compose(mapForA);
       }
       return {
           changes,
           selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),
           effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),
           annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,
           scrollIntoView: a.scrollIntoView || b.scrollIntoView
       };
   }
   function resolveTransactionInner(state, spec, docSize) {
       let sel = spec.selection, annotations = asArray$1(spec.annotations);
       if (spec.userEvent)
           annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));
       return {
           changes: spec.changes instanceof ChangeSet ? spec.changes
               : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),
           selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),
           effects: asArray$1(spec.effects),
           annotations,
           scrollIntoView: !!spec.scrollIntoView
       };
   }
   function resolveTransaction(state, specs, filter) {
       let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);
       if (specs.length && specs[0].filter === false)
           filter = false;
       for (let i = 1; i < specs.length; i++) {
           if (specs[i].filter === false)
               filter = false;
           let seq = !!specs[i].sequential;
           s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);
       }
       let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);
       return extendTransaction(filter ? filterTransaction(tr) : tr);
   }
   // Finish a transaction by applying filters if necessary.
   function filterTransaction(tr) {
       let state = tr.startState;
       // Change filters
       let result = true;
       for (let filter of state.facet(changeFilter)) {
           let value = filter(tr);
           if (value === false) {
               result = false;
               break;
           }
           if (Array.isArray(value))
               result = result === true ? value : joinRanges(result, value);
       }
       if (result !== true) {
           let changes, back;
           if (result === false) {
               back = tr.changes.invertedDesc;
               changes = ChangeSet.empty(state.doc.length);
           }
           else {
               let filtered = tr.changes.filter(result);
               changes = filtered.changes;
               back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;
           }
           tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);
       }
       // Transaction filters
       let filters = state.facet(transactionFilter);
       for (let i = filters.length - 1; i >= 0; i--) {
           let filtered = filters[i](tr);
           if (filtered instanceof Transaction)
               tr = filtered;
           else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)
               tr = filtered[0];
           else
               tr = resolveTransaction(state, asArray$1(filtered), false);
       }
       return tr;
   }
   function extendTransaction(tr) {
       let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;
       for (let i = extenders.length - 1; i >= 0; i--) {
           let extension = extenders[i](tr);
           if (extension && Object.keys(extension).length)
               spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);
       }
       return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);
   }
   const none$2 = [];
   function asArray$1(value) {
       return value == null ? none$2 : Array.isArray(value) ? value : [value];
   }

   /**
   The categories produced by a [character
   categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used
   do things like selecting by word.
   */
   var CharCategory = /*@__PURE__*/(function (CharCategory) {
       /**
       Word characters.
       */
       CharCategory[CharCategory["Word"] = 0] = "Word";
       /**
       Whitespace.
       */
       CharCategory[CharCategory["Space"] = 1] = "Space";
       /**
       Anything else.
       */
       CharCategory[CharCategory["Other"] = 2] = "Other";
   return CharCategory})(CharCategory || (CharCategory = {}));
   const nonASCIISingleCaseWordChar = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
   let wordChar;
   try {
       wordChar = /*@__PURE__*/new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
   }
   catch (_) { }
   function hasWordChar(str) {
       if (wordChar)
           return wordChar.test(str);
       for (let i = 0; i < str.length; i++) {
           let ch = str[i];
           if (/\w/.test(ch) || ch > "\x80" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))
               return true;
       }
       return false;
   }
   function makeCategorizer(wordChars) {
       return (char) => {
           if (!/\S/.test(char))
               return CharCategory.Space;
           if (hasWordChar(char))
               return CharCategory.Word;
           for (let i = 0; i < wordChars.length; i++)
               if (char.indexOf(wordChars[i]) > -1)
                   return CharCategory.Word;
           return CharCategory.Other;
       };
   }

   /**
   The editor state class is a persistent (immutable) data structure.
   To update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a
   [transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state
   instance, without modifying the original object.

   As such, _never_ mutate properties of a state directly. That'll
   just break things.
   */
   class EditorState {
       constructor(
       /**
       @internal
       */
       config, 
       /**
       The current document.
       */
       doc, 
       /**
       The current selection.
       */
       selection, 
       /**
       @internal
       */
       values, computeSlot, tr) {
           this.config = config;
           this.doc = doc;
           this.selection = selection;
           this.values = values;
           this.status = config.statusTemplate.slice();
           this.computeSlot = computeSlot;
           // Fill in the computed state immediately, so that further queries
           // for it made during the update return this state
           if (tr)
               tr._state = this;
           for (let i = 0; i < this.config.dynamicSlots.length; i++)
               ensureAddr(this, i << 1);
           this.computeSlot = null;
       }
       field(field, require = true) {
           let addr = this.config.address[field.id];
           if (addr == null) {
               if (require)
                   throw new RangeError("Field is not present in this state");
               return undefined;
           }
           ensureAddr(this, addr);
           return getAddr(this, addr);
       }
       /**
       Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
       state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
       can be passed. Unless
       [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
       [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
       are assumed to start in the _current_ document (not the document
       produced by previous specs), and its
       [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
       [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
       to the document created by its _own_ changes. The resulting
       transaction contains the combined effect of all the different
       specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
       specs take precedence over earlier ones.
       */
       update(...specs) {
           return resolveTransaction(this, specs, true);
       }
       /**
       @internal
       */
       applyTransaction(tr) {
           let conf = this.config, { base, compartments } = conf;
           for (let effect of tr.effects) {
               if (effect.is(Compartment.reconfigure)) {
                   if (conf) {
                       compartments = new Map;
                       conf.compartments.forEach((val, key) => compartments.set(key, val));
                       conf = null;
                   }
                   compartments.set(effect.value.compartment, effect.value.extension);
               }
               else if (effect.is(StateEffect.reconfigure)) {
                   conf = null;
                   base = effect.value;
               }
               else if (effect.is(StateEffect.appendConfig)) {
                   conf = null;
                   base = asArray$1(base).concat(effect.value);
               }
           }
           let startValues;
           if (!conf) {
               conf = Configuration.resolve(base, compartments, this);
               let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);
               startValues = intermediateState.values;
           }
           else {
               startValues = tr.startState.values.slice();
           }
           new EditorState(conf, tr.newDoc, tr.newSelection, startValues, (state, slot) => slot.update(state, tr), tr);
       }
       /**
       Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
       replaces every selection range with the given content.
       */
       replaceSelection(text) {
           if (typeof text == "string")
               text = this.toText(text);
           return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },
               range: EditorSelection.cursor(range.from + text.length) }));
       }
       /**
       Create a set of changes and a new selection by running the given
       function for each range in the active selection. The function
       can return an optional set of changes (in the coordinate space
       of the start document), plus an updated range (in the coordinate
       space of the document produced by the call's own changes). This
       method will merge all the changes and ranges into a single
       changeset and selection, and return it as a [transaction
       spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
       [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
       */
       changeByRange(f) {
           let sel = this.selection;
           let result1 = f(sel.ranges[0]);
           let changes = this.changes(result1.changes), ranges = [result1.range];
           let effects = asArray$1(result1.effects);
           for (let i = 1; i < sel.ranges.length; i++) {
               let result = f(sel.ranges[i]);
               let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);
               for (let j = 0; j < i; j++)
                   ranges[j] = ranges[j].map(newMapped);
               let mapBy = changes.mapDesc(newChanges, true);
               ranges.push(result.range.map(mapBy));
               changes = changes.compose(newMapped);
               effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray$1(result.effects), mapBy));
           }
           return {
               changes,
               selection: EditorSelection.create(ranges, sel.mainIndex),
               effects
           };
       }
       /**
       Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
       description, taking the state's document length and line
       separator into account.
       */
       changes(spec = []) {
           if (spec instanceof ChangeSet)
               return spec;
           return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));
       }
       /**
       Using the state's [line
       separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
       [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
       */
       toText(string) {
           return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));
       }
       /**
       Return the given range of the document as a string.
       */
       sliceDoc(from = 0, to = this.doc.length) {
           return this.doc.sliceString(from, to, this.lineBreak);
       }
       /**
       Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
       */
       facet(facet) {
           let addr = this.config.address[facet.id];
           if (addr == null)
               return facet.default;
           ensureAddr(this, addr);
           return getAddr(this, addr);
       }
       /**
       Convert this state to a JSON-serializable object. When custom
       fields should be serialized, you can pass them in as an object
       mapping property names (in the resulting object, which should
       not use `doc` or `selection`) to fields.
       */
       toJSON(fields) {
           let result = {
               doc: this.sliceDoc(),
               selection: this.selection.toJSON()
           };
           if (fields)
               for (let prop in fields) {
                   let value = fields[prop];
                   if (value instanceof StateField && this.config.address[value.id] != null)
                       result[prop] = value.spec.toJSON(this.field(fields[prop]), this);
               }
           return result;
       }
       /**
       Deserialize a state from its JSON representation. When custom
       fields should be deserialized, pass the same object you passed
       to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
       third argument.
       */
       static fromJSON(json, config = {}, fields) {
           if (!json || typeof json.doc != "string")
               throw new RangeError("Invalid JSON representation for EditorState");
           let fieldInit = [];
           if (fields)
               for (let prop in fields) {
                   if (Object.prototype.hasOwnProperty.call(json, prop)) {
                       let field = fields[prop], value = json[prop];
                       fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));
                   }
               }
           return EditorState.create({
               doc: json.doc,
               selection: EditorSelection.fromJSON(json.selection),
               extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit
           });
       }
       /**
       Create a new state. You'll usually only need this when
       initializing an editor—updated states are created by applying
       transactions.
       */
       static create(config = {}) {
           let configuration = Configuration.resolve(config.extensions || [], new Map);
           let doc = config.doc instanceof Text ? config.doc
               : Text.of((config.doc || "").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));
           let selection = !config.selection ? EditorSelection.single(0)
               : config.selection instanceof EditorSelection ? config.selection
                   : EditorSelection.single(config.selection.anchor, config.selection.head);
           checkSelection(selection, doc.length);
           if (!configuration.staticFacet(allowMultipleSelections))
               selection = selection.asSingle();
           return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);
       }
       /**
       The size (in columns) of a tab in the document, determined by
       the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
       */
       get tabSize() { return this.facet(EditorState.tabSize); }
       /**
       Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
       string for this state.
       */
       get lineBreak() { return this.facet(EditorState.lineSeparator) || "\n"; }
       /**
       Returns true when the editor is
       [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
       */
       get readOnly() { return this.facet(readOnly); }
       /**
       Look up a translation for the given phrase (via the
       [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
       original string if no translation is found.
       
       If additional arguments are passed, they will be inserted in
       place of markers like `$1` (for the first value) and `$2`, etc.
       A single `$` is equivalent to `$1`, and `$$` will produce a
       literal dollar sign.
       */
       phrase(phrase, ...insert) {
           for (let map of this.facet(EditorState.phrases))
               if (Object.prototype.hasOwnProperty.call(map, phrase)) {
                   phrase = map[phrase];
                   break;
               }
           if (insert.length)
               phrase = phrase.replace(/\$(\$|\d*)/g, (m, i) => {
                   if (i == "$")
                       return "$";
                   let n = +(i || 1);
                   return !n || n > insert.length ? m : insert[n - 1];
               });
           return phrase;
       }
       /**
       Find the values for a given language data field, provided by the
       the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
       */
       languageDataAt(name, pos, side = -1) {
           let values = [];
           for (let provider of this.facet(languageData)) {
               for (let result of provider(this, pos, side)) {
                   if (Object.prototype.hasOwnProperty.call(result, name))
                       values.push(result[name]);
               }
           }
           return values;
       }
       /**
       Return a function that can categorize strings (expected to
       represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
       into one of:
       
        - Word (contains an alphanumeric character or a character
          explicitly listed in the local language's `"wordChars"`
          language data, which should be a string)
        - Space (contains only whitespace)
        - Other (anything else)
       */
       charCategorizer(at) {
           return makeCategorizer(this.languageDataAt("wordChars", at).join(""));
       }
       /**
       Find the word at the given position, meaning the range
       containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
       around it. If no word characters are adjacent to the position,
       this returns null.
       */
       wordAt(pos) {
           let { text, from, length } = this.doc.lineAt(pos);
           let cat = this.charCategorizer(pos);
           let start = pos - from, end = pos - from;
           while (start > 0) {
               let prev = findClusterBreak(text, start, false);
               if (cat(text.slice(prev, start)) != CharCategory.Word)
                   break;
               start = prev;
           }
           while (end < length) {
               let next = findClusterBreak(text, end);
               if (cat(text.slice(end, next)) != CharCategory.Word)
                   break;
               end = next;
           }
           return start == end ? null : EditorSelection.range(start + from, end + from);
       }
   }
   /**
   A facet that, when enabled, causes the editor to allow multiple
   ranges to be selected. Be careful though, because by default the
   editor relies on the native DOM selection, which cannot handle
   multiple selections. An extension like
   [`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make
   secondary selections visible to the user.
   */
   EditorState.allowMultipleSelections = allowMultipleSelections;
   /**
   Configures the tab size to use in this state. The first
   (highest-precedence) value of the facet is used. If no value is
   given, this defaults to 4.
   */
   EditorState.tabSize = /*@__PURE__*/Facet.define({
       combine: values => values.length ? values[0] : 4
   });
   /**
   The line separator to use. By default, any of `"\n"`, `"\r\n"`
   and `"\r"` is treated as a separator when splitting lines, and
   lines are joined with `"\n"`.

   When you configure a value here, only that precise separator
   will be used, allowing you to round-trip documents through the
   editor without normalizing line separators.
   */
   EditorState.lineSeparator = lineSeparator;
   /**
   This facet controls the value of the
   [`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is
   consulted by commands and extensions that implement editing
   functionality to determine whether they should apply. It
   defaults to false, but when its highest-precedence value is
   `true`, such functionality disables itself.

   Not to be confused with
   [`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which
   controls whether the editor's DOM is set to be editable (and
   thus focusable).
   */
   EditorState.readOnly = readOnly;
   /**
   Registers translation phrases. The
   [`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through
   all objects registered with this facet to find translations for
   its argument.
   */
   EditorState.phrases = /*@__PURE__*/Facet.define({
       compare(a, b) {
           let kA = Object.keys(a), kB = Object.keys(b);
           return kA.length == kB.length && kA.every(k => a[k] == b[k]);
       }
   });
   /**
   A facet used to register [language
   data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.
   */
   EditorState.languageData = languageData;
   /**
   Facet used to register change filters, which are called for each
   transaction (unless explicitly
   [disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress
   part of the transaction's changes.

   Such a function can return `true` to indicate that it doesn't
   want to do anything, `false` to completely stop the changes in
   the transaction, or a set of ranges in which changes should be
   suppressed. Such ranges are represented as an array of numbers,
   with each pair of two numbers indicating the start and end of a
   range. So for example `[10, 20, 100, 110]` suppresses changes
   between 10 and 20, and between 100 and 110.
   */
   EditorState.changeFilter = changeFilter;
   /**
   Facet used to register a hook that gets a chance to update or
   replace transaction specs before they are applied. This will
   only be applied for transactions that don't have
   [`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You
   can either return a single transaction spec (possibly the input
   transaction), or an array of specs (which will be combined in
   the same way as the arguments to
   [`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).

   When possible, it is recommended to avoid accessing
   [`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,
   since it will force creation of a state that will then be
   discarded again, if the transaction is actually filtered.

   (This functionality should be used with care. Indiscriminately
   modifying transaction is likely to break something or degrade
   the user experience.)
   */
   EditorState.transactionFilter = transactionFilter;
   /**
   This is a more limited form of
   [`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),
   which can only add
   [annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and
   [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type
   of filter runs even if the transaction has disabled regular
   [filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable
   for effects that don't need to touch the changes or selection,
   but do want to process every transaction.

   Extenders run _after_ filters, when both are present.
   */
   EditorState.transactionExtender = transactionExtender;
   Compartment.reconfigure = /*@__PURE__*/StateEffect.define();

   /**
   Utility function for combining behaviors to fill in a config
   object from an array of provided configs. `defaults` should hold
   default values for all optional fields in `Config`.

   The function will, by default, error
   when a field gets two values that aren't `===`-equal, but you can
   provide combine functions per field to do something else.
   */
   function combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that
   combine = {}) {
       let result = {};
       for (let config of configs)
           for (let key of Object.keys(config)) {
               let value = config[key], current = result[key];
               if (current === undefined)
                   result[key] = value;
               else if (current === value || value === undefined) ; // No conflict
               else if (Object.hasOwnProperty.call(combine, key))
                   result[key] = combine[key](current, value);
               else
                   throw new Error("Config merge conflict for field " + key);
           }
       for (let key in defaults)
           if (result[key] === undefined)
               result[key] = defaults[key];
       return result;
   }

   /**
   Each range is associated with a value, which must inherit from
   this class.
   */
   class RangeValue {
       /**
       Compare this value with another value. Used when comparing
       rangesets. The default implementation compares by identity.
       Unless you are only creating a fixed number of unique instances
       of your value type, it is a good idea to implement this
       properly.
       */
       eq(other) { return this == other; }
       /**
       Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
       */
       range(from, to = from) { return Range$1.create(from, to, this); }
   }
   RangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;
   RangeValue.prototype.point = false;
   RangeValue.prototype.mapMode = MapMode.TrackDel;
   /**
   A range associates a value with a range of positions.
   */
   class Range$1 {
       constructor(
       /**
       The range's start position.
       */
       from, 
       /**
       Its end position.
       */
       to, 
       /**
       The value associated with this range.
       */
       value) {
           this.from = from;
           this.to = to;
           this.value = value;
       }
       /**
       @internal
       */
       static create(from, to, value) {
           return new Range$1(from, to, value);
       }
   }
   function cmpRange(a, b) {
       return a.from - b.from || a.value.startSide - b.value.startSide;
   }
   class Chunk {
       constructor(from, to, value, 
       // Chunks are marked with the largest point that occurs
       // in them (or -1 for no points), so that scans that are
       // only interested in points (such as the
       // heightmap-related logic) can skip range-only chunks.
       maxPoint) {
           this.from = from;
           this.to = to;
           this.value = value;
           this.maxPoint = maxPoint;
       }
       get length() { return this.to[this.to.length - 1]; }
       // Find the index of the given position and side. Use the ranges'
       // `from` pos when `end == false`, `to` when `end == true`.
       findIndex(pos, side, end, startAt = 0) {
           let arr = end ? this.to : this.from;
           for (let lo = startAt, hi = arr.length;;) {
               if (lo == hi)
                   return lo;
               let mid = (lo + hi) >> 1;
               let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;
               if (mid == lo)
                   return diff >= 0 ? lo : hi;
               if (diff >= 0)
                   hi = mid;
               else
                   lo = mid + 1;
           }
       }
       between(offset, from, to, f) {
           for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)
               if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)
                   return false;
       }
       map(offset, changes) {
           let value = [], from = [], to = [], newPos = -1, maxPoint = -1;
           for (let i = 0; i < this.value.length; i++) {
               let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;
               if (curFrom == curTo) {
                   let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);
                   if (mapped == null)
                       continue;
                   newFrom = newTo = mapped;
                   if (val.startSide != val.endSide) {
                       newTo = changes.mapPos(curFrom, val.endSide);
                       if (newTo < newFrom)
                           continue;
                   }
               }
               else {
                   newFrom = changes.mapPos(curFrom, val.startSide);
                   newTo = changes.mapPos(curTo, val.endSide);
                   if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)
                       continue;
               }
               if ((newTo - newFrom || val.endSide - val.startSide) < 0)
                   continue;
               if (newPos < 0)
                   newPos = newFrom;
               if (val.point)
                   maxPoint = Math.max(maxPoint, newTo - newFrom);
               value.push(val);
               from.push(newFrom - newPos);
               to.push(newTo - newPos);
           }
           return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };
       }
   }
   /**
   A range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a
   way that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and
   [update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data
   structure.
   */
   class RangeSet {
       constructor(
       /**
       @internal
       */
       chunkPos, 
       /**
       @internal
       */
       chunk, 
       /**
       @internal
       */
       nextLayer, 
       /**
       @internal
       */
       maxPoint) {
           this.chunkPos = chunkPos;
           this.chunk = chunk;
           this.nextLayer = nextLayer;
           this.maxPoint = maxPoint;
       }
       /**
       @internal
       */
       static create(chunkPos, chunk, nextLayer, maxPoint) {
           return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);
       }
       /**
       @internal
       */
       get length() {
           let last = this.chunk.length - 1;
           return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);
       }
       /**
       The number of ranges in the set.
       */
       get size() {
           if (this.isEmpty)
               return 0;
           let size = this.nextLayer.size;
           for (let chunk of this.chunk)
               size += chunk.value.length;
           return size;
       }
       /**
       @internal
       */
       chunkEnd(index) {
           return this.chunkPos[index] + this.chunk[index].length;
       }
       /**
       Update the range set, optionally adding new ranges or filtering
       out existing ones.
       
       (Note: The type parameter is just there as a kludge to work
       around TypeScript variance issues that prevented `RangeSet<X>`
       from being a subtype of `RangeSet<Y>` when `X` is a subtype of
       `Y`.)
       */
       update(updateSpec) {
           let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;
           let filter = updateSpec.filter;
           if (add.length == 0 && !filter)
               return this;
           if (sort)
               add = add.slice().sort(cmpRange);
           if (this.isEmpty)
               return add.length ? RangeSet.of(add) : this;
           let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];
           let builder = new RangeSetBuilder();
           while (cur.value || i < add.length) {
               if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {
                   let range = add[i++];
                   if (!builder.addInner(range.from, range.to, range.value))
                       spill.push(range);
               }
               else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&
                   (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&
                   (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&
                   builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {
                   cur.nextChunk();
               }
               else {
                   if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {
                       if (!builder.addInner(cur.from, cur.to, cur.value))
                           spill.push(Range$1.create(cur.from, cur.to, cur.value));
                   }
                   cur.next();
               }
           }
           return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty
               : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));
       }
       /**
       Map this range set through a set of changes, return the new set.
       */
       map(changes) {
           if (changes.empty || this.isEmpty)
               return this;
           let chunks = [], chunkPos = [], maxPoint = -1;
           for (let i = 0; i < this.chunk.length; i++) {
               let start = this.chunkPos[i], chunk = this.chunk[i];
               let touch = changes.touchesRange(start, start + chunk.length);
               if (touch === false) {
                   maxPoint = Math.max(maxPoint, chunk.maxPoint);
                   chunks.push(chunk);
                   chunkPos.push(changes.mapPos(start));
               }
               else if (touch === true) {
                   let { mapped, pos } = chunk.map(start, changes);
                   if (mapped) {
                       maxPoint = Math.max(maxPoint, mapped.maxPoint);
                       chunks.push(mapped);
                       chunkPos.push(pos);
                   }
               }
           }
           let next = this.nextLayer.map(changes);
           return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);
       }
       /**
       Iterate over the ranges that touch the region `from` to `to`,
       calling `f` for each. There is no guarantee that the ranges will
       be reported in any specific order. When the callback returns
       `false`, iteration stops.
       */
       between(from, to, f) {
           if (this.isEmpty)
               return;
           for (let i = 0; i < this.chunk.length; i++) {
               let start = this.chunkPos[i], chunk = this.chunk[i];
               if (to >= start && from <= start + chunk.length &&
                   chunk.between(start, from - start, to - start, f) === false)
                   return;
           }
           this.nextLayer.between(from, to, f);
       }
       /**
       Iterate over the ranges in this set, in order, including all
       ranges that end at or after `from`.
       */
       iter(from = 0) {
           return HeapCursor.from([this]).goto(from);
       }
       /**
       @internal
       */
       get isEmpty() { return this.nextLayer == this; }
       /**
       Iterate over the ranges in a collection of sets, in order,
       starting from `from`.
       */
       static iter(sets, from = 0) {
           return HeapCursor.from(sets).goto(from);
       }
       /**
       Iterate over two groups of sets, calling methods on `comparator`
       to notify it of possible differences.
       */
       static compare(oldSets, newSets, 
       /**
       This indicates how the underlying data changed between these
       ranges, and is needed to synchronize the iteration. `from` and
       `to` are coordinates in the _new_ space, after these changes.
       */
       textDiff, comparator, 
       /**
       Can be used to ignore all non-point ranges, and points below
       the given size. When -1, all ranges are compared.
       */
       minPointSize = -1) {
           let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);
           let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);
           let sharedChunks = findSharedChunks(a, b, textDiff);
           let sideA = new SpanCursor(a, sharedChunks, minPointSize);
           let sideB = new SpanCursor(b, sharedChunks, minPointSize);
           textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));
           if (textDiff.empty && textDiff.length == 0)
               compare(sideA, 0, sideB, 0, 0, comparator);
       }
       /**
       Compare the contents of two groups of range sets, returning true
       if they are equivalent in the given range.
       */
       static eq(oldSets, newSets, from = 0, to) {
           if (to == null)
               to = 1000000000 /* C.Far */;
           let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);
           let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);
           if (a.length != b.length)
               return false;
           if (!a.length)
               return true;
           let sharedChunks = findSharedChunks(a, b);
           let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);
           for (;;) {
               if (sideA.to != sideB.to ||
                   !sameValues(sideA.active, sideB.active) ||
                   sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))
                   return false;
               if (sideA.to > to)
                   return true;
               sideA.next();
               sideB.next();
           }
       }
       /**
       Iterate over a group of range sets at the same time, notifying
       the iterator about the ranges covering every given piece of
       content. Returns the open count (see
       [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
       of the iteration.
       */
       static spans(sets, from, to, iterator, 
       /**
       When given and greater than -1, only points of at least this
       size are taken into account.
       */
       minPointSize = -1) {
           let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;
           let open = cursor.openStart;
           for (;;) {
               let curTo = Math.min(cursor.to, to);
               if (cursor.point) {
                   iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open, cursor.pointRank);
                   open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);
               }
               else if (curTo > pos) {
                   iterator.span(pos, curTo, cursor.active, open);
                   open = cursor.openEnd(curTo);
               }
               if (cursor.to > to)
                   break;
               pos = cursor.to;
               cursor.next();
           }
           return open;
       }
       /**
       Create a range set for the given range or array of ranges. By
       default, this expects the ranges to be _sorted_ (by start
       position and, if two start at the same position,
       `value.startSide`). You can pass `true` as second argument to
       cause the method to sort them.
       */
       static of(ranges, sort = false) {
           let build = new RangeSetBuilder();
           for (let range of ranges instanceof Range$1 ? [ranges] : sort ? lazySort(ranges) : ranges)
               build.add(range.from, range.to, range.value);
           return build.finish();
       }
   }
   /**
   The empty set of ranges.
   */
   RangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);
   function lazySort(ranges) {
       if (ranges.length > 1)
           for (let prev = ranges[0], i = 1; i < ranges.length; i++) {
               let cur = ranges[i];
               if (cmpRange(prev, cur) > 0)
                   return ranges.slice().sort(cmpRange);
               prev = cur;
           }
       return ranges;
   }
   RangeSet.empty.nextLayer = RangeSet.empty;
   /**
   A range set builder is a data structure that helps build up a
   [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating
   an array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.
   */
   class RangeSetBuilder {
       /**
       Create an empty builder.
       */
       constructor() {
           this.chunks = [];
           this.chunkPos = [];
           this.chunkStart = -1;
           this.last = null;
           this.lastFrom = -1000000000 /* C.Far */;
           this.lastTo = -1000000000 /* C.Far */;
           this.from = [];
           this.to = [];
           this.value = [];
           this.maxPoint = -1;
           this.setMaxPoint = -1;
           this.nextLayer = null;
       }
       finishChunk(newArrays) {
           this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));
           this.chunkPos.push(this.chunkStart);
           this.chunkStart = -1;
           this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);
           this.maxPoint = -1;
           if (newArrays) {
               this.from = [];
               this.to = [];
               this.value = [];
           }
       }
       /**
       Add a range. Ranges should be added in sorted (by `from` and
       `value.startSide`) order.
       */
       add(from, to, value) {
           if (!this.addInner(from, to, value))
               (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);
       }
       /**
       @internal
       */
       addInner(from, to, value) {
           let diff = from - this.lastTo || value.startSide - this.last.endSide;
           if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)
               throw new Error("Ranges must be added sorted by `from` position and `startSide`");
           if (diff < 0)
               return false;
           if (this.from.length == 250 /* C.ChunkSize */)
               this.finishChunk(true);
           if (this.chunkStart < 0)
               this.chunkStart = from;
           this.from.push(from - this.chunkStart);
           this.to.push(to - this.chunkStart);
           this.last = value;
           this.lastFrom = from;
           this.lastTo = to;
           this.value.push(value);
           if (value.point)
               this.maxPoint = Math.max(this.maxPoint, to - from);
           return true;
       }
       /**
       @internal
       */
       addChunk(from, chunk) {
           if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)
               return false;
           if (this.from.length)
               this.finishChunk(true);
           this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);
           this.chunks.push(chunk);
           this.chunkPos.push(from);
           let last = chunk.value.length - 1;
           this.last = chunk.value[last];
           this.lastFrom = chunk.from[last] + from;
           this.lastTo = chunk.to[last] + from;
           return true;
       }
       /**
       Finish the range set. Returns the new set. The builder can't be
       used anymore after this has been called.
       */
       finish() { return this.finishInner(RangeSet.empty); }
       /**
       @internal
       */
       finishInner(next) {
           if (this.from.length)
               this.finishChunk(false);
           if (this.chunks.length == 0)
               return next;
           let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);
           this.from = null; // Make sure further `add` calls produce errors
           return result;
       }
   }
   function findSharedChunks(a, b, textDiff) {
       let inA = new Map();
       for (let set of a)
           for (let i = 0; i < set.chunk.length; i++)
               if (set.chunk[i].maxPoint <= 0)
                   inA.set(set.chunk[i], set.chunkPos[i]);
       let shared = new Set();
       for (let set of b)
           for (let i = 0; i < set.chunk.length; i++) {
               let known = inA.get(set.chunk[i]);
               if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&
                   !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))
                   shared.add(set.chunk[i]);
           }
       return shared;
   }
   class LayerCursor {
       constructor(layer, skip, minPoint, rank = 0) {
           this.layer = layer;
           this.skip = skip;
           this.minPoint = minPoint;
           this.rank = rank;
       }
       get startSide() { return this.value ? this.value.startSide : 0; }
       get endSide() { return this.value ? this.value.endSide : 0; }
       goto(pos, side = -1000000000 /* C.Far */) {
           this.chunkIndex = this.rangeIndex = 0;
           this.gotoInner(pos, side, false);
           return this;
       }
       gotoInner(pos, side, forward) {
           while (this.chunkIndex < this.layer.chunk.length) {
               let next = this.layer.chunk[this.chunkIndex];
               if (!(this.skip && this.skip.has(next) ||
                   this.layer.chunkEnd(this.chunkIndex) < pos ||
                   next.maxPoint < this.minPoint))
                   break;
               this.chunkIndex++;
               forward = false;
           }
           if (this.chunkIndex < this.layer.chunk.length) {
               let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);
               if (!forward || this.rangeIndex < rangeIndex)
                   this.setRangeIndex(rangeIndex);
           }
           this.next();
       }
       forward(pos, side) {
           if ((this.to - pos || this.endSide - side) < 0)
               this.gotoInner(pos, side, true);
       }
       next() {
           for (;;) {
               if (this.chunkIndex == this.layer.chunk.length) {
                   this.from = this.to = 1000000000 /* C.Far */;
                   this.value = null;
                   break;
               }
               else {
                   let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];
                   let from = chunkPos + chunk.from[this.rangeIndex];
                   this.from = from;
                   this.to = chunkPos + chunk.to[this.rangeIndex];
                   this.value = chunk.value[this.rangeIndex];
                   this.setRangeIndex(this.rangeIndex + 1);
                   if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
                       break;
               }
           }
       }
       setRangeIndex(index) {
           if (index == this.layer.chunk[this.chunkIndex].value.length) {
               this.chunkIndex++;
               if (this.skip) {
                   while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))
                       this.chunkIndex++;
               }
               this.rangeIndex = 0;
           }
           else {
               this.rangeIndex = index;
           }
       }
       nextChunk() {
           this.chunkIndex++;
           this.rangeIndex = 0;
           this.next();
       }
       compare(other) {
           return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||
               this.to - other.to || this.endSide - other.endSide;
       }
   }
   class HeapCursor {
       constructor(heap) {
           this.heap = heap;
       }
       static from(sets, skip = null, minPoint = -1) {
           let heap = [];
           for (let i = 0; i < sets.length; i++) {
               for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {
                   if (cur.maxPoint >= minPoint)
                       heap.push(new LayerCursor(cur, skip, minPoint, i));
               }
           }
           return heap.length == 1 ? heap[0] : new HeapCursor(heap);
       }
       get startSide() { return this.value ? this.value.startSide : 0; }
       goto(pos, side = -1000000000 /* C.Far */) {
           for (let cur of this.heap)
               cur.goto(pos, side);
           for (let i = this.heap.length >> 1; i >= 0; i--)
               heapBubble(this.heap, i);
           this.next();
           return this;
       }
       forward(pos, side) {
           for (let cur of this.heap)
               cur.forward(pos, side);
           for (let i = this.heap.length >> 1; i >= 0; i--)
               heapBubble(this.heap, i);
           if ((this.to - pos || this.value.endSide - side) < 0)
               this.next();
       }
       next() {
           if (this.heap.length == 0) {
               this.from = this.to = 1000000000 /* C.Far */;
               this.value = null;
               this.rank = -1;
           }
           else {
               let top = this.heap[0];
               this.from = top.from;
               this.to = top.to;
               this.value = top.value;
               this.rank = top.rank;
               if (top.value)
                   top.next();
               heapBubble(this.heap, 0);
           }
       }
   }
   function heapBubble(heap, index) {
       for (let cur = heap[index];;) {
           let childIndex = (index << 1) + 1;
           if (childIndex >= heap.length)
               break;
           let child = heap[childIndex];
           if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {
               child = heap[childIndex + 1];
               childIndex++;
           }
           if (cur.compare(child) < 0)
               break;
           heap[childIndex] = cur;
           heap[index] = child;
           index = childIndex;
       }
   }
   class SpanCursor {
       constructor(sets, skip, minPoint) {
           this.minPoint = minPoint;
           this.active = [];
           this.activeTo = [];
           this.activeRank = [];
           this.minActive = -1;
           // A currently active point range, if any
           this.point = null;
           this.pointFrom = 0;
           this.pointRank = 0;
           this.to = -1000000000 /* C.Far */;
           this.endSide = 0;
           this.openStart = -1;
           this.cursor = HeapCursor.from(sets, skip, minPoint);
       }
       goto(pos, side = -1000000000 /* C.Far */) {
           this.cursor.goto(pos, side);
           this.active.length = this.activeTo.length = this.activeRank.length = 0;
           this.minActive = -1;
           this.to = pos;
           this.endSide = side;
           this.openStart = -1;
           this.next();
           return this;
       }
       forward(pos, side) {
           while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)
               this.removeActive(this.minActive);
           this.cursor.forward(pos, side);
       }
       removeActive(index) {
           remove(this.active, index);
           remove(this.activeTo, index);
           remove(this.activeRank, index);
           this.minActive = findMinIndex(this.active, this.activeTo);
       }
       addActive(trackOpen) {
           let i = 0, { value, to, rank } = this.cursor;
           while (i < this.activeRank.length && this.activeRank[i] <= rank)
               i++;
           insert(this.active, i, value);
           insert(this.activeTo, i, to);
           insert(this.activeRank, i, rank);
           if (trackOpen)
               insert(trackOpen, i, this.cursor.from);
           this.minActive = findMinIndex(this.active, this.activeTo);
       }
       // After calling this, if `this.point` != null, the next range is a
       // point. Otherwise, it's a regular range, covered by `this.active`.
       next() {
           let from = this.to, wasPoint = this.point;
           this.point = null;
           let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;
           for (;;) {
               let a = this.minActive;
               if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {
                   if (this.activeTo[a] > from) {
                       this.to = this.activeTo[a];
                       this.endSide = this.active[a].endSide;
                       break;
                   }
                   this.removeActive(a);
                   if (trackOpen)
                       remove(trackOpen, a);
               }
               else if (!this.cursor.value) {
                   this.to = this.endSide = 1000000000 /* C.Far */;
                   break;
               }
               else if (this.cursor.from > from) {
                   this.to = this.cursor.from;
                   this.endSide = this.cursor.startSide;
                   break;
               }
               else {
                   let nextVal = this.cursor.value;
                   if (!nextVal.point) { // Opening a range
                       this.addActive(trackOpen);
                       if (this.cursor.from < from && this.cursor.to > from)
                           trackExtra++;
                       this.cursor.next();
                   }
                   else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {
                       // Ignore any non-empty points that end precisely at the end of the prev point
                       this.cursor.next();
                   }
                   else { // New point
                       this.point = nextVal;
                       this.pointFrom = this.cursor.from;
                       this.pointRank = this.cursor.rank;
                       this.to = this.cursor.to;
                       this.endSide = nextVal.endSide;
                       if (this.cursor.from < from)
                           trackExtra = 1;
                       this.cursor.next();
                       this.forward(this.to, this.endSide);
                       break;
                   }
               }
           }
           if (trackOpen) {
               let openStart = 0;
               while (openStart < trackOpen.length && trackOpen[openStart] < from)
                   openStart++;
               this.openStart = openStart + trackExtra;
           }
       }
       activeForPoint(to) {
           if (!this.active.length)
               return this.active;
           let active = [];
           for (let i = this.active.length - 1; i >= 0; i--) {
               if (this.activeRank[i] < this.pointRank)
                   break;
               if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)
                   active.push(this.active[i]);
           }
           return active.reverse();
       }
       openEnd(to) {
           let open = 0;
           for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)
               open++;
           return open;
       }
   }
   function compare(a, startA, b, startB, length, comparator) {
       a.goto(startA);
       b.goto(startB);
       let endB = startB + length;
       let pos = startB, dPos = startB - startA;
       for (;;) {
           let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;
           let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);
           if (a.point || b.point) {
               if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&
                   sameValues(a.activeForPoint(a.to + dPos), b.activeForPoint(b.to))))
                   comparator.comparePoint(pos, clipEnd, a.point, b.point);
           }
           else {
               if (clipEnd > pos && !sameValues(a.active, b.active))
                   comparator.compareRange(pos, clipEnd, a.active, b.active);
           }
           if (end > endB)
               break;
           pos = end;
           if (diff <= 0)
               a.next();
           if (diff >= 0)
               b.next();
       }
   }
   function sameValues(a, b) {
       if (a.length != b.length)
           return false;
       for (let i = 0; i < a.length; i++)
           if (a[i] != b[i] && !a[i].eq(b[i]))
               return false;
       return true;
   }
   function remove(array, index) {
       for (let i = index, e = array.length - 1; i < e; i++)
           array[i] = array[i + 1];
       array.pop();
   }
   function insert(array, index, value) {
       for (let i = array.length - 1; i >= index; i--)
           array[i + 1] = array[i];
       array[index] = value;
   }
   function findMinIndex(value, array) {
       let found = -1, foundPos = 1000000000 /* C.Far */;
       for (let i = 0; i < array.length; i++)
           if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {
               found = i;
               foundPos = array[i];
           }
       return found;
   }

   /**
   Count the column position at the given offset into the string,
   taking extending characters and tab size into account.
   */
   function countColumn(string, tabSize, to = string.length) {
       let n = 0;
       for (let i = 0; i < to;) {
           if (string.charCodeAt(i) == 9) {
               n += tabSize - (n % tabSize);
               i++;
           }
           else {
               n++;
               i = findClusterBreak(string, i);
           }
       }
       return n;
   }
   /**
   Find the offset that corresponds to the given column position in a
   string, taking extending characters and tab size into account. By
   default, the string length is returned when it is too short to
   reach the column. Pass `strict` true to make it return -1 in that
   situation.
   */
   function findColumn(string, col, tabSize, strict) {
       for (let i = 0, n = 0;;) {
           if (n >= col)
               return i;
           if (i == string.length)
               break;
           n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;
           i = findClusterBreak(string, i);
       }
       return strict === true ? -1 : string.length;
   }

   const C$1 = "\u037c";
   const COUNT = typeof Symbol == "undefined" ? "__" + C$1 : Symbol.for(C$1);
   const SET = typeof Symbol == "undefined" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet");
   const top = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : {};

   // :: - Style modules encapsulate a set of CSS rules defined from
   // JavaScript. Their definitions are only available in a given DOM
   // root after it has been _mounted_ there with `StyleModule.mount`.
   //
   // Style modules should be created once and stored somewhere, as
   // opposed to re-creating them every time you need them. The amount of
   // CSS rules generated for a given DOM root is bounded by the amount
   // of style modules that were used. So to avoid leaking rules, don't
   // create these dynamically, but treat them as one-time allocations.
   class StyleModule {
     // :: (Object<Style>, ?{finish: ?(string) → string})
     // Create a style module from the given spec.
     //
     // When `finish` is given, it is called on regular (non-`@`)
     // selectors (after `&` expansion) to compute the final selector.
     constructor(spec, options) {
       this.rules = [];
       let {finish} = options || {};

       function splitSelector(selector) {
         return /^@/.test(selector) ? [selector] : selector.split(/,\s*/)
       }

       function render(selectors, spec, target, isKeyframes) {
         let local = [], isAt = /^@(\w+)\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == "keyframes";
         if (isAt && spec == null) return target.push(selectors[0] + ";")
         for (let prop in spec) {
           let value = spec[prop];
           if (/&/.test(prop)) {
             render(prop.split(/,\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),
                    value, target);
           } else if (value && typeof value == "object") {
             if (!isAt) throw new RangeError("The value of a property (" + prop + ") should be a primitive value.")
             render(splitSelector(prop), value, local, keyframes);
           } else if (value != null) {
             local.push(prop.replace(/_.*/, "").replace(/[A-Z]/g, l => "-" + l.toLowerCase()) + ": " + value + ";");
           }
         }
         if (local.length || keyframes) {
           target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(", ") +
                       " {" + local.join(" ") + "}");
         }
       }

       for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules);
     }

     // :: () → string
     // Returns a string containing the module's CSS rules.
     getRules() { return this.rules.join("\n") }

     // :: () → string
     // Generate a new unique CSS class name.
     static newName() {
       let id = top[COUNT] || 1;
       top[COUNT] = id + 1;
       return C$1 + id.toString(36)
     }

     // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)
     //
     // Mount the given set of modules in the given DOM root, which ensures
     // that the CSS rules defined by the module are available in that
     // context.
     //
     // Rules are only added to the document once per root.
     //
     // Rule order will follow the order of the modules, so that rules from
     // modules later in the array take precedence of those from earlier
     // modules. If you call this function multiple times for the same root
     // in a way that changes the order of already mounted modules, the old
     // order will be changed.
     static mount(root, modules) {
       (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules]);
     }
   }

   let adoptedSet = null;

   class StyleSet {
     constructor(root) {
       if (!root.head && root.adoptedStyleSheets && typeof CSSStyleSheet != "undefined") {
         if (adoptedSet) {
           root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets);
           return root[SET] = adoptedSet
         }
         this.sheet = new CSSStyleSheet;
         root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets);
         adoptedSet = this;
       } else {
         this.styleTag = (root.ownerDocument || root).createElement("style");
         let target = root.head || root;
         target.insertBefore(this.styleTag, target.firstChild);
       }
       this.modules = [];
       root[SET] = this;
     }

     mount(modules) {
       let sheet = this.sheet;
       let pos = 0 /* Current rule offset */, j = 0; /* Index into this.modules */
       for (let i = 0; i < modules.length; i++) {
         let mod = modules[i], index = this.modules.indexOf(mod);
         if (index < j && index > -1) { // Ordering conflict
           this.modules.splice(index, 1);
           j--;
           index = -1;
         }
         if (index == -1) {
           this.modules.splice(j++, 0, mod);
           if (sheet) for (let k = 0; k < mod.rules.length; k++)
             sheet.insertRule(mod.rules[k], pos++);
         } else {
           while (j < index) pos += this.modules[j++].rules.length;
           pos += mod.rules.length;
           j++;
         }
       }

       if (!sheet) {
         let text = "";
         for (let i = 0; i < this.modules.length; i++)
           text += this.modules[i].getRules() + "\n";
         this.styleTag.textContent = text;
       }
     }
   }

   // Style::Object<union<Style,string>>
   //
   // A style is an object that, in the simple case, maps CSS property
   // names to strings holding their values, as in `{color: "red",
   // fontWeight: "bold"}`. The property names can be given in
   // camel-case—the library will insert a dash before capital letters
   // when converting them to CSS.
   //
   // If you include an underscore in a property name, it and everything
   // after it will be removed from the output, which can be useful when
   // providing a property multiple times, for browser compatibility
   // reasons.
   //
   // A property in a style object can also be a sub-selector, which
   // extends the current context to add a pseudo-selector or a child
   // selector. Such a property should contain a `&` character, which
   // will be replaced by the current selector. For example `{"&:before":
   // {content: '"hi"'}}`. Sub-selectors and regular properties can
   // freely be mixed in a given object. Any property containing a `&` is
   // assumed to be a sub-selector.
   //
   // Finally, a property can specify an @-block to be wrapped around the
   // styles defined inside the object that's the property's value. For
   // example to create a media query you can do `{"@media screen and
   // (min-width: 400px)": {...}}`.

   var base = {
     8: "Backspace",
     9: "Tab",
     10: "Enter",
     12: "NumLock",
     13: "Enter",
     16: "Shift",
     17: "Control",
     18: "Alt",
     20: "CapsLock",
     27: "Escape",
     32: " ",
     33: "PageUp",
     34: "PageDown",
     35: "End",
     36: "Home",
     37: "ArrowLeft",
     38: "ArrowUp",
     39: "ArrowRight",
     40: "ArrowDown",
     44: "PrintScreen",
     45: "Insert",
     46: "Delete",
     59: ";",
     61: "=",
     91: "Meta",
     92: "Meta",
     106: "*",
     107: "+",
     108: ",",
     109: "-",
     110: ".",
     111: "/",
     144: "NumLock",
     145: "ScrollLock",
     160: "Shift",
     161: "Shift",
     162: "Control",
     163: "Control",
     164: "Alt",
     165: "Alt",
     173: "-",
     186: ";",
     187: "=",
     188: ",",
     189: "-",
     190: ".",
     191: "/",
     192: "`",
     219: "[",
     220: "\\",
     221: "]",
     222: "'"
   };

   var shift = {
     48: ")",
     49: "!",
     50: "@",
     51: "#",
     52: "$",
     53: "%",
     54: "^",
     55: "&",
     56: "*",
     57: "(",
     59: ":",
     61: "+",
     173: "_",
     186: ":",
     187: "+",
     188: "<",
     189: "_",
     190: ">",
     191: "?",
     192: "~",
     219: "{",
     220: "|",
     221: "}",
     222: "\""
   };

   var chrome$1 = typeof navigator != "undefined" && /Chrome\/(\d+)/.exec(navigator.userAgent);
   typeof navigator != "undefined" && /Gecko\/\d+/.test(navigator.userAgent);
   var mac = typeof navigator != "undefined" && /Mac/.test(navigator.platform);
   var ie$2 = typeof navigator != "undefined" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
   var brokenModifierNames = mac || chrome$1 && +chrome$1[1] < 57;

   // Fill in the digit keys
   for (var i$1 = 0; i$1 < 10; i$1++) base[48 + i$1] = base[96 + i$1] = String(i$1);

   // The function keys
   for (var i$1 = 1; i$1 <= 24; i$1++) base[i$1 + 111] = "F" + i$1;

   // And the alphabetic keys
   for (var i$1 = 65; i$1 <= 90; i$1++) {
     base[i$1] = String.fromCharCode(i$1 + 32);
     shift[i$1] = String.fromCharCode(i$1);
   }

   // For each code that doesn't have a shift-equivalent, copy the base name
   for (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code];

   function keyName(event) {
     var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||
       ie$2 && event.shiftKey && event.key && event.key.length == 1 ||
       event.key == "Unidentified";
     var name = (!ignoreKey && event.key) ||
       (event.shiftKey ? shift : base)[event.keyCode] ||
       event.key || "Unidentified";
     // Edge sometimes produces wrong names (Issue #3)
     if (name == "Esc") name = "Escape";
     if (name == "Del") name = "Delete";
     // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/
     if (name == "Left") name = "ArrowLeft";
     if (name == "Up") name = "ArrowUp";
     if (name == "Right") name = "ArrowRight";
     if (name == "Down") name = "ArrowDown";
     return name
   }

   function getSelection(root) {
       let target;
       // Browsers differ on whether shadow roots have a getSelection
       // method. If it exists, use that, otherwise, call it on the
       // document.
       if (root.nodeType == 11) { // Shadow root
           target = root.getSelection ? root : root.ownerDocument;
       }
       else {
           target = root;
       }
       return target.getSelection();
   }
   function contains(dom, node) {
       return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;
   }
   function deepActiveElement(doc) {
       let elt = doc.activeElement;
       while (elt && elt.shadowRoot)
           elt = elt.shadowRoot.activeElement;
       return elt;
   }
   function hasSelection(dom, selection) {
       if (!selection.anchorNode)
           return false;
       try {
           // Firefox will raise 'permission denied' errors when accessing
           // properties of `sel.anchorNode` when it's in a generated CSS
           // element.
           return contains(dom, selection.anchorNode);
       }
       catch (_) {
           return false;
       }
   }
   function clientRectsFor(dom) {
       if (dom.nodeType == 3)
           return textRange(dom, 0, dom.nodeValue.length).getClientRects();
       else if (dom.nodeType == 1)
           return dom.getClientRects();
       else
           return [];
   }
   // Scans forward and backward through DOM positions equivalent to the
   // given one to see if the two are in the same place (i.e. after a
   // text node vs at the end of that text node)
   function isEquivalentPosition(node, off, targetNode, targetOff) {
       return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||
           scanFor(node, off, targetNode, targetOff, 1)) : false;
   }
   function domIndex(node) {
       for (var index = 0;; index++) {
           node = node.previousSibling;
           if (!node)
               return index;
       }
   }
   function scanFor(node, off, targetNode, targetOff, dir) {
       for (;;) {
           if (node == targetNode && off == targetOff)
               return true;
           if (off == (dir < 0 ? 0 : maxOffset(node))) {
               if (node.nodeName == "DIV")
                   return false;
               let parent = node.parentNode;
               if (!parent || parent.nodeType != 1)
                   return false;
               off = domIndex(node) + (dir < 0 ? 0 : 1);
               node = parent;
           }
           else if (node.nodeType == 1) {
               node = node.childNodes[off + (dir < 0 ? -1 : 0)];
               if (node.nodeType == 1 && node.contentEditable == "false")
                   return false;
               off = dir < 0 ? maxOffset(node) : 0;
           }
           else {
               return false;
           }
       }
   }
   function maxOffset(node) {
       return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;
   }
   const Rect0 = { left: 0, right: 0, top: 0, bottom: 0 };
   function flattenRect(rect, left) {
       let x = left ? rect.left : rect.right;
       return { left: x, right: x, top: rect.top, bottom: rect.bottom };
   }
   function windowRect(win) {
       return { left: 0, right: win.innerWidth,
           top: 0, bottom: win.innerHeight };
   }
   function scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {
       let doc = dom.ownerDocument, win = doc.defaultView || window;
       for (let cur = dom; cur;) {
           if (cur.nodeType == 1) { // Element
               let bounding, top = cur == doc.body;
               if (top) {
                   bounding = windowRect(win);
               }
               else {
                   if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {
                       cur = cur.assignedSlot || cur.parentNode;
                       continue;
                   }
                   let rect = cur.getBoundingClientRect();
                   // Make sure scrollbar width isn't included in the rectangle
                   bounding = { left: rect.left, right: rect.left + cur.clientWidth,
                       top: rect.top, bottom: rect.top + cur.clientHeight };
               }
               let moveX = 0, moveY = 0;
               if (y == "nearest") {
                   if (rect.top < bounding.top) {
                       moveY = -(bounding.top - rect.top + yMargin);
                       if (side > 0 && rect.bottom > bounding.bottom + moveY)
                           moveY = rect.bottom - bounding.bottom + moveY + yMargin;
                   }
                   else if (rect.bottom > bounding.bottom) {
                       moveY = rect.bottom - bounding.bottom + yMargin;
                       if (side < 0 && (rect.top - moveY) < bounding.top)
                           moveY = -(bounding.top + moveY - rect.top + yMargin);
                   }
               }
               else {
                   let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;
                   let targetTop = y == "center" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :
                       y == "start" || y == "center" && side < 0 ? rect.top - yMargin :
                           rect.bottom - boundingHeight + yMargin;
                   moveY = targetTop - bounding.top;
               }
               if (x == "nearest") {
                   if (rect.left < bounding.left) {
                       moveX = -(bounding.left - rect.left + xMargin);
                       if (side > 0 && rect.right > bounding.right + moveX)
                           moveX = rect.right - bounding.right + moveX + xMargin;
                   }
                   else if (rect.right > bounding.right) {
                       moveX = rect.right - bounding.right + xMargin;
                       if (side < 0 && rect.left < bounding.left + moveX)
                           moveX = -(bounding.left + moveX - rect.left + xMargin);
                   }
               }
               else {
                   let targetLeft = x == "center" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :
                       (x == "start") == ltr ? rect.left - xMargin :
                           rect.right - (bounding.right - bounding.left) + xMargin;
                   moveX = targetLeft - bounding.left;
               }
               if (moveX || moveY) {
                   if (top) {
                       win.scrollBy(moveX, moveY);
                   }
                   else {
                       let movedX = 0, movedY = 0;
                       if (moveY) {
                           let start = cur.scrollTop;
                           cur.scrollTop += moveY;
                           movedY = cur.scrollTop - start;
                       }
                       if (moveX) {
                           let start = cur.scrollLeft;
                           cur.scrollLeft += moveX;
                           movedX = cur.scrollLeft - start;
                       }
                       rect = { left: rect.left - movedX, top: rect.top - movedY,
                           right: rect.right - movedX, bottom: rect.bottom - movedY };
                       if (movedX && Math.abs(movedX - moveX) < 1)
                           x = "nearest";
                       if (movedY && Math.abs(movedY - moveY) < 1)
                           y = "nearest";
                   }
               }
               if (top)
                   break;
               cur = cur.assignedSlot || cur.parentNode;
           }
           else if (cur.nodeType == 11) { // A shadow root
               cur = cur.host;
           }
           else {
               break;
           }
       }
   }
   class DOMSelectionState {
       constructor() {
           this.anchorNode = null;
           this.anchorOffset = 0;
           this.focusNode = null;
           this.focusOffset = 0;
       }
       eq(domSel) {
           return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&
               this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;
       }
       setRange(range) {
           this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);
       }
       set(anchorNode, anchorOffset, focusNode, focusOffset) {
           this.anchorNode = anchorNode;
           this.anchorOffset = anchorOffset;
           this.focusNode = focusNode;
           this.focusOffset = focusOffset;
       }
   }
   let preventScrollSupported = null;
   // Feature-detects support for .focus({preventScroll: true}), and uses
   // a fallback kludge when not supported.
   function focusPreventScroll(dom) {
       if (dom.setActive)
           return dom.setActive(); // in IE
       if (preventScrollSupported)
           return dom.focus(preventScrollSupported);
       let stack = [];
       for (let cur = dom; cur; cur = cur.parentNode) {
           stack.push(cur, cur.scrollTop, cur.scrollLeft);
           if (cur == cur.ownerDocument)
               break;
       }
       dom.focus(preventScrollSupported == null ? {
           get preventScroll() {
               preventScrollSupported = { preventScroll: true };
               return true;
           }
       } : undefined);
       if (!preventScrollSupported) {
           preventScrollSupported = false;
           for (let i = 0; i < stack.length;) {
               let elt = stack[i++], top = stack[i++], left = stack[i++];
               if (elt.scrollTop != top)
                   elt.scrollTop = top;
               if (elt.scrollLeft != left)
                   elt.scrollLeft = left;
           }
       }
   }
   let scratchRange;
   function textRange(node, from, to = from) {
       let range = scratchRange || (scratchRange = document.createRange());
       range.setEnd(node, to);
       range.setStart(node, from);
       return range;
   }
   function dispatchKey(elt, name, code) {
       let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };
       let down = new KeyboardEvent("keydown", options);
       down.synthetic = true;
       elt.dispatchEvent(down);
       let up = new KeyboardEvent("keyup", options);
       up.synthetic = true;
       elt.dispatchEvent(up);
       return down.defaultPrevented || up.defaultPrevented;
   }
   function getRoot(node) {
       while (node) {
           if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))
               return node;
           node = node.assignedSlot || node.parentNode;
       }
       return null;
   }
   function clearAttributes(node) {
       while (node.attributes.length)
           node.removeAttributeNode(node.attributes[0]);
   }
   function atElementStart(doc, selection) {
       let node = selection.focusNode, offset = selection.focusOffset;
       if (!node || selection.anchorNode != node || selection.anchorOffset != offset)
           return false;
       for (;;) {
           if (offset) {
               if (node.nodeType != 1)
                   return false;
               let prev = node.childNodes[offset - 1];
               if (prev.contentEditable == "false")
                   offset--;
               else {
                   node = prev;
                   offset = maxOffset(node);
               }
           }
           else if (node == doc) {
               return true;
           }
           else {
               offset = domIndex(node);
               node = node.parentNode;
           }
       }
   }

   class DOMPos {
       constructor(node, offset, precise = true) {
           this.node = node;
           this.offset = offset;
           this.precise = precise;
       }
       static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }
       static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }
   }
   const noChildren = [];
   class ContentView {
       constructor() {
           this.parent = null;
           this.dom = null;
           this.dirty = 2 /* Dirty.Node */;
       }
       get editorView() {
           if (!this.parent)
               throw new Error("Accessing view in orphan content view");
           return this.parent.editorView;
       }
       get overrideDOMText() { return null; }
       get posAtStart() {
           return this.parent ? this.parent.posBefore(this) : 0;
       }
       get posAtEnd() {
           return this.posAtStart + this.length;
       }
       posBefore(view) {
           let pos = this.posAtStart;
           for (let child of this.children) {
               if (child == view)
                   return pos;
               pos += child.length + child.breakAfter;
           }
           throw new RangeError("Invalid child in posBefore");
       }
       posAfter(view) {
           return this.posBefore(view) + view.length;
       }
       // Will return a rectangle directly before (when side < 0), after
       // (side > 0) or directly on (when the browser supports it) the
       // given position.
       coordsAt(_pos, _side) { return null; }
       sync(track) {
           if (this.dirty & 2 /* Dirty.Node */) {
               let parent = this.dom;
               let prev = null, next;
               for (let child of this.children) {
                   if (child.dirty) {
                       if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {
                           let contentView = ContentView.get(next);
                           if (!contentView || !contentView.parent && contentView.canReuseDOM(child))
                               child.reuseDOM(next);
                       }
                       child.sync(track);
                       child.dirty = 0 /* Dirty.Not */;
                   }
                   next = prev ? prev.nextSibling : parent.firstChild;
                   if (track && !track.written && track.node == parent && next != child.dom)
                       track.written = true;
                   if (child.dom.parentNode == parent) {
                       while (next && next != child.dom)
                           next = rm$1(next);
                   }
                   else {
                       parent.insertBefore(child.dom, next);
                   }
                   prev = child.dom;
               }
               next = prev ? prev.nextSibling : parent.firstChild;
               if (next && track && track.node == parent)
                   track.written = true;
               while (next)
                   next = rm$1(next);
           }
           else if (this.dirty & 1 /* Dirty.Child */) {
               for (let child of this.children)
                   if (child.dirty) {
                       child.sync(track);
                       child.dirty = 0 /* Dirty.Not */;
                   }
           }
       }
       reuseDOM(_dom) { }
       localPosFromDOM(node, offset) {
           let after;
           if (node == this.dom) {
               after = this.dom.childNodes[offset];
           }
           else {
               let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;
               for (;;) {
                   let parent = node.parentNode;
                   if (parent == this.dom)
                       break;
                   if (bias == 0 && parent.firstChild != parent.lastChild) {
                       if (node == parent.firstChild)
                           bias = -1;
                       else
                           bias = 1;
                   }
                   node = parent;
               }
               if (bias < 0)
                   after = node;
               else
                   after = node.nextSibling;
           }
           if (after == this.dom.firstChild)
               return 0;
           while (after && !ContentView.get(after))
               after = after.nextSibling;
           if (!after)
               return this.length;
           for (let i = 0, pos = 0;; i++) {
               let child = this.children[i];
               if (child.dom == after)
                   return pos;
               pos += child.length + child.breakAfter;
           }
       }
       domBoundsAround(from, to, offset = 0) {
           let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;
           for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {
               let child = this.children[i], end = pos + child.length;
               if (pos < from && end > to)
                   return child.domBoundsAround(from, to, pos);
               if (end >= from && fromI == -1) {
                   fromI = i;
                   fromStart = pos;
               }
               if (pos > to && child.dom.parentNode == this.dom) {
                   toI = i;
                   toEnd = prevEnd;
                   break;
               }
               prevEnd = end;
               pos = end + child.breakAfter;
           }
           return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,
               startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,
               endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };
       }
       markDirty(andParent = false) {
           this.dirty |= 2 /* Dirty.Node */;
           this.markParentsDirty(andParent);
       }
       markParentsDirty(childList) {
           for (let parent = this.parent; parent; parent = parent.parent) {
               if (childList)
                   parent.dirty |= 2 /* Dirty.Node */;
               if (parent.dirty & 1 /* Dirty.Child */)
                   return;
               parent.dirty |= 1 /* Dirty.Child */;
               childList = false;
           }
       }
       setParent(parent) {
           if (this.parent != parent) {
               this.parent = parent;
               if (this.dirty)
                   this.markParentsDirty(true);
           }
       }
       setDOM(dom) {
           if (this.dom)
               this.dom.cmView = null;
           this.dom = dom;
           dom.cmView = this;
       }
       get rootView() {
           for (let v = this;;) {
               let parent = v.parent;
               if (!parent)
                   return v;
               v = parent;
           }
       }
       replaceChildren(from, to, children = noChildren) {
           this.markDirty();
           for (let i = from; i < to; i++) {
               let child = this.children[i];
               if (child.parent == this)
                   child.destroy();
           }
           this.children.splice(from, to - from, ...children);
           for (let i = 0; i < children.length; i++)
               children[i].setParent(this);
       }
       ignoreMutation(_rec) { return false; }
       ignoreEvent(_event) { return false; }
       childCursor(pos = this.length) {
           return new ChildCursor(this.children, pos, this.children.length);
       }
       childPos(pos, bias = 1) {
           return this.childCursor().findPos(pos, bias);
       }
       toString() {
           let name = this.constructor.name.replace("View", "");
           return name + (this.children.length ? "(" + this.children.join() + ")" :
               this.length ? "[" + (name == "Text" ? this.text : this.length) + "]" : "") +
               (this.breakAfter ? "#" : "");
       }
       static get(node) { return node.cmView; }
       get isEditable() { return true; }
       merge(from, to, source, hasStart, openStart, openEnd) {
           return false;
       }
       become(other) { return false; }
       canReuseDOM(other) { return other.constructor == this.constructor; }
       // When this is a zero-length view with a side, this should return a
       // number <= 0 to indicate it is before its position, or a
       // number > 0 when after its position.
       getSide() { return 0; }
       destroy() {
           this.parent = null;
       }
   }
   ContentView.prototype.breakAfter = 0;
   // Remove a DOM node and return its next sibling.
   function rm$1(dom) {
       let next = dom.nextSibling;
       dom.parentNode.removeChild(dom);
       return next;
   }
   class ChildCursor {
       constructor(children, pos, i) {
           this.children = children;
           this.pos = pos;
           this.i = i;
           this.off = 0;
       }
       findPos(pos, bias = 1) {
           for (;;) {
               if (pos > this.pos || pos == this.pos &&
                   (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {
                   this.off = pos - this.pos;
                   return this;
               }
               let next = this.children[--this.i];
               this.pos -= next.length + next.breakAfter;
           }
       }
   }
   function replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {
       let { children } = parent;
       let before = children.length ? children[fromI] : null;
       let last = insert.length ? insert[insert.length - 1] : null;
       let breakAtEnd = last ? last.breakAfter : breakAtStart;
       // Change within a single child
       if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&
           before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))
           return;
       if (toI < children.length) {
           let after = children[toI];
           // Make sure the end of the child after the update is preserved in `after`
           if (after && toOff < after.length) {
               // If we're splitting a child, separate part of it to avoid that
               // being mangled when updating the child before the update.
               if (fromI == toI) {
                   after = after.split(toOff);
                   toOff = 0;
               }
               // If the element after the replacement should be merged with
               // the last replacing element, update `content`
               if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {
                   insert[insert.length - 1] = after;
               }
               else {
                   // Remove the start of the after element, if necessary, and
                   // add it to `content`.
                   if (toOff)
                       after.merge(0, toOff, null, false, 0, openEnd);
                   insert.push(after);
               }
           }
           else if (after === null || after === void 0 ? void 0 : after.breakAfter) {
               // The element at `toI` is entirely covered by this range.
               // Preserve its line break, if any.
               if (last)
                   last.breakAfter = 1;
               else
                   breakAtStart = 1;
           }
           // Since we've handled the next element from the current elements
           // now, make sure `toI` points after that.
           toI++;
       }
       if (before) {
           before.breakAfter = breakAtStart;
           if (fromOff > 0) {
               if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {
                   before.breakAfter = insert.shift().breakAfter;
               }
               else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {
                   before.merge(fromOff, before.length, null, false, openStart, 0);
               }
               fromI++;
           }
       }
       // Try to merge widgets on the boundaries of the replacement
       while (fromI < toI && insert.length) {
           if (children[toI - 1].become(insert[insert.length - 1])) {
               toI--;
               insert.pop();
               openEnd = insert.length ? 0 : openStart;
           }
           else if (children[fromI].become(insert[0])) {
               fromI++;
               insert.shift();
               openStart = insert.length ? 0 : openEnd;
           }
           else {
               break;
           }
       }
       if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&
           children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))
           fromI--;
       if (fromI < toI || insert.length)
           parent.replaceChildren(fromI, toI, insert);
   }
   function mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {
       let cur = parent.childCursor();
       let { i: toI, off: toOff } = cur.findPos(to, 1);
       let { i: fromI, off: fromOff } = cur.findPos(from, -1);
       let dLen = from - to;
       for (let view of insert)
           dLen += view.length;
       parent.length += dLen;
       replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);
   }

   let nav = typeof navigator != "undefined" ? navigator : { userAgent: "", vendor: "", platform: "" };
   let doc = typeof document != "undefined" ? document : { documentElement: { style: {} } };
   const ie_edge = /*@__PURE__*//Edge\/(\d+)/.exec(nav.userAgent);
   const ie_upto10 = /*@__PURE__*//MSIE \d/.test(nav.userAgent);
   const ie_11up = /*@__PURE__*//Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(nav.userAgent);
   const ie$1 = !!(ie_upto10 || ie_11up || ie_edge);
   const gecko = !ie$1 && /*@__PURE__*//gecko\/(\d+)/i.test(nav.userAgent);
   const chrome = !ie$1 && /*@__PURE__*//Chrome\/(\d+)/.exec(nav.userAgent);
   const webkit = "webkitFontSmoothing" in doc.documentElement.style;
   const safari = !ie$1 && /*@__PURE__*//Apple Computer/.test(nav.vendor);
   const ios = safari && (/*@__PURE__*//Mobile\/\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);
   var browser = {
       mac: ios || /*@__PURE__*//Mac/.test(nav.platform),
       windows: /*@__PURE__*//Win/.test(nav.platform),
       linux: /*@__PURE__*//Linux|X11/.test(nav.platform),
       ie: ie$1,
       ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,
       gecko,
       gecko_version: gecko ? +(/*@__PURE__*//Firefox\/(\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,
       chrome: !!chrome,
       chrome_version: chrome ? +chrome[1] : 0,
       ios,
       android: /*@__PURE__*//Android\b/.test(nav.userAgent),
       webkit,
       safari,
       webkit_version: webkit ? +(/*@__PURE__*//\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
       tabSize: doc.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
   };

   const MaxJoinLen = 256;
   class TextView extends ContentView {
       constructor(text) {
           super();
           this.text = text;
       }
       get length() { return this.text.length; }
       createDOM(textDOM) {
           this.setDOM(textDOM || document.createTextNode(this.text));
       }
       sync(track) {
           if (!this.dom)
               this.createDOM();
           if (this.dom.nodeValue != this.text) {
               if (track && track.node == this.dom)
                   track.written = true;
               this.dom.nodeValue = this.text;
           }
       }
       reuseDOM(dom) {
           if (dom.nodeType == 3)
               this.createDOM(dom);
       }
       merge(from, to, source) {
           if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))
               return false;
           this.text = this.text.slice(0, from) + (source ? source.text : "") + this.text.slice(to);
           this.markDirty();
           return true;
       }
       split(from) {
           let result = new TextView(this.text.slice(from));
           this.text = this.text.slice(0, from);
           this.markDirty();
           return result;
       }
       localPosFromDOM(node, offset) {
           return node == this.dom ? offset : offset ? this.text.length : 0;
       }
       domAtPos(pos) { return new DOMPos(this.dom, pos); }
       domBoundsAround(_from, _to, offset) {
           return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
       }
       coordsAt(pos, side) {
           return textCoords(this.dom, pos, side);
       }
   }
   class MarkView extends ContentView {
       constructor(mark, children = [], length = 0) {
           super();
           this.mark = mark;
           this.children = children;
           this.length = length;
           for (let ch of children)
               ch.setParent(this);
       }
       setAttrs(dom) {
           clearAttributes(dom);
           if (this.mark.class)
               dom.className = this.mark.class;
           if (this.mark.attrs)
               for (let name in this.mark.attrs)
                   dom.setAttribute(name, this.mark.attrs[name]);
           return dom;
       }
       reuseDOM(node) {
           if (node.nodeName == this.mark.tagName.toUpperCase()) {
               this.setDOM(node);
               this.dirty |= 4 /* Dirty.Attrs */ | 2 /* Dirty.Node */;
           }
       }
       sync(track) {
           if (!this.dom)
               this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));
           else if (this.dirty & 4 /* Dirty.Attrs */)
               this.setAttrs(this.dom);
           super.sync(track);
       }
       merge(from, to, source, _hasStart, openStart, openEnd) {
           if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||
               (from && openStart <= 0) || (to < this.length && openEnd <= 0)))
               return false;
           mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);
           this.markDirty();
           return true;
       }
       split(from) {
           let result = [], off = 0, detachFrom = -1, i = 0;
           for (let elt of this.children) {
               let end = off + elt.length;
               if (end > from)
                   result.push(off < from ? elt.split(from - off) : elt);
               if (detachFrom < 0 && off >= from)
                   detachFrom = i;
               off = end;
               i++;
           }
           let length = this.length - from;
           this.length = from;
           if (detachFrom > -1) {
               this.children.length = detachFrom;
               this.markDirty();
           }
           return new MarkView(this.mark, result, length);
       }
       domAtPos(pos) {
           return inlineDOMAtPos(this, pos);
       }
       coordsAt(pos, side) {
           return coordsInChildren(this, pos, side);
       }
   }
   function textCoords(text, pos, side) {
       let length = text.nodeValue.length;
       if (pos > length)
           pos = length;
       let from = pos, to = pos, flatten = 0;
       if (pos == 0 && side < 0 || pos == length && side >= 0) {
           if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges
               if (pos) {
                   from--;
                   flatten = 1;
               } // FIXME this is wrong in RTL text
               else if (to < length) {
                   to++;
                   flatten = -1;
               }
           }
       }
       else {
           if (side < 0)
               from--;
           else if (to < length)
               to++;
       }
       let rects = textRange(text, from, to).getClientRects();
       if (!rects.length)
           return Rect0;
       let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];
       if (browser.safari && !flatten && rect.width == 0)
           rect = Array.prototype.find.call(rects, r => r.width) || rect;
       return flatten ? flattenRect(rect, flatten < 0) : rect || null;
   }
   // Also used for collapsed ranges that don't have a placeholder widget!
   class WidgetView extends ContentView {
       constructor(widget, length, side) {
           super();
           this.widget = widget;
           this.length = length;
           this.side = side;
           this.prevWidget = null;
       }
       static create(widget, length, side) {
           return new (widget.customView || WidgetView)(widget, length, side);
       }
       split(from) {
           let result = WidgetView.create(this.widget, this.length - from, this.side);
           this.length -= from;
           return result;
       }
       sync() {
           if (!this.dom || !this.widget.updateDOM(this.dom)) {
               if (this.dom && this.prevWidget)
                   this.prevWidget.destroy(this.dom);
               this.prevWidget = null;
               this.setDOM(this.widget.toDOM(this.editorView));
               this.dom.contentEditable = "false";
           }
       }
       getSide() { return this.side; }
       merge(from, to, source, hasStart, openStart, openEnd) {
           if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||
               from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))
               return false;
           this.length = from + (source ? source.length : 0) + (this.length - to);
           return true;
       }
       become(other) {
           if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {
               if (this.widget.constructor == other.widget.constructor) {
                   if (!this.widget.eq(other.widget))
                       this.markDirty(true);
                   if (this.dom && !this.prevWidget)
                       this.prevWidget = this.widget;
                   this.widget = other.widget;
                   return true;
               }
           }
           return false;
       }
       ignoreMutation() { return true; }
       ignoreEvent(event) { return this.widget.ignoreEvent(event); }
       get overrideDOMText() {
           if (this.length == 0)
               return Text.empty;
           let top = this;
           while (top.parent)
               top = top.parent;
           let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;
           return text ? text.slice(start, start + this.length) : Text.empty;
       }
       domAtPos(pos) {
           return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);
       }
       domBoundsAround() { return null; }
       coordsAt(pos, side) {
           let rects = this.dom.getClientRects(), rect = null;
           if (!rects.length)
               return Rect0;
           for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {
               rect = rects[i];
               if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)
                   break;
           }
           return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);
       }
       get isEditable() { return false; }
       destroy() {
           super.destroy();
           if (this.dom)
               this.widget.destroy(this.dom);
       }
   }
   class CompositionView extends WidgetView {
       domAtPos(pos) {
           let { topView, text } = this.widget;
           if (!topView)
               return new DOMPos(text, Math.min(pos, text.nodeValue.length));
           return scanCompositionTree(pos, 0, topView, text, (v, p) => v.domAtPos(p), p => new DOMPos(text, Math.min(p, text.nodeValue.length)));
       }
       sync() { this.setDOM(this.widget.toDOM()); }
       localPosFromDOM(node, offset) {
           let { topView, text } = this.widget;
           if (!topView)
               return Math.min(offset, this.length);
           return posFromDOMInCompositionTree(node, offset, topView, text);
       }
       ignoreMutation() { return false; }
       get overrideDOMText() { return null; }
       coordsAt(pos, side) {
           let { topView, text } = this.widget;
           if (!topView)
               return textCoords(text, pos, side);
           return scanCompositionTree(pos, side, topView, text, (v, pos, side) => v.coordsAt(pos, side), (pos, side) => textCoords(text, pos, side));
       }
       destroy() {
           var _a;
           super.destroy();
           (_a = this.widget.topView) === null || _a === void 0 ? void 0 : _a.destroy();
       }
       get isEditable() { return true; }
       canReuseDOM() { return true; }
   }
   // Uses the old structure of a chunk of content view frozen for
   // composition to try and find a reasonable DOM location for the given
   // offset.
   function scanCompositionTree(pos, side, view, text, enterView, fromText) {
       if (view instanceof MarkView) {
           for (let child = view.dom.firstChild; child; child = child.nextSibling) {
               let desc = ContentView.get(child);
               if (!desc)
                   return fromText(pos, side);
               let hasComp = contains(child, text);
               let len = desc.length + (hasComp ? text.nodeValue.length : 0);
               if (pos < len || pos == len && desc.getSide() <= 0)
                   return hasComp ? scanCompositionTree(pos, side, desc, text, enterView, fromText) : enterView(desc, pos, side);
               pos -= len;
           }
           return enterView(view, view.length, -1);
       }
       else if (view.dom == text) {
           return fromText(pos, side);
       }
       else {
           return enterView(view, pos, side);
       }
   }
   function posFromDOMInCompositionTree(node, offset, view, text) {
       if (view instanceof MarkView) {
           for (let child of view.children) {
               let pos = 0, hasComp = contains(child.dom, text);
               if (contains(child.dom, node))
                   return pos + (hasComp ? posFromDOMInCompositionTree(node, offset, child, text) : child.localPosFromDOM(node, offset));
               pos += hasComp ? text.nodeValue.length : child.length;
           }
       }
       else if (view.dom == text) {
           return Math.min(offset, text.nodeValue.length);
       }
       return view.localPosFromDOM(node, offset);
   }
   // These are drawn around uneditable widgets to avoid a number of
   // browser bugs that show up when the cursor is directly next to
   // uneditable inline content.
   class WidgetBufferView extends ContentView {
       constructor(side) {
           super();
           this.side = side;
       }
       get length() { return 0; }
       merge() { return false; }
       become(other) {
           return other instanceof WidgetBufferView && other.side == this.side;
       }
       split() { return new WidgetBufferView(this.side); }
       sync() {
           if (!this.dom) {
               let dom = document.createElement("img");
               dom.className = "cm-widgetBuffer";
               dom.setAttribute("aria-hidden", "true");
               this.setDOM(dom);
           }
       }
       getSide() { return this.side; }
       domAtPos(pos) { return DOMPos.before(this.dom); }
       localPosFromDOM() { return 0; }
       domBoundsAround() { return null; }
       coordsAt(pos) {
           let imgRect = this.dom.getBoundingClientRect();
           // Since the <img> height doesn't correspond to text height, try
           // to borrow the height from some sibling node.
           let siblingRect = inlineSiblingRect(this, this.side > 0 ? -1 : 1);
           return siblingRect && siblingRect.top < imgRect.bottom && siblingRect.bottom > imgRect.top
               ? { left: imgRect.left, right: imgRect.right, top: siblingRect.top, bottom: siblingRect.bottom } : imgRect;
       }
       get overrideDOMText() {
           return Text.empty;
       }
   }
   TextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;
   function inlineSiblingRect(view, side) {
       let parent = view.parent, index = parent ? parent.children.indexOf(view) : -1;
       while (parent && index >= 0) {
           if (side < 0 ? index > 0 : index < parent.children.length) {
               let next = parent.children[index + side];
               if (next instanceof TextView) {
                   let nextRect = next.coordsAt(side < 0 ? next.length : 0, side);
                   if (nextRect)
                       return nextRect;
               }
               index += side;
           }
           else if (parent instanceof MarkView && parent.parent) {
               index = parent.parent.children.indexOf(parent) + (side < 0 ? 0 : 1);
               parent = parent.parent;
           }
           else {
               let last = parent.dom.lastChild;
               if (last && last.nodeName == "BR")
                   return last.getClientRects()[0];
               break;
           }
       }
       return undefined;
   }
   function inlineDOMAtPos(parent, pos) {
       let dom = parent.dom, { children } = parent, i = 0;
       for (let off = 0; i < children.length; i++) {
           let child = children[i], end = off + child.length;
           if (end == off && child.getSide() <= 0)
               continue;
           if (pos > off && pos < end && child.dom.parentNode == dom)
               return child.domAtPos(pos - off);
           if (pos <= off)
               break;
           off = end;
       }
       //  if (i) return DOMPos.after(children[i - 1].dom!)
       for (let j = i; j > 0; j--) {
           let prev = children[j - 1];
           if (prev.dom.parentNode == dom)
               return prev.domAtPos(prev.length);
       }
       for (let j = i; j < children.length; j++) {
           let next = children[j];
           if (next.dom.parentNode == dom)
               return next.domAtPos(0);
       }
       return new DOMPos(dom, 0);
   }
   // Assumes `view`, if a mark view, has precisely 1 child.
   function joinInlineInto(parent, view, open) {
       let last, { children } = parent;
       if (open > 0 && view instanceof MarkView && children.length &&
           (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {
           joinInlineInto(last, view.children[0], open - 1);
       }
       else {
           children.push(view);
           view.setParent(parent);
       }
       parent.length += view.length;
   }
   function coordsInChildren(view, pos, side) {
       for (let off = 0, i = 0; i < view.children.length; i++) {
           let child = view.children[i], end = off + child.length, next;
           if ((side <= 0 || end == view.length || child.getSide() > 0 ? end >= pos : end > pos) &&
               (pos < end || i + 1 == view.children.length || (next = view.children[i + 1]).length || next.getSide() > 0)) {
               let flatten = 0;
               if (end == off) {
                   if (child.getSide() <= 0)
                       continue;
                   flatten = side = -child.getSide();
               }
               let rect = child.coordsAt(Math.max(0, pos - off), side);
               return flatten && rect ? flattenRect(rect, side < 0) : rect;
           }
           off = end;
       }
       let last = view.dom.lastChild;
       if (!last)
           return view.dom.getBoundingClientRect();
       let rects = clientRectsFor(last);
       return rects[rects.length - 1] || null;
   }

   function combineAttrs(source, target) {
       for (let name in source) {
           if (name == "class" && target.class)
               target.class += " " + source.class;
           else if (name == "style" && target.style)
               target.style += ";" + source.style;
           else
               target[name] = source[name];
       }
       return target;
   }
   function attrsEq(a, b) {
       if (a == b)
           return true;
       if (!a || !b)
           return false;
       let keysA = Object.keys(a), keysB = Object.keys(b);
       if (keysA.length != keysB.length)
           return false;
       for (let key of keysA) {
           if (keysB.indexOf(key) == -1 || a[key] !== b[key])
               return false;
       }
       return true;
   }
   function updateAttrs(dom, prev, attrs) {
       let changed = null;
       if (prev)
           for (let name in prev)
               if (!(attrs && name in attrs))
                   dom.removeAttribute(changed = name);
       if (attrs)
           for (let name in attrs)
               if (!(prev && prev[name] == attrs[name]))
                   dom.setAttribute(changed = name, attrs[name]);
       return !!changed;
   }

   /**
   Widgets added to the content are described by subclasses of this
   class. Using a description object like that makes it possible to
   delay creating of the DOM structure for a widget until it is
   needed, and to avoid redrawing widgets even if the decorations
   that define them are recreated.
   */
   class WidgetType {
       /**
       Compare this instance to another instance of the same type.
       (TypeScript can't express this, but only instances of the same
       specific class will be passed to this method.) This is used to
       avoid redrawing widgets when they are replaced by a new
       decoration of the same type. The default implementation just
       returns `false`, which will cause new instances of the widget to
       always be redrawn.
       */
       eq(widget) { return false; }
       /**
       Update a DOM element created by a widget of the same type (but
       different, non-`eq` content) to reflect this widget. May return
       true to indicate that it could update, false to indicate it
       couldn't (in which case the widget will be redrawn). The default
       implementation just returns false.
       */
       updateDOM(dom) { return false; }
       /**
       @internal
       */
       compare(other) {
           return this == other || this.constructor == other.constructor && this.eq(other);
       }
       /**
       The estimated height this widget will have, to be used when
       estimating the height of content that hasn't been drawn. May
       return -1 to indicate you don't know. The default implementation
       returns -1.
       */
       get estimatedHeight() { return -1; }
       /**
       Can be used to configure which kinds of events inside the widget
       should be ignored by the editor. The default is to ignore all
       events.
       */
       ignoreEvent(event) { return true; }
       /**
       @internal
       */
       get customView() { return null; }
       /**
       This is called when the an instance of the widget is removed
       from the editor view.
       */
       destroy(dom) { }
   }
   /**
   The different types of blocks that can occur in an editor view.
   */
   var BlockType = /*@__PURE__*/(function (BlockType) {
       /**
       A line of text.
       */
       BlockType[BlockType["Text"] = 0] = "Text";
       /**
       A block widget associated with the position after it.
       */
       BlockType[BlockType["WidgetBefore"] = 1] = "WidgetBefore";
       /**
       A block widget associated with the position before it.
       */
       BlockType[BlockType["WidgetAfter"] = 2] = "WidgetAfter";
       /**
       A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.
       */
       BlockType[BlockType["WidgetRange"] = 3] = "WidgetRange";
   return BlockType})(BlockType || (BlockType = {}));
   /**
   A decoration provides information on how to draw or style a piece
   of content. You'll usually use it wrapped in a
   [`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.
   @nonabstract
   */
   class Decoration extends RangeValue {
       constructor(
       /**
       @internal
       */
       startSide, 
       /**
       @internal
       */
       endSide, 
       /**
       @internal
       */
       widget, 
       /**
       The config object used to create this decoration. You can
       include additional properties in there to store metadata about
       your decoration.
       */
       spec) {
           super();
           this.startSide = startSide;
           this.endSide = endSide;
           this.widget = widget;
           this.spec = spec;
       }
       /**
       @internal
       */
       get heightRelevant() { return false; }
       /**
       Create a mark decoration, which influences the styling of the
       content in its range. Nested mark decorations will cause nested
       DOM elements to be created. Nesting order is determined by
       precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
       the higher-precedence decorations creating the inner DOM nodes.
       Such elements are split on line boundaries and on the boundaries
       of lower-precedence decorations.
       */
       static mark(spec) {
           return new MarkDecoration(spec);
       }
       /**
       Create a widget decoration, which displays a DOM element at the
       given position.
       */
       static widget(spec) {
           let side = spec.side || 0, block = !!spec.block;
           side += block ? (side > 0 ? 300000000 /* Side.BlockAfter */ : -400000000 /* Side.BlockBefore */) : (side > 0 ? 100000000 /* Side.InlineAfter */ : -100000000 /* Side.InlineBefore */);
           return new PointDecoration(spec, side, side, block, spec.widget || null, false);
       }
       /**
       Create a replace decoration which replaces the given range with
       a widget, or simply hides it.
       */
       static replace(spec) {
           let block = !!spec.block, startSide, endSide;
           if (spec.isBlockGap) {
               startSide = -500000000 /* Side.GapStart */;
               endSide = 400000000 /* Side.GapEnd */;
           }
           else {
               let { start, end } = getInclusive(spec, block);
               startSide = (start ? (block ? -300000000 /* Side.BlockIncStart */ : -1 /* Side.InlineIncStart */) : 500000000 /* Side.NonIncStart */) - 1;
               endSide = (end ? (block ? 200000000 /* Side.BlockIncEnd */ : 1 /* Side.InlineIncEnd */) : -600000000 /* Side.NonIncEnd */) + 1;
           }
           return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);
       }
       /**
       Create a line decoration, which can add DOM attributes to the
       line starting at the given position.
       */
       static line(spec) {
           return new LineDecoration(spec);
       }
       /**
       Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
       decorated range or ranges. If the ranges aren't already sorted,
       pass `true` for `sort` to make the library sort them for you.
       */
       static set(of, sort = false) {
           return RangeSet.of(of, sort);
       }
       /**
       @internal
       */
       hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }
   }
   /**
   The empty set of decorations.
   */
   Decoration.none = RangeSet.empty;
   class MarkDecoration extends Decoration {
       constructor(spec) {
           let { start, end } = getInclusive(spec);
           super(start ? -1 /* Side.InlineIncStart */ : 500000000 /* Side.NonIncStart */, end ? 1 /* Side.InlineIncEnd */ : -600000000 /* Side.NonIncEnd */, null, spec);
           this.tagName = spec.tagName || "span";
           this.class = spec.class || "";
           this.attrs = spec.attributes || null;
       }
       eq(other) {
           return this == other ||
               other instanceof MarkDecoration &&
                   this.tagName == other.tagName &&
                   this.class == other.class &&
                   attrsEq(this.attrs, other.attrs);
       }
       range(from, to = from) {
           if (from >= to)
               throw new RangeError("Mark decorations may not be empty");
           return super.range(from, to);
       }
   }
   MarkDecoration.prototype.point = false;
   class LineDecoration extends Decoration {
       constructor(spec) {
           super(-200000000 /* Side.Line */, -200000000 /* Side.Line */, null, spec);
       }
       eq(other) {
           return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);
       }
       range(from, to = from) {
           if (to != from)
               throw new RangeError("Line decoration ranges must be zero-length");
           return super.range(from, to);
       }
   }
   LineDecoration.prototype.mapMode = MapMode.TrackBefore;
   LineDecoration.prototype.point = true;
   class PointDecoration extends Decoration {
       constructor(spec, startSide, endSide, block, widget, isReplace) {
           super(startSide, endSide, widget, spec);
           this.block = block;
           this.isReplace = isReplace;
           this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;
       }
       // Only relevant when this.block == true
       get type() {
           return this.startSide < this.endSide ? BlockType.WidgetRange
               : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;
       }
       get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }
       eq(other) {
           return other instanceof PointDecoration &&
               widgetsEq(this.widget, other.widget) &&
               this.block == other.block &&
               this.startSide == other.startSide && this.endSide == other.endSide;
       }
       range(from, to = from) {
           if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))
               throw new RangeError("Invalid range for replacement decoration");
           if (!this.isReplace && to != from)
               throw new RangeError("Widget decorations can only have zero-length ranges");
           return super.range(from, to);
       }
   }
   PointDecoration.prototype.point = true;
   function getInclusive(spec, block = false) {
       let { inclusiveStart: start, inclusiveEnd: end } = spec;
       if (start == null)
           start = spec.inclusive;
       if (end == null)
           end = spec.inclusive;
       return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };
   }
   function widgetsEq(a, b) {
       return a == b || !!(a && b && a.compare(b));
   }
   function addRange(from, to, ranges, margin = 0) {
       let last = ranges.length - 1;
       if (last >= 0 && ranges[last] + margin >= from)
           ranges[last] = Math.max(ranges[last], to);
       else
           ranges.push(from, to);
   }

   class LineView extends ContentView {
       constructor() {
           super(...arguments);
           this.children = [];
           this.length = 0;
           this.prevAttrs = undefined;
           this.attrs = null;
           this.breakAfter = 0;
       }
       // Consumes source
       merge(from, to, source, hasStart, openStart, openEnd) {
           if (source) {
               if (!(source instanceof LineView))
                   return false;
               if (!this.dom)
                   source.transferDOM(this); // Reuse source.dom when appropriate
           }
           if (hasStart)
               this.setDeco(source ? source.attrs : null);
           mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);
           return true;
       }
       split(at) {
           let end = new LineView;
           end.breakAfter = this.breakAfter;
           if (this.length == 0)
               return end;
           let { i, off } = this.childPos(at);
           if (off) {
               end.append(this.children[i].split(off), 0);
               this.children[i].merge(off, this.children[i].length, null, false, 0, 0);
               i++;
           }
           for (let j = i; j < this.children.length; j++)
               end.append(this.children[j], 0);
           while (i > 0 && this.children[i - 1].length == 0)
               this.children[--i].destroy();
           this.children.length = i;
           this.markDirty();
           this.length = at;
           return end;
       }
       transferDOM(other) {
           if (!this.dom)
               return;
           this.markDirty();
           other.setDOM(this.dom);
           other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;
           this.prevAttrs = undefined;
           this.dom = null;
       }
       setDeco(attrs) {
           if (!attrsEq(this.attrs, attrs)) {
               if (this.dom) {
                   this.prevAttrs = this.attrs;
                   this.markDirty();
               }
               this.attrs = attrs;
           }
       }
       append(child, openStart) {
           joinInlineInto(this, child, openStart);
       }
       // Only called when building a line view in ContentBuilder
       addLineDeco(deco) {
           let attrs = deco.spec.attributes, cls = deco.spec.class;
           if (attrs)
               this.attrs = combineAttrs(attrs, this.attrs || {});
           if (cls)
               this.attrs = combineAttrs({ class: cls }, this.attrs || {});
       }
       domAtPos(pos) {
           return inlineDOMAtPos(this, pos);
       }
       reuseDOM(node) {
           if (node.nodeName == "DIV") {
               this.setDOM(node);
               this.dirty |= 4 /* Dirty.Attrs */ | 2 /* Dirty.Node */;
           }
       }
       sync(track) {
           var _a;
           if (!this.dom) {
               this.setDOM(document.createElement("div"));
               this.dom.className = "cm-line";
               this.prevAttrs = this.attrs ? null : undefined;
           }
           else if (this.dirty & 4 /* Dirty.Attrs */) {
               clearAttributes(this.dom);
               this.dom.className = "cm-line";
               this.prevAttrs = this.attrs ? null : undefined;
           }
           if (this.prevAttrs !== undefined) {
               updateAttrs(this.dom, this.prevAttrs, this.attrs);
               this.dom.classList.add("cm-line");
               this.prevAttrs = undefined;
           }
           super.sync(track);
           let last = this.dom.lastChild;
           while (last && ContentView.get(last) instanceof MarkView)
               last = last.lastChild;
           if (!last || !this.length ||
               last.nodeName != "BR" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&
                   (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {
               let hack = document.createElement("BR");
               hack.cmIgnore = true;
               this.dom.appendChild(hack);
           }
       }
       measureTextSize() {
           if (this.children.length == 0 || this.length > 20)
               return null;
           let totalWidth = 0;
           for (let child of this.children) {
               if (!(child instanceof TextView) || /[^ -~]/.test(child.text))
                   return null;
               let rects = clientRectsFor(child.dom);
               if (rects.length != 1)
                   return null;
               totalWidth += rects[0].width;
           }
           return !totalWidth ? null : {
               lineHeight: this.dom.getBoundingClientRect().height,
               charWidth: totalWidth / this.length
           };
       }
       coordsAt(pos, side) {
           return coordsInChildren(this, pos, side);
       }
       become(_other) { return false; }
       get type() { return BlockType.Text; }
       static find(docView, pos) {
           for (let i = 0, off = 0; i < docView.children.length; i++) {
               let block = docView.children[i], end = off + block.length;
               if (end >= pos) {
                   if (block instanceof LineView)
                       return block;
                   if (end > pos)
                       break;
               }
               off = end + block.breakAfter;
           }
           return null;
       }
   }
   class BlockWidgetView extends ContentView {
       constructor(widget, length, type) {
           super();
           this.widget = widget;
           this.length = length;
           this.type = type;
           this.breakAfter = 0;
           this.prevWidget = null;
       }
       merge(from, to, source, _takeDeco, openStart, openEnd) {
           if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||
               from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))
               return false;
           this.length = from + (source ? source.length : 0) + (this.length - to);
           return true;
       }
       domAtPos(pos) {
           return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);
       }
       split(at) {
           let len = this.length - at;
           this.length = at;
           let end = new BlockWidgetView(this.widget, len, this.type);
           end.breakAfter = this.breakAfter;
           return end;
       }
       get children() { return noChildren; }
       sync() {
           if (!this.dom || !this.widget.updateDOM(this.dom)) {
               if (this.dom && this.prevWidget)
                   this.prevWidget.destroy(this.dom);
               this.prevWidget = null;
               this.setDOM(this.widget.toDOM(this.editorView));
               this.dom.contentEditable = "false";
           }
       }
       get overrideDOMText() {
           return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;
       }
       domBoundsAround() { return null; }
       become(other) {
           if (other instanceof BlockWidgetView && other.type == this.type &&
               other.widget.constructor == this.widget.constructor) {
               if (!other.widget.eq(this.widget))
                   this.markDirty(true);
               if (this.dom && !this.prevWidget)
                   this.prevWidget = this.widget;
               this.widget = other.widget;
               this.length = other.length;
               this.breakAfter = other.breakAfter;
               return true;
           }
           return false;
       }
       ignoreMutation() { return true; }
       ignoreEvent(event) { return this.widget.ignoreEvent(event); }
       destroy() {
           super.destroy();
           if (this.dom)
               this.widget.destroy(this.dom);
       }
   }

   class ContentBuilder {
       constructor(doc, pos, end, disallowBlockEffectsFor) {
           this.doc = doc;
           this.pos = pos;
           this.end = end;
           this.disallowBlockEffectsFor = disallowBlockEffectsFor;
           this.content = [];
           this.curLine = null;
           this.breakAtStart = 0;
           this.pendingBuffer = 0 /* Buf.No */;
           // Set to false directly after a widget that covers the position after it
           this.atCursorPos = true;
           this.openStart = -1;
           this.openEnd = -1;
           this.text = "";
           this.textOff = 0;
           this.cursor = doc.iter();
           this.skip = pos;
       }
       posCovered() {
           if (this.content.length == 0)
               return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
           let last = this.content[this.content.length - 1];
           return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);
       }
       getLine() {
           if (!this.curLine) {
               this.content.push(this.curLine = new LineView);
               this.atCursorPos = true;
           }
           return this.curLine;
       }
       flushBuffer(active) {
           if (this.pendingBuffer) {
               this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);
               this.pendingBuffer = 0 /* Buf.No */;
           }
       }
       addBlockWidget(view) {
           this.flushBuffer([]);
           this.curLine = null;
           this.content.push(view);
       }
       finish(openEnd) {
           if (!openEnd)
               this.flushBuffer([]);
           else
               this.pendingBuffer = 0 /* Buf.No */;
           if (!this.posCovered())
               this.getLine();
       }
       buildText(length, active, openStart) {
           while (length > 0) {
               if (this.textOff == this.text.length) {
                   let { value, lineBreak, done } = this.cursor.next(this.skip);
                   this.skip = 0;
                   if (done)
                       throw new Error("Ran out of text content when drawing inline views");
                   if (lineBreak) {
                       if (!this.posCovered())
                           this.getLine();
                       if (this.content.length)
                           this.content[this.content.length - 1].breakAfter = 1;
                       else
                           this.breakAtStart = 1;
                       this.flushBuffer([]);
                       this.curLine = null;
                       length--;
                       continue;
                   }
                   else {
                       this.text = value;
                       this.textOff = 0;
                   }
               }
               let take = Math.min(this.text.length - this.textOff, length, 512 /* T.Chunk */);
               this.flushBuffer(active.slice(0, openStart));
               this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);
               this.atCursorPos = true;
               this.textOff += take;
               length -= take;
               openStart = 0;
           }
       }
       span(from, to, active, openStart) {
           this.buildText(to - from, active, openStart);
           this.pos = to;
           if (this.openStart < 0)
               this.openStart = openStart;
       }
       point(from, to, deco, active, openStart, index) {
           if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {
               if (deco.block)
                   throw new RangeError("Block decorations may not be specified via plugins");
               if (to > this.doc.lineAt(this.pos).to)
                   throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
           }
           let len = to - from;
           if (deco instanceof PointDecoration) {
               if (deco.block) {
                   let { type } = deco;
                   if (type == BlockType.WidgetAfter && !this.posCovered())
                       this.getLine();
                   this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget("div"), len, type));
               }
               else {
                   let view = WidgetView.create(deco.widget || new NullWidget("span"), len, deco.startSide);
                   let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length && (from < to || deco.startSide > 0);
                   let cursorAfter = !view.isEditable && (from < to || deco.startSide <= 0);
                   let line = this.getLine();
                   if (this.pendingBuffer == 2 /* Buf.IfCursor */ && !cursorBefore)
                       this.pendingBuffer = 0 /* Buf.No */;
                   this.flushBuffer(active);
                   if (cursorBefore) {
                       line.append(wrapMarks(new WidgetBufferView(1), active), openStart);
                       openStart = active.length + Math.max(0, openStart - active.length);
                   }
                   line.append(wrapMarks(view, active), openStart);
                   this.atCursorPos = cursorAfter;
                   this.pendingBuffer = !cursorAfter ? 0 /* Buf.No */ : from < to ? 1 /* Buf.Yes */ : 2 /* Buf.IfCursor */;
               }
           }
           else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration
               this.getLine().addLineDeco(deco);
           }
           if (len) {
               // Advance the iterator past the replaced content
               if (this.textOff + len <= this.text.length) {
                   this.textOff += len;
               }
               else {
                   this.skip += len - (this.text.length - this.textOff);
                   this.text = "";
                   this.textOff = 0;
               }
               this.pos = to;
           }
           if (this.openStart < 0)
               this.openStart = openStart;
       }
       static build(text, from, to, decorations, dynamicDecorationMap) {
           let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);
           builder.openEnd = RangeSet.spans(decorations, from, to, builder);
           if (builder.openStart < 0)
               builder.openStart = builder.openEnd;
           builder.finish(builder.openEnd);
           return builder;
       }
   }
   function wrapMarks(view, active) {
       for (let mark of active)
           view = new MarkView(mark, [view], view.length);
       return view;
   }
   class NullWidget extends WidgetType {
       constructor(tag) {
           super();
           this.tag = tag;
       }
       eq(other) { return other.tag == this.tag; }
       toDOM() { return document.createElement(this.tag); }
       updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }
   }

   const clickAddsSelectionRange = /*@__PURE__*/Facet.define();
   const dragMovesSelection$1 = /*@__PURE__*/Facet.define();
   const mouseSelectionStyle = /*@__PURE__*/Facet.define();
   const exceptionSink = /*@__PURE__*/Facet.define();
   const updateListener = /*@__PURE__*/Facet.define();
   const inputHandler$1 = /*@__PURE__*/Facet.define();
   const perLineTextDirection = /*@__PURE__*/Facet.define({
       combine: values => values.some(x => x)
   });
   class ScrollTarget {
       constructor(range, y = "nearest", x = "nearest", yMargin = 5, xMargin = 5) {
           this.range = range;
           this.y = y;
           this.x = x;
           this.yMargin = yMargin;
           this.xMargin = xMargin;
       }
       map(changes) {
           return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);
       }
   }
   const scrollIntoView$1 = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });
   /**
   Log or report an unhandled exception in client code. Should
   probably only be used by extension code that allows client code to
   provide functions, and calls those functions in a context where an
   exception can't be propagated to calling code in a reasonable way
   (for example when in an event handler).

   Either calls a handler registered with
   [`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),
   `window.onerror`, if defined, or `console.error` (in which case
   it'll pass `context`, when given, as first argument).
   */
   function logException(state, exception, context) {
       let handler = state.facet(exceptionSink);
       if (handler.length)
           handler[0](exception);
       else if (window.onerror)
           window.onerror(String(exception), context, undefined, undefined, exception);
       else if (context)
           console.error(context + ":", exception);
       else
           console.error(exception);
   }
   const editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });
   let nextPluginID = 0;
   const viewPlugin = /*@__PURE__*/Facet.define();
   /**
   View plugins associate stateful values with a view. They can
   influence the way the content is drawn, and are notified of things
   that happen in the view.
   */
   class ViewPlugin {
       constructor(
       /**
       @internal
       */
       id, 
       /**
       @internal
       */
       create, 
       /**
       @internal
       */
       domEventHandlers, buildExtensions) {
           this.id = id;
           this.create = create;
           this.domEventHandlers = domEventHandlers;
           this.extension = buildExtensions(this);
       }
       /**
       Define a plugin from a constructor function that creates the
       plugin's value, given an editor view.
       */
       static define(create, spec) {
           const { eventHandlers, provide, decorations: deco } = spec || {};
           return new ViewPlugin(nextPluginID++, create, eventHandlers, plugin => {
               let ext = [viewPlugin.of(plugin)];
               if (deco)
                   ext.push(decorations.of(view => {
                       let pluginInst = view.plugin(plugin);
                       return pluginInst ? deco(pluginInst) : Decoration.none;
                   }));
               if (provide)
                   ext.push(provide(plugin));
               return ext;
           });
       }
       /**
       Create a plugin for a class whose constructor takes a single
       editor view as argument.
       */
       static fromClass(cls, spec) {
           return ViewPlugin.define(view => new cls(view), spec);
       }
   }
   class PluginInstance {
       constructor(spec) {
           this.spec = spec;
           // When starting an update, all plugins have this field set to the
           // update object, indicating they need to be updated. When finished
           // updating, it is set to `false`. Retrieving a plugin that needs to
           // be updated with `view.plugin` forces an eager update.
           this.mustUpdate = null;
           // This is null when the plugin is initially created, but
           // initialized on the first update.
           this.value = null;
       }
       update(view) {
           if (!this.value) {
               if (this.spec) {
                   try {
                       this.value = this.spec.create(view);
                   }
                   catch (e) {
                       logException(view.state, e, "CodeMirror plugin crashed");
                       this.deactivate();
                   }
               }
           }
           else if (this.mustUpdate) {
               let update = this.mustUpdate;
               this.mustUpdate = null;
               if (this.value.update) {
                   try {
                       this.value.update(update);
                   }
                   catch (e) {
                       logException(update.state, e, "CodeMirror plugin crashed");
                       if (this.value.destroy)
                           try {
                               this.value.destroy();
                           }
                           catch (_) { }
                       this.deactivate();
                   }
               }
           }
           return this;
       }
       destroy(view) {
           var _a;
           if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {
               try {
                   this.value.destroy();
               }
               catch (e) {
                   logException(view.state, e, "CodeMirror plugin crashed");
               }
           }
       }
       deactivate() {
           this.spec = this.value = null;
       }
   }
   const editorAttributes = /*@__PURE__*/Facet.define();
   const contentAttributes = /*@__PURE__*/Facet.define();
   // Provide decorations
   const decorations = /*@__PURE__*/Facet.define();
   const atomicRanges = /*@__PURE__*/Facet.define();
   const scrollMargins = /*@__PURE__*/Facet.define();
   const styleModule = /*@__PURE__*/Facet.define();
   class ChangedRange {
       constructor(fromA, toA, fromB, toB) {
           this.fromA = fromA;
           this.toA = toA;
           this.fromB = fromB;
           this.toB = toB;
       }
       join(other) {
           return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));
       }
       addToSet(set) {
           let i = set.length, me = this;
           for (; i > 0; i--) {
               let range = set[i - 1];
               if (range.fromA > me.toA)
                   continue;
               if (range.toA < me.fromA)
                   break;
               me = me.join(range);
               set.splice(i - 1, 1);
           }
           set.splice(i, 0, me);
           return set;
       }
       static extendWithRanges(diff, ranges) {
           if (ranges.length == 0)
               return diff;
           let result = [];
           for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {
               let next = dI == diff.length ? null : diff[dI], off = posA - posB;
               let end = next ? next.fromB : 1e9;
               while (rI < ranges.length && ranges[rI] < end) {
                   let from = ranges[rI], to = ranges[rI + 1];
                   let fromB = Math.max(posB, from), toB = Math.min(end, to);
                   if (fromB <= toB)
                       new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);
                   if (to > end)
                       break;
                   else
                       rI += 2;
               }
               if (!next)
                   return result;
               new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);
               posA = next.toA;
               posB = next.toB;
           }
       }
   }
   /**
   View [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this
   class, which describe what happened, whenever the view is updated.
   */
   class ViewUpdate {
       constructor(
       /**
       The editor view that the update is associated with.
       */
       view, 
       /**
       The new editor state.
       */
       state, 
       /**
       The transactions involved in the update. May be empty.
       */
       transactions) {
           this.view = view;
           this.state = state;
           this.transactions = transactions;
           /**
           @internal
           */
           this.flags = 0;
           this.startState = view.state;
           this.changes = ChangeSet.empty(this.startState.doc.length);
           for (let tr of transactions)
               this.changes = this.changes.compose(tr.changes);
           let changedRanges = [];
           this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));
           this.changedRanges = changedRanges;
           let focus = view.hasFocus;
           if (focus != view.inputState.notifiedFocused) {
               view.inputState.notifiedFocused = focus;
               this.flags |= 1 /* UpdateFlag.Focus */;
           }
       }
       /**
       @internal
       */
       static create(view, state, transactions) {
           return new ViewUpdate(view, state, transactions);
       }
       /**
       Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
       [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
       update.
       */
       get viewportChanged() {
           return (this.flags & 4 /* UpdateFlag.Viewport */) > 0;
       }
       /**
       Indicates whether the height of a block element in the editor
       changed in this update.
       */
       get heightChanged() {
           return (this.flags & 2 /* UpdateFlag.Height */) > 0;
       }
       /**
       Returns true when the document was modified or the size of the
       editor, or elements within the editor, changed.
       */
       get geometryChanged() {
           return this.docChanged || (this.flags & (8 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */)) > 0;
       }
       /**
       True when this update indicates a focus change.
       */
       get focusChanged() {
           return (this.flags & 1 /* UpdateFlag.Focus */) > 0;
       }
       /**
       Whether the document changed in this update.
       */
       get docChanged() {
           return !this.changes.empty;
       }
       /**
       Whether the selection was explicitly set in this update.
       */
       get selectionSet() {
           return this.transactions.some(tr => tr.selection);
       }
       /**
       @internal
       */
       get empty() { return this.flags == 0 && this.transactions.length == 0; }
   }

   /**
   Used to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
   */
   var Direction = /*@__PURE__*/(function (Direction) {
       // (These are chosen to match the base levels, in bidi algorithm
       // terms, of spans in that direction.)
       /**
       Left-to-right.
       */
       Direction[Direction["LTR"] = 0] = "LTR";
       /**
       Right-to-left.
       */
       Direction[Direction["RTL"] = 1] = "RTL";
   return Direction})(Direction || (Direction = {}));
   const LTR = Direction.LTR, RTL = Direction.RTL;
   // Decode a string with each type encoded as log2(type)
   function dec(str) {
       let result = [];
       for (let i = 0; i < str.length; i++)
           result.push(1 << +str[i]);
       return result;
   }
   // Character types for codepoints 0 to 0xf8
   const LowTypes = /*@__PURE__*/dec("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008");
   // Character types for codepoints 0x600 to 0x6f9
   const ArabicTypes = /*@__PURE__*/dec("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333");
   const Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];
   // There's a lot more in
   // https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,
   // which are left out to keep code size down.
   for (let p of ["()", "[]", "{}"]) {
       let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);
       Brackets[l] = r;
       Brackets[r] = -l;
   }
   function charType(ch) {
       return ch <= 0xf7 ? LowTypes[ch] :
           0x590 <= ch && ch <= 0x5f4 ? 2 /* T.R */ :
               0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :
                   0x6ee <= ch && ch <= 0x8ac ? 4 /* T.AL */ :
                       0x2000 <= ch && ch <= 0x200b ? 256 /* T.NI */ :
                           0xfb50 <= ch && ch <= 0xfdff ? 4 /* T.AL */ :
                               ch == 0x200c ? 256 /* T.NI */ : 1 /* T.L */;
   }
   const BidiRE = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
   /**
   Represents a contiguous range of text that has a single direction
   (as in left-to-right or right-to-left).
   */
   class BidiSpan {
       /**
       @internal
       */
       constructor(
       /**
       The start of the span (relative to the start of the line).
       */
       from, 
       /**
       The end of the span.
       */
       to, 
       /**
       The ["bidi
       level"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)
       of the span (in this context, 0 means
       left-to-right, 1 means right-to-left, 2 means left-to-right
       number inside right-to-left text).
       */
       level) {
           this.from = from;
           this.to = to;
           this.level = level;
       }
       /**
       The direction of this span.
       */
       get dir() { return this.level % 2 ? RTL : LTR; }
       /**
       @internal
       */
       side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }
       /**
       @internal
       */
       static find(order, index, level, assoc) {
           let maybe = -1;
           for (let i = 0; i < order.length; i++) {
               let span = order[i];
               if (span.from <= index && span.to >= index) {
                   if (span.level == level)
                       return i;
                   // When multiple spans match, if assoc != 0, take the one that
                   // covers that side, otherwise take the one with the minimum
                   // level.
                   if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))
                       maybe = i;
               }
           }
           if (maybe < 0)
               throw new RangeError("Index out of range");
           return maybe;
       }
   }
   // Reused array of character types
   const types = [];
   function computeOrder(line, direction) {
       let len = line.length, outerType = direction == LTR ? 1 /* T.L */ : 2 /* T.R */, oppositeType = direction == LTR ? 2 /* T.R */ : 1 /* T.L */;
       if (!line || outerType == 1 /* T.L */ && !BidiRE.test(line))
           return trivialOrder(len);
       // W1. Examine each non-spacing mark (NSM) in the level run, and
       // change the type of the NSM to the type of the previous
       // character. If the NSM is at the start of the level run, it will
       // get the type of sor.
       // W2. Search backwards from each instance of a European number
       // until the first strong type (R, L, AL, or sor) is found. If an
       // AL is found, change the type of the European number to Arabic
       // number.
       // W3. Change all ALs to R.
       // (Left after this: L, R, EN, AN, ET, CS, NI)
       for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {
           let type = charType(line.charCodeAt(i));
           if (type == 512 /* T.NSM */)
               type = prev;
           else if (type == 8 /* T.EN */ && prevStrong == 4 /* T.AL */)
               type = 16 /* T.AN */;
           types[i] = type == 4 /* T.AL */ ? 2 /* T.R */ : type;
           if (type & 7 /* T.Strong */)
               prevStrong = type;
           prev = type;
       }
       // W5. A sequence of European terminators adjacent to European
       // numbers changes to all European numbers.
       // W6. Otherwise, separators and terminators change to Other
       // Neutral.
       // W7. Search backwards from each instance of a European number
       // until the first strong type (R, L, or sor) is found. If an L is
       // found, then change the type of the European number to L.
       // (Left after this: L, R, EN+AN, NI)
       for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {
           let type = types[i];
           if (type == 128 /* T.CS */) {
               if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* T.Num */))
                   type = types[i] = prev;
               else
                   types[i] = 256 /* T.NI */;
           }
           else if (type == 64 /* T.ET */) {
               let end = i + 1;
               while (end < len && types[end] == 64 /* T.ET */)
                   end++;
               let replace = (i && prev == 8 /* T.EN */) || (end < len && types[end] == 8 /* T.EN */) ? (prevStrong == 1 /* T.L */ ? 1 /* T.L */ : 8 /* T.EN */) : 256 /* T.NI */;
               for (let j = i; j < end; j++)
                   types[j] = replace;
               i = end - 1;
           }
           else if (type == 8 /* T.EN */ && prevStrong == 1 /* T.L */) {
               types[i] = 1 /* T.L */;
           }
           prev = type;
           if (type & 7 /* T.Strong */)
               prevStrong = type;
       }
       // N0. Process bracket pairs in an isolating run sequence
       // sequentially in the logical order of the text positions of the
       // opening paired brackets using the logic given below. Within this
       // scope, bidirectional types EN and AN are treated as R.
       for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {
           // Keeps [startIndex, type, strongSeen] triples for each open
           // bracket on BracketStack.
           if (br = Brackets[ch = line.charCodeAt(i)]) {
               if (br < 0) { // Closing bracket
                   for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {
                       if (BracketStack[sJ + 1] == -br) {
                           let flags = BracketStack[sJ + 2];
                           let type = (flags & 2 /* Bracketed.EmbedInside */) ? outerType :
                               !(flags & 4 /* Bracketed.OppositeInside */) ? 0 :
                                   (flags & 1 /* Bracketed.OppositeBefore */) ? oppositeType : outerType;
                           if (type)
                               types[i] = types[BracketStack[sJ]] = type;
                           sI = sJ;
                           break;
                       }
                   }
               }
               else if (BracketStack.length == 189 /* Bracketed.MaxDepth */) {
                   break;
               }
               else {
                   BracketStack[sI++] = i;
                   BracketStack[sI++] = ch;
                   BracketStack[sI++] = context;
               }
           }
           else if ((type = types[i]) == 2 /* T.R */ || type == 1 /* T.L */) {
               let embed = type == outerType;
               context = embed ? 0 : 1 /* Bracketed.OppositeBefore */;
               for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {
                   let cur = BracketStack[sJ + 2];
                   if (cur & 2 /* Bracketed.EmbedInside */)
                       break;
                   if (embed) {
                       BracketStack[sJ + 2] |= 2 /* Bracketed.EmbedInside */;
                   }
                   else {
                       if (cur & 4 /* Bracketed.OppositeInside */)
                           break;
                       BracketStack[sJ + 2] |= 4 /* Bracketed.OppositeInside */;
                   }
               }
           }
       }
       // N1. A sequence of neutrals takes the direction of the
       // surrounding strong text if the text on both sides has the same
       // direction. European and Arabic numbers act as if they were R in
       // terms of their influence on neutrals. Start-of-level-run (sor)
       // and end-of-level-run (eor) are used at level run boundaries.
       // N2. Any remaining neutrals take the embedding direction.
       // (Left after this: L, R, EN+AN)
       for (let i = 0; i < len; i++) {
           if (types[i] == 256 /* T.NI */) {
               let end = i + 1;
               while (end < len && types[end] == 256 /* T.NI */)
                   end++;
               let beforeL = (i ? types[i - 1] : outerType) == 1 /* T.L */;
               let afterL = (end < len ? types[end] : outerType) == 1 /* T.L */;
               let replace = beforeL == afterL ? (beforeL ? 1 /* T.L */ : 2 /* T.R */) : outerType;
               for (let j = i; j < end; j++)
                   types[j] = replace;
               i = end - 1;
           }
       }
       // Here we depart from the documented algorithm, in order to avoid
       // building up an actual levels array. Since there are only three
       // levels (0, 1, 2) in an implementation that doesn't take
       // explicit embedding into account, we can build up the order on
       // the fly, without following the level-based algorithm.
       let order = [];
       if (outerType == 1 /* T.L */) {
           for (let i = 0; i < len;) {
               let start = i, rtl = types[i++] != 1 /* T.L */;
               while (i < len && rtl == (types[i] != 1 /* T.L */))
                   i++;
               if (rtl) {
                   for (let j = i; j > start;) {
                       let end = j, l = types[--j] != 2 /* T.R */;
                       while (j > start && l == (types[j - 1] != 2 /* T.R */))
                           j--;
                       order.push(new BidiSpan(j, end, l ? 2 : 1));
                   }
               }
               else {
                   order.push(new BidiSpan(start, i, 0));
               }
           }
       }
       else {
           for (let i = 0; i < len;) {
               let start = i, rtl = types[i++] == 2 /* T.R */;
               while (i < len && rtl == (types[i] == 2 /* T.R */))
                   i++;
               order.push(new BidiSpan(start, i, rtl ? 1 : 2));
           }
       }
       return order;
   }
   function trivialOrder(length) {
       return [new BidiSpan(0, length, 0)];
   }
   let movedOver = "";
   function moveVisually(line, order, dir, start, forward) {
       var _a;
       let startIndex = start.head - line.from, spanI = -1;
       if (startIndex == 0) {
           if (!forward || !line.length)
               return null;
           if (order[0].level != dir) {
               startIndex = order[0].side(false, dir);
               spanI = 0;
           }
       }
       else if (startIndex == line.length) {
           if (forward)
               return null;
           let last = order[order.length - 1];
           if (last.level != dir) {
               startIndex = last.side(true, dir);
               spanI = order.length - 1;
           }
       }
       if (spanI < 0)
           spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);
       let span = order[spanI];
       // End of span. (But not end of line--that was checked for above.)
       if (startIndex == span.side(forward, dir)) {
           span = order[spanI += forward ? 1 : -1];
           startIndex = span.side(!forward, dir);
       }
       let indexForward = forward == (span.dir == dir);
       let nextIndex = findClusterBreak(line.text, startIndex, indexForward);
       movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));
       if (nextIndex != span.side(forward, dir))
           return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);
       let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];
       if (!nextSpan && span.level != dir)
           return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);
       if (nextSpan && nextSpan.level < span.level)
           return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);
       return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);
   }

   const LineBreakPlaceholder = "\uffff";
   class DOMReader {
       constructor(points, state) {
           this.points = points;
           this.text = "";
           this.lineSeparator = state.facet(EditorState.lineSeparator);
       }
       append(text) {
           this.text += text;
       }
       lineBreak() {
           this.text += LineBreakPlaceholder;
       }
       readRange(start, end) {
           if (!start)
               return this;
           let parent = start.parentNode;
           for (let cur = start;;) {
               this.findPointBefore(parent, cur);
               this.readNode(cur);
               let next = cur.nextSibling;
               if (next == end)
                   break;
               let view = ContentView.get(cur), nextView = ContentView.get(next);
               if (view && nextView ? view.breakAfter :
                   (view ? view.breakAfter : isBlockElement(cur)) ||
                       (isBlockElement(next) && (cur.nodeName != "BR" || cur.cmIgnore)))
                   this.lineBreak();
               cur = next;
           }
           this.findPointBefore(parent, end);
           return this;
       }
       readTextNode(node) {
           let text = node.nodeValue;
           for (let point of this.points)
               if (point.node == node)
                   point.pos = this.text.length + Math.min(point.offset, text.length);
           for (let off = 0, re = this.lineSeparator ? null : /\r\n?|\n/g;;) {
               let nextBreak = -1, breakSize = 1, m;
               if (this.lineSeparator) {
                   nextBreak = text.indexOf(this.lineSeparator, off);
                   breakSize = this.lineSeparator.length;
               }
               else if (m = re.exec(text)) {
                   nextBreak = m.index;
                   breakSize = m[0].length;
               }
               this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));
               if (nextBreak < 0)
                   break;
               this.lineBreak();
               if (breakSize > 1)
                   for (let point of this.points)
                       if (point.node == node && point.pos > this.text.length)
                           point.pos -= breakSize - 1;
               off = nextBreak + breakSize;
           }
       }
       readNode(node) {
           if (node.cmIgnore)
               return;
           let view = ContentView.get(node);
           let fromView = view && view.overrideDOMText;
           if (fromView != null) {
               this.findPointInside(node, fromView.length);
               for (let i = fromView.iter(); !i.next().done;) {
                   if (i.lineBreak)
                       this.lineBreak();
                   else
                       this.append(i.value);
               }
           }
           else if (node.nodeType == 3) {
               this.readTextNode(node);
           }
           else if (node.nodeName == "BR") {
               if (node.nextSibling)
                   this.lineBreak();
           }
           else if (node.nodeType == 1) {
               this.readRange(node.firstChild, null);
           }
       }
       findPointBefore(node, next) {
           for (let point of this.points)
               if (point.node == node && node.childNodes[point.offset] == next)
                   point.pos = this.text.length;
       }
       findPointInside(node, maxLen) {
           for (let point of this.points)
               if (node.nodeType == 3 ? point.node == node : node.contains(point.node))
                   point.pos = this.text.length + Math.min(maxLen, point.offset);
       }
   }
   function isBlockElement(node) {
       return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(node.nodeName);
   }
   class DOMPoint {
       constructor(node, offset) {
           this.node = node;
           this.offset = offset;
           this.pos = -1;
       }
   }

   class DocView extends ContentView {
       constructor(view) {
           super();
           this.view = view;
           this.compositionDeco = Decoration.none;
           this.decorations = [];
           this.dynamicDecorationMap = [];
           // Track a minimum width for the editor. When measuring sizes in
           // measureVisibleLineHeights, this is updated to point at the width
           // of a given element and its extent in the document. When a change
           // happens in that range, these are reset. That way, once we've seen
           // a line/element of a given length, we keep the editor wide enough
           // to fit at least that element, until it is changed, at which point
           // we forget it again.
           this.minWidth = 0;
           this.minWidthFrom = 0;
           this.minWidthTo = 0;
           // Track whether the DOM selection was set in a lossy way, so that
           // we don't mess it up when reading it back it
           this.impreciseAnchor = null;
           this.impreciseHead = null;
           this.forceSelection = false;
           // Used by the resize observer to ignore resizes that we caused
           // ourselves
           this.lastUpdate = Date.now();
           this.setDOM(view.contentDOM);
           this.children = [new LineView];
           this.children[0].setParent(this);
           this.updateDeco();
           this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);
       }
       get editorView() { return this.view; }
       get length() { return this.view.state.doc.length; }
       // Update the document view to a given state. scrollIntoView can be
       // used as a hint to compute a new viewport that includes that
       // position, if we know the editor is going to scroll that position
       // into view.
       update(update) {
           let changedRanges = update.changedRanges;
           if (this.minWidth > 0 && changedRanges.length) {
               if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {
                   this.minWidth = this.minWidthFrom = this.minWidthTo = 0;
               }
               else {
                   this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);
                   this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);
               }
           }
           if (this.view.inputState.composing < 0)
               this.compositionDeco = Decoration.none;
           else if (update.transactions.length || this.dirty)
               this.compositionDeco = computeCompositionDeco(this.view, update.changes);
           // When the DOM nodes around the selection are moved to another
           // parent, Chrome sometimes reports a different selection through
           // getSelection than the one that it actually shows to the user.
           // This forces a selection update when lines are joined to work
           // around that. Issue #54
           if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&
               update.state.doc.lines != update.startState.doc.lines)
               this.forceSelection = true;
           let prevDeco = this.decorations, deco = this.updateDeco();
           let decoDiff = findChangedDeco(prevDeco, deco, update.changes);
           changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);
           if (this.dirty == 0 /* Dirty.Not */ && changedRanges.length == 0) {
               return false;
           }
           else {
               this.updateInner(changedRanges, update.startState.doc.length);
               if (update.transactions.length)
                   this.lastUpdate = Date.now();
               return true;
           }
       }
       // Used by update and the constructor do perform the actual DOM
       // update
       updateInner(changes, oldLength) {
           this.view.viewState.mustMeasureContent = true;
           this.updateChildren(changes, oldLength);
           let { observer } = this.view;
           observer.ignore(() => {
               // Lock the height during redrawing, since Chrome sometimes
               // messes with the scroll position during DOM mutation (though
               // no relayout is triggered and I cannot imagine how it can
               // recompute the scroll position without a layout)
               this.dom.style.height = this.view.viewState.contentHeight + "px";
               this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
               // Chrome will sometimes, when DOM mutations occur directly
               // around the selection, get confused and report a different
               // selection from the one it displays (issue #218). This tries
               // to detect that situation.
               let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;
               this.sync(track);
               this.dirty = 0 /* Dirty.Not */;
               if (track && (track.written || observer.selectionRange.focusNode != track.node))
                   this.forceSelection = true;
               this.dom.style.height = "";
           });
           let gaps = [];
           if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
               for (let child of this.children)
                   if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)
                       gaps.push(child.dom);
           observer.updateGaps(gaps);
       }
       updateChildren(changes, oldLength) {
           let cursor = this.childCursor(oldLength);
           for (let i = changes.length - 1;; i--) {
               let next = i >= 0 ? changes[i] : null;
               if (!next)
                   break;
               let { fromA, toA, fromB, toB } = next;
               let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap);
               let { i: toI, off: toOff } = cursor.findPos(toA, 1);
               let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);
               replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);
           }
       }
       // Sync the DOM selection to this.state.selection
       updateSelection(mustRead = false, fromPointer = false) {
           if (mustRead || !this.view.observer.selectionRange.focusNode)
               this.view.observer.readSelectionRange();
           if (!(fromPointer || this.mayControlSelection()))
               return;
           let force = this.forceSelection;
           this.forceSelection = false;
           let main = this.view.state.selection.main;
           // FIXME need to handle the case where the selection falls inside a block range
           let anchor = this.domAtPos(main.anchor);
           let head = main.empty ? anchor : this.domAtPos(main.head);
           // Always reset on Firefox when next to an uneditable node to
           // avoid invisible cursor bugs (#111)
           if (browser.gecko && main.empty && betweenUneditable(anchor)) {
               let dummy = document.createTextNode("");
               this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));
               anchor = head = new DOMPos(dummy, 0);
               force = true;
           }
           let domSel = this.view.observer.selectionRange;
           // If the selection is already here, or in an equivalent position, don't touch it
           if (force || !domSel.focusNode ||
               !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||
               !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {
               this.view.observer.ignore(() => {
                   // Chrome Android will hide the virtual keyboard when tapping
                   // inside an uneditable node, and not bring it back when we
                   // move the cursor to its proper position. This tries to
                   // restore the keyboard by cycling focus.
                   if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&
                       inUneditable(domSel.focusNode, this.dom)) {
                       this.dom.blur();
                       this.dom.focus({ preventScroll: true });
                   }
                   let rawSel = getSelection(this.view.root);
                   if (!rawSel) ;
                   else if (main.empty) {
                       // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076
                       if (browser.gecko) {
                           let nextTo = nextToUneditable(anchor.node, anchor.offset);
                           if (nextTo && nextTo != (1 /* NextTo.Before */ | 2 /* NextTo.After */)) {
                               let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* NextTo.Before */ ? 1 : -1);
                               if (text)
                                   anchor = new DOMPos(text, nextTo == 1 /* NextTo.Before */ ? 0 : text.nodeValue.length);
                           }
                       }
                       rawSel.collapse(anchor.node, anchor.offset);
                       if (main.bidiLevel != null && domSel.cursorBidiLevel != null)
                           domSel.cursorBidiLevel = main.bidiLevel;
                   }
                   else if (rawSel.extend) {
                       // Selection.extend can be used to create an 'inverted' selection
                       // (one where the focus is before the anchor), but not all
                       // browsers support it yet.
                       rawSel.collapse(anchor.node, anchor.offset);
                       // Safari will ignore the call above when the editor is
                       // hidden, and then raise an error on the call to extend
                       // (#940).
                       try {
                           rawSel.extend(head.node, head.offset);
                       }
                       catch (_) { }
                   }
                   else {
                       // Primitive (IE) way
                       let range = document.createRange();
                       if (main.anchor > main.head)
                           [anchor, head] = [head, anchor];
                       range.setEnd(head.node, head.offset);
                       range.setStart(anchor.node, anchor.offset);
                       rawSel.removeAllRanges();
                       rawSel.addRange(range);
                   }
               });
               this.view.observer.setSelectionRange(anchor, head);
           }
           this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);
           this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);
       }
       enforceCursorAssoc() {
           if (this.compositionDeco.size)
               return;
           let cursor = this.view.state.selection.main;
           let sel = getSelection(this.view.root);
           if (!sel || !cursor.empty || !cursor.assoc || !sel.modify)
               return;
           let line = LineView.find(this, cursor.head);
           if (!line)
               return;
           let lineStart = line.posAtStart;
           if (cursor.head == lineStart || cursor.head == lineStart + line.length)
               return;
           let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);
           if (!before || !after || before.bottom > after.top)
               return;
           let dom = this.domAtPos(cursor.head + cursor.assoc);
           sel.collapse(dom.node, dom.offset);
           sel.modify("move", cursor.assoc < 0 ? "forward" : "backward", "lineboundary");
       }
       mayControlSelection() {
           let active = this.view.root.activeElement;
           return active == this.dom ||
               hasSelection(this.dom, this.view.observer.selectionRange) && !(active && this.dom.contains(active));
       }
       nearest(dom) {
           for (let cur = dom; cur;) {
               let domView = ContentView.get(cur);
               if (domView && domView.rootView == this)
                   return domView;
               cur = cur.parentNode;
           }
           return null;
       }
       posFromDOM(node, offset) {
           let view = this.nearest(node);
           if (!view)
               throw new RangeError("Trying to find position for a DOM position outside of the document");
           return view.localPosFromDOM(node, offset) + view.posAtStart;
       }
       domAtPos(pos) {
           let { i, off } = this.childCursor().findPos(pos, -1);
           for (; i < this.children.length - 1;) {
               let child = this.children[i];
               if (off < child.length || child instanceof LineView)
                   break;
               i++;
               off = 0;
           }
           return this.children[i].domAtPos(off);
       }
       coordsAt(pos, side) {
           for (let off = this.length, i = this.children.length - 1;; i--) {
               let child = this.children[i], start = off - child.breakAfter - child.length;
               if (pos > start ||
                   (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&
                       (!i || side == 2 || this.children[i - 1].breakAfter ||
                           (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))
                   return child.coordsAt(pos - start, side);
               off = start;
           }
       }
       measureVisibleLineHeights(viewport) {
           let result = [], { from, to } = viewport;
           let contentWidth = this.view.contentDOM.clientWidth;
           let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;
           let widest = -1, ltr = this.view.textDirection == Direction.LTR;
           for (let pos = 0, i = 0; i < this.children.length; i++) {
               let child = this.children[i], end = pos + child.length;
               if (end > to)
                   break;
               if (pos >= from) {
                   let childRect = child.dom.getBoundingClientRect();
                   result.push(childRect.height);
                   if (isWider) {
                       let last = child.dom.lastChild;
                       let rects = last ? clientRectsFor(last) : [];
                       if (rects.length) {
                           let rect = rects[rects.length - 1];
                           let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;
                           if (width > widest) {
                               widest = width;
                               this.minWidth = contentWidth;
                               this.minWidthFrom = pos;
                               this.minWidthTo = end;
                           }
                       }
                   }
               }
               pos = end + child.breakAfter;
           }
           return result;
       }
       textDirectionAt(pos) {
           let { i } = this.childPos(pos, 1);
           return getComputedStyle(this.children[i].dom).direction == "rtl" ? Direction.RTL : Direction.LTR;
       }
       measureTextSize() {
           for (let child of this.children) {
               if (child instanceof LineView) {
                   let measure = child.measureTextSize();
                   if (measure)
                       return measure;
               }
           }
           // If no workable line exists, force a layout of a measurable element
           let dummy = document.createElement("div"), lineHeight, charWidth;
           dummy.className = "cm-line";
           dummy.style.width = "99999px";
           dummy.textContent = "abc def ghi jkl mno pqr stu";
           this.view.observer.ignore(() => {
               this.dom.appendChild(dummy);
               let rect = clientRectsFor(dummy.firstChild)[0];
               lineHeight = dummy.getBoundingClientRect().height;
               charWidth = rect ? rect.width / 27 : 7;
               dummy.remove();
           });
           return { lineHeight, charWidth };
       }
       childCursor(pos = this.length) {
           // Move back to start of last element when possible, so that
           // `ChildCursor.findPos` doesn't have to deal with the edge case
           // of being after the last element.
           let i = this.children.length;
           if (i)
               pos -= this.children[--i].length;
           return new ChildCursor(this.children, pos, i);
       }
       computeBlockGapDeco() {
           let deco = [], vs = this.view.viewState;
           for (let pos = 0, i = 0;; i++) {
               let next = i == vs.viewports.length ? null : vs.viewports[i];
               let end = next ? next.from - 1 : this.length;
               if (end > pos) {
                   let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;
                   deco.push(Decoration.replace({
                       widget: new BlockGapWidget(height),
                       block: true,
                       inclusive: true,
                       isBlockGap: true,
                   }).range(pos, end));
               }
               if (!next)
                   break;
               pos = next.to + 1;
           }
           return Decoration.set(deco);
       }
       updateDeco() {
           let allDeco = this.view.state.facet(decorations).map((d, i) => {
               let dynamic = this.dynamicDecorationMap[i] = typeof d == "function";
               return dynamic ? d(this.view) : d;
           });
           for (let i = allDeco.length; i < allDeco.length + 3; i++)
               this.dynamicDecorationMap[i] = false;
           return this.decorations = [
               ...allDeco,
               this.compositionDeco,
               this.computeBlockGapDeco(),
               this.view.viewState.lineGapDeco
           ];
       }
       scrollIntoView(target) {
           let { range } = target;
           let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;
           if (!rect)
               return;
           if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))
               rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),
                   right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };
           let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;
           for (let margins of this.view.state.facet(scrollMargins).map(f => f(this.view)))
               if (margins) {
                   let { left, right, top, bottom } = margins;
                   if (left != null)
                       mLeft = Math.max(mLeft, left);
                   if (right != null)
                       mRight = Math.max(mRight, right);
                   if (top != null)
                       mTop = Math.max(mTop, top);
                   if (bottom != null)
                       mBottom = Math.max(mBottom, bottom);
               }
           let targetRect = {
               left: rect.left - mLeft, top: rect.top - mTop,
               right: rect.right + mRight, bottom: rect.bottom + mBottom
           };
           scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);
       }
   }
   function betweenUneditable(pos) {
       return pos.node.nodeType == 1 && pos.node.firstChild &&
           (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == "false") &&
           (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == "false");
   }
   class BlockGapWidget extends WidgetType {
       constructor(height) {
           super();
           this.height = height;
       }
       toDOM() {
           let elt = document.createElement("div");
           this.updateDOM(elt);
           return elt;
       }
       eq(other) { return other.height == this.height; }
       updateDOM(elt) {
           elt.style.height = this.height + "px";
           return true;
       }
       get estimatedHeight() { return this.height; }
   }
   function compositionSurroundingNode(view) {
       let sel = view.observer.selectionRange;
       let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);
       if (!textNode)
           return null;
       let cView = view.docView.nearest(textNode);
       if (!cView)
           return null;
       if (cView instanceof LineView) {
           let topNode = textNode;
           while (topNode.parentNode != cView.dom)
               topNode = topNode.parentNode;
           let prev = topNode.previousSibling;
           while (prev && !ContentView.get(prev))
               prev = prev.previousSibling;
           let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;
           return { from: pos, to: pos, node: topNode, text: textNode };
       }
       else {
           for (;;) {
               let { parent } = cView;
               if (!parent)
                   return null;
               if (parent instanceof LineView)
                   break;
               cView = parent;
           }
           let from = cView.posAtStart;
           return { from, to: from + cView.length, node: cView.dom, text: textNode };
       }
   }
   function computeCompositionDeco(view, changes) {
       let surrounding = compositionSurroundingNode(view);
       if (!surrounding)
           return Decoration.none;
       let { from, to, node, text: textNode } = surrounding;
       let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));
       let { state } = view, text = node.nodeType == 3 ? node.nodeValue :
           new DOMReader([], state).readRange(node.firstChild, null).text;
       if (newTo - newFrom < text.length) {
           if (state.doc.sliceString(newFrom, Math.min(state.doc.length, newFrom + text.length), LineBreakPlaceholder) == text)
               newTo = newFrom + text.length;
           else if (state.doc.sliceString(Math.max(0, newTo - text.length), newTo, LineBreakPlaceholder) == text)
               newFrom = newTo - text.length;
           else
               return Decoration.none;
       }
       else if (state.doc.sliceString(newFrom, newTo, LineBreakPlaceholder) != text) {
           return Decoration.none;
       }
       let topView = ContentView.get(node);
       if (topView instanceof CompositionView)
           topView = topView.widget.topView;
       else if (topView)
           topView.parent = null;
       return Decoration.set(Decoration.replace({ widget: new CompositionWidget(node, textNode, topView), inclusive: true })
           .range(newFrom, newTo));
   }
   class CompositionWidget extends WidgetType {
       constructor(top, text, topView) {
           super();
           this.top = top;
           this.text = text;
           this.topView = topView;
       }
       eq(other) { return this.top == other.top && this.text == other.text; }
       toDOM() { return this.top; }
       ignoreEvent() { return false; }
       get customView() { return CompositionView; }
   }
   function nearbyTextNode(node, offset, side) {
       for (;;) {
           if (node.nodeType == 3)
               return node;
           if (node.nodeType == 1 && offset > 0 && side <= 0) {
               node = node.childNodes[offset - 1];
               offset = maxOffset(node);
           }
           else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {
               node = node.childNodes[offset];
               offset = 0;
           }
           else {
               return null;
           }
       }
   }
   function nextToUneditable(node, offset) {
       if (node.nodeType != 1)
           return 0;
       return (offset && node.childNodes[offset - 1].contentEditable == "false" ? 1 /* NextTo.Before */ : 0) |
           (offset < node.childNodes.length && node.childNodes[offset].contentEditable == "false" ? 2 /* NextTo.After */ : 0);
   }
   class DecorationComparator$1 {
       constructor() {
           this.changes = [];
       }
       compareRange(from, to) { addRange(from, to, this.changes); }
       comparePoint(from, to) { addRange(from, to, this.changes); }
   }
   function findChangedDeco(a, b, diff) {
       let comp = new DecorationComparator$1;
       RangeSet.compare(a, b, diff, comp);
       return comp.changes;
   }
   function inUneditable(node, inside) {
       for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {
           if (cur.nodeType == 1 && cur.contentEditable == 'false') {
               return true;
           }
       }
       return false;
   }

   function groupAt(state, pos, bias = 1) {
       let categorize = state.charCategorizer(pos);
       let line = state.doc.lineAt(pos), linePos = pos - line.from;
       if (line.length == 0)
           return EditorSelection.cursor(pos);
       if (linePos == 0)
           bias = 1;
       else if (linePos == line.length)
           bias = -1;
       let from = linePos, to = linePos;
       if (bias < 0)
           from = findClusterBreak(line.text, linePos, false);
       else
           to = findClusterBreak(line.text, linePos);
       let cat = categorize(line.text.slice(from, to));
       while (from > 0) {
           let prev = findClusterBreak(line.text, from, false);
           if (categorize(line.text.slice(prev, from)) != cat)
               break;
           from = prev;
       }
       while (to < line.length) {
           let next = findClusterBreak(line.text, to);
           if (categorize(line.text.slice(to, next)) != cat)
               break;
           to = next;
       }
       return EditorSelection.range(from + line.from, to + line.from);
   }
   // Search the DOM for the {node, offset} position closest to the given
   // coordinates. Very inefficient and crude, but can usually be avoided
   // by calling caret(Position|Range)FromPoint instead.
   function getdx(x, rect) {
       return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);
   }
   function getdy(y, rect) {
       return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);
   }
   function yOverlap(a, b) {
       return a.top < b.bottom - 1 && a.bottom > b.top + 1;
   }
   function upTop(rect, top) {
       return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;
   }
   function upBot(rect, bottom) {
       return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;
   }
   function domPosAtCoords(parent, x, y) {
       let closest, closestRect, closestX, closestY, closestOverlap = false;
       let above, below, aboveRect, belowRect;
       for (let child = parent.firstChild; child; child = child.nextSibling) {
           let rects = clientRectsFor(child);
           for (let i = 0; i < rects.length; i++) {
               let rect = rects[i];
               if (closestRect && yOverlap(closestRect, rect))
                   rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);
               let dx = getdx(x, rect), dy = getdy(y, rect);
               if (dx == 0 && dy == 0)
                   return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);
               if (!closest || closestY > dy || closestY == dy && closestX > dx) {
                   closest = child;
                   closestRect = rect;
                   closestX = dx;
                   closestY = dy;
                   closestOverlap = !dx || (dx > 0 ? i < rects.length - 1 : i > 0);
               }
               if (dx == 0) {
                   if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {
                       above = child;
                       aboveRect = rect;
                   }
                   else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {
                       below = child;
                       belowRect = rect;
                   }
               }
               else if (aboveRect && yOverlap(aboveRect, rect)) {
                   aboveRect = upBot(aboveRect, rect.bottom);
               }
               else if (belowRect && yOverlap(belowRect, rect)) {
                   belowRect = upTop(belowRect, rect.top);
               }
           }
       }
       if (aboveRect && aboveRect.bottom >= y) {
           closest = above;
           closestRect = aboveRect;
       }
       else if (belowRect && belowRect.top <= y) {
           closest = below;
           closestRect = belowRect;
       }
       if (!closest)
           return { node: parent, offset: 0 };
       let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));
       if (closest.nodeType == 3)
           return domPosInText(closest, clipX, y);
       if (closestOverlap && closest.contentEditable != "false")
           return domPosAtCoords(closest, clipX, y);
       let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +
           (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);
       return { node: parent, offset };
   }
   function domPosInText(node, x, y) {
       let len = node.nodeValue.length;
       let closestOffset = -1, closestDY = 1e9, generalSide = 0;
       for (let i = 0; i < len; i++) {
           let rects = textRange(node, i, i + 1).getClientRects();
           for (let j = 0; j < rects.length; j++) {
               let rect = rects[j];
               if (rect.top == rect.bottom)
                   continue;
               if (!generalSide)
                   generalSide = x - rect.left;
               let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;
               if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {
                   let right = x >= (rect.left + rect.right) / 2, after = right;
                   if (browser.chrome || browser.gecko) {
                       // Check for RTL on browsers that support getting client
                       // rects for empty ranges.
                       let rectBefore = textRange(node, i).getBoundingClientRect();
                       if (rectBefore.left == rect.right)
                           after = !right;
                   }
                   if (dy <= 0)
                       return { node, offset: i + (after ? 1 : 0) };
                   closestOffset = i + (after ? 1 : 0);
                   closestDY = dy;
               }
           }
       }
       return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };
   }
   function posAtCoords(view, { x, y }, precise, bias = -1) {
       var _a;
       let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;
       let block, { docHeight } = view.viewState;
       let yOffset = y - docTop;
       if (yOffset < 0)
           return 0;
       if (yOffset > docHeight)
           return view.state.doc.length;
       // Scan for a text block near the queried y position
       for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {
           block = view.elementAtHeight(yOffset);
           if (block.type == BlockType.Text)
               break;
           for (;;) {
               // Move the y position out of this block
               yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;
               if (yOffset >= 0 && yOffset <= docHeight)
                   break;
               // If the document consists entirely of replaced widgets, we
               // won't find a text block, so return 0
               if (bounced)
                   return precise ? null : 0;
               bounced = true;
               bias = -bias;
           }
       }
       y = docTop + yOffset;
       let lineStart = block.from;
       // If this is outside of the rendered viewport, we can't determine a position
       if (lineStart < view.viewport.from)
           return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);
       if (lineStart > view.viewport.to)
           return view.viewport.to == view.state.doc.length ? view.state.doc.length :
               precise ? null : posAtCoordsImprecise(view, content, block, x, y);
       // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not
       let doc = view.dom.ownerDocument;
       let root = view.root.elementFromPoint ? view.root : doc;
       let element = root.elementFromPoint(x, y);
       if (element && !view.contentDOM.contains(element))
           element = null;
       // If the element is unexpected, clip x at the sides of the content area and try again
       if (!element) {
           x = Math.max(content.left + 1, Math.min(content.right - 1, x));
           element = root.elementFromPoint(x, y);
           if (element && !view.contentDOM.contains(element))
               element = null;
       }
       // There's visible editor content under the point, so we can try
       // using caret(Position|Range)FromPoint as a shortcut
       let node, offset = -1;
       if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {
           if (doc.caretPositionFromPoint) {
               let pos = doc.caretPositionFromPoint(x, y);
               if (pos)
                   ({ offsetNode: node, offset } = pos);
           }
           else if (doc.caretRangeFromPoint) {
               let range = doc.caretRangeFromPoint(x, y);
               if (range) {
                   ({ startContainer: node, startOffset: offset } = range);
                   if (!view.contentDOM.contains(node) ||
                       browser.safari && isSuspiciousSafariCaretResult(node, offset, x) ||
                       browser.chrome && isSuspiciousChromeCaretResult(node, offset, x))
                       node = undefined;
               }
           }
       }
       // No luck, do our own (potentially expensive) search
       if (!node || !view.docView.dom.contains(node)) {
           let line = LineView.find(view.docView, lineStart);
           if (!line)
               return yOffset > block.top + block.height / 2 ? block.to : block.from;
           ({ node, offset } = domPosAtCoords(line.dom, x, y));
       }
       return view.docView.posFromDOM(node, offset);
   }
   function posAtCoordsImprecise(view, contentRect, block, x, y) {
       let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);
       if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {
           let line = Math.floor((y - block.top) / view.defaultLineHeight);
           into += line * view.viewState.heightOracle.lineLength;
       }
       let content = view.state.sliceDoc(block.from, block.to);
       return block.from + findColumn(content, into, view.state.tabSize);
   }
   // In case of a high line height, Safari's caretRangeFromPoint treats
   // the space between lines as belonging to the last character of the
   // line before. This is used to detect such a result so that it can be
   // ignored (issue #401).
   function isSuspiciousSafariCaretResult(node, offset, x) {
       let len;
       if (node.nodeType != 3 || offset != (len = node.nodeValue.length))
           return false;
       for (let next = node.nextSibling; next; next = next.nextSibling)
           if (next.nodeType != 1 || next.nodeName != "BR")
               return false;
       return textRange(node, len - 1, len).getBoundingClientRect().left > x;
   }
   // Chrome will move positions between lines to the start of the next line
   function isSuspiciousChromeCaretResult(node, offset, x) {
       if (offset != 0)
           return false;
       for (let cur = node;;) {
           let parent = cur.parentNode;
           if (!parent || parent.nodeType != 1 || parent.firstChild != cur)
               return false;
           if (parent.classList.contains("cm-line"))
               break;
           cur = parent;
       }
       let rect = node.nodeType == 1 ? node.getBoundingClientRect()
           : textRange(node, 0, Math.max(node.nodeValue.length, 1)).getBoundingClientRect();
       return x - rect.left > 5;
   }
   function moveToLineBoundary(view, start, forward, includeWrap) {
       let line = view.state.doc.lineAt(start.head);
       let coords = !includeWrap || !view.lineWrapping ? null
           : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);
       if (coords) {
           let editorRect = view.dom.getBoundingClientRect();
           let direction = view.textDirectionAt(line.from);
           let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,
               y: (coords.top + coords.bottom) / 2 });
           if (pos != null)
               return EditorSelection.cursor(pos, forward ? -1 : 1);
       }
       let lineView = LineView.find(view.docView, start.head);
       let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);
       return EditorSelection.cursor(end, forward ? -1 : 1);
   }
   function moveByChar(view, start, forward, by) {
       let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);
       let direction = view.textDirectionAt(line.from);
       for (let cur = start, check = null;;) {
           let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;
           if (!next) {
               if (line.number == (forward ? view.state.doc.lines : 1))
                   return cur;
               char = "\n";
               line = view.state.doc.line(line.number + (forward ? 1 : -1));
               spans = view.bidiSpans(line);
               next = EditorSelection.cursor(forward ? line.from : line.to);
           }
           if (!check) {
               if (!by)
                   return next;
               check = by(char);
           }
           else if (!check(char)) {
               return cur;
           }
           cur = next;
       }
   }
   function byGroup(view, pos, start) {
       let categorize = view.state.charCategorizer(pos);
       let cat = categorize(start);
       return (next) => {
           let nextCat = categorize(next);
           if (cat == CharCategory.Space)
               cat = nextCat;
           return cat == nextCat;
       };
   }
   function moveVertically(view, start, forward, distance) {
       let startPos = start.head, dir = forward ? 1 : -1;
       if (startPos == (forward ? view.state.doc.length : 0))
           return EditorSelection.cursor(startPos, start.assoc);
       let goal = start.goalColumn, startY;
       let rect = view.contentDOM.getBoundingClientRect();
       let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;
       if (startCoords) {
           if (goal == null)
               goal = startCoords.left - rect.left;
           startY = dir < 0 ? startCoords.top : startCoords.bottom;
       }
       else {
           let line = view.viewState.lineBlockAt(startPos);
           if (goal == null)
               goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));
           startY = (dir < 0 ? line.top : line.bottom) + docTop;
       }
       let resolvedGoal = rect.left + goal;
       let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);
       for (let extra = 0;; extra += 10) {
           let curY = startY + (dist + extra) * dir;
           let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);
           if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))
               return EditorSelection.cursor(pos, start.assoc, undefined, goal);
       }
   }
   function skipAtoms(view, oldPos, pos) {
       let atoms = view.state.facet(atomicRanges).map(f => f(view));
       for (;;) {
           let moved = false;
           for (let set of atoms) {
               set.between(pos.from - 1, pos.from + 1, (from, to, value) => {
                   if (pos.from > from && pos.from < to) {
                       pos = oldPos.head > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);
                       moved = true;
                   }
               });
           }
           if (!moved)
               return pos;
       }
   }

   // This will also be where dragging info and such goes
   class InputState {
       constructor(view) {
           this.lastKeyCode = 0;
           this.lastKeyTime = 0;
           this.lastTouchTime = 0;
           this.lastFocusTime = 0;
           this.lastScrollTop = 0;
           this.lastScrollLeft = 0;
           this.chromeScrollHack = -1;
           // On iOS, some keys need to have their default behavior happen
           // (after which we retroactively handle them and reset the DOM) to
           // avoid messing up the virtual keyboard state.
           this.pendingIOSKey = undefined;
           this.lastSelectionOrigin = null;
           this.lastSelectionTime = 0;
           this.lastEscPress = 0;
           this.lastContextMenu = 0;
           this.scrollHandlers = [];
           this.registeredEvents = [];
           this.customHandlers = [];
           // -1 means not in a composition. Otherwise, this counts the number
           // of changes made during the composition. The count is used to
           // avoid treating the start state of the composition, before any
           // changes have been made, as part of the composition.
           this.composing = -1;
           // Tracks whether the next change should be marked as starting the
           // composition (null means no composition, true means next is the
           // first, false means first has already been marked for this
           // composition)
           this.compositionFirstChange = null;
           this.compositionEndedAt = 0;
           this.mouseSelection = null;
           for (let type in handlers) {
               let handler = handlers[type];
               view.contentDOM.addEventListener(type, (event) => {
                   if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))
                       return;
                   if (type == "keydown" && this.keydown(view, event))
                       return;
                   if (this.mustFlushObserver(event))
                       view.observer.forceFlush();
                   if (this.runCustomHandlers(type, view, event))
                       event.preventDefault();
                   else
                       handler(view, event);
               }, handlerOptions[type]);
               this.registeredEvents.push(type);
           }
           if (browser.chrome && browser.chrome_version == 102) { // FIXME remove at some point
               // On Chrome 102, viewport updates somehow stop wheel-based
               // scrolling. Turning off pointer events during the scroll seems
               // to avoid the issue.
               view.scrollDOM.addEventListener("wheel", () => {
                   if (this.chromeScrollHack < 0)
                       view.contentDOM.style.pointerEvents = "none";
                   else
                       window.clearTimeout(this.chromeScrollHack);
                   this.chromeScrollHack = setTimeout(() => {
                       this.chromeScrollHack = -1;
                       view.contentDOM.style.pointerEvents = "";
                   }, 100);
               }, { passive: true });
           }
           this.notifiedFocused = view.hasFocus;
           // On Safari adding an input event handler somehow prevents an
           // issue where the composition vanishes when you press enter.
           if (browser.safari)
               view.contentDOM.addEventListener("input", () => null);
       }
       setSelectionOrigin(origin) {
           this.lastSelectionOrigin = origin;
           this.lastSelectionTime = Date.now();
       }
       ensureHandlers(view, plugins) {
           var _a;
           let handlers;
           this.customHandlers = [];
           for (let plugin of plugins)
               if (handlers = (_a = plugin.update(view).spec) === null || _a === void 0 ? void 0 : _a.domEventHandlers) {
                   this.customHandlers.push({ plugin: plugin.value, handlers });
                   for (let type in handlers)
                       if (this.registeredEvents.indexOf(type) < 0 && type != "scroll") {
                           this.registeredEvents.push(type);
                           view.contentDOM.addEventListener(type, (event) => {
                               if (!eventBelongsToEditor(view, event))
                                   return;
                               if (this.runCustomHandlers(type, view, event))
                                   event.preventDefault();
                           });
                       }
               }
       }
       runCustomHandlers(type, view, event) {
           for (let set of this.customHandlers) {
               let handler = set.handlers[type];
               if (handler) {
                   try {
                       if (handler.call(set.plugin, event, view) || event.defaultPrevented)
                           return true;
                   }
                   catch (e) {
                       logException(view.state, e);
                   }
               }
           }
           return false;
       }
       runScrollHandlers(view, event) {
           this.lastScrollTop = view.scrollDOM.scrollTop;
           this.lastScrollLeft = view.scrollDOM.scrollLeft;
           for (let set of this.customHandlers) {
               let handler = set.handlers.scroll;
               if (handler) {
                   try {
                       handler.call(set.plugin, event, view);
                   }
                   catch (e) {
                       logException(view.state, e);
                   }
               }
           }
       }
       keydown(view, event) {
           // Must always run, even if a custom handler handled the event
           this.lastKeyCode = event.keyCode;
           this.lastKeyTime = Date.now();
           if (event.keyCode == 9 && Date.now() < this.lastEscPress + 2000)
               return true;
           // Chrome for Android usually doesn't fire proper key events, but
           // occasionally does, usually surrounded by a bunch of complicated
           // composition changes. When an enter or backspace key event is
           // seen, hold off on handling DOM events for a bit, and then
           // dispatch it.
           if (browser.android && browser.chrome && !event.synthetic &&
               (event.keyCode == 13 || event.keyCode == 8)) {
               view.observer.delayAndroidKey(event.key, event.keyCode);
               return true;
           }
           // Prevent the default behavior of Enter on iOS makes the
           // virtual keyboard get stuck in the wrong (lowercase)
           // state. So we let it go through, and then, in
           // applyDOMChange, notify key handlers of it and reset to
           // the state they produce.
           let pending;
           if (browser.ios && !event.synthetic && !event.altKey && !event.metaKey &&
               ((pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !event.ctrlKey ||
                   EmacsyPendingKeys.indexOf(event.key) > -1 && event.ctrlKey && !event.shiftKey)) {
               this.pendingIOSKey = pending || event;
               setTimeout(() => this.flushIOSKey(view), 250);
               return true;
           }
           return false;
       }
       flushIOSKey(view) {
           let key = this.pendingIOSKey;
           if (!key)
               return false;
           this.pendingIOSKey = undefined;
           return dispatchKey(view.contentDOM, key.key, key.keyCode);
       }
       ignoreDuringComposition(event) {
           if (!/^key/.test(event.type))
               return false;
           if (this.composing > 0)
               return true;
           // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.
           // On some input method editors (IMEs), the Enter key is used to
           // confirm character selection. On Safari, when Enter is pressed,
           // compositionend and keydown events are sometimes emitted in the
           // wrong order. The key event should still be ignored, even when
           // it happens after the compositionend event.
           if (browser.safari && !browser.ios && Date.now() - this.compositionEndedAt < 100) {
               this.compositionEndedAt = 0;
               return true;
           }
           return false;
       }
       mustFlushObserver(event) {
           return event.type == "keydown" && event.keyCode != 229;
       }
       startMouseSelection(mouseSelection) {
           if (this.mouseSelection)
               this.mouseSelection.destroy();
           this.mouseSelection = mouseSelection;
       }
       update(update) {
           if (this.mouseSelection)
               this.mouseSelection.update(update);
           if (update.transactions.length)
               this.lastKeyCode = this.lastSelectionTime = 0;
       }
       destroy() {
           if (this.mouseSelection)
               this.mouseSelection.destroy();
       }
   }
   const PendingKeys = [
       { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
       { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
       { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
   ];
   const EmacsyPendingKeys = "dthko";
   // Key codes for modifier keys
   const modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];
   class MouseSelection {
       constructor(view, startEvent, style, mustSelect) {
           this.view = view;
           this.style = style;
           this.mustSelect = mustSelect;
           this.lastEvent = startEvent;
           let doc = view.contentDOM.ownerDocument;
           doc.addEventListener("mousemove", this.move = this.move.bind(this));
           doc.addEventListener("mouseup", this.up = this.up.bind(this));
           this.extend = startEvent.shiftKey;
           this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);
           this.dragMove = dragMovesSelection(view, startEvent);
           this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;
           // When clicking outside of the selection, immediately apply the
           // effect of starting the selection
           if (this.dragging === false) {
               startEvent.preventDefault();
               this.select(startEvent);
           }
       }
       move(event) {
           if (event.buttons == 0)
               return this.destroy();
           if (this.dragging !== false)
               return;
           this.select(this.lastEvent = event);
       }
       up(event) {
           if (this.dragging == null)
               this.select(this.lastEvent);
           if (!this.dragging)
               event.preventDefault();
           this.destroy();
       }
       destroy() {
           let doc = this.view.contentDOM.ownerDocument;
           doc.removeEventListener("mousemove", this.move);
           doc.removeEventListener("mouseup", this.up);
           this.view.inputState.mouseSelection = null;
       }
       select(event) {
           let selection = this.style.get(event, this.extend, this.multiple);
           if (this.mustSelect || !selection.eq(this.view.state.selection) ||
               selection.main.assoc != this.view.state.selection.main.assoc)
               this.view.dispatch({
                   selection,
                   userEvent: "select.pointer",
                   scrollIntoView: true
               });
           this.mustSelect = false;
       }
       update(update) {
           if (update.docChanged && this.dragging)
               this.dragging = this.dragging.map(update.changes);
           if (this.style.update(update))
               setTimeout(() => this.select(this.lastEvent), 20);
       }
   }
   function addsSelectionRange(view, event) {
       let facet = view.state.facet(clickAddsSelectionRange);
       return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;
   }
   function dragMovesSelection(view, event) {
       let facet = view.state.facet(dragMovesSelection$1);
       return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;
   }
   function isInPrimarySelection(view, event) {
       let { main } = view.state.selection;
       if (main.empty)
           return false;
       // On boundary clicks, check whether the coordinates are inside the
       // selection's client rectangles
       let sel = getSelection(view.root);
       if (!sel || sel.rangeCount == 0)
           return true;
       let rects = sel.getRangeAt(0).getClientRects();
       for (let i = 0; i < rects.length; i++) {
           let rect = rects[i];
           if (rect.left <= event.clientX && rect.right >= event.clientX &&
               rect.top <= event.clientY && rect.bottom >= event.clientY)
               return true;
       }
       return false;
   }
   function eventBelongsToEditor(view, event) {
       if (!event.bubbles)
           return true;
       if (event.defaultPrevented)
           return false;
       for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)
           if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))
               return false;
       return true;
   }
   const handlers = /*@__PURE__*/Object.create(null);
   const handlerOptions = /*@__PURE__*/Object.create(null);
   // This is very crude, but unfortunately both these browsers _pretend_
   // that they have a clipboard API—all the objects and methods are
   // there, they just don't work, and they are hard to test.
   const brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||
       (browser.ios && browser.webkit_version < 604);
   function capturePaste(view) {
       let parent = view.dom.parentNode;
       if (!parent)
           return;
       let target = parent.appendChild(document.createElement("textarea"));
       target.style.cssText = "position: fixed; left: -10000px; top: 10px";
       target.focus();
       setTimeout(() => {
           view.focus();
           target.remove();
           doPaste(view, target.value);
       }, 50);
   }
   function doPaste(view, input) {
       let { state } = view, changes, i = 1, text = state.toText(input);
       let byLine = text.lines == state.selection.ranges.length;
       let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();
       if (linewise) {
           let lastLine = -1;
           changes = state.changeByRange(range => {
               let line = state.doc.lineAt(range.from);
               if (line.from == lastLine)
                   return { range };
               lastLine = line.from;
               let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);
               return { changes: { from: line.from, insert },
                   range: EditorSelection.cursor(range.from + insert.length) };
           });
       }
       else if (byLine) {
           changes = state.changeByRange(range => {
               let line = text.line(i++);
               return { changes: { from: range.from, to: range.to, insert: line.text },
                   range: EditorSelection.cursor(range.from + line.length) };
           });
       }
       else {
           changes = state.replaceSelection(text);
       }
       view.dispatch(changes, {
           userEvent: "input.paste",
           scrollIntoView: true
       });
   }
   handlers.keydown = (view, event) => {
       view.inputState.setSelectionOrigin("select");
       if (event.keyCode == 27)
           view.inputState.lastEscPress = Date.now();
       else if (modifierCodes.indexOf(event.keyCode) < 0)
           view.inputState.lastEscPress = 0;
   };
   handlers.touchstart = (view, e) => {
       view.inputState.lastTouchTime = Date.now();
       view.inputState.setSelectionOrigin("select.pointer");
   };
   handlers.touchmove = view => {
       view.inputState.setSelectionOrigin("select.pointer");
   };
   handlerOptions.touchstart = handlerOptions.touchmove = { passive: true };
   handlers.mousedown = (view, event) => {
       view.observer.flush();
       if (view.inputState.lastTouchTime > Date.now() - 2000)
           return; // Ignore touch interaction
       let style = null;
       for (let makeStyle of view.state.facet(mouseSelectionStyle)) {
           style = makeStyle(view, event);
           if (style)
               break;
       }
       if (!style && event.button == 0)
           style = basicMouseSelection(view, event);
       if (style) {
           let mustFocus = view.root.activeElement != view.contentDOM;
           if (mustFocus)
               view.observer.ignore(() => focusPreventScroll(view.contentDOM));
           view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));
       }
   };
   function rangeForClick(view, pos, bias, type) {
       if (type == 1) { // Single click
           return EditorSelection.cursor(pos, bias);
       }
       else if (type == 2) { // Double click
           return groupAt(view.state, pos, bias);
       }
       else { // Triple click
           let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);
           let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;
           if (to < view.state.doc.length && to == line.to)
               to++;
           return EditorSelection.range(from, to);
       }
   }
   let insideY = (y, rect) => y >= rect.top && y <= rect.bottom;
   let inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;
   // Try to determine, for the given coordinates, associated with the
   // given position, whether they are related to the element before or
   // the element after the position.
   function findPositionSide(view, pos, x, y) {
       let line = LineView.find(view.docView, pos);
       if (!line)
           return 1;
       let off = pos - line.posAtStart;
       // Line boundaries point into the line
       if (off == 0)
           return 1;
       if (off == line.length)
           return -1;
       // Positions on top of an element point at that element
       let before = line.coordsAt(off, -1);
       if (before && inside(x, y, before))
           return -1;
       let after = line.coordsAt(off, 1);
       if (after && inside(x, y, after))
           return 1;
       // This is probably a line wrap point. Pick before if the point is
       // beside it.
       return before && insideY(y, before) ? -1 : 1;
   }
   function queryPos(view, event) {
       let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);
       return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };
   }
   const BadMouseDetail = browser.ie && browser.ie_version <= 11;
   let lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;
   function getClickType(event) {
       if (!BadMouseDetail)
           return event.detail;
       let last = lastMouseDown, lastTime = lastMouseDownTime;
       lastMouseDown = event;
       lastMouseDownTime = Date.now();
       return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&
           Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;
   }
   function basicMouseSelection(view, event) {
       let start = queryPos(view, event), type = getClickType(event);
       let startSel = view.state.selection;
       let last = start, lastEvent = event;
       return {
           update(update) {
               if (update.docChanged) {
                   start.pos = update.changes.mapPos(start.pos);
                   startSel = startSel.map(update.changes);
                   lastEvent = null;
               }
           },
           get(event, extend, multiple) {
               let cur;
               if (lastEvent && event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)
                   cur = last;
               else {
                   cur = last = queryPos(view, event);
                   lastEvent = event;
               }
               let range = rangeForClick(view, cur.pos, cur.bias, type);
               if (start.pos != cur.pos && !extend) {
                   let startRange = rangeForClick(view, start.pos, start.bias, type);
                   let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);
                   range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);
               }
               if (extend)
                   return startSel.replaceRange(startSel.main.extend(range.from, range.to));
               else if (multiple && startSel.ranges.length > 1 && startSel.ranges.some(r => r.eq(range)))
                   return removeRange(startSel, range);
               else if (multiple)
                   return startSel.addRange(range);
               else
                   return EditorSelection.create([range]);
           }
       };
   }
   function removeRange(sel, range) {
       for (let i = 0;; i++) {
           if (sel.ranges[i].eq(range))
               return EditorSelection.create(sel.ranges.slice(0, i).concat(sel.ranges.slice(i + 1)), sel.mainIndex == i ? 0 : sel.mainIndex - (sel.mainIndex > i ? 1 : 0));
       }
   }
   handlers.dragstart = (view, event) => {
       let { selection: { main } } = view.state;
       let { mouseSelection } = view.inputState;
       if (mouseSelection)
           mouseSelection.dragging = main;
       if (event.dataTransfer) {
           event.dataTransfer.setData("Text", view.state.sliceDoc(main.from, main.to));
           event.dataTransfer.effectAllowed = "copyMove";
       }
   };
   function dropText(view, event, text, direct) {
       if (!text)
           return;
       let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);
       event.preventDefault();
       let { mouseSelection } = view.inputState;
       let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?
           { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;
       let ins = { from: dropPos, insert: text };
       let changes = view.state.changes(del ? [del, ins] : ins);
       view.focus();
       view.dispatch({
           changes,
           selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },
           userEvent: del ? "move.drop" : "input.drop"
       });
   }
   handlers.drop = (view, event) => {
       if (!event.dataTransfer)
           return;
       if (view.state.readOnly)
           return event.preventDefault();
       let files = event.dataTransfer.files;
       if (files && files.length) { // For a file drop, read the file's text.
           event.preventDefault();
           let text = Array(files.length), read = 0;
           let finishFile = () => {
               if (++read == files.length)
                   dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);
           };
           for (let i = 0; i < files.length; i++) {
               let reader = new FileReader;
               reader.onerror = finishFile;
               reader.onload = () => {
                   if (!/[\x00-\x08\x0e-\x1f]{2}/.test(reader.result))
                       text[i] = reader.result;
                   finishFile();
               };
               reader.readAsText(files[i]);
           }
       }
       else {
           dropText(view, event, event.dataTransfer.getData("Text"), true);
       }
   };
   handlers.paste = (view, event) => {
       if (view.state.readOnly)
           return event.preventDefault();
       view.observer.flush();
       let data = brokenClipboardAPI ? null : event.clipboardData;
       if (data) {
           doPaste(view, data.getData("text/plain"));
           event.preventDefault();
       }
       else {
           capturePaste(view);
       }
   };
   function captureCopy(view, text) {
       // The extra wrapper is somehow necessary on IE/Edge to prevent the
       // content from being mangled when it is put onto the clipboard
       let parent = view.dom.parentNode;
       if (!parent)
           return;
       let target = parent.appendChild(document.createElement("textarea"));
       target.style.cssText = "position: fixed; left: -10000px; top: 10px";
       target.value = text;
       target.focus();
       target.selectionEnd = text.length;
       target.selectionStart = 0;
       setTimeout(() => {
           target.remove();
           view.focus();
       }, 50);
   }
   function copiedRange(state) {
       let content = [], ranges = [], linewise = false;
       for (let range of state.selection.ranges)
           if (!range.empty) {
               content.push(state.sliceDoc(range.from, range.to));
               ranges.push(range);
           }
       if (!content.length) {
           // Nothing selected, do a line-wise copy
           let upto = -1;
           for (let { from } of state.selection.ranges) {
               let line = state.doc.lineAt(from);
               if (line.number > upto) {
                   content.push(line.text);
                   ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });
               }
               upto = line.number;
           }
           linewise = true;
       }
       return { text: content.join(state.lineBreak), ranges, linewise };
   }
   let lastLinewiseCopy = null;
   handlers.copy = handlers.cut = (view, event) => {
       let { text, ranges, linewise } = copiedRange(view.state);
       if (!text && !linewise)
           return;
       lastLinewiseCopy = linewise ? text : null;
       let data = brokenClipboardAPI ? null : event.clipboardData;
       if (data) {
           event.preventDefault();
           data.clearData();
           data.setData("text/plain", text);
       }
       else {
           captureCopy(view, text);
       }
       if (event.type == "cut" && !view.state.readOnly)
           view.dispatch({
               changes: ranges,
               scrollIntoView: true,
               userEvent: "delete.cut"
           });
   };
   function updateForFocusChange(view) {
       setTimeout(() => {
           if (view.hasFocus != view.inputState.notifiedFocused)
               view.update([]);
       }, 10);
   }
   handlers.focus = view => {
       view.inputState.lastFocusTime = Date.now();
       // When focusing reset the scroll position, move it back to where it was
       if (!view.scrollDOM.scrollTop && (view.inputState.lastScrollTop || view.inputState.lastScrollLeft)) {
           view.scrollDOM.scrollTop = view.inputState.lastScrollTop;
           view.scrollDOM.scrollLeft = view.inputState.lastScrollLeft;
       }
       updateForFocusChange(view);
   };
   handlers.blur = view => {
       view.observer.clearSelectionRange();
       updateForFocusChange(view);
   };
   handlers.compositionstart = handlers.compositionupdate = view => {
       if (view.inputState.compositionFirstChange == null)
           view.inputState.compositionFirstChange = true;
       if (view.inputState.composing < 0) {
           // FIXME possibly set a timeout to clear it again on Android
           view.inputState.composing = 0;
       }
   };
   handlers.compositionend = view => {
       view.inputState.composing = -1;
       view.inputState.compositionEndedAt = Date.now();
       view.inputState.compositionFirstChange = null;
       if (browser.chrome && browser.android)
           view.observer.flushSoon();
       setTimeout(() => {
           // Force the composition state to be cleared if it hasn't already been
           if (view.inputState.composing < 0 && view.docView.compositionDeco.size)
               view.update([]);
       }, 50);
   };
   handlers.contextmenu = view => {
       view.inputState.lastContextMenu = Date.now();
   };
   handlers.beforeinput = (view, event) => {
       var _a;
       // Because Chrome Android doesn't fire useful key events, use
       // beforeinput to detect backspace (and possibly enter and delete,
       // but those usually don't even seem to fire beforeinput events at
       // the moment) and fake a key event for it.
       //
       // (preventDefault on beforeinput, though supported in the spec,
       // seems to do nothing at all on Chrome).
       let pending;
       if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {
           view.observer.delayAndroidKey(pending.key, pending.keyCode);
           if (pending.key == "Backspace" || pending.key == "Delete") {
               let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;
               setTimeout(() => {
                   var _a;
                   // Backspacing near uneditable nodes on Chrome Android sometimes
                   // closes the virtual keyboard. This tries to crudely detect
                   // that and refocus to get it back.
                   if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {
                       view.contentDOM.blur();
                       view.focus();
                   }
               }, 100);
           }
       }
   };

   const wrappingWhiteSpace = ["pre-wrap", "normal", "pre-line", "break-spaces"];
   class HeightOracle {
       constructor() {
           this.doc = Text.empty;
           this.lineWrapping = false;
           this.heightSamples = {};
           this.lineHeight = 14;
           this.charWidth = 7;
           this.lineLength = 30;
           // Used to track, during updateHeight, if any actual heights changed
           this.heightChanged = false;
       }
       heightForGap(from, to) {
           let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;
           if (this.lineWrapping)
               lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);
           return this.lineHeight * lines;
       }
       heightForLine(length) {
           if (!this.lineWrapping)
               return this.lineHeight;
           let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));
           return lines * this.lineHeight;
       }
       setDoc(doc) { this.doc = doc; return this; }
       mustRefreshForWrapping(whiteSpace) {
           return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;
       }
       mustRefreshForHeights(lineHeights) {
           let newHeight = false;
           for (let i = 0; i < lineHeights.length; i++) {
               let h = lineHeights[i];
               if (h < 0) {
                   i++;
               }
               else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels
                   newHeight = true;
                   this.heightSamples[Math.floor(h * 10)] = true;
               }
           }
           return newHeight;
       }
       refresh(whiteSpace, lineHeight, charWidth, lineLength, knownHeights) {
           let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;
           let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;
           this.lineWrapping = lineWrapping;
           this.lineHeight = lineHeight;
           this.charWidth = charWidth;
           this.lineLength = lineLength;
           if (changed) {
               this.heightSamples = {};
               for (let i = 0; i < knownHeights.length; i++) {
                   let h = knownHeights[i];
                   if (h < 0)
                       i++;
                   else
                       this.heightSamples[Math.floor(h * 10)] = true;
               }
           }
           return changed;
       }
   }
   // This object is used by `updateHeight` to make DOM measurements
   // arrive at the right nides. The `heights` array is a sequence of
   // block heights, starting from position `from`.
   class MeasuredHeights {
       constructor(from, heights) {
           this.from = from;
           this.heights = heights;
           this.index = 0;
       }
       get more() { return this.index < this.heights.length; }
   }
   /**
   Record used to represent information about a block-level element
   in the editor view.
   */
   class BlockInfo {
       /**
       @internal
       */
       constructor(
       /**
       The start of the element in the document.
       */
       from, 
       /**
       The length of the element.
       */
       length, 
       /**
       The top position of the element (relative to the top of the
       document).
       */
       top, 
       /**
       Its height.
       */
       height, 
       /**
       The type of element this is. When querying lines, this may be
       an array of all the blocks that make up the line.
       */
       type) {
           this.from = from;
           this.length = length;
           this.top = top;
           this.height = height;
           this.type = type;
       }
       /**
       The end of the element as a document position.
       */
       get to() { return this.from + this.length; }
       /**
       The bottom position of the element.
       */
       get bottom() { return this.top + this.height; }
       /**
       @internal
       */
       join(other) {
           let detail = (Array.isArray(this.type) ? this.type : [this])
               .concat(Array.isArray(other.type) ? other.type : [other]);
           return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);
       }
   }
   var QueryType$1 = /*@__PURE__*/(function (QueryType) {
       QueryType[QueryType["ByPos"] = 0] = "ByPos";
       QueryType[QueryType["ByHeight"] = 1] = "ByHeight";
       QueryType[QueryType["ByPosNoHeight"] = 2] = "ByPosNoHeight";
   return QueryType})(QueryType$1 || (QueryType$1 = {}));
   const Epsilon = 1e-3;
   class HeightMap {
       constructor(length, // The number of characters covered
       height, // Height of this part of the document
       flags = 2 /* Flag.Outdated */) {
           this.length = length;
           this.height = height;
           this.flags = flags;
       }
       get outdated() { return (this.flags & 2 /* Flag.Outdated */) > 0; }
       set outdated(value) { this.flags = (value ? 2 /* Flag.Outdated */ : 0) | (this.flags & ~2 /* Flag.Outdated */); }
       setHeight(oracle, height) {
           if (this.height != height) {
               if (Math.abs(this.height - height) > Epsilon)
                   oracle.heightChanged = true;
               this.height = height;
           }
       }
       // Base case is to replace a leaf node, which simply builds a tree
       // from the new nodes and returns that (HeightMapBranch and
       // HeightMapGap override this to actually use from/to)
       replace(_from, _to, nodes) {
           return HeightMap.of(nodes);
       }
       // Again, these are base cases, and are overridden for branch and gap nodes.
       decomposeLeft(_to, result) { result.push(this); }
       decomposeRight(_from, result) { result.push(this); }
       applyChanges(decorations, oldDoc, oracle, changes) {
           let me = this;
           for (let i = changes.length - 1; i >= 0; i--) {
               let { fromA, toA, fromB, toB } = changes[i];
               let start = me.lineAt(fromA, QueryType$1.ByPosNoHeight, oldDoc, 0, 0);
               let end = start.to >= toA ? start : me.lineAt(toA, QueryType$1.ByPosNoHeight, oldDoc, 0, 0);
               toB += end.to - toA;
               toA = end.to;
               while (i > 0 && start.from <= changes[i - 1].toA) {
                   fromA = changes[i - 1].fromA;
                   fromB = changes[i - 1].fromB;
                   i--;
                   if (fromA < start.from)
                       start = me.lineAt(fromA, QueryType$1.ByPosNoHeight, oldDoc, 0, 0);
               }
               fromB += start.from - fromA;
               fromA = start.from;
               let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);
               me = me.replace(fromA, toA, nodes);
           }
           return me.updateHeight(oracle, 0);
       }
       static empty() { return new HeightMapText(0, 0); }
       // nodes uses null values to indicate the position of line breaks.
       // There are never line breaks at the start or end of the array, or
       // two line breaks next to each other, and the array isn't allowed
       // to be empty (same restrictions as return value from the builder).
       static of(nodes) {
           if (nodes.length == 1)
               return nodes[0];
           let i = 0, j = nodes.length, before = 0, after = 0;
           for (;;) {
               if (i == j) {
                   if (before > after * 2) {
                       let split = nodes[i - 1];
                       if (split.break)
                           nodes.splice(--i, 1, split.left, null, split.right);
                       else
                           nodes.splice(--i, 1, split.left, split.right);
                       j += 1 + split.break;
                       before -= split.size;
                   }
                   else if (after > before * 2) {
                       let split = nodes[j];
                       if (split.break)
                           nodes.splice(j, 1, split.left, null, split.right);
                       else
                           nodes.splice(j, 1, split.left, split.right);
                       j += 2 + split.break;
                       after -= split.size;
                   }
                   else {
                       break;
                   }
               }
               else if (before < after) {
                   let next = nodes[i++];
                   if (next)
                       before += next.size;
               }
               else {
                   let next = nodes[--j];
                   if (next)
                       after += next.size;
               }
           }
           let brk = 0;
           if (nodes[i - 1] == null) {
               brk = 1;
               i--;
           }
           else if (nodes[i] == null) {
               brk = 1;
               j++;
           }
           return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));
       }
   }
   HeightMap.prototype.size = 1;
   class HeightMapBlock extends HeightMap {
       constructor(length, height, type) {
           super(length, height);
           this.type = type;
       }
       blockAt(_height, _doc, top, offset) {
           return new BlockInfo(offset, this.length, top, this.height, this.type);
       }
       lineAt(_value, _type, doc, top, offset) {
           return this.blockAt(0, doc, top, offset);
       }
       forEachLine(from, to, doc, top, offset, f) {
           if (from <= offset + this.length && to >= offset)
               f(this.blockAt(0, doc, top, offset));
       }
       updateHeight(oracle, offset = 0, _force = false, measured) {
           if (measured && measured.from <= offset && measured.more)
               this.setHeight(oracle, measured.heights[measured.index++]);
           this.outdated = false;
           return this;
       }
       toString() { return `block(${this.length})`; }
   }
   class HeightMapText extends HeightMapBlock {
       constructor(length, height) {
           super(length, height, BlockType.Text);
           this.collapsed = 0; // Amount of collapsed content in the line
           this.widgetHeight = 0; // Maximum inline widget height
       }
       replace(_from, _to, nodes) {
           let node = nodes[0];
           if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* Flag.SingleLine */)) &&
               Math.abs(this.length - node.length) < 10) {
               if (node instanceof HeightMapGap)
                   node = new HeightMapText(node.length, this.height);
               else
                   node.height = this.height;
               if (!this.outdated)
                   node.outdated = false;
               return node;
           }
           else {
               return HeightMap.of(nodes);
           }
       }
       updateHeight(oracle, offset = 0, force = false, measured) {
           if (measured && measured.from <= offset && measured.more)
               this.setHeight(oracle, measured.heights[measured.index++]);
           else if (force || this.outdated)
               this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));
           this.outdated = false;
           return this;
       }
       toString() {
           return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
       }
   }
   class HeightMapGap extends HeightMap {
       constructor(length) { super(length, 0); }
       lines(doc, offset) {
           let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;
           return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };
       }
       blockAt(height, doc, top, offset) {
           let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);
           let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));
           let { from, length } = doc.line(firstLine + line);
           return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);
       }
       lineAt(value, type, doc, top, offset) {
           if (type == QueryType$1.ByHeight)
               return this.blockAt(value, doc, top, offset);
           if (type == QueryType$1.ByPosNoHeight) {
               let { from, to } = doc.lineAt(value);
               return new BlockInfo(from, to - from, 0, 0, BlockType.Text);
           }
           let { firstLine, lineHeight } = this.lines(doc, offset);
           let { from, length, number } = doc.lineAt(value);
           return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);
       }
       forEachLine(from, to, doc, top, offset, f) {
           let { firstLine, lineHeight } = this.lines(doc, offset);
           for (let pos = Math.max(from, offset), end = Math.min(offset + this.length, to); pos <= end;) {
               let line = doc.lineAt(pos);
               if (pos == from)
                   top += lineHeight * (line.number - firstLine);
               f(new BlockInfo(line.from, line.length, top, lineHeight, BlockType.Text));
               top += lineHeight;
               pos = line.to + 1;
           }
       }
       replace(from, to, nodes) {
           let after = this.length - to;
           if (after > 0) {
               let last = nodes[nodes.length - 1];
               if (last instanceof HeightMapGap)
                   nodes[nodes.length - 1] = new HeightMapGap(last.length + after);
               else
                   nodes.push(null, new HeightMapGap(after - 1));
           }
           if (from > 0) {
               let first = nodes[0];
               if (first instanceof HeightMapGap)
                   nodes[0] = new HeightMapGap(from + first.length);
               else
                   nodes.unshift(new HeightMapGap(from - 1), null);
           }
           return HeightMap.of(nodes);
       }
       decomposeLeft(to, result) {
           result.push(new HeightMapGap(to - 1), null);
       }
       decomposeRight(from, result) {
           result.push(null, new HeightMapGap(this.length - from - 1));
       }
       updateHeight(oracle, offset = 0, force = false, measured) {
           let end = offset + this.length;
           if (measured && measured.from <= offset + this.length && measured.more) {
               // Fill in part of this gap with measured lines. We know there
               // can't be widgets or collapsed ranges in those lines, because
               // they would already have been added to the heightmap (gaps
               // only contain plain text).
               let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;
               let wasChanged = oracle.heightChanged;
               if (measured.from > offset)
                   nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));
               while (pos <= end && measured.more) {
                   let len = oracle.doc.lineAt(pos).length;
                   if (nodes.length)
                       nodes.push(null);
                   let height = measured.heights[measured.index++];
                   if (singleHeight == -1)
                       singleHeight = height;
                   else if (Math.abs(height - singleHeight) >= Epsilon)
                       singleHeight = -2;
                   let line = new HeightMapText(len, height);
                   line.outdated = false;
                   nodes.push(line);
                   pos += len + 1;
               }
               if (pos <= end)
                   nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));
               let result = HeightMap.of(nodes);
               oracle.heightChanged = wasChanged || singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||
                   Math.abs(singleHeight - this.lines(oracle.doc, offset).lineHeight) >= Epsilon;
               return result;
           }
           else if (force || this.outdated) {
               this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));
               this.outdated = false;
           }
           return this;
       }
       toString() { return `gap(${this.length})`; }
   }
   class HeightMapBranch extends HeightMap {
       constructor(left, brk, right) {
           super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Flag.Outdated */ : 0));
           this.left = left;
           this.right = right;
           this.size = left.size + right.size;
       }
       get break() { return this.flags & 1 /* Flag.Break */; }
       blockAt(height, doc, top, offset) {
           let mid = top + this.left.height;
           return height < mid ? this.left.blockAt(height, doc, top, offset)
               : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);
       }
       lineAt(value, type, doc, top, offset) {
           let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;
           let left = type == QueryType$1.ByHeight ? value < rightTop : value < rightOffset;
           let base = left ? this.left.lineAt(value, type, doc, top, offset)
               : this.right.lineAt(value, type, doc, rightTop, rightOffset);
           if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))
               return base;
           let subQuery = type == QueryType$1.ByPosNoHeight ? QueryType$1.ByPosNoHeight : QueryType$1.ByPos;
           if (left)
               return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));
           else
               return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);
       }
       forEachLine(from, to, doc, top, offset, f) {
           let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;
           if (this.break) {
               if (from < rightOffset)
                   this.left.forEachLine(from, to, doc, top, offset, f);
               if (to >= rightOffset)
                   this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);
           }
           else {
               let mid = this.lineAt(rightOffset, QueryType$1.ByPos, doc, top, offset);
               if (from < mid.from)
                   this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);
               if (mid.to >= from && mid.from <= to)
                   f(mid);
               if (to > mid.to)
                   this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);
           }
       }
       replace(from, to, nodes) {
           let rightStart = this.left.length + this.break;
           if (to < rightStart)
               return this.balanced(this.left.replace(from, to, nodes), this.right);
           if (from > this.left.length)
               return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));
           let result = [];
           if (from > 0)
               this.decomposeLeft(from, result);
           let left = result.length;
           for (let node of nodes)
               result.push(node);
           if (from > 0)
               mergeGaps(result, left - 1);
           if (to < this.length) {
               let right = result.length;
               this.decomposeRight(to, result);
               mergeGaps(result, right);
           }
           return HeightMap.of(result);
       }
       decomposeLeft(to, result) {
           let left = this.left.length;
           if (to <= left)
               return this.left.decomposeLeft(to, result);
           result.push(this.left);
           if (this.break) {
               left++;
               if (to >= left)
                   result.push(null);
           }
           if (to > left)
               this.right.decomposeLeft(to - left, result);
       }
       decomposeRight(from, result) {
           let left = this.left.length, right = left + this.break;
           if (from >= right)
               return this.right.decomposeRight(from - right, result);
           if (from < left)
               this.left.decomposeRight(from, result);
           if (this.break && from < right)
               result.push(null);
           result.push(this.right);
       }
       balanced(left, right) {
           if (left.size > 2 * right.size || right.size > 2 * left.size)
               return HeightMap.of(this.break ? [left, null, right] : [left, right]);
           this.left = left;
           this.right = right;
           this.height = left.height + right.height;
           this.outdated = left.outdated || right.outdated;
           this.size = left.size + right.size;
           this.length = left.length + this.break + right.length;
           return this;
       }
       updateHeight(oracle, offset = 0, force = false, measured) {
           let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;
           if (measured && measured.from <= offset + left.length && measured.more)
               rebalance = left = left.updateHeight(oracle, offset, force, measured);
           else
               left.updateHeight(oracle, offset, force);
           if (measured && measured.from <= rightStart + right.length && measured.more)
               rebalance = right = right.updateHeight(oracle, rightStart, force, measured);
           else
               right.updateHeight(oracle, rightStart, force);
           if (rebalance)
               return this.balanced(left, right);
           this.height = this.left.height + this.right.height;
           this.outdated = false;
           return this;
       }
       toString() { return this.left + (this.break ? " " : "-") + this.right; }
   }
   function mergeGaps(nodes, around) {
       let before, after;
       if (nodes[around] == null &&
           (before = nodes[around - 1]) instanceof HeightMapGap &&
           (after = nodes[around + 1]) instanceof HeightMapGap)
           nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));
   }
   const relevantWidgetHeight = 5;
   class NodeBuilder {
       constructor(pos, oracle) {
           this.pos = pos;
           this.oracle = oracle;
           this.nodes = [];
           this.lineStart = -1;
           this.lineEnd = -1;
           this.covering = null;
           this.writtenTo = pos;
       }
       get isCovered() {
           return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
       }
       span(_from, to) {
           if (this.lineStart > -1) {
               let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];
               if (last instanceof HeightMapText)
                   last.length += end - this.pos;
               else if (end > this.pos || !this.isCovered)
                   this.nodes.push(new HeightMapText(end - this.pos, -1));
               this.writtenTo = end;
               if (to > end) {
                   this.nodes.push(null);
                   this.writtenTo++;
                   this.lineStart = -1;
               }
           }
           this.pos = to;
       }
       point(from, to, deco) {
           if (from < to || deco.heightRelevant) {
               let height = deco.widget ? deco.widget.estimatedHeight : 0;
               if (height < 0)
                   height = this.oracle.lineHeight;
               let len = to - from;
               if (deco.block) {
                   this.addBlock(new HeightMapBlock(len, height, deco.type));
               }
               else if (len || height >= relevantWidgetHeight) {
                   this.addLineDeco(height, len);
               }
           }
           else if (to > from) {
               this.span(from, to);
           }
           if (this.lineEnd > -1 && this.lineEnd < this.pos)
               this.lineEnd = this.oracle.doc.lineAt(this.pos).to;
       }
       enterLine() {
           if (this.lineStart > -1)
               return;
           let { from, to } = this.oracle.doc.lineAt(this.pos);
           this.lineStart = from;
           this.lineEnd = to;
           if (this.writtenTo < from) {
               if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)
                   this.nodes.push(this.blankContent(this.writtenTo, from - 1));
               this.nodes.push(null);
           }
           if (this.pos > from)
               this.nodes.push(new HeightMapText(this.pos - from, -1));
           this.writtenTo = this.pos;
       }
       blankContent(from, to) {
           let gap = new HeightMapGap(to - from);
           if (this.oracle.doc.lineAt(from).to == to)
               gap.flags |= 4 /* Flag.SingleLine */;
           return gap;
       }
       ensureLine() {
           this.enterLine();
           let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
           if (last instanceof HeightMapText)
               return last;
           let line = new HeightMapText(0, -1);
           this.nodes.push(line);
           return line;
       }
       addBlock(block) {
           this.enterLine();
           if (block.type == BlockType.WidgetAfter && !this.isCovered)
               this.ensureLine();
           this.nodes.push(block);
           this.writtenTo = this.pos = this.pos + block.length;
           if (block.type != BlockType.WidgetBefore)
               this.covering = block;
       }
       addLineDeco(height, length) {
           let line = this.ensureLine();
           line.length += length;
           line.collapsed += length;
           line.widgetHeight = Math.max(line.widgetHeight, height);
           this.writtenTo = this.pos = this.pos + length;
       }
       finish(from) {
           let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
           if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)
               this.nodes.push(new HeightMapText(0, -1));
           else if (this.writtenTo < this.pos || last == null)
               this.nodes.push(this.blankContent(this.writtenTo, this.pos));
           let pos = from;
           for (let node of this.nodes) {
               if (node instanceof HeightMapText)
                   node.updateHeight(this.oracle, pos);
               pos += node ? node.length : 1;
           }
           return this.nodes;
       }
       // Always called with a region that on both sides either stretches
       // to a line break or the end of the document.
       // The returned array uses null to indicate line breaks, but never
       // starts or ends in a line break, or has multiple line breaks next
       // to each other.
       static build(oracle, decorations, from, to) {
           let builder = new NodeBuilder(from, oracle);
           RangeSet.spans(decorations, from, to, builder, 0);
           return builder.finish(from);
       }
   }
   function heightRelevantDecoChanges(a, b, diff) {
       let comp = new DecorationComparator;
       RangeSet.compare(a, b, diff, comp, 0);
       return comp.changes;
   }
   class DecorationComparator {
       constructor() {
           this.changes = [];
       }
       compareRange() { }
       comparePoint(from, to, a, b) {
           if (from < to || a && a.heightRelevant || b && b.heightRelevant)
               addRange(from, to, this.changes, 5);
       }
   }

   function visiblePixelRange(dom, paddingTop) {
       let rect = dom.getBoundingClientRect();
       let doc = dom.ownerDocument, win = doc.defaultView || window;
       let left = Math.max(0, rect.left), right = Math.min(win.innerWidth, rect.right);
       let top = Math.max(0, rect.top), bottom = Math.min(win.innerHeight, rect.bottom);
       for (let parent = dom.parentNode; parent && parent != doc.body;) {
           if (parent.nodeType == 1) {
               let elt = parent;
               let style = window.getComputedStyle(elt);
               if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&
                   style.overflow != "visible") {
                   let parentRect = elt.getBoundingClientRect();
                   left = Math.max(left, parentRect.left);
                   right = Math.min(right, parentRect.right);
                   top = Math.max(top, parentRect.top);
                   bottom = parent == dom.parentNode ? parentRect.bottom : Math.min(bottom, parentRect.bottom);
               }
               parent = style.position == "absolute" || style.position == "fixed" ? elt.offsetParent : elt.parentNode;
           }
           else if (parent.nodeType == 11) { // Shadow root
               parent = parent.host;
           }
           else {
               break;
           }
       }
       return { left: left - rect.left, right: Math.max(left, right) - rect.left,
           top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };
   }
   function fullPixelRange(dom, paddingTop) {
       let rect = dom.getBoundingClientRect();
       return { left: 0, right: rect.right - rect.left,
           top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };
   }
   // Line gaps are placeholder widgets used to hide pieces of overlong
   // lines within the viewport, as a kludge to keep the editor
   // responsive when a ridiculously long line is loaded into it.
   class LineGap {
       constructor(from, to, size) {
           this.from = from;
           this.to = to;
           this.size = size;
       }
       static same(a, b) {
           if (a.length != b.length)
               return false;
           for (let i = 0; i < a.length; i++) {
               let gA = a[i], gB = b[i];
               if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)
                   return false;
           }
           return true;
       }
       draw(wrapping) {
           return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);
       }
   }
   class LineGapWidget extends WidgetType {
       constructor(size, vertical) {
           super();
           this.size = size;
           this.vertical = vertical;
       }
       eq(other) { return other.size == this.size && other.vertical == this.vertical; }
       toDOM() {
           let elt = document.createElement("div");
           if (this.vertical) {
               elt.style.height = this.size + "px";
           }
           else {
               elt.style.width = this.size + "px";
               elt.style.height = "2px";
               elt.style.display = "inline-block";
           }
           return elt;
       }
       get estimatedHeight() { return this.vertical ? this.size : -1; }
   }
   class ViewState {
       constructor(state) {
           this.state = state;
           // These are contentDOM-local coordinates
           this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };
           this.inView = true;
           this.paddingTop = 0;
           this.paddingBottom = 0;
           this.contentDOMWidth = 0;
           this.contentDOMHeight = 0;
           this.editorHeight = 0;
           this.editorWidth = 0;
           this.heightOracle = new HeightOracle;
           // See VP.MaxDOMHeight
           this.scaler = IdScaler;
           this.scrollTarget = null;
           // Briefly set to true when printing, to disable viewport limiting
           this.printing = false;
           // Flag set when editor content was redrawn, so that the next
           // measure stage knows it must read DOM layout
           this.mustMeasureContent = true;
           this.defaultTextDirection = Direction.RTL;
           this.visibleRanges = [];
           // Cursor 'assoc' is only significant when the cursor is on a line
           // wrap point, where it must stick to the character that it is
           // associated with. Since browsers don't provide a reasonable
           // interface to set or query this, when a selection is set that
           // might cause this to be significant, this flag is set. The next
           // measure phase will check whether the cursor is on a line-wrapping
           // boundary and, if so, reset it to make sure it is positioned in
           // the right place.
           this.mustEnforceCursorAssoc = false;
           this.stateDeco = state.facet(decorations).filter(d => typeof d != "function");
           this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);
           this.viewport = this.getViewport(0, null);
           this.updateViewportLines();
           this.updateForViewport();
           this.lineGaps = this.ensureLineGaps([]);
           this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));
           this.computeVisibleRanges();
       }
       updateForViewport() {
           let viewports = [this.viewport], { main } = this.state.selection;
           for (let i = 0; i <= 1; i++) {
               let pos = i ? main.head : main.anchor;
               if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {
                   let { from, to } = this.lineBlockAt(pos);
                   viewports.push(new Viewport(from, to));
               }
           }
           this.viewports = viewports.sort((a, b) => a.from - b.from);
           this.scaler = this.heightMap.height <= 7000000 /* VP.MaxDOMHeight */ ? IdScaler :
               new BigScaler(this.heightOracle.doc, this.heightMap, this.viewports);
       }
       updateViewportLines() {
           this.viewportLines = [];
           this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, block => {
               this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));
           });
       }
       update(update, scrollTarget = null) {
           this.state = update.state;
           let prevDeco = this.stateDeco;
           this.stateDeco = this.state.facet(decorations).filter(d => typeof d != "function");
           let contentChanges = update.changedRanges;
           let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));
           let prevHeight = this.heightMap.height;
           this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);
           if (this.heightMap.height != prevHeight)
               update.flags |= 2 /* UpdateFlag.Height */;
           let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;
           if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||
               !this.viewportIsAppropriate(viewport))
               viewport = this.getViewport(0, scrollTarget);
           let updateLines = !update.changes.empty || (update.flags & 2 /* UpdateFlag.Height */) ||
               viewport.from != this.viewport.from || viewport.to != this.viewport.to;
           this.viewport = viewport;
           this.updateForViewport();
           if (updateLines)
               this.updateViewportLines();
           if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))
               this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));
           update.flags |= this.computeVisibleRanges();
           if (scrollTarget)
               this.scrollTarget = scrollTarget;
           if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&
               update.state.selection.main.empty && update.state.selection.main.assoc)
               this.mustEnforceCursorAssoc = true;
       }
       measure(view) {
           let dom = view.contentDOM, style = window.getComputedStyle(dom);
           let oracle = this.heightOracle;
           let whiteSpace = style.whiteSpace;
           this.defaultTextDirection = style.direction == "rtl" ? Direction.RTL : Direction.LTR;
           let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);
           let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != dom.clientHeight;
           this.contentDOMHeight = dom.clientHeight;
           this.mustMeasureContent = false;
           let result = 0, bias = 0;
           // Vertical padding
           let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;
           if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {
               this.paddingTop = paddingTop;
               this.paddingBottom = paddingBottom;
               result |= 8 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */;
           }
           if (this.editorWidth != view.scrollDOM.clientWidth) {
               if (oracle.lineWrapping)
                   measureContent = true;
               this.editorWidth = view.scrollDOM.clientWidth;
               result |= 8 /* UpdateFlag.Geometry */;
           }
           // Pixel viewport
           let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);
           let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;
           this.pixelViewport = pixelViewport;
           let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
           if (inView != this.inView) {
               this.inView = inView;
               if (inView)
                   measureContent = true;
           }
           if (!this.inView && !this.scrollTarget)
               return 0;
           let contentWidth = dom.clientWidth;
           if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {
               this.contentDOMWidth = contentWidth;
               this.editorHeight = view.scrollDOM.clientHeight;
               result |= 8 /* UpdateFlag.Geometry */;
           }
           if (measureContent) {
               let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);
               if (oracle.mustRefreshForHeights(lineHeights))
                   refresh = true;
               if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {
                   let { lineHeight, charWidth } = view.docView.measureTextSize();
                   refresh = oracle.refresh(whiteSpace, lineHeight, charWidth, contentWidth / charWidth, lineHeights);
                   if (refresh) {
                       view.docView.minWidth = 0;
                       result |= 8 /* UpdateFlag.Geometry */;
                   }
               }
               if (dTop > 0 && dBottom > 0)
                   bias = Math.max(dTop, dBottom);
               else if (dTop < 0 && dBottom < 0)
                   bias = Math.min(dTop, dBottom);
               oracle.heightChanged = false;
               for (let vp of this.viewports) {
                   let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);
                   this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));
               }
               if (oracle.heightChanged)
                   result |= 2 /* UpdateFlag.Height */;
           }
           let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||
               this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
           if (viewportChange)
               this.viewport = this.getViewport(bias, this.scrollTarget);
           this.updateForViewport();
           if ((result & 2 /* UpdateFlag.Height */) || viewportChange)
               this.updateViewportLines();
           if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))
               this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps, view));
           result |= this.computeVisibleRanges();
           if (this.mustEnforceCursorAssoc) {
               this.mustEnforceCursorAssoc = false;
               // This is done in the read stage, because moving the selection
               // to a line end is going to trigger a layout anyway, so it
               // can't be a pure write. It should be rare that it does any
               // writing.
               view.docView.enforceCursorAssoc();
           }
           return result;
       }
       get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }
       get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }
       getViewport(bias, scrollTarget) {
           // This will divide VP.Margin between the top and the
           // bottom, depending on the bias (the change in viewport position
           // since the last update). It'll hold a number between 0 and 1
           let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* VP.Margin */ / 2));
           let map = this.heightMap, doc = this.state.doc, { visibleTop, visibleBottom } = this;
           let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* VP.Margin */, QueryType$1.ByHeight, doc, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* VP.Margin */, QueryType$1.ByHeight, doc, 0, 0).to);
           // If scrollTarget is given, make sure the viewport includes that position
           if (scrollTarget) {
               let { head } = scrollTarget.range;
               if (head < viewport.from || head > viewport.to) {
                   let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);
                   let block = map.lineAt(head, QueryType$1.ByPos, doc, 0, 0), topPos;
                   if (scrollTarget.y == "center")
                       topPos = (block.top + block.bottom) / 2 - viewHeight / 2;
                   else if (scrollTarget.y == "start" || scrollTarget.y == "nearest" && head < viewport.from)
                       topPos = block.top;
                   else
                       topPos = block.bottom - viewHeight;
                   viewport = new Viewport(map.lineAt(topPos - 1000 /* VP.Margin */ / 2, QueryType$1.ByHeight, doc, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* VP.Margin */ / 2, QueryType$1.ByHeight, doc, 0, 0).to);
               }
           }
           return viewport;
       }
       mapViewport(viewport, changes) {
           let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);
           return new Viewport(this.heightMap.lineAt(from, QueryType$1.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType$1.ByPos, this.state.doc, 0, 0).to);
       }
       // Checks if a given viewport covers the visible part of the
       // document and not too much beyond that.
       viewportIsAppropriate({ from, to }, bias = 0) {
           if (!this.inView)
               return true;
           let { top } = this.heightMap.lineAt(from, QueryType$1.ByPos, this.state.doc, 0, 0);
           let { bottom } = this.heightMap.lineAt(to, QueryType$1.ByPos, this.state.doc, 0, 0);
           let { visibleTop, visibleBottom } = this;
           return (from == 0 || top <= visibleTop - Math.max(10 /* VP.MinCoverMargin */, Math.min(-bias, 250 /* VP.MaxCoverMargin */))) &&
               (to == this.state.doc.length ||
                   bottom >= visibleBottom + Math.max(10 /* VP.MinCoverMargin */, Math.min(bias, 250 /* VP.MaxCoverMargin */))) &&
               (top > visibleTop - 2 * 1000 /* VP.Margin */ && bottom < visibleBottom + 2 * 1000 /* VP.Margin */);
       }
       mapLineGaps(gaps, changes) {
           if (!gaps.length || changes.empty)
               return gaps;
           let mapped = [];
           for (let gap of gaps)
               if (!changes.touchesRange(gap.from, gap.to))
                   mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));
           return mapped;
       }
       // Computes positions in the viewport where the start or end of a
       // line should be hidden, trying to reuse existing line gaps when
       // appropriate to avoid unneccesary redraws.
       // Uses crude character-counting for the positioning and sizing,
       // since actual DOM coordinates aren't always available and
       // predictable. Relies on generous margins (see LG.Margin) to hide
       // the artifacts this might produce from the user.
       ensureLineGaps(current, mayMeasure) {
           let wrapping = this.heightOracle.lineWrapping;
           let margin = wrapping ? 10000 /* LG.MarginWrap */ : 2000 /* LG.Margin */, halfMargin = margin >> 1, doubleMargin = margin << 1;
           // The non-wrapping logic won't work at all in predominantly right-to-left text.
           if (this.defaultTextDirection != Direction.LTR && !wrapping)
               return [];
           let gaps = [];
           let addGap = (from, to, line, structure) => {
               if (to - from < halfMargin)
                   return;
               let sel = this.state.selection.main, avoid = [sel.from];
               if (!sel.empty)
                   avoid.push(sel.to);
               for (let pos of avoid) {
                   if (pos > from && pos < to) {
                       addGap(from, pos - 10 /* LG.SelectionMargin */, line, structure);
                       addGap(pos + 10 /* LG.SelectionMargin */, to, line, structure);
                       return;
                   }
               }
               let gap = find(current, gap => gap.from >= line.from && gap.to <= line.to &&
                   Math.abs(gap.from - from) < halfMargin && Math.abs(gap.to - to) < halfMargin &&
                   !avoid.some(pos => gap.from < pos && gap.to > pos));
               if (!gap) {
                   // When scrolling down, snap gap ends to line starts to avoid shifts in wrapping
                   if (to < line.to && mayMeasure && wrapping &&
                       mayMeasure.visibleRanges.some(r => r.from <= to && r.to >= to)) {
                       let lineStart = mayMeasure.moveToLineBoundary(EditorSelection.cursor(to), false, true).head;
                       if (lineStart > from)
                           to = lineStart;
                   }
                   gap = new LineGap(from, to, this.gapSize(line, from, to, structure));
               }
               gaps.push(gap);
           };
           for (let line of this.viewportLines) {
               if (line.length < doubleMargin)
                   continue;
               let structure = lineStructure(line.from, line.to, this.stateDeco);
               if (structure.total < doubleMargin)
                   continue;
               let target = this.scrollTarget ? this.scrollTarget.range.head : null;
               let viewFrom, viewTo;
               if (wrapping) {
                   let marginHeight = (margin / this.heightOracle.lineLength) * this.heightOracle.lineHeight;
                   let top, bot;
                   if (target != null) {
                       top = Math.max(line.from, target - margin);
                       bot = Math.min(line.to, target + margin);
                   }
                   else {
                       top = (this.visibleTop - line.top - marginHeight) / line.height;
                       bot = (this.visibleBottom - line.top + marginHeight) / line.height;
                   }
                   viewFrom = findPosition(structure, top);
                   viewTo = findPosition(structure, bot);
               }
               else {
                   let left, right;
                   if (target != null) {
                       left = Math.max(line.from, target - doubleMargin);
                       right = Math.min(line.to, target + doubleMargin);
                   }
                   else {
                       let totalWidth = structure.total * this.heightOracle.charWidth;
                       let marginWidth = margin * this.heightOracle.charWidth;
                       left = (this.pixelViewport.left - marginWidth) / totalWidth;
                       right = (this.pixelViewport.right + marginWidth) / totalWidth;
                   }
                   viewFrom = findPosition(structure, left);
                   viewTo = findPosition(structure, right);
               }
               if (viewFrom > line.from)
                   addGap(line.from, viewFrom, line, structure);
               if (viewTo < line.to)
                   addGap(viewTo, line.to, line, structure);
           }
           return gaps;
       }
       gapSize(line, from, to, structure) {
           let fraction = findFraction(structure, to) - findFraction(structure, from);
           if (this.heightOracle.lineWrapping) {
               return line.height * fraction;
           }
           else {
               return structure.total * this.heightOracle.charWidth * fraction;
           }
       }
       updateLineGaps(gaps) {
           if (!LineGap.same(gaps, this.lineGaps)) {
               this.lineGaps = gaps;
               this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));
           }
       }
       computeVisibleRanges() {
           let deco = this.stateDeco;
           if (this.lineGaps.length)
               deco = deco.concat(this.lineGapDeco);
           let ranges = [];
           RangeSet.spans(deco, this.viewport.from, this.viewport.to, {
               span(from, to) { ranges.push({ from, to }); },
               point() { }
           }, 20);
           let changed = ranges.length != this.visibleRanges.length ||
               this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);
           this.visibleRanges = ranges;
           return changed ? 4 /* UpdateFlag.Viewport */ : 0;
       }
       lineBlockAt(pos) {
           return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||
               scaleBlock(this.heightMap.lineAt(pos, QueryType$1.ByPos, this.state.doc, 0, 0), this.scaler);
       }
       lineBlockAtHeight(height) {
           return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType$1.ByHeight, this.state.doc, 0, 0), this.scaler);
       }
       elementAtHeight(height) {
           return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.state.doc, 0, 0), this.scaler);
       }
       get docHeight() {
           return this.scaler.toDOM(this.heightMap.height);
       }
       get contentHeight() {
           return this.docHeight + this.paddingTop + this.paddingBottom;
       }
   }
   class Viewport {
       constructor(from, to) {
           this.from = from;
           this.to = to;
       }
   }
   function lineStructure(from, to, stateDeco) {
       let ranges = [], pos = from, total = 0;
       RangeSet.spans(stateDeco, from, to, {
           span() { },
           point(from, to) {
               if (from > pos) {
                   ranges.push({ from: pos, to: from });
                   total += from - pos;
               }
               pos = to;
           }
       }, 20); // We're only interested in collapsed ranges of a significant size
       if (pos < to) {
           ranges.push({ from: pos, to });
           total += to - pos;
       }
       return { total, ranges };
   }
   function findPosition({ total, ranges }, ratio) {
       if (ratio <= 0)
           return ranges[0].from;
       if (ratio >= 1)
           return ranges[ranges.length - 1].to;
       let dist = Math.floor(total * ratio);
       for (let i = 0;; i++) {
           let { from, to } = ranges[i], size = to - from;
           if (dist <= size)
               return from + dist;
           dist -= size;
       }
   }
   function findFraction(structure, pos) {
       let counted = 0;
       for (let { from, to } of structure.ranges) {
           if (pos <= to) {
               counted += pos - from;
               break;
           }
           counted += to - from;
       }
       return counted / structure.total;
   }
   function find(array, f) {
       for (let val of array)
           if (f(val))
               return val;
       return undefined;
   }
   // Don't scale when the document height is within the range of what
   // the DOM can handle.
   const IdScaler = {
       toDOM(n) { return n; },
       fromDOM(n) { return n; },
       scale: 1
   };
   // When the height is too big (> VP.MaxDOMHeight), scale down the
   // regions outside the viewports so that the total height is
   // VP.MaxDOMHeight.
   class BigScaler {
       constructor(doc, heightMap, viewports) {
           let vpHeight = 0, base = 0, domBase = 0;
           this.viewports = viewports.map(({ from, to }) => {
               let top = heightMap.lineAt(from, QueryType$1.ByPos, doc, 0, 0).top;
               let bottom = heightMap.lineAt(to, QueryType$1.ByPos, doc, 0, 0).bottom;
               vpHeight += bottom - top;
               return { from, to, top, bottom, domTop: 0, domBottom: 0 };
           });
           this.scale = (7000000 /* VP.MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);
           for (let obj of this.viewports) {
               obj.domTop = domBase + (obj.top - base) * this.scale;
               domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);
               base = obj.bottom;
           }
       }
       toDOM(n) {
           for (let i = 0, base = 0, domBase = 0;; i++) {
               let vp = i < this.viewports.length ? this.viewports[i] : null;
               if (!vp || n < vp.top)
                   return domBase + (n - base) * this.scale;
               if (n <= vp.bottom)
                   return vp.domTop + (n - vp.top);
               base = vp.bottom;
               domBase = vp.domBottom;
           }
       }
       fromDOM(n) {
           for (let i = 0, base = 0, domBase = 0;; i++) {
               let vp = i < this.viewports.length ? this.viewports[i] : null;
               if (!vp || n < vp.domTop)
                   return base + (n - domBase) / this.scale;
               if (n <= vp.domBottom)
                   return vp.top + (n - vp.domTop);
               base = vp.bottom;
               domBase = vp.domBottom;
           }
       }
   }
   function scaleBlock(block, scaler) {
       if (scaler.scale == 1)
           return block;
       let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);
       return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);
   }

   const theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(" ") });
   const darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });
   const baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();
   const lightDarkIDs = { "&light": "." + baseLightID, "&dark": "." + baseDarkID };
   function buildTheme(main, spec, scopes) {
       return new StyleModule(spec, {
           finish(sel) {
               return /&/.test(sel) ? sel.replace(/&\w*/, m => {
                   if (m == "&")
                       return main;
                   if (!scopes || !scopes[m])
                       throw new RangeError(`Unsupported selector: ${m}`);
                   return scopes[m];
               }) : main + " " + sel;
           }
       });
   }
   const baseTheme$1$3 = /*@__PURE__*/buildTheme("." + baseThemeID, {
       "&.cm-editor": {
           position: "relative !important",
           boxSizing: "border-box",
           "&.cm-focused": {
               // Provide a simple default outline to make sure a focused
               // editor is visually distinct. Can't leave the default behavior
               // because that will apply to the content element, which is
               // inside the scrollable container and doesn't include the
               // gutters. We also can't use an 'auto' outline, since those
               // are, for some reason, drawn behind the element content, which
               // will cause things like the active line background to cover
               // the outline (#297).
               outline: "1px dotted #212121"
           },
           display: "flex !important",
           flexDirection: "column"
       },
       ".cm-scroller": {
           display: "flex !important",
           alignItems: "flex-start !important",
           fontFamily: "monospace",
           lineHeight: 1.4,
           height: "100%",
           overflowX: "auto",
           position: "relative",
           zIndex: 0
       },
       ".cm-content": {
           margin: 0,
           flexGrow: 2,
           flexShrink: 0,
           minHeight: "100%",
           display: "block",
           whiteSpace: "pre",
           wordWrap: "normal",
           boxSizing: "border-box",
           padding: "4px 0",
           outline: "none",
           "&[contenteditable=true]": {
               WebkitUserModify: "read-write-plaintext-only",
           }
       },
       ".cm-lineWrapping": {
           whiteSpace_fallback: "pre-wrap",
           whiteSpace: "break-spaces",
           wordBreak: "break-word",
           overflowWrap: "anywhere",
           flexShrink: 1
       },
       "&light .cm-content": { caretColor: "black" },
       "&dark .cm-content": { caretColor: "white" },
       ".cm-line": {
           display: "block",
           padding: "0 2px 0 4px"
       },
       ".cm-selectionLayer": {
           zIndex: -1,
           contain: "size style"
       },
       ".cm-selectionBackground": {
           position: "absolute",
       },
       "&light .cm-selectionBackground": {
           background: "#d9d9d9"
       },
       "&dark .cm-selectionBackground": {
           background: "#222"
       },
       "&light.cm-focused .cm-selectionBackground": {
           background: "#d7d4f0"
       },
       "&dark.cm-focused .cm-selectionBackground": {
           background: "#233"
       },
       ".cm-cursorLayer": {
           zIndex: 100,
           contain: "size style",
           pointerEvents: "none"
       },
       "&.cm-focused .cm-cursorLayer": {
           animation: "steps(1) cm-blink 1.2s infinite"
       },
       // Two animations defined so that we can switch between them to
       // restart the animation without forcing another style
       // recomputation.
       "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
       "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
       ".cm-cursor, .cm-dropCursor": {
           position: "absolute",
           borderLeft: "1.2px solid black",
           marginLeft: "-0.6px",
           pointerEvents: "none",
       },
       ".cm-cursor": {
           display: "none"
       },
       "&dark .cm-cursor": {
           borderLeftColor: "#444"
       },
       "&.cm-focused .cm-cursor": {
           display: "block"
       },
       "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
       "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
       "&light .cm-specialChar": { color: "red" },
       "&dark .cm-specialChar": { color: "#f78" },
       ".cm-gutters": {
           flexShrink: 0,
           display: "flex",
           height: "100%",
           boxSizing: "border-box",
           left: 0,
           zIndex: 200
       },
       "&light .cm-gutters": {
           backgroundColor: "#f5f5f5",
           color: "#6c6c6c",
           borderRight: "1px solid #ddd"
       },
       "&dark .cm-gutters": {
           backgroundColor: "#333338",
           color: "#ccc"
       },
       ".cm-gutter": {
           display: "flex !important",
           flexDirection: "column",
           flexShrink: 0,
           boxSizing: "border-box",
           minHeight: "100%",
           overflow: "hidden"
       },
       ".cm-gutterElement": {
           boxSizing: "border-box"
       },
       ".cm-lineNumbers .cm-gutterElement": {
           padding: "0 3px 0 5px",
           minWidth: "20px",
           textAlign: "right",
           whiteSpace: "nowrap"
       },
       "&light .cm-activeLineGutter": {
           backgroundColor: "#e2f2ff"
       },
       "&dark .cm-activeLineGutter": {
           backgroundColor: "#222227"
       },
       ".cm-panels": {
           boxSizing: "border-box",
           position: "sticky",
           left: 0,
           right: 0
       },
       "&light .cm-panels": {
           backgroundColor: "#f5f5f5",
           color: "black"
       },
       "&light .cm-panels-top": {
           borderBottom: "1px solid #ddd"
       },
       "&light .cm-panels-bottom": {
           borderTop: "1px solid #ddd"
       },
       "&dark .cm-panels": {
           backgroundColor: "#333338",
           color: "white"
       },
       ".cm-tab": {
           display: "inline-block",
           overflow: "hidden",
           verticalAlign: "bottom"
       },
       ".cm-widgetBuffer": {
           verticalAlign: "text-top",
           height: "1em",
           width: 0,
           display: "inline"
       },
       ".cm-placeholder": {
           color: "#888",
           display: "inline-block",
           verticalAlign: "top",
       },
       ".cm-button": {
           verticalAlign: "middle",
           color: "inherit",
           fontSize: "70%",
           padding: ".2em 1em",
           borderRadius: "1px"
       },
       "&light .cm-button": {
           backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
           border: "1px solid #888",
           "&:active": {
               backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
           }
       },
       "&dark .cm-button": {
           backgroundImage: "linear-gradient(#393939, #111)",
           border: "1px solid #888",
           "&:active": {
               backgroundImage: "linear-gradient(#111, #333)"
           }
       },
       ".cm-textfield": {
           verticalAlign: "middle",
           color: "inherit",
           fontSize: "70%",
           border: "1px solid silver",
           padding: ".2em .5em"
       },
       "&light .cm-textfield": {
           backgroundColor: "white"
       },
       "&dark .cm-textfield": {
           border: "1px solid #555",
           backgroundColor: "inherit"
       }
   }, lightDarkIDs);

   const observeOptions = {
       childList: true,
       characterData: true,
       subtree: true,
       attributes: true,
       characterDataOldValue: true
   };
   // IE11 has very broken mutation observers, so we also listen to
   // DOMCharacterDataModified there
   const useCharData = browser.ie && browser.ie_version <= 11;
   class DOMObserver {
       constructor(view, onChange, onScrollChanged) {
           this.view = view;
           this.onChange = onChange;
           this.onScrollChanged = onScrollChanged;
           this.active = false;
           // The known selection. Kept in our own object, as opposed to just
           // directly accessing the selection because:
           //  - Safari doesn't report the right selection in shadow DOM
           //  - Reading from the selection forces a DOM layout
           //  - This way, we can ignore selectionchange events if we have
           //    already seen the 'new' selection
           this.selectionRange = new DOMSelectionState;
           // Set when a selection change is detected, cleared on flush
           this.selectionChanged = false;
           this.delayedFlush = -1;
           this.resizeTimeout = -1;
           this.queue = [];
           this.delayedAndroidKey = null;
           this.lastChange = 0;
           this.scrollTargets = [];
           this.intersection = null;
           this.resize = null;
           this.intersecting = false;
           this.gapIntersection = null;
           this.gaps = [];
           // Timeout for scheduling check of the parents that need scroll handlers
           this.parentCheck = -1;
           this.dom = view.contentDOM;
           this.observer = new MutationObserver(mutations => {
               for (let mut of mutations)
                   this.queue.push(mut);
               // IE11 will sometimes (on typing over a selection or
               // backspacing out a single character text node) call the
               // observer callback before actually updating the DOM.
               //
               // Unrelatedly, iOS Safari will, when ending a composition,
               // sometimes first clear it, deliver the mutations, and then
               // reinsert the finished text. CodeMirror's handling of the
               // deletion will prevent the reinsertion from happening,
               // breaking composition.
               if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&
                   mutations.some(m => m.type == "childList" && m.removedNodes.length ||
                       m.type == "characterData" && m.oldValue.length > m.target.nodeValue.length))
                   this.flushSoon();
               else
                   this.flush();
           });
           if (useCharData)
               this.onCharData = (event) => {
                   this.queue.push({ target: event.target,
                       type: "characterData",
                       oldValue: event.prevValue });
                   this.flushSoon();
               };
           this.onSelectionChange = this.onSelectionChange.bind(this);
           this.onResize = this.onResize.bind(this);
           this.onPrint = this.onPrint.bind(this);
           this.onScroll = this.onScroll.bind(this);
           if (typeof ResizeObserver == "function") {
               this.resize = new ResizeObserver(() => {
                   if (this.view.docView.lastUpdate < Date.now() - 75)
                       this.onResize();
               });
               this.resize.observe(view.scrollDOM);
           }
           this.addWindowListeners(this.win = view.win);
           this.start();
           if (typeof IntersectionObserver == "function") {
               this.intersection = new IntersectionObserver(entries => {
                   if (this.parentCheck < 0)
                       this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);
                   if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {
                       this.intersecting = !this.intersecting;
                       if (this.intersecting != this.view.inView)
                           this.onScrollChanged(document.createEvent("Event"));
                   }
               }, {});
               this.intersection.observe(this.dom);
               this.gapIntersection = new IntersectionObserver(entries => {
                   if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)
                       this.onScrollChanged(document.createEvent("Event"));
               }, {});
           }
           this.listenForScroll();
           this.readSelectionRange();
       }
       onScroll(e) {
           if (this.intersecting)
               this.flush(false);
           this.onScrollChanged(e);
       }
       onResize() {
           if (this.resizeTimeout < 0)
               this.resizeTimeout = setTimeout(() => {
                   this.resizeTimeout = -1;
                   this.view.requestMeasure();
               }, 50);
       }
       onPrint() {
           this.view.viewState.printing = true;
           this.view.measure();
           setTimeout(() => {
               this.view.viewState.printing = false;
               this.view.requestMeasure();
           }, 500);
       }
       updateGaps(gaps) {
           if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {
               this.gapIntersection.disconnect();
               for (let gap of gaps)
                   this.gapIntersection.observe(gap);
               this.gaps = gaps;
           }
       }
       onSelectionChange(event) {
           let wasChanged = this.selectionChanged;
           if (!this.readSelectionRange() || this.delayedAndroidKey)
               return;
           let { view } = this, sel = this.selectionRange;
           if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))
               return;
           let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);
           if (context && context.ignoreEvent(event)) {
               if (!wasChanged)
                   this.selectionChanged = false;
               return;
           }
           // Deletions on IE11 fire their events in the wrong order, giving
           // us a selection change event before the DOM changes are
           // reported.
           // Chrome Android has a similar issue when backspacing out a
           // selection (#645).
           if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&
               // (Selection.isCollapsed isn't reliable on IE)
               sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))
               this.flushSoon();
           else
               this.flush(false);
       }
       readSelectionRange() {
           let { view } = this;
           // The Selection object is broken in shadow roots in Safari. See
           // https://github.com/codemirror/dev/issues/414
           let range = browser.safari && view.root.nodeType == 11 &&
               deepActiveElement(this.dom.ownerDocument) == this.dom &&
               safariSelectionRangeHack(this.view) || getSelection(view.root);
           if (!range || this.selectionRange.eq(range))
               return false;
           let local = hasSelection(this.dom, range);
           // Detect the situation where the browser has, on focus, moved the
           // selection to the start of the content element. Reset it to the
           // position from the editor state.
           if (local && !this.selectionChanged &&
               view.inputState.lastFocusTime > Date.now() - 200 &&
               view.inputState.lastTouchTime < Date.now() - 300 &&
               atElementStart(this.dom, range)) {
               this.view.inputState.lastFocusTime = 0;
               view.docView.updateSelection();
               return false;
           }
           this.selectionRange.setRange(range);
           if (local)
               this.selectionChanged = true;
           return true;
       }
       setSelectionRange(anchor, head) {
           this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);
           this.selectionChanged = false;
       }
       clearSelectionRange() {
           this.selectionRange.set(null, 0, null, 0);
       }
       listenForScroll() {
           this.parentCheck = -1;
           let i = 0, changed = null;
           for (let dom = this.dom; dom;) {
               if (dom.nodeType == 1) {
                   if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)
                       i++;
                   else if (!changed)
                       changed = this.scrollTargets.slice(0, i);
                   if (changed)
                       changed.push(dom);
                   dom = dom.assignedSlot || dom.parentNode;
               }
               else if (dom.nodeType == 11) { // Shadow root
                   dom = dom.host;
               }
               else {
                   break;
               }
           }
           if (i < this.scrollTargets.length && !changed)
               changed = this.scrollTargets.slice(0, i);
           if (changed) {
               for (let dom of this.scrollTargets)
                   dom.removeEventListener("scroll", this.onScroll);
               for (let dom of this.scrollTargets = changed)
                   dom.addEventListener("scroll", this.onScroll);
           }
       }
       ignore(f) {
           if (!this.active)
               return f();
           try {
               this.stop();
               return f();
           }
           finally {
               this.start();
               this.clear();
           }
       }
       start() {
           if (this.active)
               return;
           this.observer.observe(this.dom, observeOptions);
           if (useCharData)
               this.dom.addEventListener("DOMCharacterDataModified", this.onCharData);
           this.active = true;
       }
       stop() {
           if (!this.active)
               return;
           this.active = false;
           this.observer.disconnect();
           if (useCharData)
               this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData);
       }
       // Throw away any pending changes
       clear() {
           this.processRecords();
           this.queue.length = 0;
           this.selectionChanged = false;
       }
       // Chrome Android, especially in combination with GBoard, not only
       // doesn't reliably fire regular key events, but also often
       // surrounds the effect of enter or backspace with a bunch of
       // composition events that, when interrupted, cause text duplication
       // or other kinds of corruption. This hack makes the editor back off
       // from handling DOM changes for a moment when such a key is
       // detected (via beforeinput or keydown), and then tries to flush
       // them or, if that has no effect, dispatches the given key.
       delayAndroidKey(key, keyCode) {
           var _a;
           if (!this.delayedAndroidKey)
               this.view.win.requestAnimationFrame(() => {
                   let key = this.delayedAndroidKey;
                   this.delayedAndroidKey = null;
                   this.delayedFlush = -1;
                   if (!this.flush() && key.force)
                       dispatchKey(this.dom, key.key, key.keyCode);
               });
           // Since backspace beforeinput is sometimes signalled spuriously,
           // Enter always takes precedence.
           if (!this.delayedAndroidKey || key == "Enter")
               this.delayedAndroidKey = {
                   key, keyCode,
                   // Only run the key handler when no changes are detected if
                   // this isn't coming right after another change, in which case
                   // it is probably part of a weird chain of updates, and should
                   // be ignored if it returns the DOM to its previous state.
                   force: this.lastChange < Date.now() - 50 || !!((_a = this.delayedAndroidKey) === null || _a === void 0 ? void 0 : _a.force)
               };
       }
       flushSoon() {
           if (this.delayedFlush < 0)
               this.delayedFlush = this.view.win.requestAnimationFrame(() => { this.delayedFlush = -1; this.flush(); });
       }
       forceFlush() {
           if (this.delayedFlush >= 0) {
               this.view.win.cancelAnimationFrame(this.delayedFlush);
               this.delayedFlush = -1;
           }
           this.flush();
       }
       processRecords() {
           let records = this.queue;
           for (let mut of this.observer.takeRecords())
               records.push(mut);
           if (records.length)
               this.queue = [];
           let from = -1, to = -1, typeOver = false;
           for (let record of records) {
               let range = this.readMutation(record);
               if (!range)
                   continue;
               if (range.typeOver)
                   typeOver = true;
               if (from == -1) {
                   ({ from, to } = range);
               }
               else {
                   from = Math.min(range.from, from);
                   to = Math.max(range.to, to);
               }
           }
           return { from, to, typeOver };
       }
       // Apply pending changes, if any
       flush(readSelection = true) {
           // Completely hold off flushing when pending keys are set—the code
           // managing those will make sure processRecords is called and the
           // view is resynchronized after
           if (this.delayedFlush >= 0 || this.delayedAndroidKey)
               return false;
           if (readSelection)
               this.readSelectionRange();
           let { from, to, typeOver } = this.processRecords();
           let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);
           if (from < 0 && !newSel)
               return false;
           if (from > -1)
               this.lastChange = Date.now();
           this.view.inputState.lastFocusTime = 0;
           this.selectionChanged = false;
           let startState = this.view.state;
           let handled = this.onChange(from, to, typeOver);
           // The view wasn't updated
           if (this.view.state == startState)
               this.view.update([]);
           return handled;
       }
       readMutation(rec) {
           let cView = this.view.docView.nearest(rec.target);
           if (!cView || cView.ignoreMutation(rec))
               return null;
           cView.markDirty(rec.type == "attributes");
           if (rec.type == "attributes")
               cView.dirty |= 4 /* Dirty.Attrs */;
           if (rec.type == "childList") {
               let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);
               let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);
               return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,
                   to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };
           }
           else if (rec.type == "characterData") {
               return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };
           }
           else {
               return null;
           }
       }
       setWindow(win) {
           if (win != this.win) {
               this.removeWindowListeners(this.win);
               this.win = win;
               this.addWindowListeners(this.win);
           }
       }
       addWindowListeners(win) {
           win.addEventListener("resize", this.onResize);
           win.addEventListener("beforeprint", this.onPrint);
           win.addEventListener("scroll", this.onScroll);
           win.document.addEventListener("selectionchange", this.onSelectionChange);
       }
       removeWindowListeners(win) {
           win.removeEventListener("scroll", this.onScroll);
           win.removeEventListener("resize", this.onResize);
           win.removeEventListener("beforeprint", this.onPrint);
           win.document.removeEventListener("selectionchange", this.onSelectionChange);
       }
       destroy() {
           var _a, _b, _c;
           this.stop();
           (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();
           (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();
           (_c = this.resize) === null || _c === void 0 ? void 0 : _c.disconnect();
           for (let dom of this.scrollTargets)
               dom.removeEventListener("scroll", this.onScroll);
           this.removeWindowListeners(this.win);
           clearTimeout(this.parentCheck);
           clearTimeout(this.resizeTimeout);
       }
   }
   function findChild(cView, dom, dir) {
       while (dom) {
           let curView = ContentView.get(dom);
           if (curView && curView.parent == cView)
               return curView;
           let parent = dom.parentNode;
           dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;
       }
       return null;
   }
   // Used to work around a Safari Selection/shadow DOM bug (#414)
   function safariSelectionRangeHack(view) {
       let found = null;
       // Because Safari (at least in 2018-2021) doesn't provide regular
       // access to the selection inside a shadowroot, we have to perform a
       // ridiculous hack to get at it—using `execCommand` to trigger a
       // `beforeInput` event so that we can read the target range from the
       // event.
       function read(event) {
           event.preventDefault();
           event.stopImmediatePropagation();
           found = event.getTargetRanges()[0];
       }
       view.contentDOM.addEventListener("beforeinput", read, true);
       view.dom.ownerDocument.execCommand("indent");
       view.contentDOM.removeEventListener("beforeinput", read, true);
       if (!found)
           return null;
       let anchorNode = found.startContainer, anchorOffset = found.startOffset;
       let focusNode = found.endContainer, focusOffset = found.endOffset;
       let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);
       // Since such a range doesn't distinguish between anchor and head,
       // use a heuristic that flips it around if its end matches the
       // current anchor.
       if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))
           [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];
       return { anchorNode, anchorOffset, focusNode, focusOffset };
   }

   function applyDOMChange(view, start, end, typeOver) {
       let change, newSel;
       let sel = view.state.selection.main;
       if (start > -1) {
           let bounds = view.docView.domBoundsAround(start, end, 0);
           if (!bounds || view.state.readOnly)
               return false;
           let { from, to } = bounds;
           let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view);
           let reader = new DOMReader(selPoints, view.state);
           reader.readRange(bounds.startDOM, bounds.endDOM);
           let preferredPos = sel.from, preferredSide = null;
           // Prefer anchoring to end when Backspace is pressed (or, on
           // Android, when something was deleted)
           if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 ||
               browser.android && reader.text.length < to - from) {
               preferredPos = sel.to;
               preferredSide = "end";
           }
           let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), reader.text, preferredPos - from, preferredSide);
           if (diff) {
               // Chrome inserts two newlines when pressing shift-enter at the
               // end of a line. This drops one of those.
               if (browser.chrome && view.inputState.lastKeyCode == 13 &&
                   diff.toB == diff.from + 2 && reader.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)
                   diff.toB--;
               change = { from: from + diff.from, to: from + diff.toA,
                   insert: Text.of(reader.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };
           }
           newSel = selectionFromPoints(selPoints, from);
       }
       else if (view.hasFocus || !view.state.facet(editable)) {
           let domSel = view.observer.selectionRange;
           let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;
           let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||
               !contains(view.contentDOM, domSel.focusNode)
               ? view.state.selection.main.head
               : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);
           let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||
               !contains(view.contentDOM, domSel.anchorNode)
               ? view.state.selection.main.anchor
               : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);
           if (head != sel.head || anchor != sel.anchor)
               newSel = EditorSelection.single(anchor, head);
       }
       if (!change && !newSel)
           return false;
       if (!change && typeOver && !sel.empty && newSel && newSel.main.empty) {
           // Heuristic to notice typing over a selected character
           change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };
       }
       else if (change && change.from >= sel.from && change.to <= sel.to &&
           (change.from != sel.from || change.to != sel.to) &&
           (sel.to - sel.from) - (change.to - change.from) <= 4) {
           // If the change is inside the selection and covers most of it,
           // assume it is a selection replace (with identical characters at
           // the start/end not included in the diff)
           change = {
               from: sel.from, to: sel.to,
               insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))
           };
       }
       else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&
           /^\. ?$/.test(change.insert.toString())) {
           // Detect insert-period-on-double-space Mac and Android behavior,
           // and transform it into a regular space insert.
           if (newSel && change.insert.length == 2)
               newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);
           change = { from: sel.from, to: sel.to, insert: Text.of([" "]) };
       }
       if (change) {
           let startState = view.state;
           if (browser.ios && view.inputState.flushIOSKey(view))
               return true;
           // Android browsers don't fire reasonable key events for enter,
           // backspace, or delete. So this detects changes that look like
           // they're caused by those keys, and reinterprets them as key
           // events. (Some of these keys are also handled by beforeinput
           // events and the pendingAndroidKey mechanism, but that's not
           // reliable in all situations.)
           if (browser.android &&
               ((change.from == sel.from && change.to == sel.to &&
                   change.insert.length == 1 && change.insert.lines == 2 &&
                   dispatchKey(view.contentDOM, "Enter", 13)) ||
                   (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&
                       dispatchKey(view.contentDOM, "Backspace", 8)) ||
                   (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&
                       dispatchKey(view.contentDOM, "Delete", 46))))
               return true;
           let text = change.insert.toString();
           if (view.state.facet(inputHandler$1).some(h => h(view, change.from, change.to, text)))
               return true;
           if (view.inputState.composing >= 0)
               view.inputState.composing++;
           let tr;
           if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&
               (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&
               view.inputState.composing < 0) {
               let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : "";
               let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : "";
               tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));
           }
           else {
               let changes = startState.changes(change);
               let mainSel = newSel && !startState.selection.main.eq(newSel.main) && newSel.main.to <= changes.newLength
                   ? newSel.main : undefined;
               // Try to apply a composition change to all cursors
               if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&
                   change.to <= sel.to && change.to >= sel.to - 10) {
                   let replaced = view.state.sliceDoc(change.from, change.to);
                   let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);
                   let offset = sel.to - change.to, size = sel.to - sel.from;
                   tr = startState.changeByRange(range => {
                       if (range.from == sel.from && range.to == sel.to)
                           return { changes, range: mainSel || range.map(changes) };
                       let to = range.to - offset, from = to - replaced.length;
                       if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||
                           // Unfortunately, there's no way to make multiple
                           // changes in the same node work without aborting
                           // composition, so cursors in the composition range are
                           // ignored.
                           compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to)
                           return { range };
                       let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;
                       return {
                           changes: rangeChanges,
                           range: !mainSel ? range.map(rangeChanges) :
                               EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))
                       };
                   });
               }
               else {
                   tr = {
                       changes,
                       selection: mainSel && startState.selection.replaceRange(mainSel)
                   };
               }
           }
           let userEvent = "input.type";
           if (view.composing) {
               userEvent += ".compose";
               if (view.inputState.compositionFirstChange) {
                   userEvent += ".start";
                   view.inputState.compositionFirstChange = false;
               }
           }
           view.dispatch(tr, { scrollIntoView: true, userEvent });
           return true;
       }
       else if (newSel && !newSel.main.eq(sel)) {
           let scrollIntoView = false, userEvent = "select";
           if (view.inputState.lastSelectionTime > Date.now() - 50) {
               if (view.inputState.lastSelectionOrigin == "select")
                   scrollIntoView = true;
               userEvent = view.inputState.lastSelectionOrigin;
           }
           view.dispatch({ selection: newSel, scrollIntoView, userEvent });
           return true;
       }
       else {
           return false;
       }
   }
   function findDiff(a, b, preferredPos, preferredSide) {
       let minLen = Math.min(a.length, b.length);
       let from = 0;
       while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))
           from++;
       if (from == minLen && a.length == b.length)
           return null;
       let toA = a.length, toB = b.length;
       while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {
           toA--;
           toB--;
       }
       if (preferredSide == "end") {
           let adjust = Math.max(0, from - Math.min(toA, toB));
           preferredPos -= toA + adjust - from;
       }
       if (toA < from && a.length < b.length) {
           let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;
           from -= move;
           toB = from + (toB - toA);
           toA = from;
       }
       else if (toB < from) {
           let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;
           from -= move;
           toA = from + (toA - toB);
           toB = from;
       }
       return { from, toA, toB };
   }
   function selectionPoints(view) {
       let result = [];
       if (view.root.activeElement != view.contentDOM)
           return result;
       let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;
       if (anchorNode) {
           result.push(new DOMPoint(anchorNode, anchorOffset));
           if (focusNode != anchorNode || focusOffset != anchorOffset)
               result.push(new DOMPoint(focusNode, focusOffset));
       }
       return result;
   }
   function selectionFromPoints(points, base) {
       if (points.length == 0)
           return null;
       let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;
       return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;
   }

   // The editor's update state machine looks something like this:
   //
   //     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle
   //                                         ↑      ↓
   //                                         Updating (measure)
   //
   // The difference between 'Idle' and 'Idle (unchecked)' lies in
   // whether a layout check has been scheduled. A regular update through
   // the `update` method updates the DOM in a write-only fashion, and
   // relies on a check (scheduled with `requestAnimationFrame`) to make
   // sure everything is where it should be and the viewport covers the
   // visible code. That check continues to measure and then optionally
   // update until it reaches a coherent state.
   /**
   An editor view represents the editor's user interface. It holds
   the editable DOM surface, and possibly other elements such as the
   line number gutter. It handles events and dispatches state
   transactions for editing actions.
   */
   class EditorView {
       /**
       Construct a new view. You'll want to either provide a `parent`
       option, or put `view.dom` into your document after creating a
       view, so that the user can see the editor.
       */
       constructor(config = {}) {
           this.plugins = [];
           this.pluginMap = new Map;
           this.editorAttrs = {};
           this.contentAttrs = {};
           this.bidiCache = [];
           this.destroyed = false;
           /**
           @internal
           */
           this.updateState = 2 /* UpdateState.Updating */;
           /**
           @internal
           */
           this.measureScheduled = -1;
           /**
           @internal
           */
           this.measureRequests = [];
           this.contentDOM = document.createElement("div");
           this.scrollDOM = document.createElement("div");
           this.scrollDOM.tabIndex = -1;
           this.scrollDOM.className = "cm-scroller";
           this.scrollDOM.appendChild(this.contentDOM);
           this.announceDOM = document.createElement("div");
           this.announceDOM.style.cssText = "position: absolute; top: -10000px";
           this.announceDOM.setAttribute("aria-live", "polite");
           this.dom = document.createElement("div");
           this.dom.appendChild(this.announceDOM);
           this.dom.appendChild(this.scrollDOM);
           this._dispatch = config.dispatch || ((tr) => this.update([tr]));
           this.dispatch = this.dispatch.bind(this);
           this._root = (config.root || getRoot(config.parent) || document);
           this.viewState = new ViewState(config.state || EditorState.create(config));
           this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));
           for (let plugin of this.plugins)
               plugin.update(this);
           this.observer = new DOMObserver(this, (from, to, typeOver) => {
               return applyDOMChange(this, from, to, typeOver);
           }, event => {
               this.inputState.runScrollHandlers(this, event);
               if (this.observer.intersecting)
                   this.measure();
           });
           this.inputState = new InputState(this);
           this.inputState.ensureHandlers(this, this.plugins);
           this.docView = new DocView(this);
           this.mountStyles();
           this.updateAttrs();
           this.updateState = 0 /* UpdateState.Idle */;
           this.requestMeasure();
           if (config.parent)
               config.parent.appendChild(this.dom);
       }
       /**
       The current editor state.
       */
       get state() { return this.viewState.state; }
       /**
       To be able to display large documents without consuming too much
       memory or overloading the browser, CodeMirror only draws the
       code that is visible (plus a margin around it) to the DOM. This
       property tells you the extent of the current drawn viewport, in
       document positions.
       */
       get viewport() { return this.viewState.viewport; }
       /**
       When there are, for example, large collapsed ranges in the
       viewport, its size can be a lot bigger than the actual visible
       content. Thus, if you are doing something like styling the
       content in the viewport, it is preferable to only do so for
       these ranges, which are the subset of the viewport that is
       actually drawn.
       */
       get visibleRanges() { return this.viewState.visibleRanges; }
       /**
       Returns false when the editor is entirely scrolled out of view
       or otherwise hidden.
       */
       get inView() { return this.viewState.inView; }
       /**
       Indicates whether the user is currently composing text via
       [IME](https://en.wikipedia.org/wiki/Input_method), and at least
       one change has been made in the current composition.
       */
       get composing() { return this.inputState.composing > 0; }
       /**
       Indicates whether the user is currently in composing state. Note
       that on some platforms, like Android, this will be the case a
       lot, since just putting the cursor on a word starts a
       composition there.
       */
       get compositionStarted() { return this.inputState.composing >= 0; }
       /**
       The document or shadow root that the view lives in.
       */
       get root() { return this._root; }
       /**
       @internal
       */
       get win() { return this.dom.ownerDocument.defaultView || window; }
       dispatch(...input) {
           this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]
               : this.state.update(...input));
       }
       /**
       Update the view for the given array of transactions. This will
       update the visible document and selection to match the state
       produced by the transactions, and notify view plugins of the
       change. You should usually call
       [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
       as a primitive.
       */
       update(transactions) {
           if (this.updateState != 0 /* UpdateState.Idle */)
               throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
           let redrawn = false, attrsChanged = false, update;
           let state = this.state;
           for (let tr of transactions) {
               if (tr.startState != state)
                   throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
               state = tr.state;
           }
           if (this.destroyed) {
               this.viewState.state = state;
               return;
           }
           this.observer.clear();
           // When the phrases change, redraw the editor
           if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))
               return this.setState(state);
           update = ViewUpdate.create(this, state, transactions);
           let scrollTarget = this.viewState.scrollTarget;
           try {
               this.updateState = 2 /* UpdateState.Updating */;
               for (let tr of transactions) {
                   if (scrollTarget)
                       scrollTarget = scrollTarget.map(tr.changes);
                   if (tr.scrollIntoView) {
                       let { main } = tr.state.selection;
                       scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));
                   }
                   for (let e of tr.effects)
                       if (e.is(scrollIntoView$1))
                           scrollTarget = e.value;
               }
               this.viewState.update(update, scrollTarget);
               this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);
               if (!update.empty) {
                   this.updatePlugins(update);
                   this.inputState.update(update);
               }
               redrawn = this.docView.update(update);
               if (this.state.facet(styleModule) != this.styleModules)
                   this.mountStyles();
               attrsChanged = this.updateAttrs();
               this.showAnnouncements(transactions);
               this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent("select.pointer")));
           }
           finally {
               this.updateState = 0 /* UpdateState.Idle */;
           }
           if (update.startState.facet(theme) != update.state.facet(theme))
               this.viewState.mustMeasureContent = true;
           if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)
               this.requestMeasure();
           if (!update.empty)
               for (let listener of this.state.facet(updateListener))
                   listener(update);
       }
       /**
       Reset the view to the given state. (This will cause the entire
       document to be redrawn and all view plugins to be reinitialized,
       so you should probably only use it when the new state isn't
       derived from the old state. Otherwise, use
       [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
       */
       setState(newState) {
           if (this.updateState != 0 /* UpdateState.Idle */)
               throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
           if (this.destroyed) {
               this.viewState.state = newState;
               return;
           }
           this.updateState = 2 /* UpdateState.Updating */;
           let hadFocus = this.hasFocus;
           try {
               for (let plugin of this.plugins)
                   plugin.destroy(this);
               this.viewState = new ViewState(newState);
               this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));
               this.pluginMap.clear();
               for (let plugin of this.plugins)
                   plugin.update(this);
               this.docView = new DocView(this);
               this.inputState.ensureHandlers(this, this.plugins);
               this.mountStyles();
               this.updateAttrs();
               this.bidiCache = [];
           }
           finally {
               this.updateState = 0 /* UpdateState.Idle */;
           }
           if (hadFocus)
               this.focus();
           this.requestMeasure();
       }
       updatePlugins(update) {
           let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);
           if (prevSpecs != specs) {
               let newPlugins = [];
               for (let spec of specs) {
                   let found = prevSpecs.indexOf(spec);
                   if (found < 0) {
                       newPlugins.push(new PluginInstance(spec));
                   }
                   else {
                       let plugin = this.plugins[found];
                       plugin.mustUpdate = update;
                       newPlugins.push(plugin);
                   }
               }
               for (let plugin of this.plugins)
                   if (plugin.mustUpdate != update)
                       plugin.destroy(this);
               this.plugins = newPlugins;
               this.pluginMap.clear();
               this.inputState.ensureHandlers(this, this.plugins);
           }
           else {
               for (let p of this.plugins)
                   p.mustUpdate = update;
           }
           for (let i = 0; i < this.plugins.length; i++)
               this.plugins[i].update(this);
       }
       /**
       @internal
       */
       measure(flush = true) {
           if (this.destroyed)
               return;
           if (this.measureScheduled > -1)
               cancelAnimationFrame(this.measureScheduled);
           this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame
           if (flush)
               this.observer.forceFlush();
           let updated = null;
           let { scrollHeight, scrollTop, clientHeight } = this.scrollDOM;
           let refHeight = scrollTop > scrollHeight - clientHeight - 4 ? scrollHeight : scrollTop;
           try {
               for (let i = 0;; i++) {
                   this.updateState = 1 /* UpdateState.Measuring */;
                   let oldViewport = this.viewport;
                   let refBlock = this.viewState.lineBlockAtHeight(refHeight);
                   let changed = this.viewState.measure(this);
                   if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)
                       break;
                   if (i > 5) {
                       console.warn(this.measureRequests.length
                           ? "Measure loop restarted more than 5 times"
                           : "Viewport failed to stabilize");
                       break;
                   }
                   let measuring = [];
                   // Only run measure requests in this cycle when the viewport didn't change
                   if (!(changed & 4 /* UpdateFlag.Viewport */))
                       [this.measureRequests, measuring] = [measuring, this.measureRequests];
                   let measured = measuring.map(m => {
                       try {
                           return m.read(this);
                       }
                       catch (e) {
                           logException(this.state, e);
                           return BadMeasure;
                       }
                   });
                   let update = ViewUpdate.create(this, this.state, []), redrawn = false, scrolled = false;
                   update.flags |= changed;
                   if (!updated)
                       updated = update;
                   else
                       updated.flags |= changed;
                   this.updateState = 2 /* UpdateState.Updating */;
                   if (!update.empty) {
                       this.updatePlugins(update);
                       this.inputState.update(update);
                       this.updateAttrs();
                       redrawn = this.docView.update(update);
                   }
                   for (let i = 0; i < measuring.length; i++)
                       if (measured[i] != BadMeasure) {
                           try {
                               let m = measuring[i];
                               if (m.write)
                                   m.write(measured[i], this);
                           }
                           catch (e) {
                               logException(this.state, e);
                           }
                       }
                   if (this.viewState.scrollTarget) {
                       this.docView.scrollIntoView(this.viewState.scrollTarget);
                       this.viewState.scrollTarget = null;
                       scrolled = true;
                   }
                   else {
                       let diff = this.viewState.lineBlockAt(refBlock.from).top - refBlock.top;
                       if (diff > 1 || diff < -1) {
                           this.scrollDOM.scrollTop += diff;
                           scrolled = true;
                       }
                   }
                   if (redrawn)
                       this.docView.updateSelection(true);
                   if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&
                       !scrolled && this.measureRequests.length == 0)
                       break;
               }
           }
           finally {
               this.updateState = 0 /* UpdateState.Idle */;
               this.measureScheduled = -1;
           }
           if (updated && !updated.empty)
               for (let listener of this.state.facet(updateListener))
                   listener(updated);
       }
       /**
       Get the CSS classes for the currently active editor themes.
       */
       get themeClasses() {
           return baseThemeID + " " +
               (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + " " +
               this.state.facet(theme);
       }
       updateAttrs() {
           let editorAttrs = attrsFromFacet(this, editorAttributes, {
               class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
           });
           let contentAttrs = {
               spellcheck: "false",
               autocorrect: "off",
               autocapitalize: "off",
               translate: "no",
               contenteditable: !this.state.facet(editable) ? "false" : "true",
               class: "cm-content",
               style: `${browser.tabSize}: ${this.state.tabSize}`,
               role: "textbox",
               "aria-multiline": "true"
           };
           if (this.state.readOnly)
               contentAttrs["aria-readonly"] = "true";
           attrsFromFacet(this, contentAttributes, contentAttrs);
           let changed = this.observer.ignore(() => {
               let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);
               let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);
               return changedContent || changedEditor;
           });
           this.editorAttrs = editorAttrs;
           this.contentAttrs = contentAttrs;
           return changed;
       }
       showAnnouncements(trs) {
           let first = true;
           for (let tr of trs)
               for (let effect of tr.effects)
                   if (effect.is(EditorView.announce)) {
                       if (first)
                           this.announceDOM.textContent = "";
                       first = false;
                       let div = this.announceDOM.appendChild(document.createElement("div"));
                       div.textContent = effect.value;
                   }
       }
       mountStyles() {
           this.styleModules = this.state.facet(styleModule);
           StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1$3).reverse());
       }
       readMeasured() {
           if (this.updateState == 2 /* UpdateState.Updating */)
               throw new Error("Reading the editor layout isn't allowed during an update");
           if (this.updateState == 0 /* UpdateState.Idle */ && this.measureScheduled > -1)
               this.measure(false);
       }
       /**
       Schedule a layout measurement, optionally providing callbacks to
       do custom DOM measuring followed by a DOM write phase. Using
       this is preferable reading DOM layout directly from, for
       example, an event handler, because it'll make sure measuring and
       drawing done by other components is synchronized, avoiding
       unnecessary DOM layout computations.
       */
       requestMeasure(request) {
           if (this.measureScheduled < 0)
               this.measureScheduled = this.win.requestAnimationFrame(() => this.measure());
           if (request) {
               if (request.key != null)
                   for (let i = 0; i < this.measureRequests.length; i++) {
                       if (this.measureRequests[i].key === request.key) {
                           this.measureRequests[i] = request;
                           return;
                       }
                   }
               this.measureRequests.push(request);
           }
       }
       /**
       Get the value of a specific plugin, if present. Note that
       plugins that crash can be dropped from a view, so even when you
       know you registered a given plugin, it is recommended to check
       the return value of this method.
       */
       plugin(plugin) {
           let known = this.pluginMap.get(plugin);
           if (known === undefined || known && known.spec != plugin)
               this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);
           return known && known.update(this).value;
       }
       /**
       The top position of the document, in screen coordinates. This
       may be negative when the editor is scrolled down. Points
       directly to the top of the first line, not above the padding.
       */
       get documentTop() {
           return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
       }
       /**
       Reports the padding above and below the document.
       */
       get documentPadding() {
           return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
       }
       /**
       Find the text line or block widget at the given vertical
       position (which is interpreted as relative to the [top of the
       document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
       */
       elementAtHeight(height) {
           this.readMeasured();
           return this.viewState.elementAtHeight(height);
       }
       /**
       Find the line block (see
       [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
       height, again interpreted relative to the [top of the
       document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
       */
       lineBlockAtHeight(height) {
           this.readMeasured();
           return this.viewState.lineBlockAtHeight(height);
       }
       /**
       Get the extent and vertical position of all [line
       blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
       are relative to the [top of the
       document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
       */
       get viewportLineBlocks() {
           return this.viewState.viewportLines;
       }
       /**
       Find the line block around the given document position. A line
       block is a range delimited on both sides by either a
       non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the
       start/end of the document. It will usually just hold a line of
       text, but may be broken into multiple textblocks by block
       widgets.
       */
       lineBlockAt(pos) {
           return this.viewState.lineBlockAt(pos);
       }
       /**
       The editor's total content height.
       */
       get contentHeight() {
           return this.viewState.contentHeight;
       }
       /**
       Move a cursor position by [grapheme
       cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
       the motion is away from the line start, or towards it. In
       bidirectional text, the line is traversed in visual order, using
       the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
       When the start position was the last one on the line, the
       returned position will be across the line break. If there is no
       further line, the original position is returned.
       
       By default, this method moves over a single cluster. The
       optional `by` argument can be used to move across more. It will
       be called with the first cluster as argument, and should return
       a predicate that determines, for each subsequent cluster,
       whether it should also be moved over.
       */
       moveByChar(start, forward, by) {
           return skipAtoms(this, start, moveByChar(this, start, forward, by));
       }
       /**
       Move a cursor position across the next group of either
       [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
       non-whitespace characters.
       */
       moveByGroup(start, forward) {
           return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));
       }
       /**
       Move to the next line boundary in the given direction. If
       `includeWrap` is true, line wrapping is on, and there is a
       further wrap point on the current line, the wrap point will be
       returned. Otherwise this function will return the start or end
       of the line.
       */
       moveToLineBoundary(start, forward, includeWrap = true) {
           return moveToLineBoundary(this, start, forward, includeWrap);
       }
       /**
       Move a cursor position vertically. When `distance` isn't given,
       it defaults to moving to the next line (including wrapped
       lines). Otherwise, `distance` should provide a positive distance
       in pixels.
       
       When `start` has a
       [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
       motion will use that as a target horizontal position. Otherwise,
       the cursor's own horizontal position is used. The returned
       cursor will have its goal column set to whichever column was
       used.
       */
       moveVertically(start, forward, distance) {
           return skipAtoms(this, start, moveVertically(this, start, forward, distance));
       }
       /**
       Find the DOM parent node and offset (child offset if `node` is
       an element, character offset when it is a text node) at the
       given document position.
       
       Note that for positions that aren't currently in
       `visibleRanges`, the resulting DOM position isn't necessarily
       meaningful (it may just point before or after a placeholder
       element).
       */
       domAtPos(pos) {
           return this.docView.domAtPos(pos);
       }
       /**
       Find the document position at the given DOM node. Can be useful
       for associating positions with DOM events. Will raise an error
       when `node` isn't part of the editor content.
       */
       posAtDOM(node, offset = 0) {
           return this.docView.posFromDOM(node, offset);
       }
       posAtCoords(coords, precise = true) {
           this.readMeasured();
           return posAtCoords(this, coords, precise);
       }
       /**
       Get the screen coordinates at the given document position.
       `side` determines whether the coordinates are based on the
       element before (-1) or after (1) the position (if no element is
       available on the given side, the method will transparently use
       another strategy to get reasonable coordinates).
       */
       coordsAtPos(pos, side = 1) {
           this.readMeasured();
           let rect = this.docView.coordsAt(pos, side);
           if (!rect || rect.left == rect.right)
               return rect;
           let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);
           let span = order[BidiSpan.find(order, pos - line.from, -1, side)];
           return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));
       }
       /**
       The default width of a character in the editor. May not
       accurately reflect the width of all characters (given variable
       width fonts or styling of invididual ranges).
       */
       get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }
       /**
       The default height of a line in the editor. May not be accurate
       for all lines.
       */
       get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }
       /**
       The text direction
       ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
       CSS property) of the editor's content element.
       */
       get textDirection() { return this.viewState.defaultTextDirection; }
       /**
       Find the text direction of the block at the given position, as
       assigned by CSS. If
       [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
       isn't enabled, or the given position is outside of the viewport,
       this will always return the same as
       [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
       this may trigger a DOM layout.
       */
       textDirectionAt(pos) {
           let perLine = this.state.facet(perLineTextDirection);
           if (!perLine || pos < this.viewport.from || pos > this.viewport.to)
               return this.textDirection;
           this.readMeasured();
           return this.docView.textDirectionAt(pos);
       }
       /**
       Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
       (as determined by the
       [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
       CSS property of its content element).
       */
       get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }
       /**
       Returns the bidirectional text structure of the given line
       (which should be in the current document) as an array of span
       objects. The order of these spans matches the [text
       direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
       left-to-right, the leftmost spans come first, otherwise the
       rightmost spans come first.
       */
       bidiSpans(line) {
           if (line.length > MaxBidiLine)
               return trivialOrder(line.length);
           let dir = this.textDirectionAt(line.from);
           for (let entry of this.bidiCache)
               if (entry.from == line.from && entry.dir == dir)
                   return entry.order;
           let order = computeOrder(line.text, dir);
           this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));
           return order;
       }
       /**
       Check whether the editor has focus.
       */
       get hasFocus() {
           var _a;
           // Safari return false for hasFocus when the context menu is open
           // or closing, which leads us to ignore selection changes from the
           // context menu because it looks like the editor isn't focused.
           // This kludges around that.
           return (this.dom.ownerDocument.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&
               this.root.activeElement == this.contentDOM;
       }
       /**
       Put focus on the editor.
       */
       focus() {
           this.observer.ignore(() => {
               focusPreventScroll(this.contentDOM);
               this.docView.updateSelection();
           });
       }
       /**
       Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
       necessary when moving the editor's existing DOM to a new window or shadow root.
       */
       setRoot(root) {
           if (this._root != root) {
               this._root = root;
               this.observer.setWindow((root.nodeType == 9 ? root : root.ownerDocument).defaultView || window);
               this.mountStyles();
           }
       }
       /**
       Clean up this editor view, removing its element from the
       document, unregistering event handlers, and notifying
       plugins. The view instance can no longer be used after
       calling this.
       */
       destroy() {
           for (let plugin of this.plugins)
               plugin.destroy(this);
           this.plugins = [];
           this.inputState.destroy();
           this.dom.remove();
           this.observer.destroy();
           if (this.measureScheduled > -1)
               cancelAnimationFrame(this.measureScheduled);
           this.destroyed = true;
       }
       /**
       Returns an effect that can be
       [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
       cause it to scroll the given position or range into view.
       */
       static scrollIntoView(pos, options = {}) {
           return scrollIntoView$1.of(new ScrollTarget(typeof pos == "number" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));
       }
       /**
       Returns an extension that can be used to add DOM event handlers.
       The value should be an object mapping event names to handler
       functions. For any given event, such functions are ordered by
       extension precedence, and the first handler to return true will
       be assumed to have handled that event, and no other handlers or
       built-in behavior will be activated for it. These are registered
       on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
       for `scroll` handlers, which will be called any time the
       editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
       its parent nodes is scrolled.
       */
       static domEventHandlers(handlers) {
           return ViewPlugin.define(() => ({}), { eventHandlers: handlers });
       }
       /**
       Create a theme extension. The first argument can be a
       [`style-mod`](https://github.com/marijnh/style-mod#documentation)
       style spec providing the styles for the theme. These will be
       prefixed with a generated class for the style.
       
       Because the selectors will be prefixed with a scope class, rule
       that directly match the editor's [wrapper
       element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
       added—need to be explicitly differentiated by adding an `&` to
       the selector for that element—for example
       `&.cm-focused`.
       
       When `dark` is set to true, the theme will be marked as dark,
       which will cause the `&dark` rules from [base
       themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
       `&light` when a light theme is active).
       */
       static theme(spec, options) {
           let prefix = StyleModule.newName();
           let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];
           if (options && options.dark)
               result.push(darkTheme.of(true));
           return result;
       }
       /**
       Create an extension that adds styles to the base theme. Like
       with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
       place of the editor wrapper element when directly targeting
       that. You can also use `&dark` or `&light` instead to only
       target editors with a dark or light theme.
       */
       static baseTheme(spec) {
           return Prec.lowest(styleModule.of(buildTheme("." + baseThemeID, spec, lightDarkIDs)));
       }
       /**
       Retrieve an editor view instance from the view's DOM
       representation.
       */
       static findFromDOM(dom) {
           var _a;
           let content = dom.querySelector(".cm-content");
           let cView = content && ContentView.get(content) || ContentView.get(dom);
           return ((_a = cView === null || cView === void 0 ? void 0 : cView.rootView) === null || _a === void 0 ? void 0 : _a.view) || null;
       }
   }
   /**
   Facet to add a [style
   module](https://github.com/marijnh/style-mod#documentation) to
   an editor view. The view will ensure that the module is
   mounted in its [document
   root](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).
   */
   EditorView.styleModule = styleModule;
   /**
   An input handler can override the way changes to the editable
   DOM content are handled. Handlers are passed the document
   positions between which the change was found, and the new
   content. When one returns true, no further input handlers are
   called and the default behavior is prevented.
   */
   EditorView.inputHandler = inputHandler$1;
   /**
   By default, the editor assumes all its content has the same
   [text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`
   value to make it read the text direction of every (rendered)
   line separately.
   */
   EditorView.perLineTextDirection = perLineTextDirection;
   /**
   Allows you to provide a function that should be called when the
   library catches an exception from an extension (mostly from view
   plugins, but may be used by other extensions to route exceptions
   from user-code-provided callbacks). This is mostly useful for
   debugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).
   */
   EditorView.exceptionSink = exceptionSink;
   /**
   A facet that can be used to register a function to be called
   every time the view updates.
   */
   EditorView.updateListener = updateListener;
   /**
   Facet that controls whether the editor content DOM is editable.
   When its highest-precedence value is `false`, the element will
   not have its `contenteditable` attribute set. (Note that this
   doesn't affect API calls that change the editor content, even
   when those are bound to keys or buttons. See the
   [`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)
   */
   EditorView.editable = editable;
   /**
   Allows you to influence the way mouse selection happens. The
   functions in this facet will be called for a `mousedown` event
   on the editor, and can return an object that overrides the way a
   selection is computed from that mouse click or drag.
   */
   EditorView.mouseSelectionStyle = mouseSelectionStyle;
   /**
   Facet used to configure whether a given selection drag event
   should move or copy the selection. The given predicate will be
   called with the `mousedown` event, and can return `true` when
   the drag should move the content.
   */
   EditorView.dragMovesSelection = dragMovesSelection$1;
   /**
   Facet used to configure whether a given selecting click adds a
   new range to the existing selection or replaces it entirely. The
   default behavior is to check `event.metaKey` on macOS, and
   `event.ctrlKey` elsewhere.
   */
   EditorView.clickAddsSelectionRange = clickAddsSelectionRange;
   /**
   A facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)
   are shown in the view. Decorations can be provided in two
   ways—directly, or via a function that takes an editor view.

   Only decoration sets provided directly are allowed to influence
   the editor's vertical layout structure. The ones provided as
   functions are called _after_ the new viewport has been computed,
   and thus **must not** introduce block widgets or replacing
   decorations that cover line breaks.

   If you want decorated ranges to behave like atomic units for
   cursor motion and deletion purposes, also provide the range set
   containing the decorations to
   [`EditorView.atomicRanges`](https://codemirror.net/6/docs/ref/#view.EditorView^atomicRanges).
   */
   EditorView.decorations = decorations;
   /**
   Used to provide ranges that should be treated as atoms as far as
   cursor motion is concerned. This causes methods like
   [`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and
   [`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the
   commands built on top of them) to skip across such regions when
   a selection endpoint would enter them. This does _not_ prevent
   direct programmatic [selection
   updates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such
   regions.
   */
   EditorView.atomicRanges = atomicRanges;
   /**
   Facet that allows extensions to provide additional scroll
   margins (space around the sides of the scrolling element that
   should be considered invisible). This can be useful when the
   plugin introduces elements that cover part of that element (for
   example a horizontally fixed gutter).
   */
   EditorView.scrollMargins = scrollMargins;
   /**
   This facet records whether a dark theme is active. The extension
   returned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically
   includes an instance of this when the `dark` option is set to
   true.
   */
   EditorView.darkTheme = darkTheme;
   /**
   Facet that provides additional DOM attributes for the editor's
   editable DOM element.
   */
   EditorView.contentAttributes = contentAttributes;
   /**
   Facet that provides DOM attributes for the editor's outer
   element.
   */
   EditorView.editorAttributes = editorAttributes;
   /**
   An extension that enables line wrapping in the editor (by
   setting CSS `white-space` to `pre-wrap` in the content).
   */
   EditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ "class": "cm-lineWrapping" });
   /**
   State effect used to include screen reader announcements in a
   transaction. These will be added to the DOM in a visually hidden
   element with `aria-live="polite"` set, and should be used to
   describe effects that are visually obvious but may not be
   noticed by screen reader users (such as moving to the next
   search match).
   */
   EditorView.announce = /*@__PURE__*/StateEffect.define();
   // Maximum line length for which we compute accurate bidi info
   const MaxBidiLine = 4096;
   const BadMeasure = {};
   class CachedOrder {
       constructor(from, to, dir, order) {
           this.from = from;
           this.to = to;
           this.dir = dir;
           this.order = order;
       }
       static update(cache, changes) {
           if (changes.empty)
               return cache;
           let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;
           for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {
               let entry = cache[i];
               if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))
                   result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));
           }
           return result;
       }
   }
   function attrsFromFacet(view, facet, base) {
       for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {
           let source = sources[i], value = typeof source == "function" ? source(view) : source;
           if (value)
               combineAttrs(value, base);
       }
       return base;
   }

   const currentPlatform = browser.mac ? "mac" : browser.windows ? "win" : browser.linux ? "linux" : "key";
   function normalizeKeyName(name, platform) {
       const parts = name.split(/-(?!$)/);
       let result = parts[parts.length - 1];
       if (result == "Space")
           result = " ";
       let alt, ctrl, shift, meta;
       for (let i = 0; i < parts.length - 1; ++i) {
           const mod = parts[i];
           if (/^(cmd|meta|m)$/i.test(mod))
               meta = true;
           else if (/^a(lt)?$/i.test(mod))
               alt = true;
           else if (/^(c|ctrl|control)$/i.test(mod))
               ctrl = true;
           else if (/^s(hift)?$/i.test(mod))
               shift = true;
           else if (/^mod$/i.test(mod)) {
               if (platform == "mac")
                   meta = true;
               else
                   ctrl = true;
           }
           else
               throw new Error("Unrecognized modifier name: " + mod);
       }
       if (alt)
           result = "Alt-" + result;
       if (ctrl)
           result = "Ctrl-" + result;
       if (meta)
           result = "Meta-" + result;
       if (shift)
           result = "Shift-" + result;
       return result;
   }
   function modifiers(name, event, shift) {
       if (event.altKey)
           name = "Alt-" + name;
       if (event.ctrlKey)
           name = "Ctrl-" + name;
       if (event.metaKey)
           name = "Meta-" + name;
       if (shift !== false && event.shiftKey)
           name = "Shift-" + name;
       return name;
   }
   const handleKeyEvents = /*@__PURE__*/Prec.default(/*@__PURE__*/EditorView.domEventHandlers({
       keydown(event, view) {
           return runHandlers(getKeymap(view.state), event, view, "editor");
       }
   }));
   /**
   Facet used for registering keymaps.

   You can add multiple keymaps to an editor. Their priorities
   determine their precedence (the ones specified early or with high
   priority get checked first). When a handler has returned `true`
   for a given key, no further handlers are called.
   */
   const keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });
   const Keymaps = /*@__PURE__*/new WeakMap();
   // This is hidden behind an indirection, rather than directly computed
   // by the facet, to keep internal types out of the facet's type.
   function getKeymap(state) {
       let bindings = state.facet(keymap);
       let map = Keymaps.get(bindings);
       if (!map)
           Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));
       return map;
   }
   /**
   Run the key handlers registered for a given scope. The event
   object should be a `"keydown"` event. Returns true if any of the
   handlers handled it.
   */
   function runScopeHandlers(view, event, scope) {
       return runHandlers(getKeymap(view.state), event, view, scope);
   }
   let storedPrefix = null;
   const PrefixTimeout = 4000;
   function buildKeymap(bindings, platform = currentPlatform) {
       let bound = Object.create(null);
       let isPrefix = Object.create(null);
       let checkPrefix = (name, is) => {
           let current = isPrefix[name];
           if (current == null)
               isPrefix[name] = is;
           else if (current != is)
               throw new Error("Key binding " + name + " is used both as a regular binding and as a multi-stroke prefix");
       };
       let add = (scope, key, command, preventDefault) => {
           var _a, _b;
           let scopeObj = bound[scope] || (bound[scope] = Object.create(null));
           let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));
           for (let i = 1; i < parts.length; i++) {
               let prefix = parts.slice(0, i).join(" ");
               checkPrefix(prefix, true);
               if (!scopeObj[prefix])
                   scopeObj[prefix] = {
                       preventDefault: true,
                       run: [(view) => {
                               let ourObj = storedPrefix = { view, prefix, scope };
                               setTimeout(() => { if (storedPrefix == ourObj)
                                   storedPrefix = null; }, PrefixTimeout);
                               return true;
                           }]
                   };
           }
           let full = parts.join(" ");
           checkPrefix(full, false);
           let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, run: ((_b = (_a = scopeObj._any) === null || _a === void 0 ? void 0 : _a.run) === null || _b === void 0 ? void 0 : _b.slice()) || [] });
           if (command)
               binding.run.push(command);
           if (preventDefault)
               binding.preventDefault = true;
       };
       for (let b of bindings) {
           let scopes = b.scope ? b.scope.split(" ") : ["editor"];
           if (b.any)
               for (let scope of scopes) {
                   let scopeObj = bound[scope] || (bound[scope] = Object.create(null));
                   if (!scopeObj._any)
                       scopeObj._any = { preventDefault: false, run: [] };
                   for (let key in scopeObj)
                       scopeObj[key].run.push(b.any);
               }
           let name = b[platform] || b.key;
           if (!name)
               continue;
           for (let scope of scopes) {
               add(scope, name, b.run, b.preventDefault);
               if (b.shift)
                   add(scope, "Shift-" + name, b.shift, b.preventDefault);
           }
       }
       return bound;
   }
   function runHandlers(map, event, view, scope) {
       let name = keyName(event);
       let charCode = codePointAt(name, 0), isChar = codePointSize(charCode) == name.length && name != " ";
       let prefix = "", fallthrough = false;
       if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {
           prefix = storedPrefix.prefix + " ";
           if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)
               storedPrefix = null;
       }
       let ran = new Set;
       let runFor = (binding) => {
           if (binding) {
               for (let cmd of binding.run)
                   if (!ran.has(cmd)) {
                       ran.add(cmd);
                       if (cmd(view, event))
                           return true;
                   }
               if (binding.preventDefault)
                   fallthrough = true;
           }
           return false;
       };
       let scopeObj = map[scope], baseName, shiftName;
       if (scopeObj) {
           if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))
               return true;
           if (isChar && (event.shiftKey || event.altKey || event.metaKey || charCode > 127) &&
               (baseName = base[event.keyCode]) && baseName != name) {
               if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))
                   return true;
               else if (event.shiftKey && (shiftName = shift[event.keyCode]) != name && shiftName != baseName &&
                   runFor(scopeObj[prefix + modifiers(shiftName, event, false)]))
                   return true;
           }
           else if (isChar && event.shiftKey) {
               if (runFor(scopeObj[prefix + modifiers(name, event, true)]))
                   return true;
           }
           if (runFor(scopeObj._any))
               return true;
       }
       return fallthrough;
   }

   const CanHidePrimary = !browser.ios; // FIXME test IE
   const selectionConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               cursorBlinkRate: 1200,
               drawRangeCursor: true
           }, {
               cursorBlinkRate: (a, b) => Math.min(a, b),
               drawRangeCursor: (a, b) => a || b
           });
       }
   });
   /**
   Returns an extension that hides the browser's native selection and
   cursor, replacing the selection with a background behind the text
   (with the `cm-selectionBackground` class), and the
   cursors with elements overlaid over the code (using
   `cm-cursor-primary` and `cm-cursor-secondary`).

   This allows the editor to display secondary selection ranges, and
   tends to produce a type of selection more in line with that users
   expect in a text editor (the native selection styling will often
   leave gaps between lines and won't fill the horizontal space after
   a line when the selection continues past it).

   It does have a performance cost, in that it requires an extra DOM
   layout cycle for many updates (the selection is drawn based on DOM
   layout information that's only available after laying out the
   content).
   */
   function drawSelection(config = {}) {
       return [
           selectionConfig.of(config),
           drawSelectionPlugin,
           hideNativeSelection
       ];
   }
   class Piece {
       constructor(left, top, width, height, className) {
           this.left = left;
           this.top = top;
           this.width = width;
           this.height = height;
           this.className = className;
       }
       draw() {
           let elt = document.createElement("div");
           elt.className = this.className;
           this.adjust(elt);
           return elt;
       }
       adjust(elt) {
           elt.style.left = this.left + "px";
           elt.style.top = this.top + "px";
           if (this.width >= 0)
               elt.style.width = this.width + "px";
           elt.style.height = this.height + "px";
       }
       eq(p) {
           return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&
               this.className == p.className;
       }
   }
   const drawSelectionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.rangePieces = [];
           this.cursors = [];
           this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };
           this.selectionLayer = view.scrollDOM.appendChild(document.createElement("div"));
           this.selectionLayer.className = "cm-selectionLayer";
           this.selectionLayer.setAttribute("aria-hidden", "true");
           this.cursorLayer = view.scrollDOM.appendChild(document.createElement("div"));
           this.cursorLayer.className = "cm-cursorLayer";
           this.cursorLayer.setAttribute("aria-hidden", "true");
           view.requestMeasure(this.measureReq);
           this.setBlinkRate();
       }
       setBlinkRate() {
           this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + "ms";
       }
       update(update) {
           let confChanged = update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);
           if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)
               this.view.requestMeasure(this.measureReq);
           if (update.transactions.some(tr => tr.scrollIntoView))
               this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink";
           if (confChanged)
               this.setBlinkRate();
       }
       readPos() {
           let { state } = this.view, conf = state.facet(selectionConfig);
           let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));
           let cursors = [];
           for (let r of state.selection.ranges) {
               let prim = r == state.selection.main;
               if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {
                   let piece = measureCursor(this.view, r, prim);
                   if (piece)
                       cursors.push(piece);
               }
           }
           return { rangePieces, cursors };
       }
       drawSel({ rangePieces, cursors }) {
           if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {
               this.selectionLayer.textContent = "";
               for (let p of rangePieces)
                   this.selectionLayer.appendChild(p.draw());
               this.rangePieces = rangePieces;
           }
           if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {
               let oldCursors = this.cursorLayer.children;
               if (oldCursors.length !== cursors.length) {
                   this.cursorLayer.textContent = "";
                   for (const c of cursors)
                       this.cursorLayer.appendChild(c.draw());
               }
               else {
                   cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));
               }
               this.cursors = cursors;
           }
       }
       destroy() {
           this.selectionLayer.remove();
           this.cursorLayer.remove();
       }
   });
   const themeSpec = {
       ".cm-line": {
           "& ::selection": { backgroundColor: "transparent !important" },
           "&::selection": { backgroundColor: "transparent !important" }
       }
   };
   if (CanHidePrimary)
       themeSpec[".cm-line"].caretColor = "transparent !important";
   const hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));
   function getBase(view) {
       let rect = view.scrollDOM.getBoundingClientRect();
       let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;
       return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };
   }
   function wrappedLine(view, pos, inside) {
       let range = EditorSelection.cursor(pos);
       return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),
           to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),
           type: BlockType.Text };
   }
   function blockAt(view, pos) {
       let line = view.lineBlockAt(pos);
       if (Array.isArray(line.type))
           for (let l of line.type) {
               if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))
                   return l;
           }
       return line;
   }
   function measureRange(view, range) {
       if (range.to <= view.viewport.from || range.from >= view.viewport.to)
           return [];
       let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);
       let ltr = view.textDirection == Direction.LTR;
       let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);
       let lineStyle = window.getComputedStyle(content.firstChild);
       let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent));
       let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);
       let startBlock = blockAt(view, from), endBlock = blockAt(view, to);
       let visualStart = startBlock.type == BlockType.Text ? startBlock : null;
       let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;
       if (view.lineWrapping) {
           if (visualStart)
               visualStart = wrappedLine(view, from, visualStart);
           if (visualEnd)
               visualEnd = wrappedLine(view, to, visualEnd);
       }
       if (visualStart && visualEnd && visualStart.from == visualEnd.from) {
           return pieces(drawForLine(range.from, range.to, visualStart));
       }
       else {
           let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);
           let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);
           let between = [];
           if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1)
               between.push(piece(leftSide, top.bottom, rightSide, bottom.top));
           else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)
               top.bottom = bottom.top = (top.bottom + bottom.top) / 2;
           return pieces(top).concat(between).concat(pieces(bottom));
       }
       function piece(left, top, right, bottom) {
           return new Piece(left - base.left, top - base.top - 0.01 /* C.Epsilon */, right - left, bottom - top + 0.01 /* C.Epsilon */, "cm-selectionBackground");
       }
       function pieces({ top, bottom, horizontal }) {
           let pieces = [];
           for (let i = 0; i < horizontal.length; i += 2)
               pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));
           return pieces;
       }
       // Gets passed from/to in line-local positions
       function drawForLine(from, to, line) {
           let top = 1e9, bottom = -1e9, horizontal = [];
           function addSpan(from, fromOpen, to, toOpen, dir) {
               // Passing 2/-2 is a kludge to force the view to return
               // coordinates on the proper side of block widgets, since
               // normalizing the side there, though appropriate for most
               // coordsAtPos queries, would break selection drawing.
               let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));
               let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));
               top = Math.min(fromCoords.top, toCoords.top, top);
               bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);
               if (dir == Direction.LTR)
                   horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);
               else
                   horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);
           }
           let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;
           // Split the range by visible range and document line
           for (let r of view.visibleRanges)
               if (r.to > start && r.from < end) {
                   for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {
                       let docLine = view.state.doc.lineAt(pos);
                       for (let span of view.bidiSpans(docLine)) {
                           let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;
                           if (spanFrom >= endPos)
                               break;
                           if (spanTo > pos)
                               addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);
                       }
                       pos = docLine.to + 1;
                       if (pos >= endPos)
                           break;
                   }
               }
           if (horizontal.length == 0)
               addSpan(start, from == null, end, to == null, view.textDirection);
           return { top, bottom, horizontal };
       }
       function drawForWidget(block, top) {
           let y = contentRect.top + (top ? block.top : block.bottom);
           return { top: y, bottom: y, horizontal: [] };
       }
   }
   function measureCursor(view, cursor, primary) {
       let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);
       if (!pos)
           return null;
       let base = getBase(view);
       return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary");
   }

   const setDropCursorPos = /*@__PURE__*/StateEffect.define({
       map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }
   });
   const dropCursorPos = /*@__PURE__*/StateField.define({
       create() { return null; },
       update(pos, tr) {
           if (pos != null)
               pos = tr.changes.mapPos(pos);
           return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);
       }
   });
   const drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.cursor = null;
           this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
       }
       update(update) {
           var _a;
           let cursorPos = update.state.field(dropCursorPos);
           if (cursorPos == null) {
               if (this.cursor != null) {
                   (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();
                   this.cursor = null;
               }
           }
           else {
               if (!this.cursor) {
                   this.cursor = this.view.scrollDOM.appendChild(document.createElement("div"));
                   this.cursor.className = "cm-dropCursor";
               }
               if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)
                   this.view.requestMeasure(this.measureReq);
           }
       }
       readPos() {
           let pos = this.view.state.field(dropCursorPos);
           let rect = pos != null && this.view.coordsAtPos(pos);
           if (!rect)
               return null;
           let outer = this.view.scrollDOM.getBoundingClientRect();
           return {
               left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,
               top: rect.top - outer.top + this.view.scrollDOM.scrollTop,
               height: rect.bottom - rect.top
           };
       }
       drawCursor(pos) {
           if (this.cursor) {
               if (pos) {
                   this.cursor.style.left = pos.left + "px";
                   this.cursor.style.top = pos.top + "px";
                   this.cursor.style.height = pos.height + "px";
               }
               else {
                   this.cursor.style.left = "-100000px";
               }
           }
       }
       destroy() {
           if (this.cursor)
               this.cursor.remove();
       }
       setDropPos(pos) {
           if (this.view.state.field(dropCursorPos) != pos)
               this.view.dispatch({ effects: setDropCursorPos.of(pos) });
       }
   }, {
       eventHandlers: {
           dragover(event) {
               this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));
           },
           dragleave(event) {
               if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))
                   this.setDropPos(null);
           },
           dragend() {
               this.setDropPos(null);
           },
           drop() {
               this.setDropPos(null);
           }
       }
   });
   /**
   Draws a cursor at the current drop position when something is
   dragged over the editor.
   */
   function dropCursor() {
       return [dropCursorPos, drawDropCursor];
   }

   function iterMatches(doc, re, from, to, f) {
       re.lastIndex = 0;
       for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {
           if (!cursor.lineBreak)
               while (m = re.exec(cursor.value))
                   f(pos + m.index, m);
       }
   }
   function matchRanges(view, maxLength) {
       let visible = view.visibleRanges;
       if (visible.length == 1 && visible[0].from == view.viewport.from &&
           visible[0].to == view.viewport.to)
           return visible;
       let result = [];
       for (let { from, to } of visible) {
           from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);
           to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);
           if (result.length && result[result.length - 1].to >= from)
               result[result.length - 1].to = to;
           else
               result.push({ from, to });
       }
       return result;
   }
   /**
   Helper class used to make it easier to maintain decorations on
   visible code that matches a given regular expression. To be used
   in a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object
   represent a matching configuration.
   */
   class MatchDecorator {
       /**
       Create a decorator.
       */
       constructor(config) {
           const { regexp, decoration, decorate, boundary, maxLength = 1000 } = config;
           if (!regexp.global)
               throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
           this.regexp = regexp;
           if (decorate) {
               this.addMatch = (match, view, from, add) => decorate(add, from, from + match[0].length, match, view);
           }
           else if (typeof decoration == "function") {
               this.addMatch = (match, view, from, add) => {
                   let deco = decoration(match, view, from);
                   if (deco)
                       add(from, from + match[0].length, deco);
               };
           }
           else if (decoration) {
               this.addMatch = (match, _view, from, add) => add(from, from + match[0].length, decoration);
           }
           else {
               throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
           }
           this.boundary = boundary;
           this.maxLength = maxLength;
       }
       /**
       Compute the full set of decorations for matches in the given
       view's viewport. You'll want to call this when initializing your
       plugin.
       */
       createDeco(view) {
           let build = new RangeSetBuilder(), add = build.add.bind(build);
           for (let { from, to } of matchRanges(view, this.maxLength))
               iterMatches(view.state.doc, this.regexp, from, to, (from, m) => this.addMatch(m, view, from, add));
           return build.finish();
       }
       /**
       Update a set of decorations for a view update. `deco` _must_ be
       the set of decorations produced by _this_ `MatchDecorator` for
       the view state before the update.
       */
       updateDeco(update, deco) {
           let changeFrom = 1e9, changeTo = -1;
           if (update.docChanged)
               update.changes.iterChanges((_f, _t, from, to) => {
                   if (to > update.view.viewport.from && from < update.view.viewport.to) {
                       changeFrom = Math.min(from, changeFrom);
                       changeTo = Math.max(to, changeTo);
                   }
               });
           if (update.viewportChanged || changeTo - changeFrom > 1000)
               return this.createDeco(update.view);
           if (changeTo > -1)
               return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);
           return deco;
       }
       updateRange(view, deco, updateFrom, updateTo) {
           for (let r of view.visibleRanges) {
               let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);
               if (to > from) {
                   let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;
                   let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);
                   if (this.boundary) {
                       for (; from > fromLine.from; from--)
                           if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {
                               start = from;
                               break;
                           }
                       for (; to < toLine.to; to++)
                           if (this.boundary.test(toLine.text[to - toLine.from])) {
                               end = to;
                               break;
                           }
                   }
                   let ranges = [], m;
                   let add = (from, to, deco) => ranges.push(deco.range(from, to));
                   if (fromLine == toLine) {
                       this.regexp.lastIndex = start - fromLine.from;
                       while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from)
                           this.addMatch(m, view, m.index + fromLine.from, add);
                   }
                   else {
                       iterMatches(view.state.doc, this.regexp, start, end, (from, m) => this.addMatch(m, view, from, add));
                   }
                   deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });
               }
           }
           return deco;
       }
   }

   const UnicodeRegexpSupport = /x/.unicode != null ? "gu" : "g";
   const Specials = /*@__PURE__*/new RegExp("[\u0000-\u0008\u000a-\u001f\u007f-\u009f\u00ad\u061c\u200b\u200e\u200f\u2028\u2029\u202d\u202e\u2066\u2067\u2069\ufeff\ufff9-\ufffc]", UnicodeRegexpSupport);
   const Names = {
       0: "null",
       7: "bell",
       8: "backspace",
       10: "newline",
       11: "vertical tab",
       13: "carriage return",
       27: "escape",
       8203: "zero width space",
       8204: "zero width non-joiner",
       8205: "zero width joiner",
       8206: "left-to-right mark",
       8207: "right-to-left mark",
       8232: "line separator",
       8237: "left-to-right override",
       8238: "right-to-left override",
       8294: "left-to-right isolate",
       8295: "right-to-left isolate",
       8297: "pop directional isolate",
       8233: "paragraph separator",
       65279: "zero width no-break space",
       65532: "object replacement"
   };
   let _supportsTabSize = null;
   function supportsTabSize() {
       var _a;
       if (_supportsTabSize == null && typeof document != "undefined" && document.body) {
           let styles = document.body.style;
           _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;
       }
       return _supportsTabSize || false;
   }
   const specialCharConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           let config = combineConfig(configs, {
               render: null,
               specialChars: Specials,
               addSpecialChars: null
           });
           if (config.replaceTabs = !supportsTabSize())
               config.specialChars = new RegExp("\t|" + config.specialChars.source, UnicodeRegexpSupport);
           if (config.addSpecialChars)
               config.specialChars = new RegExp(config.specialChars.source + "|" + config.addSpecialChars.source, UnicodeRegexpSupport);
           return config;
       }
   });
   /**
   Returns an extension that installs highlighting of special
   characters.
   */
   function highlightSpecialChars(
   /**
   Configuration options.
   */
   config = {}) {
       return [specialCharConfig.of(config), specialCharPlugin()];
   }
   let _plugin = null;
   function specialCharPlugin() {
       return _plugin || (_plugin = ViewPlugin.fromClass(class {
           constructor(view) {
               this.view = view;
               this.decorations = Decoration.none;
               this.decorationCache = Object.create(null);
               this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));
               this.decorations = this.decorator.createDeco(view);
           }
           makeDecorator(conf) {
               return new MatchDecorator({
                   regexp: conf.specialChars,
                   decoration: (m, view, pos) => {
                       let { doc } = view.state;
                       let code = codePointAt(m[0], 0);
                       if (code == 9) {
                           let line = doc.lineAt(pos);
                           let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);
                           return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });
                       }
                       return this.decorationCache[code] ||
                           (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));
                   },
                   boundary: conf.replaceTabs ? undefined : /[^]/
               });
           }
           update(update) {
               let conf = update.state.facet(specialCharConfig);
               if (update.startState.facet(specialCharConfig) != conf) {
                   this.decorator = this.makeDecorator(conf);
                   this.decorations = this.decorator.createDeco(update.view);
               }
               else {
                   this.decorations = this.decorator.updateDeco(update, this.decorations);
               }
           }
       }, {
           decorations: v => v.decorations
       }));
   }
   const DefaultPlaceholder = "\u2022";
   // Assigns placeholder characters from the Control Pictures block to
   // ASCII control characters
   function placeholder$1(code) {
       if (code >= 32)
           return DefaultPlaceholder;
       if (code == 10)
           return "\u2424";
       return String.fromCharCode(9216 + code);
   }
   class SpecialCharWidget extends WidgetType {
       constructor(options, code) {
           super();
           this.options = options;
           this.code = code;
       }
       eq(other) { return other.code == this.code; }
       toDOM(view) {
           let ph = placeholder$1(this.code);
           let desc = view.state.phrase("Control character") + " " + (Names[this.code] || "0x" + this.code.toString(16));
           let custom = this.options.render && this.options.render(this.code, desc, ph);
           if (custom)
               return custom;
           let span = document.createElement("span");
           span.textContent = ph;
           span.title = desc;
           span.setAttribute("aria-label", desc);
           span.className = "cm-specialChar";
           return span;
       }
       ignoreEvent() { return false; }
   }
   class TabWidget extends WidgetType {
       constructor(width) {
           super();
           this.width = width;
       }
       eq(other) { return other.width == this.width; }
       toDOM() {
           let span = document.createElement("span");
           span.textContent = "\t";
           span.className = "cm-tab";
           span.style.width = this.width + "px";
           return span;
       }
       ignoreEvent() { return false; }
   }

   /**
   Mark lines that have a cursor on them with the `"cm-activeLine"`
   DOM class.
   */
   function highlightActiveLine() {
       return activeLineHighlighter;
   }
   const lineDeco = /*@__PURE__*/Decoration.line({ class: "cm-activeLine" });
   const activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.decorations = this.getDeco(view);
       }
       update(update) {
           if (update.docChanged || update.selectionSet)
               this.decorations = this.getDeco(update.view);
       }
       getDeco(view) {
           let lastLineStart = -1, deco = [];
           for (let r of view.state.selection.ranges) {
               let line = view.lineBlockAt(r.head);
               if (line.from > lastLineStart) {
                   deco.push(lineDeco.range(line.from));
                   lastLineStart = line.from;
               }
           }
           return Decoration.set(deco);
       }
   }, {
       decorations: v => v.decorations
   });

   // Don't compute precise column positions for line offsets above this
   // (since it could get expensive). Assume offset==column for them.
   const MaxOff = 2000;
   function rectangleFor(state, a, b) {
       let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);
       let ranges = [];
       if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {
           let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);
           for (let i = startLine; i <= endLine; i++) {
               let line = state.doc.line(i);
               if (line.length <= endOff)
                   ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));
           }
       }
       else {
           let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);
           for (let i = startLine; i <= endLine; i++) {
               let line = state.doc.line(i);
               let start = findColumn(line.text, startCol, state.tabSize, true);
               if (start > -1) {
                   let end = findColumn(line.text, endCol, state.tabSize);
                   ranges.push(EditorSelection.range(line.from + start, line.from + end));
               }
           }
       }
       return ranges;
   }
   function absoluteColumn(view, x) {
       let ref = view.coordsAtPos(view.viewport.from);
       return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;
   }
   function getPos(view, event) {
       let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);
       let line = view.state.doc.lineAt(offset), off = offset - line.from;
       let col = off > MaxOff ? -1
           : off == line.length ? absoluteColumn(view, event.clientX)
               : countColumn(line.text, view.state.tabSize, offset - line.from);
       return { line: line.number, col, off };
   }
   function rectangleSelectionStyle(view, event) {
       let start = getPos(view, event), startSel = view.state.selection;
       if (!start)
           return null;
       return {
           update(update) {
               if (update.docChanged) {
                   let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);
                   let newLine = update.state.doc.lineAt(newStart);
                   start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };
                   startSel = startSel.map(update.changes);
               }
           },
           get(event, _extend, multiple) {
               let cur = getPos(view, event);
               if (!cur)
                   return startSel;
               let ranges = rectangleFor(view.state, start, cur);
               if (!ranges.length)
                   return startSel;
               if (multiple)
                   return EditorSelection.create(ranges.concat(startSel.ranges));
               else
                   return EditorSelection.create(ranges);
           }
       };
   }
   /**
   Create an extension that enables rectangular selections. By
   default, it will react to left mouse drag with the Alt key held
   down. When such a selection occurs, the text within the rectangle
   that was dragged over will be selected, as one selection
   [range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.
   */
   function rectangularSelection(options) {
       let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);
       return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);
   }
   const keys = {
       Alt: [18, e => e.altKey],
       Control: [17, e => e.ctrlKey],
       Shift: [16, e => e.shiftKey],
       Meta: [91, e => e.metaKey]
   };
   const showCrosshair = { style: "cursor: crosshair" };
   /**
   Returns an extension that turns the pointer cursor into a
   crosshair when a given modifier key, defaulting to Alt, is held
   down. Can serve as a visual hint that rectangular selection is
   going to happen when paired with
   [`rectangularSelection`](https://codemirror.net/6/docs/ref/#view.rectangularSelection).
   */
   function crosshairCursor(options = {}) {
       let [code, getter] = keys[options.key || "Alt"];
       let plugin = ViewPlugin.fromClass(class {
           constructor(view) {
               this.view = view;
               this.isDown = false;
           }
           set(isDown) {
               if (this.isDown != isDown) {
                   this.isDown = isDown;
                   this.view.update([]);
               }
           }
       }, {
           eventHandlers: {
               keydown(e) {
                   this.set(e.keyCode == code || getter(e));
               },
               keyup(e) {
                   if (e.keyCode == code || !getter(e))
                       this.set(false);
               }
           }
       });
       return [
           plugin,
           EditorView.contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.isDown) ? showCrosshair : null; })
       ];
   }

   const Outside = "-10000px";
   class TooltipViewManager {
       constructor(view, facet, createTooltipView) {
           this.facet = facet;
           this.createTooltipView = createTooltipView;
           this.input = view.state.facet(facet);
           this.tooltips = this.input.filter(t => t);
           this.tooltipViews = this.tooltips.map(createTooltipView);
       }
       update(update) {
           let input = update.state.facet(this.facet);
           let tooltips = input.filter(x => x);
           if (input === this.input) {
               for (let t of this.tooltipViews)
                   if (t.update)
                       t.update(update);
               return false;
           }
           let tooltipViews = [];
           for (let i = 0; i < tooltips.length; i++) {
               let tip = tooltips[i], known = -1;
               if (!tip)
                   continue;
               for (let i = 0; i < this.tooltips.length; i++) {
                   let other = this.tooltips[i];
                   if (other && other.create == tip.create)
                       known = i;
               }
               if (known < 0) {
                   tooltipViews[i] = this.createTooltipView(tip);
               }
               else {
                   let tooltipView = tooltipViews[i] = this.tooltipViews[known];
                   if (tooltipView.update)
                       tooltipView.update(update);
               }
           }
           for (let t of this.tooltipViews)
               if (tooltipViews.indexOf(t) < 0)
                   t.dom.remove();
           this.input = input;
           this.tooltips = tooltips;
           this.tooltipViews = tooltipViews;
           return true;
       }
   }
   function windowSpace(view) {
       let { win } = view;
       return { top: 0, left: 0, bottom: win.innerHeight, right: win.innerWidth };
   }
   const tooltipConfig = /*@__PURE__*/Facet.define({
       combine: values => {
           var _a, _b, _c;
           return ({
               position: browser.ios ? "absolute" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || "fixed",
               parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,
               tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,
           });
       }
   });
   const tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.inView = true;
           this.lastTransaction = 0;
           this.measureTimeout = -1;
           let config = view.state.facet(tooltipConfig);
           this.position = config.position;
           this.parent = config.parent;
           this.classes = view.themeClasses;
           this.createContainer();
           this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };
           this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));
           this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver(entries => {
               if (Date.now() > this.lastTransaction - 50 &&
                   entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)
                   this.measureSoon();
           }, { threshold: [1] }) : null;
           this.observeIntersection();
           view.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this));
           this.maybeMeasure();
       }
       createContainer() {
           if (this.parent) {
               this.container = document.createElement("div");
               this.container.style.position = "relative";
               this.container.className = this.view.themeClasses;
               this.parent.appendChild(this.container);
           }
           else {
               this.container = this.view.dom;
           }
       }
       observeIntersection() {
           if (this.intersectionObserver) {
               this.intersectionObserver.disconnect();
               for (let tooltip of this.manager.tooltipViews)
                   this.intersectionObserver.observe(tooltip.dom);
           }
       }
       measureSoon() {
           if (this.measureTimeout < 0)
               this.measureTimeout = setTimeout(() => {
                   this.measureTimeout = -1;
                   this.maybeMeasure();
               }, 50);
       }
       update(update) {
           if (update.transactions.length)
               this.lastTransaction = Date.now();
           let updated = this.manager.update(update);
           if (updated)
               this.observeIntersection();
           let shouldMeasure = updated || update.geometryChanged;
           let newConfig = update.state.facet(tooltipConfig);
           if (newConfig.position != this.position) {
               this.position = newConfig.position;
               for (let t of this.manager.tooltipViews)
                   t.dom.style.position = this.position;
               shouldMeasure = true;
           }
           if (newConfig.parent != this.parent) {
               if (this.parent)
                   this.container.remove();
               this.parent = newConfig.parent;
               this.createContainer();
               for (let t of this.manager.tooltipViews)
                   this.container.appendChild(t.dom);
               shouldMeasure = true;
           }
           else if (this.parent && this.view.themeClasses != this.classes) {
               this.classes = this.container.className = this.view.themeClasses;
           }
           if (shouldMeasure)
               this.maybeMeasure();
       }
       createTooltip(tooltip) {
           let tooltipView = tooltip.create(this.view);
           tooltipView.dom.classList.add("cm-tooltip");
           if (tooltip.arrow && !tooltipView.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
               let arrow = document.createElement("div");
               arrow.className = "cm-tooltip-arrow";
               tooltipView.dom.appendChild(arrow);
           }
           tooltipView.dom.style.position = this.position;
           tooltipView.dom.style.top = Outside;
           this.container.appendChild(tooltipView.dom);
           if (tooltipView.mount)
               tooltipView.mount(this.view);
           return tooltipView;
       }
       destroy() {
           var _a;
           this.view.win.removeEventListener("resize", this.measureSoon);
           for (let { dom } of this.manager.tooltipViews)
               dom.remove();
           (_a = this.intersectionObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
           clearTimeout(this.measureTimeout);
       }
       readMeasure() {
           let editor = this.view.dom.getBoundingClientRect();
           return {
               editor,
               parent: this.parent ? this.container.getBoundingClientRect() : editor,
               pos: this.manager.tooltips.map((t, i) => {
                   let tv = this.manager.tooltipViews[i];
                   return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);
               }),
               size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),
               space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),
           };
       }
       writeMeasure(measured) {
           let { editor, space } = measured;
           let others = [];
           for (let i = 0; i < this.manager.tooltips.length; i++) {
               let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;
               let pos = measured.pos[i], size = measured.size[i];
               // Hide tooltips that are outside of the editor.
               if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||
                   pos.top >= Math.min(editor.bottom, space.bottom) ||
                   pos.right < Math.max(editor.left, space.left) - .1 ||
                   pos.left > Math.min(editor.right, space.right) + .1) {
                   dom.style.top = Outside;
                   continue;
               }
               let arrow = tooltip.arrow ? tView.dom.querySelector(".cm-tooltip-arrow") : null;
               let arrowHeight = arrow ? 7 /* Arrow.Size */ : 0;
               let width = size.right - size.left, height = size.bottom - size.top;
               let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;
               let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)
                   : ltr ? Math.min(pos.left - (arrow ? 14 /* Arrow.Offset */ : 0) + offset.x, space.right - width)
                       : Math.max(space.left, pos.left - width + (arrow ? 14 /* Arrow.Offset */ : 0) - offset.x);
               let above = !!tooltip.above;
               if (!tooltip.strictSide && (above
                   ? pos.top - (size.bottom - size.top) - offset.y < space.top
                   : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&
                   above == (space.bottom - pos.bottom > pos.top - space.top))
                   above = !above;
               let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;
               let right = left + width;
               if (tView.overlap !== true)
                   for (let r of others)
                       if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)
                           top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;
               if (this.position == "absolute") {
                   dom.style.top = (top - measured.parent.top) + "px";
                   dom.style.left = (left - measured.parent.left) + "px";
               }
               else {
                   dom.style.top = top + "px";
                   dom.style.left = left + "px";
               }
               if (arrow)
                   arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Arrow.Offset */ - 7 /* Arrow.Size */)}px`;
               if (tView.overlap !== true)
                   others.push({ left, top, right, bottom: top + height });
               dom.classList.toggle("cm-tooltip-above", above);
               dom.classList.toggle("cm-tooltip-below", !above);
               if (tView.positioned)
                   tView.positioned();
           }
       }
       maybeMeasure() {
           if (this.manager.tooltips.length) {
               if (this.view.inView)
                   this.view.requestMeasure(this.measureReq);
               if (this.inView != this.view.inView) {
                   this.inView = this.view.inView;
                   if (!this.inView)
                       for (let tv of this.manager.tooltipViews)
                           tv.dom.style.top = Outside;
               }
           }
       }
   }, {
       eventHandlers: {
           scroll() { this.maybeMeasure(); }
       }
   });
   const baseTheme$4 = /*@__PURE__*/EditorView.baseTheme({
       ".cm-tooltip": {
           zIndex: 100
       },
       "&light .cm-tooltip": {
           border: "1px solid #bbb",
           backgroundColor: "#f5f5f5"
       },
       "&light .cm-tooltip-section:not(:first-child)": {
           borderTop: "1px solid #bbb",
       },
       "&dark .cm-tooltip": {
           backgroundColor: "#333338",
           color: "white"
       },
       ".cm-tooltip-arrow": {
           height: `${7 /* Arrow.Size */}px`,
           width: `${7 /* Arrow.Size */ * 2}px`,
           position: "absolute",
           zIndex: -1,
           overflow: "hidden",
           "&:before, &:after": {
               content: "''",
               position: "absolute",
               width: 0,
               height: 0,
               borderLeft: `${7 /* Arrow.Size */}px solid transparent`,
               borderRight: `${7 /* Arrow.Size */}px solid transparent`,
           },
           ".cm-tooltip-above &": {
               bottom: `-${7 /* Arrow.Size */}px`,
               "&:before": {
                   borderTop: `${7 /* Arrow.Size */}px solid #bbb`,
               },
               "&:after": {
                   borderTop: `${7 /* Arrow.Size */}px solid #f5f5f5`,
                   bottom: "1px"
               }
           },
           ".cm-tooltip-below &": {
               top: `-${7 /* Arrow.Size */}px`,
               "&:before": {
                   borderBottom: `${7 /* Arrow.Size */}px solid #bbb`,
               },
               "&:after": {
                   borderBottom: `${7 /* Arrow.Size */}px solid #f5f5f5`,
                   top: "1px"
               }
           },
       },
       "&dark .cm-tooltip .cm-tooltip-arrow": {
           "&:before": {
               borderTopColor: "#333338",
               borderBottomColor: "#333338"
           },
           "&:after": {
               borderTopColor: "transparent",
               borderBottomColor: "transparent"
           }
       }
   });
   const noOffset = { x: 0, y: 0 };
   /**
   Facet to which an extension can add a value to show a tooltip.
   */
   const showTooltip = /*@__PURE__*/Facet.define({
       enables: [tooltipPlugin, baseTheme$4]
   });
   const showHoverTooltip = /*@__PURE__*/Facet.define();
   class HoverTooltipHost {
       constructor(view) {
           this.view = view;
           this.mounted = false;
           this.dom = document.createElement("div");
           this.dom.classList.add("cm-tooltip-hover");
           this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));
       }
       // Needs to be static so that host tooltip instances always match
       static create(view) {
           return new HoverTooltipHost(view);
       }
       createHostedView(tooltip) {
           let hostedView = tooltip.create(this.view);
           hostedView.dom.classList.add("cm-tooltip-section");
           this.dom.appendChild(hostedView.dom);
           if (this.mounted && hostedView.mount)
               hostedView.mount(this.view);
           return hostedView;
       }
       mount(view) {
           for (let hostedView of this.manager.tooltipViews) {
               if (hostedView.mount)
                   hostedView.mount(view);
           }
           this.mounted = true;
       }
       positioned() {
           for (let hostedView of this.manager.tooltipViews) {
               if (hostedView.positioned)
                   hostedView.positioned();
           }
       }
       update(update) {
           this.manager.update(update);
       }
   }
   const showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {
       let tooltips = state.facet(showHoverTooltip).filter(t => t);
       if (tooltips.length === 0)
           return null;
       return {
           pos: Math.min(...tooltips.map(t => t.pos)),
           end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),
           create: HoverTooltipHost.create,
           above: tooltips[0].above,
           arrow: tooltips.some(t => t.arrow),
       };
   });
   class HoverPlugin {
       constructor(view, source, field, setHover, hoverTime) {
           this.view = view;
           this.source = source;
           this.field = field;
           this.setHover = setHover;
           this.hoverTime = hoverTime;
           this.hoverTimeout = -1;
           this.restartTimeout = -1;
           this.pending = null;
           this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };
           this.checkHover = this.checkHover.bind(this);
           view.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this));
           view.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
       }
       update() {
           if (this.pending) {
               this.pending = null;
               clearTimeout(this.restartTimeout);
               this.restartTimeout = setTimeout(() => this.startHover(), 20);
           }
       }
       get active() {
           return this.view.state.field(this.field);
       }
       checkHover() {
           this.hoverTimeout = -1;
           if (this.active)
               return;
           let hovered = Date.now() - this.lastMove.time;
           if (hovered < this.hoverTime)
               this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);
           else
               this.startHover();
       }
       startHover() {
           clearTimeout(this.restartTimeout);
           let { lastMove } = this;
           let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;
           if (pos == null)
               return;
           let posCoords = this.view.coordsAtPos(pos);
           if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||
               lastMove.x < posCoords.left - this.view.defaultCharacterWidth ||
               lastMove.x > posCoords.right + this.view.defaultCharacterWidth)
               return;
           let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);
           let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;
           let open = this.source(this.view, pos, (lastMove.x < posCoords.left ? -rtl : rtl));
           if (open === null || open === void 0 ? void 0 : open.then) {
               let pending = this.pending = { pos };
               open.then(result => {
                   if (this.pending == pending) {
                       this.pending = null;
                       if (result)
                           this.view.dispatch({ effects: this.setHover.of(result) });
                   }
               }, e => logException(this.view.state, e, "hover tooltip"));
           }
           else if (open) {
               this.view.dispatch({ effects: this.setHover.of(open) });
           }
       }
       mousemove(event) {
           var _a;
           this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };
           if (this.hoverTimeout < 0)
               this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);
           let tooltip = this.active;
           if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {
               let { pos } = tooltip || this.pending, end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;
               if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos
                   : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6 /* Hover.MaxDist */))) {
                   this.view.dispatch({ effects: this.setHover.of(null) });
                   this.pending = null;
               }
           }
       }
       mouseleave() {
           clearTimeout(this.hoverTimeout);
           this.hoverTimeout = -1;
           if (this.active)
               this.view.dispatch({ effects: this.setHover.of(null) });
       }
       destroy() {
           clearTimeout(this.hoverTimeout);
           this.view.dom.removeEventListener("mouseleave", this.mouseleave);
           this.view.dom.removeEventListener("mousemove", this.mousemove);
       }
   }
   function isInTooltip(elt) {
       for (let cur = elt; cur; cur = cur.parentNode)
           if (cur.nodeType == 1 && cur.classList.contains("cm-tooltip"))
               return true;
       return false;
   }
   function isOverRange(view, from, to, x, y, margin) {
       let range = document.createRange();
       let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);
       range.setEnd(toDOM.node, toDOM.offset);
       range.setStart(fromDOM.node, fromDOM.offset);
       let rects = range.getClientRects();
       range.detach();
       for (let i = 0; i < rects.length; i++) {
           let rect = rects[i];
           let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);
           if (dist <= margin)
               return true;
       }
       return false;
   }
   /**
   Set up a hover tooltip, which shows up when the pointer hovers
   over ranges of text. The callback is called when the mouse hovers
   over the document text. It should, if there is a tooltip
   associated with position `pos`, return the tooltip description
   (either directly or in a promise). The `side` argument indicates
   on which side of the position the pointer is—it will be -1 if the
   pointer is before the position, 1 if after the position.

   Note that all hover tooltips are hosted within a single tooltip
   container element. This allows multiple tooltips over the same
   range to be "merged" together without overlapping.
   */
   function hoverTooltip(source, options = {}) {
       let setHover = StateEffect.define();
       let hoverState = StateField.define({
           create() { return null; },
           update(value, tr) {
               if (value && (options.hideOnChange && (tr.docChanged || tr.selection) ||
                   options.hideOn && options.hideOn(tr, value)))
                   return null;
               if (value && tr.docChanged) {
                   let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);
                   if (newPos == null)
                       return null;
                   let copy = Object.assign(Object.create(null), value);
                   copy.pos = newPos;
                   if (value.end != null)
                       copy.end = tr.changes.mapPos(value.end);
                   value = copy;
               }
               for (let effect of tr.effects) {
                   if (effect.is(setHover))
                       value = effect.value;
                   if (effect.is(closeHoverTooltipEffect))
                       value = null;
               }
               return value;
           },
           provide: f => showHoverTooltip.from(f)
       });
       return [
           hoverState,
           ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, options.hoverTime || 300 /* Hover.Time */)),
           showHoverTooltipHost
       ];
   }
   /**
   Get the active tooltip view for a given tooltip, if available.
   */
   function getTooltip(view, tooltip) {
       let plugin = view.plugin(tooltipPlugin);
       if (!plugin)
           return null;
       let found = plugin.manager.tooltips.indexOf(tooltip);
       return found < 0 ? null : plugin.manager.tooltipViews[found];
   }
   const closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();

   const panelConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           let topContainer, bottomContainer;
           for (let c of configs) {
               topContainer = topContainer || c.topContainer;
               bottomContainer = bottomContainer || c.bottomContainer;
           }
           return { topContainer, bottomContainer };
       }
   });
   /**
   Get the active panel created by the given constructor, if any.
   This can be useful when you need access to your panels' DOM
   structure.
   */
   function getPanel(view, panel) {
       let plugin = view.plugin(panelPlugin);
       let index = plugin ? plugin.specs.indexOf(panel) : -1;
       return index > -1 ? plugin.panels[index] : null;
   }
   const panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.input = view.state.facet(showPanel);
           this.specs = this.input.filter(s => s);
           this.panels = this.specs.map(spec => spec(view));
           let conf = view.state.facet(panelConfig);
           this.top = new PanelGroup(view, true, conf.topContainer);
           this.bottom = new PanelGroup(view, false, conf.bottomContainer);
           this.top.sync(this.panels.filter(p => p.top));
           this.bottom.sync(this.panels.filter(p => !p.top));
           for (let p of this.panels) {
               p.dom.classList.add("cm-panel");
               if (p.mount)
                   p.mount();
           }
       }
       update(update) {
           let conf = update.state.facet(panelConfig);
           if (this.top.container != conf.topContainer) {
               this.top.sync([]);
               this.top = new PanelGroup(update.view, true, conf.topContainer);
           }
           if (this.bottom.container != conf.bottomContainer) {
               this.bottom.sync([]);
               this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);
           }
           this.top.syncClasses();
           this.bottom.syncClasses();
           let input = update.state.facet(showPanel);
           if (input != this.input) {
               let specs = input.filter(x => x);
               let panels = [], top = [], bottom = [], mount = [];
               for (let spec of specs) {
                   let known = this.specs.indexOf(spec), panel;
                   if (known < 0) {
                       panel = spec(update.view);
                       mount.push(panel);
                   }
                   else {
                       panel = this.panels[known];
                       if (panel.update)
                           panel.update(update);
                   }
                   panels.push(panel);
                   (panel.top ? top : bottom).push(panel);
               }
               this.specs = specs;
               this.panels = panels;
               this.top.sync(top);
               this.bottom.sync(bottom);
               for (let p of mount) {
                   p.dom.classList.add("cm-panel");
                   if (p.mount)
                       p.mount();
               }
           }
           else {
               for (let p of this.panels)
                   if (p.update)
                       p.update(update);
           }
       }
       destroy() {
           this.top.sync([]);
           this.bottom.sync([]);
       }
   }, {
       provide: plugin => EditorView.scrollMargins.of(view => {
           let value = view.plugin(plugin);
           return value && { top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() };
       })
   });
   class PanelGroup {
       constructor(view, top, container) {
           this.view = view;
           this.top = top;
           this.container = container;
           this.dom = undefined;
           this.classes = "";
           this.panels = [];
           this.syncClasses();
       }
       sync(panels) {
           for (let p of this.panels)
               if (p.destroy && panels.indexOf(p) < 0)
                   p.destroy();
           this.panels = panels;
           this.syncDOM();
       }
       syncDOM() {
           if (this.panels.length == 0) {
               if (this.dom) {
                   this.dom.remove();
                   this.dom = undefined;
               }
               return;
           }
           if (!this.dom) {
               this.dom = document.createElement("div");
               this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom";
               this.dom.style[this.top ? "top" : "bottom"] = "0";
               let parent = this.container || this.view.dom;
               parent.insertBefore(this.dom, this.top ? parent.firstChild : null);
           }
           let curDOM = this.dom.firstChild;
           for (let panel of this.panels) {
               if (panel.dom.parentNode == this.dom) {
                   while (curDOM != panel.dom)
                       curDOM = rm$2(curDOM);
                   curDOM = curDOM.nextSibling;
               }
               else {
                   this.dom.insertBefore(panel.dom, curDOM);
               }
           }
           while (curDOM)
               curDOM = rm$2(curDOM);
       }
       scrollMargin() {
           return !this.dom || this.container ? 0
               : Math.max(0, this.top ?
                   this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :
                   Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
       }
       syncClasses() {
           if (!this.container || this.classes == this.view.themeClasses)
               return;
           for (let cls of this.classes.split(" "))
               if (cls)
                   this.container.classList.remove(cls);
           for (let cls of (this.classes = this.view.themeClasses).split(" "))
               if (cls)
                   this.container.classList.add(cls);
       }
   }
   function rm$2(node) {
       let next = node.nextSibling;
       node.remove();
       return next;
   }
   /**
   Opening a panel is done by providing a constructor function for
   the panel through this facet. (The panel is closed again when its
   constructor is no longer provided.) Values of `null` are ignored.
   */
   const showPanel = /*@__PURE__*/Facet.define({
       enables: panelPlugin
   });

   /**
   A gutter marker represents a bit of information attached to a line
   in a specific gutter. Your own custom markers have to extend this
   class.
   */
   class GutterMarker extends RangeValue {
       /**
       @internal
       */
       compare(other) {
           return this == other || this.constructor == other.constructor && this.eq(other);
       }
       /**
       Compare this marker to another marker of the same type.
       */
       eq(other) { return false; }
       /**
       Called if the marker has a `toDOM` method and its representation
       was removed from a gutter.
       */
       destroy(dom) { }
   }
   GutterMarker.prototype.elementClass = "";
   GutterMarker.prototype.toDOM = undefined;
   GutterMarker.prototype.mapMode = MapMode.TrackBefore;
   GutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;
   GutterMarker.prototype.point = true;
   /**
   Facet used to add a class to all gutter elements for a given line.
   Markers given to this facet should _only_ define an
   [`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a
   [`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear
   in all gutters for the line).
   */
   const gutterLineClass = /*@__PURE__*/Facet.define();
   const defaults$1 = {
       class: "",
       renderEmptyElements: false,
       elementStyle: "",
       markers: () => RangeSet.empty,
       lineMarker: () => null,
       lineMarkerChange: null,
       initialSpacer: null,
       updateSpacer: null,
       domEventHandlers: {}
   };
   const activeGutters = /*@__PURE__*/Facet.define();
   /**
   Define an editor gutter. The order in which the gutters appear is
   determined by their extension priority.
   */
   function gutter(config) {
       return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults$1), config))];
   }
   const unfixGutters = /*@__PURE__*/Facet.define({
       combine: values => values.some(x => x)
   });
   /**
   The gutter-drawing plugin is automatically enabled when you add a
   gutter, but you can use this function to explicitly configure it.

   Unless `fixed` is explicitly set to `false`, the gutters are
   fixed, meaning they don't scroll along with the content
   horizontally (except on Internet Explorer, which doesn't support
   CSS [`position:
   sticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).
   */
   function gutters(config) {
       let result = [
           gutterView,
       ];
       if (config && config.fixed === false)
           result.push(unfixGutters.of(true));
       return result;
   }
   const gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.prevViewport = view.viewport;
           this.dom = document.createElement("div");
           this.dom.className = "cm-gutters";
           this.dom.setAttribute("aria-hidden", "true");
           this.dom.style.minHeight = this.view.contentHeight + "px";
           this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));
           for (let gutter of this.gutters)
               this.dom.appendChild(gutter.dom);
           this.fixed = !view.state.facet(unfixGutters);
           if (this.fixed) {
               // FIXME IE11 fallback, which doesn't support position: sticky,
               // by using position: relative + event handlers that realign the
               // gutter (or just force fixed=false on IE11?)
               this.dom.style.position = "sticky";
           }
           this.syncGutters(false);
           view.scrollDOM.insertBefore(this.dom, view.contentDOM);
       }
       update(update) {
           if (this.updateGutters(update)) {
               // Detach during sync when the viewport changed significantly
               // (such as during scrolling), since for large updates that is
               // faster.
               let vpA = this.prevViewport, vpB = update.view.viewport;
               let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);
               this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);
           }
           if (update.geometryChanged)
               this.dom.style.minHeight = this.view.contentHeight + "px";
           if (this.view.state.facet(unfixGutters) != !this.fixed) {
               this.fixed = !this.fixed;
               this.dom.style.position = this.fixed ? "sticky" : "";
           }
           this.prevViewport = update.view.viewport;
       }
       syncGutters(detach) {
           let after = this.dom.nextSibling;
           if (detach)
               this.dom.remove();
           let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);
           let classSet = [];
           let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));
           for (let line of this.view.viewportLineBlocks) {
               let text;
               if (Array.isArray(line.type)) {
                   for (let b of line.type)
                       if (b.type == BlockType.Text) {
                           text = b;
                           break;
                       }
               }
               else {
                   text = line.type == BlockType.Text ? line : undefined;
               }
               if (!text)
                   continue;
               if (classSet.length)
                   classSet = [];
               advanceCursor(lineClasses, classSet, line.from);
               for (let cx of contexts)
                   cx.line(this.view, text, classSet);
           }
           for (let cx of contexts)
               cx.finish();
           if (detach)
               this.view.scrollDOM.insertBefore(this.dom, after);
       }
       updateGutters(update) {
           let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);
           let change = update.docChanged || update.heightChanged || update.viewportChanged ||
               !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);
           if (prev == cur) {
               for (let gutter of this.gutters)
                   if (gutter.update(update))
                       change = true;
           }
           else {
               change = true;
               let gutters = [];
               for (let conf of cur) {
                   let known = prev.indexOf(conf);
                   if (known < 0) {
                       gutters.push(new SingleGutterView(this.view, conf));
                   }
                   else {
                       this.gutters[known].update(update);
                       gutters.push(this.gutters[known]);
                   }
               }
               for (let g of this.gutters) {
                   g.dom.remove();
                   if (gutters.indexOf(g) < 0)
                       g.destroy();
               }
               for (let g of gutters)
                   this.dom.appendChild(g.dom);
               this.gutters = gutters;
           }
           return change;
       }
       destroy() {
           for (let view of this.gutters)
               view.destroy();
           this.dom.remove();
       }
   }, {
       provide: plugin => EditorView.scrollMargins.of(view => {
           let value = view.plugin(plugin);
           if (!value || value.gutters.length == 0 || !value.fixed)
               return null;
           return view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };
       })
   });
   function asArray(val) { return (Array.isArray(val) ? val : [val]); }
   function advanceCursor(cursor, collect, pos) {
       while (cursor.value && cursor.from <= pos) {
           if (cursor.from == pos)
               collect.push(cursor.value);
           cursor.next();
       }
   }
   class UpdateContext {
       constructor(gutter, viewport, height) {
           this.gutter = gutter;
           this.height = height;
           this.localMarkers = [];
           this.i = 0;
           this.cursor = RangeSet.iter(gutter.markers, viewport.from);
       }
       line(view, line, extraMarkers) {
           if (this.localMarkers.length)
               this.localMarkers = [];
           advanceCursor(this.cursor, this.localMarkers, line.from);
           let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;
           let forLine = this.gutter.config.lineMarker(view, line, localMarkers);
           if (forLine)
               localMarkers.unshift(forLine);
           let gutter = this.gutter;
           if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)
               return;
           let above = line.top - this.height;
           if (this.i == gutter.elements.length) {
               let newElt = new GutterElement(view, line.height, above, localMarkers);
               gutter.elements.push(newElt);
               gutter.dom.appendChild(newElt.dom);
           }
           else {
               gutter.elements[this.i].update(view, line.height, above, localMarkers);
           }
           this.height = line.bottom;
           this.i++;
       }
       finish() {
           let gutter = this.gutter;
           while (gutter.elements.length > this.i) {
               let last = gutter.elements.pop();
               gutter.dom.removeChild(last.dom);
               last.destroy();
           }
       }
   }
   class SingleGutterView {
       constructor(view, config) {
           this.view = view;
           this.config = config;
           this.elements = [];
           this.spacer = null;
           this.dom = document.createElement("div");
           this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
           for (let prop in config.domEventHandlers) {
               this.dom.addEventListener(prop, (event) => {
                   let line = view.lineBlockAtHeight(event.clientY - view.documentTop);
                   if (config.domEventHandlers[prop](view, line, event))
                       event.preventDefault();
               });
           }
           this.markers = asArray(config.markers(view));
           if (config.initialSpacer) {
               this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);
               this.dom.appendChild(this.spacer.dom);
               this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none";
           }
       }
       update(update) {
           let prevMarkers = this.markers;
           this.markers = asArray(this.config.markers(update.view));
           if (this.spacer && this.config.updateSpacer) {
               let updated = this.config.updateSpacer(this.spacer.markers[0], update);
               if (updated != this.spacer.markers[0])
                   this.spacer.update(update.view, 0, 0, [updated]);
           }
           let vp = update.view.viewport;
           return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||
               (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);
       }
       destroy() {
           for (let elt of this.elements)
               elt.destroy();
       }
   }
   class GutterElement {
       constructor(view, height, above, markers) {
           this.height = -1;
           this.above = 0;
           this.markers = [];
           this.dom = document.createElement("div");
           this.dom.className = "cm-gutterElement";
           this.update(view, height, above, markers);
       }
       update(view, height, above, markers) {
           if (this.height != height)
               this.dom.style.height = (this.height = height) + "px";
           if (this.above != above)
               this.dom.style.marginTop = (this.above = above) ? above + "px" : "";
           if (!sameMarkers(this.markers, markers))
               this.setMarkers(view, markers);
       }
       setMarkers(view, markers) {
           let cls = "cm-gutterElement", domPos = this.dom.firstChild;
           for (let iNew = 0, iOld = 0;;) {
               let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;
               if (marker) {
                   let c = marker.elementClass;
                   if (c)
                       cls += " " + c;
                   for (let i = iOld; i < this.markers.length; i++)
                       if (this.markers[i].compare(marker)) {
                           skipTo = i;
                           matched = true;
                           break;
                       }
               }
               else {
                   skipTo = this.markers.length;
               }
               while (iOld < skipTo) {
                   let next = this.markers[iOld++];
                   if (next.toDOM) {
                       next.destroy(domPos);
                       let after = domPos.nextSibling;
                       domPos.remove();
                       domPos = after;
                   }
               }
               if (!marker)
                   break;
               if (marker.toDOM) {
                   if (matched)
                       domPos = domPos.nextSibling;
                   else
                       this.dom.insertBefore(marker.toDOM(view), domPos);
               }
               if (matched)
                   iOld++;
           }
           this.dom.className = cls;
           this.markers = markers;
       }
       destroy() {
           this.setMarkers(null, []); // First argument not used unless creating markers
       }
   }
   function sameMarkers(a, b) {
       if (a.length != b.length)
           return false;
       for (let i = 0; i < a.length; i++)
           if (!a[i].compare(b[i]))
               return false;
       return true;
   }
   /**
   Facet used to provide markers to the line number gutter.
   */
   const lineNumberMarkers = /*@__PURE__*/Facet.define();
   const lineNumberConfig = /*@__PURE__*/Facet.define({
       combine(values) {
           return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {
               domEventHandlers(a, b) {
                   let result = Object.assign({}, a);
                   for (let event in b) {
                       let exists = result[event], add = b[event];
                       result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;
                   }
                   return result;
               }
           });
       }
   });
   class NumberMarker extends GutterMarker {
       constructor(number) {
           super();
           this.number = number;
       }
       eq(other) { return this.number == other.number; }
       toDOM() { return document.createTextNode(this.number); }
   }
   function formatNumber(view, number) {
       return view.state.facet(lineNumberConfig).formatNumber(number, view.state);
   }
   const lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({
       class: "cm-lineNumbers",
       renderEmptyElements: false,
       markers(view) { return view.state.facet(lineNumberMarkers); },
       lineMarker(view, line, others) {
           if (others.some(m => m.toDOM))
               return null;
           return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));
       },
       lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),
       initialSpacer(view) {
           return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));
       },
       updateSpacer(spacer, update) {
           let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));
           return max == spacer.number ? spacer : new NumberMarker(max);
       },
       domEventHandlers: state.facet(lineNumberConfig).domEventHandlers
   }));
   /**
   Create a line number gutter extension.
   */
   function lineNumbers(config = {}) {
       return [
           lineNumberConfig.of(config),
           gutters(),
           lineNumberGutter
       ];
   }
   function maxLineNumber(lines) {
       let last = 9;
       while (last < lines)
           last = last * 10 + 9;
       return last;
   }
   const activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {
       constructor() {
           super(...arguments);
           this.elementClass = "cm-activeLineGutter";
       }
   };
   const activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute(["selection"], state => {
       let marks = [], last = -1;
       for (let range of state.selection.ranges) {
           let linePos = state.doc.lineAt(range.head).from;
           if (linePos > last) {
               last = linePos;
               marks.push(activeLineGutterMarker.range(linePos));
           }
       }
       return RangeSet.of(marks);
   });
   /**
   Returns an extension that adds a `cm-activeLineGutter` class to
   all gutter elements on the [active
   line](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).
   */
   function highlightActiveLineGutter() {
       return activeLineGutterHighlighter;
   }

   // FIXME profile adding a per-Tree TreeNode cache, validating it by
   // parent pointer
   /// The default maximum length of a `TreeBuffer` node.
   const DefaultBufferLength = 1024;
   let nextPropID = 0;
   class Range {
       constructor(from, to) {
           this.from = from;
           this.to = to;
       }
   }
   /// Each [node type](#common.NodeType) or [individual tree](#common.Tree)
   /// can have metadata associated with it in props. Instances of this
   /// class represent prop names.
   class NodeProp {
       /// Create a new node prop type.
       constructor(config = {}) {
           this.id = nextPropID++;
           this.perNode = !!config.perNode;
           this.deserialize = config.deserialize || (() => {
               throw new Error("This node type doesn't define a deserialize function");
           });
       }
       /// This is meant to be used with
       /// [`NodeSet.extend`](#common.NodeSet.extend) or
       /// [`LRParser.configure`](#lr.ParserConfig.props) to compute
       /// prop values for each node type in the set. Takes a [match
       /// object](#common.NodeType^match) or function that returns undefined
       /// if the node type doesn't get this prop, and the prop's value if
       /// it does.
       add(match) {
           if (this.perNode)
               throw new RangeError("Can't add per-node props to node types");
           if (typeof match != "function")
               match = NodeType.match(match);
           return (type) => {
               let result = match(type);
               return result === undefined ? null : [this, result];
           };
       }
   }
   /// Prop that is used to describe matching delimiters. For opening
   /// delimiters, this holds an array of node names (written as a
   /// space-separated string when declaring this prop in a grammar)
   /// for the node types of closing delimiters that match it.
   NodeProp.closedBy = new NodeProp({ deserialize: str => str.split(" ") });
   /// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is
   /// attached to closing delimiters, holding an array of node names
   /// of types of matching opening delimiters.
   NodeProp.openedBy = new NodeProp({ deserialize: str => str.split(" ") });
   /// Used to assign node types to groups (for example, all node
   /// types that represent an expression could be tagged with an
   /// `"Expression"` group).
   NodeProp.group = new NodeProp({ deserialize: str => str.split(" ") });
   /// The hash of the [context](#lr.ContextTracker.constructor)
   /// that the node was parsed in, if any. Used to limit reuse of
   /// contextual nodes.
   NodeProp.contextHash = new NodeProp({ perNode: true });
   /// The distance beyond the end of the node that the tokenizer
   /// looked ahead for any of the tokens inside the node. (The LR
   /// parser only stores this when it is larger than 25, for
   /// efficiency reasons.)
   NodeProp.lookAhead = new NodeProp({ perNode: true });
   /// This per-node prop is used to replace a given node, or part of a
   /// node, with another tree. This is useful to include trees from
   /// different languages in mixed-language parsers.
   NodeProp.mounted = new NodeProp({ perNode: true });
   const noProps = Object.create(null);
   /// Each node in a syntax tree has a node type associated with it.
   class NodeType {
       /// @internal
       constructor(
       /// The name of the node type. Not necessarily unique, but if the
       /// grammar was written properly, different node types with the
       /// same name within a node set should play the same semantic
       /// role.
       name, 
       /// @internal
       props, 
       /// The id of this node in its set. Corresponds to the term ids
       /// used in the parser.
       id, 
       /// @internal
       flags = 0) {
           this.name = name;
           this.props = props;
           this.id = id;
           this.flags = flags;
       }
       /// Define a node type.
       static define(spec) {
           let props = spec.props && spec.props.length ? Object.create(null) : noProps;
           let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |
               (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);
           let type = new NodeType(spec.name || "", props, spec.id, flags);
           if (spec.props)
               for (let src of spec.props) {
                   if (!Array.isArray(src))
                       src = src(type);
                   if (src) {
                       if (src[0].perNode)
                           throw new RangeError("Can't store a per-node prop on a node type");
                       props[src[0].id] = src[1];
                   }
               }
           return type;
       }
       /// Retrieves a node prop for this type. Will return `undefined` if
       /// the prop isn't present on this node.
       prop(prop) { return this.props[prop.id]; }
       /// True when this is the top node of a grammar.
       get isTop() { return (this.flags & 1 /* Top */) > 0; }
       /// True when this node is produced by a skip rule.
       get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }
       /// Indicates whether this is an error node.
       get isError() { return (this.flags & 4 /* Error */) > 0; }
       /// When true, this node type doesn't correspond to a user-declared
       /// named node, for example because it is used to cache repetition.
       get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }
       /// Returns true when this node's name or one of its
       /// [groups](#common.NodeProp^group) matches the given string.
       is(name) {
           if (typeof name == 'string') {
               if (this.name == name)
                   return true;
               let group = this.prop(NodeProp.group);
               return group ? group.indexOf(name) > -1 : false;
           }
           return this.id == name;
       }
       /// Create a function from node types to arbitrary values by
       /// specifying an object whose property names are node or
       /// [group](#common.NodeProp^group) names. Often useful with
       /// [`NodeProp.add`](#common.NodeProp.add). You can put multiple
       /// names, separated by spaces, in a single property name to map
       /// multiple node names to a single value.
       static match(map) {
           let direct = Object.create(null);
           for (let prop in map)
               for (let name of prop.split(" "))
                   direct[name] = map[prop];
           return (node) => {
               for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {
                   let found = direct[i < 0 ? node.name : groups[i]];
                   if (found)
                       return found;
               }
           };
       }
   }
   /// An empty dummy node type to use when no actual type is available.
   NodeType.none = new NodeType("", Object.create(null), 0, 8 /* Anonymous */);
   /// A node set holds a collection of node types. It is used to
   /// compactly represent trees by storing their type ids, rather than a
   /// full pointer to the type object, in a numeric array. Each parser
   /// [has](#lr.LRParser.nodeSet) a node set, and [tree
   /// buffers](#common.TreeBuffer) can only store collections of nodes
   /// from the same set. A set can have a maximum of 2**16 (65536) node
   /// types in it, so that the ids fit into 16-bit typed array slots.
   class NodeSet {
       /// Create a set with the given types. The `id` property of each
       /// type should correspond to its position within the array.
       constructor(
       /// The node types in this set, by id.
       types) {
           this.types = types;
           for (let i = 0; i < types.length; i++)
               if (types[i].id != i)
                   throw new RangeError("Node type ids should correspond to array positions when creating a node set");
       }
       /// Create a copy of this set with some node properties added. The
       /// arguments to this method can be created with
       /// [`NodeProp.add`](#common.NodeProp.add).
       extend(...props) {
           let newTypes = [];
           for (let type of this.types) {
               let newProps = null;
               for (let source of props) {
                   let add = source(type);
                   if (add) {
                       if (!newProps)
                           newProps = Object.assign({}, type.props);
                       newProps[add[0].id] = add[1];
                   }
               }
               newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);
           }
           return new NodeSet(newTypes);
       }
   }
   const CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();
   /// Options that control iteration. Can be combined with the `|`
   /// operator to enable multiple ones.
   var IterMode;
   (function (IterMode) {
       /// When enabled, iteration will only visit [`Tree`](#common.Tree)
       /// objects, not nodes packed into
       /// [`TreeBuffer`](#common.TreeBuffer)s.
       IterMode[IterMode["ExcludeBuffers"] = 1] = "ExcludeBuffers";
       /// Enable this to make iteration include anonymous nodes (such as
       /// the nodes that wrap repeated grammar constructs into a balanced
       /// tree).
       IterMode[IterMode["IncludeAnonymous"] = 2] = "IncludeAnonymous";
       /// By default, regular [mounted](#common.NodeProp^mounted) nodes
       /// replace their base node in iteration. Enable this to ignore them
       /// instead.
       IterMode[IterMode["IgnoreMounts"] = 4] = "IgnoreMounts";
       /// This option only applies in
       /// [`enter`](#common.SyntaxNode.enter)-style methods. It tells the
       /// library to not enter mounted overlays if one covers the given
       /// position.
       IterMode[IterMode["IgnoreOverlays"] = 8] = "IgnoreOverlays";
   })(IterMode || (IterMode = {}));
   /// A piece of syntax tree. There are two ways to approach these
   /// trees: the way they are actually stored in memory, and the
   /// convenient way.
   ///
   /// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`
   /// objects. By packing detail information into `TreeBuffer` leaf
   /// nodes, the representation is made a lot more memory-efficient.
   ///
   /// However, when you want to actually work with tree nodes, this
   /// representation is very awkward, so most client code will want to
   /// use the [`TreeCursor`](#common.TreeCursor) or
   /// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides
   /// a view on some part of this data structure, and can be used to
   /// move around to adjacent nodes.
   class Tree {
       /// Construct a new tree. See also [`Tree.build`](#common.Tree^build).
       constructor(
       /// The type of the top node.
       type, 
       /// This node's child nodes.
       children, 
       /// The positions (offsets relative to the start of this tree) of
       /// the children.
       positions, 
       /// The total length of this tree
       length, 
       /// Per-node [node props](#common.NodeProp) to associate with this node.
       props) {
           this.type = type;
           this.children = children;
           this.positions = positions;
           this.length = length;
           /// @internal
           this.props = null;
           if (props && props.length) {
               this.props = Object.create(null);
               for (let [prop, value] of props)
                   this.props[typeof prop == "number" ? prop : prop.id] = value;
           }
       }
       /// @internal
       toString() {
           let mounted = this.prop(NodeProp.mounted);
           if (mounted && !mounted.overlay)
               return mounted.tree.toString();
           let children = "";
           for (let ch of this.children) {
               let str = ch.toString();
               if (str) {
                   if (children)
                       children += ",";
                   children += str;
               }
           }
           return !this.type.name ? children :
               (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +
                   (children.length ? "(" + children + ")" : "");
       }
       /// Get a [tree cursor](#common.TreeCursor) positioned at the top of
       /// the tree. Mode can be used to [control](#common.IterMode) which
       /// nodes the cursor visits.
       cursor(mode = 0) {
           return new TreeCursor(this.topNode, mode);
       }
       /// Get a [tree cursor](#common.TreeCursor) pointing into this tree
       /// at the given position and side (see
       /// [`moveTo`](#common.TreeCursor.moveTo).
       cursorAt(pos, side = 0, mode = 0) {
           let scope = CachedNode.get(this) || this.topNode;
           let cursor = new TreeCursor(scope);
           cursor.moveTo(pos, side);
           CachedNode.set(this, cursor._tree);
           return cursor;
       }
       /// Get a [syntax node](#common.SyntaxNode) object for the top of the
       /// tree.
       get topNode() {
           return new TreeNode(this, 0, 0, null);
       }
       /// Get the [syntax node](#common.SyntaxNode) at the given position.
       /// If `side` is -1, this will move into nodes that end at the
       /// position. If 1, it'll move into nodes that start at the
       /// position. With 0, it'll only enter nodes that cover the position
       /// from both sides.
       ///
       /// Note that this will not enter
       /// [overlays](#common.MountedTree.overlay), and you often want
       /// [`resolveInner`](#common.Tree.resolveInner) instead.
       resolve(pos, side = 0) {
           let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);
           CachedNode.set(this, node);
           return node;
       }
       /// Like [`resolve`](#common.Tree.resolve), but will enter
       /// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
       /// pointing into the innermost overlaid tree at the given position
       /// (with parent links going through all parent structure, including
       /// the host trees).
       resolveInner(pos, side = 0) {
           let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);
           CachedInnerNode.set(this, node);
           return node;
       }
       /// Iterate over the tree and its children, calling `enter` for any
       /// node that touches the `from`/`to` region (if given) before
       /// running over such a node's children, and `leave` (if given) when
       /// leaving the node. When `enter` returns `false`, that node will
       /// not have its children iterated over (or `leave` called).
       iterate(spec) {
           let { enter, leave, from = 0, to = this.length } = spec;
           for (let c = this.cursor((spec.mode || 0) | IterMode.IncludeAnonymous);;) {
               let entered = false;
               if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c) !== false)) {
                   if (c.firstChild())
                       continue;
                   entered = true;
               }
               for (;;) {
                   if (entered && leave && !c.type.isAnonymous)
                       leave(c);
                   if (c.nextSibling())
                       break;
                   if (!c.parent())
                       return;
                   entered = true;
               }
           }
       }
       /// Get the value of the given [node prop](#common.NodeProp) for this
       /// node. Works with both per-node and per-type props.
       prop(prop) {
           return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;
       }
       /// Returns the node's [per-node props](#common.NodeProp.perNode) in a
       /// format that can be passed to the [`Tree`](#common.Tree)
       /// constructor.
       get propValues() {
           let result = [];
           if (this.props)
               for (let id in this.props)
                   result.push([+id, this.props[id]]);
           return result;
       }
       /// Balance the direct children of this tree, producing a copy of
       /// which may have children grouped into subtrees with type
       /// [`NodeType.none`](#common.NodeType^none).
       balance(config = {}) {
           return this.children.length <= 8 /* BranchFactor */ ? this :
               balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));
       }
       /// Build a tree from a postfix-ordered buffer of node information,
       /// or a cursor over such a buffer.
       static build(data) { return buildTree(data); }
   }
   /// The empty tree
   Tree.empty = new Tree(NodeType.none, [], [], 0);
   class FlatBufferCursor {
       constructor(buffer, index) {
           this.buffer = buffer;
           this.index = index;
       }
       get id() { return this.buffer[this.index - 4]; }
       get start() { return this.buffer[this.index - 3]; }
       get end() { return this.buffer[this.index - 2]; }
       get size() { return this.buffer[this.index - 1]; }
       get pos() { return this.index; }
       next() { this.index -= 4; }
       fork() { return new FlatBufferCursor(this.buffer, this.index); }
   }
   /// Tree buffers contain (type, start, end, endIndex) quads for each
   /// node. In such a buffer, nodes are stored in prefix order (parents
   /// before children, with the endIndex of the parent indicating which
   /// children belong to it).
   class TreeBuffer {
       /// Create a tree buffer.
       constructor(
       /// The buffer's content.
       buffer, 
       /// The total length of the group of nodes in the buffer.
       length, 
       /// The node set used in this buffer.
       set) {
           this.buffer = buffer;
           this.length = length;
           this.set = set;
       }
       /// @internal
       get type() { return NodeType.none; }
       /// @internal
       toString() {
           let result = [];
           for (let index = 0; index < this.buffer.length;) {
               result.push(this.childString(index));
               index = this.buffer[index + 3];
           }
           return result.join(",");
       }
       /// @internal
       childString(index) {
           let id = this.buffer[index], endIndex = this.buffer[index + 3];
           let type = this.set.types[id], result = type.name;
           if (/\W/.test(result) && !type.isError)
               result = JSON.stringify(result);
           index += 4;
           if (endIndex == index)
               return result;
           let children = [];
           while (index < endIndex) {
               children.push(this.childString(index));
               index = this.buffer[index + 3];
           }
           return result + "(" + children.join(",") + ")";
       }
       /// @internal
       findChild(startIndex, endIndex, dir, pos, side) {
           let { buffer } = this, pick = -1;
           for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {
               if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {
                   pick = i;
                   if (dir > 0)
                       break;
               }
           }
           return pick;
       }
       /// @internal
       slice(startI, endI, from, to) {
           let b = this.buffer;
           let copy = new Uint16Array(endI - startI);
           for (let i = startI, j = 0; i < endI;) {
               copy[j++] = b[i++];
               copy[j++] = b[i++] - from;
               copy[j++] = b[i++] - from;
               copy[j++] = b[i++] - startI;
           }
           return new TreeBuffer(copy, to - from, this.set);
       }
   }
   function checkSide(side, pos, from, to) {
       switch (side) {
           case -2 /* Before */: return from < pos;
           case -1 /* AtOrBefore */: return to >= pos && from < pos;
           case 0 /* Around */: return from < pos && to > pos;
           case 1 /* AtOrAfter */: return from <= pos && to > pos;
           case 2 /* After */: return to > pos;
           case 4 /* DontCare */: return true;
       }
   }
   function enterUnfinishedNodesBefore(node, pos) {
       let scan = node.childBefore(pos);
       while (scan) {
           let last = scan.lastChild;
           if (!last || last.to != scan.to)
               break;
           if (last.type.isError && last.from == last.to) {
               node = scan;
               scan = last.prevSibling;
           }
           else {
               scan = last;
           }
       }
       return node;
   }
   function resolveNode(node, pos, side, overlays) {
       var _a;
       // Move up to a node that actually holds the position, if possible
       while (node.from == node.to ||
           (side < 1 ? node.from >= pos : node.from > pos) ||
           (side > -1 ? node.to <= pos : node.to < pos)) {
           let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;
           if (!parent)
               return node;
           node = parent;
       }
       let mode = overlays ? 0 : IterMode.IgnoreOverlays;
       // Must go up out of overlays when those do not overlap with pos
       if (overlays)
           for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {
               if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)
                   node = parent;
           }
       for (;;) {
           let inner = node.enter(pos, side, mode);
           if (!inner)
               return node;
           node = inner;
       }
   }
   class TreeNode {
       constructor(_tree, from, 
       // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)
       index, _parent) {
           this._tree = _tree;
           this.from = from;
           this.index = index;
           this._parent = _parent;
       }
       get type() { return this._tree.type; }
       get name() { return this._tree.type.name; }
       get to() { return this.from + this._tree.length; }
       nextChild(i, dir, pos, side, mode = 0) {
           for (let parent = this;;) {
               for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {
                   let next = children[i], start = positions[i] + parent.from;
                   if (!checkSide(side, pos, start, start + next.length))
                       continue;
                   if (next instanceof TreeBuffer) {
                       if (mode & IterMode.ExcludeBuffers)
                           continue;
                       let index = next.findChild(0, next.buffer.length, dir, pos - start, side);
                       if (index > -1)
                           return new BufferNode(new BufferContext(parent, next, i, start), null, index);
                   }
                   else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {
                       let mounted;
                       if (!(mode & IterMode.IgnoreMounts) &&
                           next.props && (mounted = next.prop(NodeProp.mounted)) && !mounted.overlay)
                           return new TreeNode(mounted.tree, start, i, parent);
                       let inner = new TreeNode(next, start, i, parent);
                       return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner
                           : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);
                   }
               }
               if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)
                   return null;
               if (parent.index >= 0)
                   i = parent.index + dir;
               else
                   i = dir < 0 ? -1 : parent._parent._tree.children.length;
               parent = parent._parent;
               if (!parent)
                   return null;
           }
       }
       get firstChild() { return this.nextChild(0, 1, 0, 4 /* DontCare */); }
       get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* DontCare */); }
       childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* After */); }
       childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Before */); }
       enter(pos, side, mode = 0) {
           let mounted;
           if (!(mode & IterMode.IgnoreOverlays) && (mounted = this._tree.prop(NodeProp.mounted)) && mounted.overlay) {
               let rPos = pos - this.from;
               for (let { from, to } of mounted.overlay) {
                   if ((side > 0 ? from <= rPos : from < rPos) &&
                       (side < 0 ? to >= rPos : to > rPos))
                       return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);
               }
           }
           return this.nextChild(0, 1, pos, side, mode);
       }
       nextSignificantParent() {
           let val = this;
           while (val.type.isAnonymous && val._parent)
               val = val._parent;
           return val;
       }
       get parent() {
           return this._parent ? this._parent.nextSignificantParent() : null;
       }
       get nextSibling() {
           return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* DontCare */) : null;
       }
       get prevSibling() {
           return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* DontCare */) : null;
       }
       cursor(mode = 0) { return new TreeCursor(this, mode); }
       get tree() { return this._tree; }
       toTree() { return this._tree; }
       resolve(pos, side = 0) {
           return resolveNode(this, pos, side, false);
       }
       resolveInner(pos, side = 0) {
           return resolveNode(this, pos, side, true);
       }
       enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }
       getChild(type, before = null, after = null) {
           let r = getChildren(this, type, before, after);
           return r.length ? r[0] : null;
       }
       getChildren(type, before = null, after = null) {
           return getChildren(this, type, before, after);
       }
       /// @internal
       toString() { return this._tree.toString(); }
       get node() { return this; }
       matchContext(context) { return matchNodeContext(this, context); }
   }
   function getChildren(node, type, before, after) {
       let cur = node.cursor(), result = [];
       if (!cur.firstChild())
           return result;
       if (before != null)
           while (!cur.type.is(before))
               if (!cur.nextSibling())
                   return result;
       for (;;) {
           if (after != null && cur.type.is(after))
               return result;
           if (cur.type.is(type))
               result.push(cur.node);
           if (!cur.nextSibling())
               return after == null ? result : [];
       }
   }
   function matchNodeContext(node, context, i = context.length - 1) {
       for (let p = node.parent; i >= 0; p = p.parent) {
           if (!p)
               return false;
           if (!p.type.isAnonymous) {
               if (context[i] && context[i] != p.name)
                   return false;
               i--;
           }
       }
       return true;
   }
   class BufferContext {
       constructor(parent, buffer, index, start) {
           this.parent = parent;
           this.buffer = buffer;
           this.index = index;
           this.start = start;
       }
   }
   class BufferNode {
       constructor(context, _parent, index) {
           this.context = context;
           this._parent = _parent;
           this.index = index;
           this.type = context.buffer.set.types[context.buffer.buffer[index]];
       }
       get name() { return this.type.name; }
       get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }
       get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }
       child(dir, pos, side) {
           let { buffer } = this.context;
           let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);
           return index < 0 ? null : new BufferNode(this.context, this, index);
       }
       get firstChild() { return this.child(1, 0, 4 /* DontCare */); }
       get lastChild() { return this.child(-1, 0, 4 /* DontCare */); }
       childAfter(pos) { return this.child(1, pos, 2 /* After */); }
       childBefore(pos) { return this.child(-1, pos, -2 /* Before */); }
       enter(pos, side, mode = 0) {
           if (mode & IterMode.ExcludeBuffers)
               return null;
           let { buffer } = this.context;
           let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);
           return index < 0 ? null : new BufferNode(this.context, this, index);
       }
       get parent() {
           return this._parent || this.context.parent.nextSignificantParent();
       }
       externalSibling(dir) {
           return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* DontCare */);
       }
       get nextSibling() {
           let { buffer } = this.context;
           let after = buffer.buffer[this.index + 3];
           if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))
               return new BufferNode(this.context, this._parent, after);
           return this.externalSibling(1);
       }
       get prevSibling() {
           let { buffer } = this.context;
           let parentStart = this._parent ? this._parent.index + 4 : 0;
           if (this.index == parentStart)
               return this.externalSibling(-1);
           return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));
       }
       cursor(mode = 0) { return new TreeCursor(this, mode); }
       get tree() { return null; }
       toTree() {
           let children = [], positions = [];
           let { buffer } = this.context;
           let startI = this.index + 4, endI = buffer.buffer[this.index + 3];
           if (endI > startI) {
               let from = buffer.buffer[this.index + 1], to = buffer.buffer[this.index + 2];
               children.push(buffer.slice(startI, endI, from, to));
               positions.push(0);
           }
           return new Tree(this.type, children, positions, this.to - this.from);
       }
       resolve(pos, side = 0) {
           return resolveNode(this, pos, side, false);
       }
       resolveInner(pos, side = 0) {
           return resolveNode(this, pos, side, true);
       }
       enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }
       /// @internal
       toString() { return this.context.buffer.childString(this.index); }
       getChild(type, before = null, after = null) {
           let r = getChildren(this, type, before, after);
           return r.length ? r[0] : null;
       }
       getChildren(type, before = null, after = null) {
           return getChildren(this, type, before, after);
       }
       get node() { return this; }
       matchContext(context) { return matchNodeContext(this, context); }
   }
   /// A tree cursor object focuses on a given node in a syntax tree, and
   /// allows you to move to adjacent nodes.
   class TreeCursor {
       /// @internal
       constructor(node, 
       /// @internal
       mode = 0) {
           this.mode = mode;
           /// @internal
           this.buffer = null;
           this.stack = [];
           /// @internal
           this.index = 0;
           this.bufferNode = null;
           if (node instanceof TreeNode) {
               this.yieldNode(node);
           }
           else {
               this._tree = node.context.parent;
               this.buffer = node.context;
               for (let n = node._parent; n; n = n._parent)
                   this.stack.unshift(n.index);
               this.bufferNode = node;
               this.yieldBuf(node.index);
           }
       }
       /// Shorthand for `.type.name`.
       get name() { return this.type.name; }
       yieldNode(node) {
           if (!node)
               return false;
           this._tree = node;
           this.type = node.type;
           this.from = node.from;
           this.to = node.to;
           return true;
       }
       yieldBuf(index, type) {
           this.index = index;
           let { start, buffer } = this.buffer;
           this.type = type || buffer.set.types[buffer.buffer[index]];
           this.from = start + buffer.buffer[index + 1];
           this.to = start + buffer.buffer[index + 2];
           return true;
       }
       yield(node) {
           if (!node)
               return false;
           if (node instanceof TreeNode) {
               this.buffer = null;
               return this.yieldNode(node);
           }
           this.buffer = node.context;
           return this.yieldBuf(node.index, node.type);
       }
       /// @internal
       toString() {
           return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
       }
       /// @internal
       enterChild(dir, pos, side) {
           if (!this.buffer)
               return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));
           let { buffer } = this.buffer;
           let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);
           if (index < 0)
               return false;
           this.stack.push(this.index);
           return this.yieldBuf(index);
       }
       /// Move the cursor to this node's first child. When this returns
       /// false, the node has no child, and the cursor has not been moved.
       firstChild() { return this.enterChild(1, 0, 4 /* DontCare */); }
       /// Move the cursor to this node's last child.
       lastChild() { return this.enterChild(-1, 0, 4 /* DontCare */); }
       /// Move the cursor to the first child that ends after `pos`.
       childAfter(pos) { return this.enterChild(1, pos, 2 /* After */); }
       /// Move to the last child that starts before `pos`.
       childBefore(pos) { return this.enterChild(-1, pos, -2 /* Before */); }
       /// Move the cursor to the child around `pos`. If side is -1 the
       /// child may end at that position, when 1 it may start there. This
       /// will also enter [overlaid](#common.MountedTree.overlay)
       /// [mounted](#common.NodeProp^mounted) trees unless `overlays` is
       /// set to false.
       enter(pos, side, mode = this.mode) {
           if (!this.buffer)
               return this.yield(this._tree.enter(pos, side, mode));
           return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);
       }
       /// Move to the node's parent node, if this isn't the top node.
       parent() {
           if (!this.buffer)
               return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);
           if (this.stack.length)
               return this.yieldBuf(this.stack.pop());
           let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
           this.buffer = null;
           return this.yieldNode(parent);
       }
       /// @internal
       sibling(dir) {
           if (!this.buffer)
               return !this._tree._parent ? false
                   : this.yield(this._tree.index < 0 ? null
                       : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* DontCare */, this.mode));
           let { buffer } = this.buffer, d = this.stack.length - 1;
           if (dir < 0) {
               let parentStart = d < 0 ? 0 : this.stack[d] + 4;
               if (this.index != parentStart)
                   return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));
           }
           else {
               let after = buffer.buffer[this.index + 3];
               if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))
                   return this.yieldBuf(after);
           }
           return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* DontCare */, this.mode)) : false;
       }
       /// Move to this node's next sibling, if any.
       nextSibling() { return this.sibling(1); }
       /// Move to this node's previous sibling, if any.
       prevSibling() { return this.sibling(-1); }
       atLastNode(dir) {
           let index, parent, { buffer } = this;
           if (buffer) {
               if (dir > 0) {
                   if (this.index < buffer.buffer.buffer.length)
                       return false;
               }
               else {
                   for (let i = 0; i < this.index; i++)
                       if (buffer.buffer.buffer[i + 3] < this.index)
                           return false;
               }
               ({ index, parent } = buffer);
           }
           else {
               ({ index, _parent: parent } = this._tree);
           }
           for (; parent; { index, _parent: parent } = parent) {
               if (index > -1)
                   for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {
                       let child = parent._tree.children[i];
                       if ((this.mode & IterMode.IncludeAnonymous) ||
                           child instanceof TreeBuffer ||
                           !child.type.isAnonymous ||
                           hasChild(child))
                           return false;
                   }
           }
           return true;
       }
       move(dir, enter) {
           if (enter && this.enterChild(dir, 0, 4 /* DontCare */))
               return true;
           for (;;) {
               if (this.sibling(dir))
                   return true;
               if (this.atLastNode(dir) || !this.parent())
                   return false;
           }
       }
       /// Move to the next node in a
       /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))
       /// traversal, going from a node to its first child or, if the
       /// current node is empty or `enter` is false, its next sibling or
       /// the next sibling of the first parent node that has one.
       next(enter = true) { return this.move(1, enter); }
       /// Move to the next node in a last-to-first pre-order traveral. A
       /// node is followed by its last child or, if it has none, its
       /// previous sibling or the previous sibling of the first parent
       /// node that has one.
       prev(enter = true) { return this.move(-1, enter); }
       /// Move the cursor to the innermost node that covers `pos`. If
       /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,
       /// it will enter nodes that start at `pos`.
       moveTo(pos, side = 0) {
           // Move up to a node that actually holds the position, if possible
           while (this.from == this.to ||
               (side < 1 ? this.from >= pos : this.from > pos) ||
               (side > -1 ? this.to <= pos : this.to < pos))
               if (!this.parent())
                   break;
           // Then scan down into child nodes as far as possible
           while (this.enterChild(1, pos, side)) { }
           return this;
       }
       /// Get a [syntax node](#common.SyntaxNode) at the cursor's current
       /// position.
       get node() {
           if (!this.buffer)
               return this._tree;
           let cache = this.bufferNode, result = null, depth = 0;
           if (cache && cache.context == this.buffer) {
               scan: for (let index = this.index, d = this.stack.length; d >= 0;) {
                   for (let c = cache; c; c = c._parent)
                       if (c.index == index) {
                           if (index == this.index)
                               return c;
                           result = c;
                           depth = d + 1;
                           break scan;
                       }
                   index = this.stack[--d];
               }
           }
           for (let i = depth; i < this.stack.length; i++)
               result = new BufferNode(this.buffer, result, this.stack[i]);
           return this.bufferNode = new BufferNode(this.buffer, result, this.index);
       }
       /// Get the [tree](#common.Tree) that represents the current node, if
       /// any. Will return null when the node is in a [tree
       /// buffer](#common.TreeBuffer).
       get tree() {
           return this.buffer ? null : this._tree._tree;
       }
       /// Iterate over the current node and all its descendants, calling
       /// `enter` when entering a node and `leave`, if given, when leaving
       /// one. When `enter` returns `false`, any children of that node are
       /// skipped, and `leave` isn't called for it.
       iterate(enter, leave) {
           for (let depth = 0;;) {
               let mustLeave = false;
               if (this.type.isAnonymous || enter(this) !== false) {
                   if (this.firstChild()) {
                       depth++;
                       continue;
                   }
                   if (!this.type.isAnonymous)
                       mustLeave = true;
               }
               for (;;) {
                   if (mustLeave && leave)
                       leave(this);
                   mustLeave = this.type.isAnonymous;
                   if (this.nextSibling())
                       break;
                   if (!depth)
                       return;
                   this.parent();
                   depth--;
                   mustLeave = true;
               }
           }
       }
       /// Test whether the current node matches a given context—a sequence
       /// of direct parent node names. Empty strings in the context array
       /// are treated as wildcards.
       matchContext(context) {
           if (!this.buffer)
               return matchNodeContext(this.node, context);
           let { buffer } = this.buffer, { types } = buffer.set;
           for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {
               if (d < 0)
                   return matchNodeContext(this.node, context, i);
               let type = types[buffer.buffer[this.stack[d]]];
               if (!type.isAnonymous) {
                   if (context[i] && context[i] != type.name)
                       return false;
                   i--;
               }
           }
           return true;
       }
   }
   function hasChild(tree) {
       return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));
   }
   function buildTree(data) {
       var _a;
       let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;
       let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;
       let types = nodeSet.types;
       let contextHash = 0, lookAhead = 0;
       function takeNode(parentStart, minPos, children, positions, inRepeat) {
           let { id, start, end, size } = cursor;
           let lookAheadAtStart = lookAhead;
           while (size < 0) {
               cursor.next();
               if (size == -1 /* Reuse */) {
                   let node = reused[id];
                   children.push(node);
                   positions.push(start - parentStart);
                   return;
               }
               else if (size == -3 /* ContextChange */) { // Context change
                   contextHash = id;
                   return;
               }
               else if (size == -4 /* LookAhead */) {
                   lookAhead = id;
                   return;
               }
               else {
                   throw new RangeError(`Unrecognized record size: ${size}`);
               }
           }
           let type = types[id], node, buffer;
           let startPos = start - parentStart;
           if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {
               // Small enough for a buffer, and no reused nodes inside
               let data = new Uint16Array(buffer.size - buffer.skip);
               let endPos = cursor.pos - buffer.size, index = data.length;
               while (cursor.pos > endPos)
                   index = copyToBuffer(buffer.start, data, index);
               node = new TreeBuffer(data, end - buffer.start, nodeSet);
               startPos = buffer.start - parentStart;
           }
           else { // Make it a node
               let endPos = cursor.pos - size;
               cursor.next();
               let localChildren = [], localPositions = [];
               let localInRepeat = id >= minRepeatType ? id : -1;
               let lastGroup = 0, lastEnd = end;
               while (cursor.pos > endPos) {
                   if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {
                       if (cursor.end <= lastEnd - maxBufferLength) {
                           makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);
                           lastGroup = localChildren.length;
                           lastEnd = cursor.end;
                       }
                       cursor.next();
                   }
                   else {
                       takeNode(start, endPos, localChildren, localPositions, localInRepeat);
                   }
               }
               if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)
                   makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);
               localChildren.reverse();
               localPositions.reverse();
               if (localInRepeat > -1 && lastGroup > 0) {
                   let make = makeBalanced(type);
                   node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);
               }
               else {
                   node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);
               }
           }
           children.push(node);
           positions.push(startPos);
       }
       function makeBalanced(type) {
           return (children, positions, length) => {
               let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;
               if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {
                   if (!lastI && last.type == type && last.length == length)
                       return last;
                   if (lookAheadProp = last.prop(NodeProp.lookAhead))
                       lookAhead = positions[lastI] + last.length + lookAheadProp;
               }
               return makeTree(type, children, positions, length, lookAhead);
           };
       }
       function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {
           let localChildren = [], localPositions = [];
           while (children.length > i) {
               localChildren.push(children.pop());
               localPositions.push(positions.pop() + base - from);
           }
           children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));
           positions.push(from - base);
       }
       function makeTree(type, children, positions, length, lookAhead = 0, props) {
           if (contextHash) {
               let pair = [NodeProp.contextHash, contextHash];
               props = props ? [pair].concat(props) : [pair];
           }
           if (lookAhead > 25) {
               let pair = [NodeProp.lookAhead, lookAhead];
               props = props ? [pair].concat(props) : [pair];
           }
           return new Tree(type, children, positions, length, props);
       }
       function findBufferSize(maxSize, inRepeat) {
           // Scan through the buffer to find previous siblings that fit
           // together in a TreeBuffer, and don't contain any reused nodes
           // (which can't be stored in a buffer).
           // If `inRepeat` is > -1, ignore node boundaries of that type for
           // nesting, but make sure the end falls either at the start
           // (`maxSize`) or before such a node.
           let fork = cursor.fork();
           let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;
           let result = { size: 0, start: 0, skip: 0 };
           scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {
               let nodeSize = fork.size;
               // Pretend nested repeat nodes of the same type don't exist
               if (fork.id == inRepeat && nodeSize >= 0) {
                   // Except that we store the current state as a valid return
                   // value.
                   result.size = size;
                   result.start = start;
                   result.skip = skip;
                   skip += 4;
                   size += 4;
                   fork.next();
                   continue;
               }
               let startPos = fork.pos - nodeSize;
               if (nodeSize < 0 || startPos < minPos || fork.start < minStart)
                   break;
               let localSkipped = fork.id >= minRepeatType ? 4 : 0;
               let nodeStart = fork.start;
               fork.next();
               while (fork.pos > startPos) {
                   if (fork.size < 0) {
                       if (fork.size == -3 /* ContextChange */)
                           localSkipped += 4;
                       else
                           break scan;
                   }
                   else if (fork.id >= minRepeatType) {
                       localSkipped += 4;
                   }
                   fork.next();
               }
               start = nodeStart;
               size += nodeSize;
               skip += localSkipped;
           }
           if (inRepeat < 0 || size == maxSize) {
               result.size = size;
               result.start = start;
               result.skip = skip;
           }
           return result.size > 4 ? result : undefined;
       }
       function copyToBuffer(bufferStart, buffer, index) {
           let { id, start, end, size } = cursor;
           cursor.next();
           if (size >= 0 && id < minRepeatType) {
               let startIndex = index;
               if (size > 4) {
                   let endPos = cursor.pos - (size - 4);
                   while (cursor.pos > endPos)
                       index = copyToBuffer(bufferStart, buffer, index);
               }
               buffer[--index] = startIndex;
               buffer[--index] = end - bufferStart;
               buffer[--index] = start - bufferStart;
               buffer[--index] = id;
           }
           else if (size == -3 /* ContextChange */) {
               contextHash = id;
           }
           else if (size == -4 /* LookAhead */) {
               lookAhead = id;
           }
           return index;
       }
       let children = [], positions = [];
       while (cursor.pos > 0)
           takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1);
       let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);
       return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);
   }
   const nodeSizeCache = new WeakMap;
   function nodeSize(balanceType, node) {
       if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)
           return 1;
       let size = nodeSizeCache.get(node);
       if (size == null) {
           size = 1;
           for (let child of node.children) {
               if (child.type != balanceType || !(child instanceof Tree)) {
                   size = 1;
                   break;
               }
               size += nodeSize(balanceType, child);
           }
           nodeSizeCache.set(node, size);
       }
       return size;
   }
   function balanceRange(
   // The type the balanced tree's inner nodes.
   balanceType, 
   // The direct children and their positions
   children, positions, 
   // The index range in children/positions to use
   from, to, 
   // The start position of the nodes, relative to their parent.
   start, 
   // Length of the outer node
   length, 
   // Function to build the top node of the balanced tree
   mkTop, 
   // Function to build internal nodes for the balanced tree
   mkTree) {
       let total = 0;
       for (let i = from; i < to; i++)
           total += nodeSize(balanceType, children[i]);
       let maxChild = Math.ceil((total * 1.5) / 8 /* BranchFactor */);
       let localChildren = [], localPositions = [];
       function divide(children, positions, from, to, offset) {
           for (let i = from; i < to;) {
               let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);
               i++;
               for (; i < to; i++) {
                   let nextSize = nodeSize(balanceType, children[i]);
                   if (groupSize + nextSize >= maxChild)
                       break;
                   groupSize += nextSize;
               }
               if (i == groupFrom + 1) {
                   if (groupSize > maxChild) {
                       let only = children[groupFrom]; // Only trees can have a size > 1
                       divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);
                       continue;
                   }
                   localChildren.push(children[groupFrom]);
               }
               else {
                   let length = positions[i - 1] + children[i - 1].length - groupStart;
                   localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));
               }
               localPositions.push(groupStart + offset - start);
           }
       }
       divide(children, positions, from, to, 0);
       return (mkTop || mkTree)(localChildren, localPositions, length);
   }
   /// Provides a way to associate values with pieces of trees. As long
   /// as that part of the tree is reused, the associated values can be
   /// retrieved from an updated tree.
   class NodeWeakMap {
       constructor() {
           this.map = new WeakMap();
       }
       setBuffer(buffer, index, value) {
           let inner = this.map.get(buffer);
           if (!inner)
               this.map.set(buffer, inner = new Map);
           inner.set(index, value);
       }
       getBuffer(buffer, index) {
           let inner = this.map.get(buffer);
           return inner && inner.get(index);
       }
       /// Set the value for this syntax node.
       set(node, value) {
           if (node instanceof BufferNode)
               this.setBuffer(node.context.buffer, node.index, value);
           else if (node instanceof TreeNode)
               this.map.set(node.tree, value);
       }
       /// Retrieve value for this syntax node, if it exists in the map.
       get(node) {
           return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)
               : node instanceof TreeNode ? this.map.get(node.tree) : undefined;
       }
       /// Set the value for the node that a cursor currently points to.
       cursorSet(cursor, value) {
           if (cursor.buffer)
               this.setBuffer(cursor.buffer.buffer, cursor.index, value);
           else
               this.map.set(cursor.tree, value);
       }
       /// Retrieve the value for the node that a cursor currently points
       /// to.
       cursorGet(cursor) {
           return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);
       }
   }

   /// Tree fragments are used during [incremental
   /// parsing](#common.Parser.startParse) to track parts of old trees
   /// that can be reused in a new parse. An array of fragments is used
   /// to track regions of an old tree whose nodes might be reused in new
   /// parses. Use the static
   /// [`applyChanges`](#common.TreeFragment^applyChanges) method to
   /// update fragments for document changes.
   class TreeFragment {
       /// Construct a tree fragment. You'll usually want to use
       /// [`addTree`](#common.TreeFragment^addTree) and
       /// [`applyChanges`](#common.TreeFragment^applyChanges) instead of
       /// calling this directly.
       constructor(
       /// The start of the unchanged range pointed to by this fragment.
       /// This refers to an offset in the _updated_ document (as opposed
       /// to the original tree).
       from, 
       /// The end of the unchanged range.
       to, 
       /// The tree that this fragment is based on.
       tree, 
       /// The offset between the fragment's tree and the document that
       /// this fragment can be used against. Add this when going from
       /// document to tree positions, subtract it to go from tree to
       /// document positions.
       offset, openStart = false, openEnd = false) {
           this.from = from;
           this.to = to;
           this.tree = tree;
           this.offset = offset;
           this.open = (openStart ? 1 /* Start */ : 0) | (openEnd ? 2 /* End */ : 0);
       }
       /// Whether the start of the fragment represents the start of a
       /// parse, or the end of a change. (In the second case, it may not
       /// be safe to reuse some nodes at the start, depending on the
       /// parsing algorithm.)
       get openStart() { return (this.open & 1 /* Start */) > 0; }
       /// Whether the end of the fragment represents the end of a
       /// full-document parse, or the start of a change.
       get openEnd() { return (this.open & 2 /* End */) > 0; }
       /// Create a set of fragments from a freshly parsed tree, or update
       /// an existing set of fragments by replacing the ones that overlap
       /// with a tree with content from the new tree. When `partial` is
       /// true, the parse is treated as incomplete, and the resulting
       /// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
       /// true.
       static addTree(tree, fragments = [], partial = false) {
           let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];
           for (let f of fragments)
               if (f.to > tree.length)
                   result.push(f);
           return result;
       }
       /// Apply a set of edits to an array of fragments, removing or
       /// splitting fragments as necessary to remove edited ranges, and
       /// adjusting offsets for fragments that moved.
       static applyChanges(fragments, changes, minGap = 128) {
           if (!changes.length)
               return fragments;
           let result = [];
           let fI = 1, nextF = fragments.length ? fragments[0] : null;
           for (let cI = 0, pos = 0, off = 0;; cI++) {
               let nextC = cI < changes.length ? changes[cI] : null;
               let nextPos = nextC ? nextC.fromA : 1e9;
               if (nextPos - pos >= minGap)
                   while (nextF && nextF.from < nextPos) {
                       let cut = nextF;
                       if (pos >= cut.from || nextPos <= cut.to || off) {
                           let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;
                           cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);
                       }
                       if (cut)
                           result.push(cut);
                       if (nextF.to > nextPos)
                           break;
                       nextF = fI < fragments.length ? fragments[fI++] : null;
                   }
               if (!nextC)
                   break;
               pos = nextC.toA;
               off = nextC.toA - nextC.toB;
           }
           return result;
       }
   }
   /// A superclass that parsers should extend.
   class Parser {
       /// Start a parse, returning a [partial parse](#common.PartialParse)
       /// object. [`fragments`](#common.TreeFragment) can be passed in to
       /// make the parse incremental.
       ///
       /// By default, the entire input is parsed. You can pass `ranges`,
       /// which should be a sorted array of non-empty, non-overlapping
       /// ranges, to parse only those ranges. The tree returned in that
       /// case will start at `ranges[0].from`.
       startParse(input, fragments, ranges) {
           if (typeof input == "string")
               input = new StringInput(input);
           ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];
           return this.createParse(input, fragments || [], ranges);
       }
       /// Run a full parse, returning the resulting tree.
       parse(input, fragments, ranges) {
           let parse = this.startParse(input, fragments, ranges);
           for (;;) {
               let done = parse.advance();
               if (done)
                   return done;
           }
       }
   }
   class StringInput {
       constructor(string) {
           this.string = string;
       }
       get length() { return this.string.length; }
       chunk(from) { return this.string.slice(from); }
       get lineChunks() { return false; }
       read(from, to) { return this.string.slice(from, to); }
   }
   new NodeProp({ perNode: true });

   let nextTagID = 0;
   /// Highlighting tags are markers that denote a highlighting category.
   /// They are [associated](#highlight.styleTags) with parts of a syntax
   /// tree by a language mode, and then mapped to an actual CSS style by
   /// a [highlighter](#highlight.Highlighter).
   ///
   /// Because syntax tree node types and highlight styles have to be
   /// able to talk the same language, CodeMirror uses a mostly _closed_
   /// [vocabulary](#highlight.tags) of syntax tags (as opposed to
   /// traditional open string-based systems, which make it hard for
   /// highlighting themes to cover all the tokens produced by the
   /// various languages).
   ///
   /// It _is_ possible to [define](#highlight.Tag^define) your own
   /// highlighting tags for system-internal use (where you control both
   /// the language package and the highlighter), but such tags will not
   /// be picked up by regular highlighters (though you can derive them
   /// from standard tags to allow highlighters to fall back to those).
   class Tag {
       /// @internal
       constructor(
       /// The set of this tag and all its parent tags, starting with
       /// this one itself and sorted in order of decreasing specificity.
       set, 
       /// The base unmodified tag that this one is based on, if it's
       /// modified @internal
       base, 
       /// The modifiers applied to this.base @internal
       modified) {
           this.set = set;
           this.base = base;
           this.modified = modified;
           /// @internal
           this.id = nextTagID++;
       }
       /// Define a new tag. If `parent` is given, the tag is treated as a
       /// sub-tag of that parent, and
       /// [highlighters](#highlight.tagHighlighter) that don't mention
       /// this tag will try to fall back to the parent tag (or grandparent
       /// tag, etc).
       static define(parent) {
           if (parent === null || parent === void 0 ? void 0 : parent.base)
               throw new Error("Can not derive from a modified tag");
           let tag = new Tag([], null, []);
           tag.set.push(tag);
           if (parent)
               for (let t of parent.set)
                   tag.set.push(t);
           return tag;
       }
       /// Define a tag _modifier_, which is a function that, given a tag,
       /// will return a tag that is a subtag of the original. Applying the
       /// same modifier to a twice tag will return the same value (`m1(t1)
       /// == m1(t1)`) and applying multiple modifiers will, regardless or
       /// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
       ///
       /// When multiple modifiers are applied to a given base tag, each
       /// smaller set of modifiers is registered as a parent, so that for
       /// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
       /// `m1(m3(t1)`, and so on.
       static defineModifier() {
           let mod = new Modifier;
           return (tag) => {
               if (tag.modified.indexOf(mod) > -1)
                   return tag;
               return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));
           };
       }
   }
   let nextModifierID = 0;
   class Modifier {
       constructor() {
           this.instances = [];
           this.id = nextModifierID++;
       }
       static get(base, mods) {
           if (!mods.length)
               return base;
           let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));
           if (exists)
               return exists;
           let set = [], tag = new Tag(set, base, mods);
           for (let m of mods)
               m.instances.push(tag);
           let configs = permute(mods);
           for (let parent of base.set)
               for (let config of configs)
                   set.push(Modifier.get(parent, config));
           return tag;
       }
   }
   function sameArray(a, b) {
       return a.length == b.length && a.every((x, i) => x == b[i]);
   }
   function permute(array) {
       let result = [array];
       for (let i = 0; i < array.length; i++) {
           for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))
               result.push(a);
       }
       return result;
   }
   /// This function is used to add a set of tags to a language syntax
   /// via [`NodeSet.extend`](#common.NodeSet.extend) or
   /// [`LRParser.configure`](#lr.LRParser.configure).
   ///
   /// The argument object maps node selectors to [highlighting
   /// tags](#highlight.Tag) or arrays of tags.
   ///
   /// Node selectors may hold one or more (space-separated) node paths.
   /// Such a path can be a [node name](#common.NodeType.name), or
   /// multiple node names (or `*` wildcards) separated by slash
   /// characters, as in `"Block/Declaration/VariableName"`. Such a path
   /// matches the final node but only if its direct parent nodes are the
   /// other nodes mentioned. A `*` in such a path matches any parent,
   /// but only a single level—wildcards that match multiple parents
   /// aren't supported, both for efficiency reasons and because Lezer
   /// trees make it rather hard to reason about what they would match.)
   ///
   /// A path can be ended with `/...` to indicate that the tag assigned
   /// to the node should also apply to all child nodes, even if they
   /// match their own style (by default, only the innermost style is
   /// used).
   ///
   /// When a path ends in `!`, as in `Attribute!`, no further matching
   /// happens for the node's child nodes, and the entire node gets the
   /// given style.
   ///
   /// In this notation, node names that contain `/`, `!`, `*`, or `...`
   /// must be quoted as JSON strings.
   ///
   /// For example:
   ///
   /// ```javascript
   /// parser.withProps(
   ///   styleTags({
   ///     // Style Number and BigNumber nodes
   ///     "Number BigNumber": tags.number,
   ///     // Style Escape nodes whose parent is String
   ///     "String/Escape": tags.escape,
   ///     // Style anything inside Attributes nodes
   ///     "Attributes!": tags.meta,
   ///     // Add a style to all content inside Italic nodes
   ///     "Italic/...": tags.emphasis,
   ///     // Style InvalidString nodes as both `string` and `invalid`
   ///     "InvalidString": [tags.string, tags.invalid],
   ///     // Style the node named "/" as punctuation
   ///     '"/"': tags.punctuation
   ///   })
   /// )
   /// ```
   function styleTags(spec) {
       let byName = Object.create(null);
       for (let prop in spec) {
           let tags = spec[prop];
           if (!Array.isArray(tags))
               tags = [tags];
           for (let part of prop.split(" "))
               if (part) {
                   let pieces = [], mode = 2 /* Normal */, rest = part;
                   for (let pos = 0;;) {
                       if (rest == "..." && pos > 0 && pos + 3 == part.length) {
                           mode = 1 /* Inherit */;
                           break;
                       }
                       let m = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(rest);
                       if (!m)
                           throw new RangeError("Invalid path: " + part);
                       pieces.push(m[0] == "*" ? "" : m[0][0] == '"' ? JSON.parse(m[0]) : m[0]);
                       pos += m[0].length;
                       if (pos == part.length)
                           break;
                       let next = part[pos++];
                       if (pos == part.length && next == "!") {
                           mode = 0 /* Opaque */;
                           break;
                       }
                       if (next != "/")
                           throw new RangeError("Invalid path: " + part);
                       rest = part.slice(pos);
                   }
                   let last = pieces.length - 1, inner = pieces[last];
                   if (!inner)
                       throw new RangeError("Invalid path: " + part);
                   let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);
                   byName[inner] = rule.sort(byName[inner]);
               }
       }
       return ruleNodeProp.add(byName);
   }
   const ruleNodeProp = new NodeProp();
   class Rule {
       constructor(tags, mode, context, next) {
           this.tags = tags;
           this.mode = mode;
           this.context = context;
           this.next = next;
       }
       get opaque() { return this.mode == 0 /* Opaque */; }
       get inherit() { return this.mode == 1 /* Inherit */; }
       sort(other) {
           if (!other || other.depth < this.depth) {
               this.next = other;
               return this;
           }
           other.next = this.sort(other.next);
           return other;
       }
       get depth() { return this.context ? this.context.length : 0; }
   }
   Rule.empty = new Rule([], 2 /* Normal */, null);
   /// Define a [highlighter](#highlight.Highlighter) from an array of
   /// tag/class pairs. Classes associated with more specific tags will
   /// take precedence.
   function tagHighlighter(tags, options) {
       let map = Object.create(null);
       for (let style of tags) {
           if (!Array.isArray(style.tag))
               map[style.tag.id] = style.class;
           else
               for (let tag of style.tag)
                   map[tag.id] = style.class;
       }
       let { scope, all = null } = options || {};
       return {
           style: (tags) => {
               let cls = all;
               for (let tag of tags) {
                   for (let sub of tag.set) {
                       let tagClass = map[sub.id];
                       if (tagClass) {
                           cls = cls ? cls + " " + tagClass : tagClass;
                           break;
                       }
                   }
               }
               return cls;
           },
           scope
       };
   }
   function highlightTags(highlighters, tags) {
       let result = null;
       for (let highlighter of highlighters) {
           let value = highlighter.style(tags);
           if (value)
               result = result ? result + " " + value : value;
       }
       return result;
   }
   /// Highlight the given [tree](#common.Tree) with the given
   /// [highlighter](#highlight.Highlighter).
   function highlightTree(tree, highlighter, 
   /// Assign styling to a region of the text. Will be called, in order
   /// of position, for any ranges where more than zero classes apply.
   /// `classes` is a space separated string of CSS classes.
   putStyle, 
   /// The start of the range to highlight.
   from = 0, 
   /// The end of the range.
   to = tree.length) {
       let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);
       builder.highlightRange(tree.cursor(), from, to, "", builder.highlighters);
       builder.flush(to);
   }
   class HighlightBuilder {
       constructor(at, highlighters, span) {
           this.at = at;
           this.highlighters = highlighters;
           this.span = span;
           this.class = "";
       }
       startSpan(at, cls) {
           if (cls != this.class) {
               this.flush(at);
               if (at > this.at)
                   this.at = at;
               this.class = cls;
           }
       }
       flush(to) {
           if (to > this.at && this.class)
               this.span(this.at, to, this.class);
       }
       highlightRange(cursor, from, to, inheritedClass, highlighters) {
           let { type, from: start, to: end } = cursor;
           if (start >= to || end <= from)
               return;
           if (type.isTop)
               highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));
           let cls = inheritedClass;
           let rule = getStyleTags(cursor) || Rule.empty;
           let tagCls = highlightTags(highlighters, rule.tags);
           if (tagCls) {
               if (cls)
                   cls += " ";
               cls += tagCls;
               if (rule.mode == 1 /* Inherit */)
                   inheritedClass += (inheritedClass ? " " : "") + tagCls;
           }
           this.startSpan(cursor.from, cls);
           if (rule.opaque)
               return;
           let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);
           if (mounted && mounted.overlay) {
               let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);
               let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));
               let hasChild = cursor.firstChild();
               for (let i = 0, pos = start;; i++) {
                   let next = i < mounted.overlay.length ? mounted.overlay[i] : null;
                   let nextPos = next ? next.from + start : end;
                   let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);
                   if (rangeFrom < rangeTo && hasChild) {
                       while (cursor.from < rangeTo) {
                           this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);
                           this.startSpan(Math.min(to, cursor.to), cls);
                           if (cursor.to >= nextPos || !cursor.nextSibling())
                               break;
                       }
                   }
                   if (!next || nextPos > to)
                       break;
                   pos = next.to + start;
                   if (pos > from) {
                       this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), inheritedClass, innerHighlighters);
                       this.startSpan(pos, cls);
                   }
               }
               if (hasChild)
                   cursor.parent();
           }
           else if (cursor.firstChild()) {
               do {
                   if (cursor.to <= from)
                       continue;
                   if (cursor.from >= to)
                       break;
                   this.highlightRange(cursor, from, to, inheritedClass, highlighters);
                   this.startSpan(Math.min(to, cursor.to), cls);
               } while (cursor.nextSibling());
               cursor.parent();
           }
       }
   }
   /// Match a syntax node's [highlight rules](#highlight.styleTags). If
   /// there's a match, return its set of tags, and whether it is
   /// opaque (uses a `!`) or applies to all child nodes (`/...`).
   function getStyleTags(node) {
       let rule = node.type.prop(ruleNodeProp);
       while (rule && rule.context && !node.matchContext(rule.context))
           rule = rule.next;
       return rule || null;
   }
   const t$1 = Tag.define;
   const comment = t$1(), name = t$1(), typeName = t$1(name), propertyName = t$1(name), literal = t$1(), string = t$1(literal), number = t$1(literal), content = t$1(), heading = t$1(content), keyword = t$1(), operator = t$1(), punctuation = t$1(), bracket = t$1(punctuation), meta = t$1();
   /// The default set of highlighting [tags](#highlight.Tag).
   ///
   /// This collection is heavily biased towards programming languages,
   /// and necessarily incomplete. A full ontology of syntactic
   /// constructs would fill a stack of books, and be impractical to
   /// write themes for. So try to make do with this set. If all else
   /// fails, [open an
   /// issue](https://github.com/codemirror/codemirror.next) to propose a
   /// new tag, or [define](#highlight.Tag^define) a local custom tag for
   /// your use case.
   ///
   /// Note that it is not obligatory to always attach the most specific
   /// tag possible to an element—if your grammar can't easily
   /// distinguish a certain type of element (such as a local variable),
   /// it is okay to style it as its more general variant (a variable).
   /// 
   /// For tags that extend some parent tag, the documentation links to
   /// the parent.
   const tags = {
       /// A comment.
       comment,
       /// A line [comment](#highlight.tags.comment).
       lineComment: t$1(comment),
       /// A block [comment](#highlight.tags.comment).
       blockComment: t$1(comment),
       /// A documentation [comment](#highlight.tags.comment).
       docComment: t$1(comment),
       /// Any kind of identifier.
       name,
       /// The [name](#highlight.tags.name) of a variable.
       variableName: t$1(name),
       /// A type [name](#highlight.tags.name).
       typeName: typeName,
       /// A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
       tagName: t$1(typeName),
       /// A property or field [name](#highlight.tags.name).
       propertyName: propertyName,
       /// An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
       attributeName: t$1(propertyName),
       /// The [name](#highlight.tags.name) of a class.
       className: t$1(name),
       /// A label [name](#highlight.tags.name).
       labelName: t$1(name),
       /// A namespace [name](#highlight.tags.name).
       namespace: t$1(name),
       /// The [name](#highlight.tags.name) of a macro.
       macroName: t$1(name),
       /// A literal value.
       literal,
       /// A string [literal](#highlight.tags.literal).
       string,
       /// A documentation [string](#highlight.tags.string).
       docString: t$1(string),
       /// A character literal (subtag of [string](#highlight.tags.string)).
       character: t$1(string),
       /// An attribute value (subtag of [string](#highlight.tags.string)).
       attributeValue: t$1(string),
       /// A number [literal](#highlight.tags.literal).
       number,
       /// An integer [number](#highlight.tags.number) literal.
       integer: t$1(number),
       /// A floating-point [number](#highlight.tags.number) literal.
       float: t$1(number),
       /// A boolean [literal](#highlight.tags.literal).
       bool: t$1(literal),
       /// Regular expression [literal](#highlight.tags.literal).
       regexp: t$1(literal),
       /// An escape [literal](#highlight.tags.literal), for example a
       /// backslash escape in a string.
       escape: t$1(literal),
       /// A color [literal](#highlight.tags.literal).
       color: t$1(literal),
       /// A URL [literal](#highlight.tags.literal).
       url: t$1(literal),
       /// A language keyword.
       keyword,
       /// The [keyword](#highlight.tags.keyword) for the self or this
       /// object.
       self: t$1(keyword),
       /// The [keyword](#highlight.tags.keyword) for null.
       null: t$1(keyword),
       /// A [keyword](#highlight.tags.keyword) denoting some atomic value.
       atom: t$1(keyword),
       /// A [keyword](#highlight.tags.keyword) that represents a unit.
       unit: t$1(keyword),
       /// A modifier [keyword](#highlight.tags.keyword).
       modifier: t$1(keyword),
       /// A [keyword](#highlight.tags.keyword) that acts as an operator.
       operatorKeyword: t$1(keyword),
       /// A control-flow related [keyword](#highlight.tags.keyword).
       controlKeyword: t$1(keyword),
       /// A [keyword](#highlight.tags.keyword) that defines something.
       definitionKeyword: t$1(keyword),
       /// A [keyword](#highlight.tags.keyword) related to defining or
       /// interfacing with modules.
       moduleKeyword: t$1(keyword),
       /// An operator.
       operator,
       /// An [operator](#highlight.tags.operator) that dereferences something.
       derefOperator: t$1(operator),
       /// Arithmetic-related [operator](#highlight.tags.operator).
       arithmeticOperator: t$1(operator),
       /// Logical [operator](#highlight.tags.operator).
       logicOperator: t$1(operator),
       /// Bit [operator](#highlight.tags.operator).
       bitwiseOperator: t$1(operator),
       /// Comparison [operator](#highlight.tags.operator).
       compareOperator: t$1(operator),
       /// [Operator](#highlight.tags.operator) that updates its operand.
       updateOperator: t$1(operator),
       /// [Operator](#highlight.tags.operator) that defines something.
       definitionOperator: t$1(operator),
       /// Type-related [operator](#highlight.tags.operator).
       typeOperator: t$1(operator),
       /// Control-flow [operator](#highlight.tags.operator).
       controlOperator: t$1(operator),
       /// Program or markup punctuation.
       punctuation,
       /// [Punctuation](#highlight.tags.punctuation) that separates
       /// things.
       separator: t$1(punctuation),
       /// Bracket-style [punctuation](#highlight.tags.punctuation).
       bracket,
       /// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
       /// tokens).
       angleBracket: t$1(bracket),
       /// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
       /// tokens).
       squareBracket: t$1(bracket),
       /// Parentheses (usually `(` and `)` tokens). Subtag of
       /// [bracket](#highlight.tags.bracket).
       paren: t$1(bracket),
       /// Braces (usually `{` and `}` tokens). Subtag of
       /// [bracket](#highlight.tags.bracket).
       brace: t$1(bracket),
       /// Content, for example plain text in XML or markup documents.
       content,
       /// [Content](#highlight.tags.content) that represents a heading.
       heading,
       /// A level 1 [heading](#highlight.tags.heading).
       heading1: t$1(heading),
       /// A level 2 [heading](#highlight.tags.heading).
       heading2: t$1(heading),
       /// A level 3 [heading](#highlight.tags.heading).
       heading3: t$1(heading),
       /// A level 4 [heading](#highlight.tags.heading).
       heading4: t$1(heading),
       /// A level 5 [heading](#highlight.tags.heading).
       heading5: t$1(heading),
       /// A level 6 [heading](#highlight.tags.heading).
       heading6: t$1(heading),
       /// A prose separator (such as a horizontal rule).
       contentSeparator: t$1(content),
       /// [Content](#highlight.tags.content) that represents a list.
       list: t$1(content),
       /// [Content](#highlight.tags.content) that represents a quote.
       quote: t$1(content),
       /// [Content](#highlight.tags.content) that is emphasized.
       emphasis: t$1(content),
       /// [Content](#highlight.tags.content) that is styled strong.
       strong: t$1(content),
       /// [Content](#highlight.tags.content) that is part of a link.
       link: t$1(content),
       /// [Content](#highlight.tags.content) that is styled as code or
       /// monospace.
       monospace: t$1(content),
       /// [Content](#highlight.tags.content) that has a strike-through
       /// style.
       strikethrough: t$1(content),
       /// Inserted text in a change-tracking format.
       inserted: t$1(),
       /// Deleted text.
       deleted: t$1(),
       /// Changed text.
       changed: t$1(),
       /// An invalid or unsyntactic element.
       invalid: t$1(),
       /// Metadata or meta-instruction.
       meta,
       /// [Metadata](#highlight.tags.meta) that applies to the entire
       /// document.
       documentMeta: t$1(meta),
       /// [Metadata](#highlight.tags.meta) that annotates or adds
       /// attributes to a given syntactic element.
       annotation: t$1(meta),
       /// Processing instruction or preprocessor directive. Subtag of
       /// [meta](#highlight.tags.meta).
       processingInstruction: t$1(meta),
       /// [Modifier](#highlight.Tag^defineModifier) that indicates that a
       /// given element is being defined. Expected to be used with the
       /// various [name](#highlight.tags.name) tags.
       definition: Tag.defineModifier(),
       /// [Modifier](#highlight.Tag^defineModifier) that indicates that
       /// something is constant. Mostly expected to be used with
       /// [variable names](#highlight.tags.variableName).
       constant: Tag.defineModifier(),
       /// [Modifier](#highlight.Tag^defineModifier) used to indicate that
       /// a [variable](#highlight.tags.variableName) or [property
       /// name](#highlight.tags.propertyName) is being called or defined
       /// as a function.
       function: Tag.defineModifier(),
       /// [Modifier](#highlight.Tag^defineModifier) that can be applied to
       /// [names](#highlight.tags.name) to indicate that they belong to
       /// the language's standard environment.
       standard: Tag.defineModifier(),
       /// [Modifier](#highlight.Tag^defineModifier) that indicates a given
       /// [names](#highlight.tags.name) is local to some scope.
       local: Tag.defineModifier(),
       /// A generic variant [modifier](#highlight.Tag^defineModifier) that
       /// can be used to tag language-specific alternative variants of
       /// some common tag. It is recommended for themes to define special
       /// forms of at least the [string](#highlight.tags.string) and
       /// [variable name](#highlight.tags.variableName) tags, since those
       /// come up a lot.
       special: Tag.defineModifier()
   };
   /// This is a highlighter that adds stable, predictable classes to
   /// tokens, for styling with external CSS.
   ///
   /// The following tags are mapped to their name prefixed with `"tok-"`
   /// (for example `"tok-comment"`):
   ///
   /// * [`link`](#highlight.tags.link)
   /// * [`heading`](#highlight.tags.heading)
   /// * [`emphasis`](#highlight.tags.emphasis)
   /// * [`strong`](#highlight.tags.strong)
   /// * [`keyword`](#highlight.tags.keyword)
   /// * [`atom`](#highlight.tags.atom)
   /// * [`bool`](#highlight.tags.bool)
   /// * [`url`](#highlight.tags.url)
   /// * [`labelName`](#highlight.tags.labelName)
   /// * [`inserted`](#highlight.tags.inserted)
   /// * [`deleted`](#highlight.tags.deleted)
   /// * [`literal`](#highlight.tags.literal)
   /// * [`string`](#highlight.tags.string)
   /// * [`number`](#highlight.tags.number)
   /// * [`variableName`](#highlight.tags.variableName)
   /// * [`typeName`](#highlight.tags.typeName)
   /// * [`namespace`](#highlight.tags.namespace)
   /// * [`className`](#highlight.tags.className)
   /// * [`macroName`](#highlight.tags.macroName)
   /// * [`propertyName`](#highlight.tags.propertyName)
   /// * [`operator`](#highlight.tags.operator)
   /// * [`comment`](#highlight.tags.comment)
   /// * [`meta`](#highlight.tags.meta)
   /// * [`punctuation`](#highlight.tags.punctuation)
   /// * [`invalid`](#highlight.tags.invalid)
   ///
   /// In addition, these mappings are provided:
   ///
   /// * [`regexp`](#highlight.tags.regexp),
   ///   [`escape`](#highlight.tags.escape), and
   ///   [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)
   ///   are mapped to `"tok-string2"`
   /// * [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)
   ///   to `"tok-variableName2"`
   /// * [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)
   ///   to `"tok-variableName tok-local"`
   /// * [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)
   ///   to `"tok-variableName tok-definition"`
   /// * [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)
   ///   to `"tok-propertyName tok-definition"`
   tagHighlighter([
       { tag: tags.link, class: "tok-link" },
       { tag: tags.heading, class: "tok-heading" },
       { tag: tags.emphasis, class: "tok-emphasis" },
       { tag: tags.strong, class: "tok-strong" },
       { tag: tags.keyword, class: "tok-keyword" },
       { tag: tags.atom, class: "tok-atom" },
       { tag: tags.bool, class: "tok-bool" },
       { tag: tags.url, class: "tok-url" },
       { tag: tags.labelName, class: "tok-labelName" },
       { tag: tags.inserted, class: "tok-inserted" },
       { tag: tags.deleted, class: "tok-deleted" },
       { tag: tags.literal, class: "tok-literal" },
       { tag: tags.string, class: "tok-string" },
       { tag: tags.number, class: "tok-number" },
       { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: "tok-string2" },
       { tag: tags.variableName, class: "tok-variableName" },
       { tag: tags.local(tags.variableName), class: "tok-variableName tok-local" },
       { tag: tags.definition(tags.variableName), class: "tok-variableName tok-definition" },
       { tag: tags.special(tags.variableName), class: "tok-variableName2" },
       { tag: tags.definition(tags.propertyName), class: "tok-propertyName tok-definition" },
       { tag: tags.typeName, class: "tok-typeName" },
       { tag: tags.namespace, class: "tok-namespace" },
       { tag: tags.className, class: "tok-className" },
       { tag: tags.macroName, class: "tok-macroName" },
       { tag: tags.propertyName, class: "tok-propertyName" },
       { tag: tags.operator, class: "tok-operator" },
       { tag: tags.comment, class: "tok-comment" },
       { tag: tags.meta, class: "tok-meta" },
       { tag: tags.invalid, class: "tok-invalid" },
       { tag: tags.punctuation, class: "tok-punctuation" }
   ]);

   var _a$1;
   /**
   Node prop stored in a parser's top syntax node to provide the
   facet that stores language-specific data for that language.
   */
   const languageDataProp = /*@__PURE__*/new NodeProp();
   /**
   Helper function to define a facet (to be added to the top syntax
   node(s) for a language via
   [`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be
   used to associate language data with the language. You
   probably only need this when subclassing
   [`Language`](https://codemirror.net/6/docs/ref/#language.Language).
   */
   function defineLanguageFacet(baseData) {
       return Facet.define({
           combine: baseData ? values => values.concat(baseData) : undefined
       });
   }
   /**
   A language object manages parsing and per-language
   [metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is
   managed as a [Lezer](https://lezer.codemirror.net) tree. The class
   can be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)
   subclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or
   via the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass
   for stream parsers.
   */
   class Language {
       /**
       Construct a language object. If you need to invoke this
       directly, first define a data facet with
       [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
       configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
       to the language's outer syntax node.
       */
       constructor(
       /**
       The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet
       used for this language.
       */
       data, parser, extraExtensions = []) {
           this.data = data;
           // Kludge to define EditorState.tree as a debugging helper,
           // without the EditorState package actually knowing about
           // languages and lezer trees.
           if (!EditorState.prototype.hasOwnProperty("tree"))
               Object.defineProperty(EditorState.prototype, "tree", { get() { return syntaxTree(this); } });
           this.parser = parser;
           this.extension = [
               language.of(this),
               EditorState.languageData.of((state, pos, side) => state.facet(languageDataFacetAt(state, pos, side)))
           ].concat(extraExtensions);
       }
       /**
       Query whether this language is active at the given position.
       */
       isActiveAt(state, pos, side = -1) {
           return languageDataFacetAt(state, pos, side) == this.data;
       }
       /**
       Find the document regions that were parsed using this language.
       The returned regions will _include_ any nested languages rooted
       in this language, when those exist.
       */
       findRegions(state) {
           let lang = state.facet(language);
           if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)
               return [{ from: 0, to: state.doc.length }];
           if (!lang || !lang.allowsNesting)
               return [];
           let result = [];
           let explore = (tree, from) => {
               if (tree.prop(languageDataProp) == this.data) {
                   result.push({ from, to: from + tree.length });
                   return;
               }
               let mount = tree.prop(NodeProp.mounted);
               if (mount) {
                   if (mount.tree.prop(languageDataProp) == this.data) {
                       if (mount.overlay)
                           for (let r of mount.overlay)
                               result.push({ from: r.from + from, to: r.to + from });
                       else
                           result.push({ from: from, to: from + tree.length });
                       return;
                   }
                   else if (mount.overlay) {
                       let size = result.length;
                       explore(mount.tree, mount.overlay[0].from + from);
                       if (result.length > size)
                           return;
                   }
               }
               for (let i = 0; i < tree.children.length; i++) {
                   let ch = tree.children[i];
                   if (ch instanceof Tree)
                       explore(ch, tree.positions[i] + from);
               }
           };
           explore(syntaxTree(state), 0);
           return result;
       }
       /**
       Indicates whether this language allows nested languages. The
       default implementation returns true.
       */
       get allowsNesting() { return true; }
   }
   /**
   @internal
   */
   Language.setState = /*@__PURE__*/StateEffect.define();
   function languageDataFacetAt(state, pos, side) {
       let topLang = state.facet(language);
       if (!topLang)
           return null;
       let facet = topLang.data;
       if (topLang.allowsNesting) {
           for (let node = syntaxTree(state).topNode; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))
               facet = node.type.prop(languageDataProp) || facet;
       }
       return facet;
   }
   /**
   A subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer
   [LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)
   parsers.
   */
   class LRLanguage extends Language {
       constructor(data, parser) {
           super(data, parser);
           this.parser = parser;
       }
       /**
       Define a language from a parser.
       */
       static define(spec) {
           let data = defineLanguageFacet(spec.languageData);
           return new LRLanguage(data, spec.parser.configure({
               props: [languageDataProp.add(type => type.isTop ? data : undefined)]
           }));
       }
       /**
       Create a new instance of this language with a reconfigured
       version of its parser.
       */
       configure(options) {
           return new LRLanguage(this.data, this.parser.configure(options));
       }
       get allowsNesting() { return this.parser.hasWrappers(); }
   }
   /**
   Get the syntax tree for a state, which is the current (possibly
   incomplete) parse tree of the active
   [language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no
   language available.
   */
   function syntaxTree(state) {
       let field = state.field(Language.state, false);
       return field ? field.tree : Tree.empty;
   }
   // Lezer-style Input object for a Text document.
   class DocInput {
       constructor(doc, length = doc.length) {
           this.doc = doc;
           this.length = length;
           this.cursorPos = 0;
           this.string = "";
           this.cursor = doc.iter();
       }
       syncTo(pos) {
           this.string = this.cursor.next(pos - this.cursorPos).value;
           this.cursorPos = pos + this.string.length;
           return this.cursorPos - this.string.length;
       }
       chunk(pos) {
           this.syncTo(pos);
           return this.string;
       }
       get lineChunks() { return true; }
       read(from, to) {
           let stringStart = this.cursorPos - this.string.length;
           if (from < stringStart || to >= this.cursorPos)
               return this.doc.sliceString(from, to);
           else
               return this.string.slice(from - stringStart, to - stringStart);
       }
   }
   let currentContext = null;
   /**
   A parse context provided to parsers working on the editor content.
   */
   class ParseContext {
       constructor(parser, 
       /**
       The current editor state.
       */
       state, 
       /**
       Tree fragments that can be reused by incremental re-parses.
       */
       fragments = [], 
       /**
       @internal
       */
       tree, 
       /**
       @internal
       */
       treeLen, 
       /**
       The current editor viewport (or some overapproximation
       thereof). Intended to be used for opportunistically avoiding
       work (in which case
       [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)
       should be called to make sure the parser is restarted when the
       skipped region becomes visible).
       */
       viewport, 
       /**
       @internal
       */
       skipped, 
       /**
       This is where skipping parsers can register a promise that,
       when resolved, will schedule a new parse. It is cleared when
       the parse worker picks up the promise. @internal
       */
       scheduleOn) {
           this.parser = parser;
           this.state = state;
           this.fragments = fragments;
           this.tree = tree;
           this.treeLen = treeLen;
           this.viewport = viewport;
           this.skipped = skipped;
           this.scheduleOn = scheduleOn;
           this.parse = null;
           /**
           @internal
           */
           this.tempSkipped = [];
       }
       /**
       @internal
       */
       static create(parser, state, viewport) {
           return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);
       }
       startParse() {
           return this.parser.startParse(new DocInput(this.state.doc), this.fragments);
       }
       /**
       @internal
       */
       work(until, upto) {
           if (upto != null && upto >= this.state.doc.length)
               upto = undefined;
           if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {
               this.takeTree();
               return true;
           }
           return this.withContext(() => {
               var _a;
               if (typeof until == "number") {
                   let endTime = Date.now() + until;
                   until = () => Date.now() > endTime;
               }
               if (!this.parse)
                   this.parse = this.startParse();
               if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&
                   upto < this.state.doc.length)
                   this.parse.stopAt(upto);
               for (;;) {
                   let done = this.parse.advance();
                   if (done) {
                       this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));
                       this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;
                       this.tree = done;
                       this.parse = null;
                       if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))
                           this.parse = this.startParse();
                       else
                           return true;
                   }
                   if (until())
                       return false;
               }
           });
       }
       /**
       @internal
       */
       takeTree() {
           let pos, tree;
           if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {
               if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)
                   this.parse.stopAt(pos);
               this.withContext(() => { while (!(tree = this.parse.advance())) { } });
               this.treeLen = pos;
               this.tree = tree;
               this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));
               this.parse = null;
           }
       }
       withContext(f) {
           let prev = currentContext;
           currentContext = this;
           try {
               return f();
           }
           finally {
               currentContext = prev;
           }
       }
       withoutTempSkipped(fragments) {
           for (let r; r = this.tempSkipped.pop();)
               fragments = cutFragments(fragments, r.from, r.to);
           return fragments;
       }
       /**
       @internal
       */
       changes(changes, newState) {
           let { fragments, tree, treeLen, viewport, skipped } = this;
           this.takeTree();
           if (!changes.empty) {
               let ranges = [];
               changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));
               fragments = TreeFragment.applyChanges(fragments, ranges);
               tree = Tree.empty;
               treeLen = 0;
               viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };
               if (this.skipped.length) {
                   skipped = [];
                   for (let r of this.skipped) {
                       let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);
                       if (from < to)
                           skipped.push({ from, to });
                   }
               }
           }
           return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);
       }
       /**
       @internal
       */
       updateViewport(viewport) {
           if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)
               return false;
           this.viewport = viewport;
           let startLen = this.skipped.length;
           for (let i = 0; i < this.skipped.length; i++) {
               let { from, to } = this.skipped[i];
               if (from < viewport.to && to > viewport.from) {
                   this.fragments = cutFragments(this.fragments, from, to);
                   this.skipped.splice(i--, 1);
               }
           }
           if (this.skipped.length >= startLen)
               return false;
           this.reset();
           return true;
       }
       /**
       @internal
       */
       reset() {
           if (this.parse) {
               this.takeTree();
               this.parse = null;
           }
       }
       /**
       Notify the parse scheduler that the given region was skipped
       because it wasn't in view, and the parse should be restarted
       when it comes into view.
       */
       skipUntilInView(from, to) {
           this.skipped.push({ from, to });
       }
       /**
       Returns a parser intended to be used as placeholder when
       asynchronously loading a nested parser. It'll skip its input and
       mark it as not-really-parsed, so that the next update will parse
       it again.
       
       When `until` is given, a reparse will be scheduled when that
       promise resolves.
       */
       static getSkippingParser(until) {
           return new class extends Parser {
               createParse(input, fragments, ranges) {
                   let from = ranges[0].from, to = ranges[ranges.length - 1].to;
                   let parser = {
                       parsedPos: from,
                       advance() {
                           let cx = currentContext;
                           if (cx) {
                               for (let r of ranges)
                                   cx.tempSkipped.push(r);
                               if (until)
                                   cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;
                           }
                           this.parsedPos = to;
                           return new Tree(NodeType.none, [], [], to - from);
                       },
                       stoppedAt: null,
                       stopAt() { }
                   };
                   return parser;
               }
           };
       }
       /**
       @internal
       */
       isDone(upto) {
           upto = Math.min(upto, this.state.doc.length);
           let frags = this.fragments;
           return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;
       }
       /**
       Get the context for the current parse, or `null` if no editor
       parse is in progress.
       */
       static get() { return currentContext; }
   }
   function cutFragments(fragments, from, to) {
       return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);
   }
   class LanguageState {
       constructor(
       // A mutable parse state that is used to preserve work done during
       // the lifetime of a state when moving to the next state.
       context) {
           this.context = context;
           this.tree = context.tree;
       }
       apply(tr) {
           if (!tr.docChanged && this.tree == this.context.tree)
               return this;
           let newCx = this.context.changes(tr.changes, tr.state);
           // If the previous parse wasn't done, go forward only up to its
           // end position or the end of the viewport, to avoid slowing down
           // state updates with parse work beyond the viewport.
           let upto = this.context.treeLen == tr.startState.doc.length ? undefined
               : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);
           if (!newCx.work(20 /* Apply */, upto))
               newCx.takeTree();
           return new LanguageState(newCx);
       }
       static init(state) {
           let vpTo = Math.min(3000 /* InitViewport */, state.doc.length);
           let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });
           if (!parseState.work(20 /* Apply */, vpTo))
               parseState.takeTree();
           return new LanguageState(parseState);
       }
   }
   Language.state = /*@__PURE__*/StateField.define({
       create: LanguageState.init,
       update(value, tr) {
           for (let e of tr.effects)
               if (e.is(Language.setState))
                   return e.value;
           if (tr.startState.facet(language) != tr.state.facet(language))
               return LanguageState.init(tr.state);
           return value.apply(tr);
       }
   });
   let requestIdle = (callback) => {
       let timeout = setTimeout(() => callback(), 500 /* MaxPause */);
       return () => clearTimeout(timeout);
   };
   if (typeof requestIdleCallback != "undefined")
       requestIdle = (callback) => {
           let idle = -1, timeout = setTimeout(() => {
               idle = requestIdleCallback(callback, { timeout: 500 /* MaxPause */ - 100 /* MinPause */ });
           }, 100 /* MinPause */);
           return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);
       };
   const isInputPending = typeof navigator != "undefined" && ((_a$1 = navigator.scheduling) === null || _a$1 === void 0 ? void 0 : _a$1.isInputPending)
       ? () => navigator.scheduling.isInputPending() : null;
   const parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {
       constructor(view) {
           this.view = view;
           this.working = null;
           this.workScheduled = 0;
           // End of the current time chunk
           this.chunkEnd = -1;
           // Milliseconds of budget left for this chunk
           this.chunkBudget = -1;
           this.work = this.work.bind(this);
           this.scheduleWork();
       }
       update(update) {
           let cx = this.view.state.field(Language.state).context;
           if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)
               this.scheduleWork();
           if (update.docChanged) {
               if (this.view.hasFocus)
                   this.chunkBudget += 50 /* ChangeBonus */;
               this.scheduleWork();
           }
           this.checkAsyncSchedule(cx);
       }
       scheduleWork() {
           if (this.working)
               return;
           let { state } = this.view, field = state.field(Language.state);
           if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))
               this.working = requestIdle(this.work);
       }
       work(deadline) {
           this.working = null;
           let now = Date.now();
           if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk
               this.chunkEnd = now + 30000 /* ChunkTime */;
               this.chunkBudget = 3000 /* ChunkBudget */;
           }
           if (this.chunkBudget <= 0)
               return; // No more budget
           let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);
           if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* MaxParseAhead */))
               return;
           let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Slice */, deadline && !isInputPending ? Math.max(25 /* MinSlice */, deadline.timeRemaining() - 5) : 1e9);
           let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;
           let done = field.context.work(() => {
               return isInputPending && isInputPending() || Date.now() > endTime;
           }, vpTo + (viewportFirst ? 0 : 100000 /* MaxParseAhead */));
           this.chunkBudget -= Date.now() - now;
           if (done || this.chunkBudget <= 0) {
               field.context.takeTree();
               this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });
           }
           if (this.chunkBudget > 0 && !(done && !viewportFirst))
               this.scheduleWork();
           this.checkAsyncSchedule(field.context);
       }
       checkAsyncSchedule(cx) {
           if (cx.scheduleOn) {
               this.workScheduled++;
               cx.scheduleOn
                   .then(() => this.scheduleWork())
                   .catch(err => logException(this.view.state, err))
                   .then(() => this.workScheduled--);
               cx.scheduleOn = null;
           }
       }
       destroy() {
           if (this.working)
               this.working();
       }
       isWorking() {
           return !!(this.working || this.workScheduled > 0);
       }
   }, {
       eventHandlers: { focus() { this.scheduleWork(); } }
   });
   /**
   The facet used to associate a language with an editor state. Used
   by `Language` object's `extension` property (so you don't need to
   manually wrap your languages in this). Can be used to access the
   current language on a state.
   */
   const language = /*@__PURE__*/Facet.define({
       combine(languages) { return languages.length ? languages[0] : null; },
       enables: [Language.state, parseWorker]
   });
   /**
   This class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an
   optional set of supporting extensions. Language packages are
   encouraged to export a function that optionally takes a
   configuration object and returns a `LanguageSupport` instance, as
   the main way for client code to use the package.
   */
   class LanguageSupport {
       /**
       Create a language support object.
       */
       constructor(
       /**
       The language object.
       */
       language, 
       /**
       An optional set of supporting extensions. When nesting a
       language in another language, the outer language is encouraged
       to include the supporting extensions for its inner languages
       in its own set of support extensions.
       */
       support = []) {
           this.language = language;
           this.support = support;
           this.extension = [language, support];
       }
   }

   /**
   Facet that defines a way to provide a function that computes the
   appropriate indentation depth at the start of a given line, or
   `null` to indicate no appropriate indentation could be determined.
   */
   const indentService = /*@__PURE__*/Facet.define();
   /**
   Facet for overriding the unit by which indentation happens.
   Should be a string consisting either entirely of spaces or
   entirely of tabs. When not set, this defaults to 2 spaces.
   */
   const indentUnit = /*@__PURE__*/Facet.define({
       combine: values => {
           if (!values.length)
               return "  ";
           if (!/^(?: +|\t+)$/.test(values[0]))
               throw new Error("Invalid indent unit: " + JSON.stringify(values[0]));
           return values[0];
       }
   });
   /**
   Return the _column width_ of an indent unit in the state.
   Determined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)
   facet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that
   contains tabs.
   */
   function getIndentUnit(state) {
       let unit = state.facet(indentUnit);
       return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;
   }
   /**
   Create an indentation string that covers columns 0 to `cols`.
   Will use tabs for as much of the columns as possible when the
   [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains
   tabs.
   */
   function indentString(state, cols) {
       let result = "", ts = state.tabSize;
       if (state.facet(indentUnit).charCodeAt(0) == 9)
           while (cols >= ts) {
               result += "\t";
               cols -= ts;
           }
       for (let i = 0; i < cols; i++)
           result += " ";
       return result;
   }
   /**
   Get the indentation at the given position. Will first consult any
   [indent services](https://codemirror.net/6/docs/ref/#language.indentService) that are registered,
   and if none of those return an indentation, this will check the
   syntax tree for the [indent node prop](https://codemirror.net/6/docs/ref/#language.indentNodeProp)
   and use that if found. Returns a number when an indentation could
   be determined, and null otherwise.
   */
   function getIndentation(context, pos) {
       if (context instanceof EditorState)
           context = new IndentContext(context);
       for (let service of context.state.facet(indentService)) {
           let result = service(context, pos);
           if (result != null)
               return result;
       }
       let tree = syntaxTree(context.state);
       return tree ? syntaxIndentation(context, tree, pos) : null;
   }
   /**
   Indentation contexts are used when calling [indentation
   services](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities
   useful in indentation logic, and can selectively override the
   indentation reported for some lines.
   */
   class IndentContext {
       /**
       Create an indent context.
       */
       constructor(
       /**
       The editor state.
       */
       state, 
       /**
       @internal
       */
       options = {}) {
           this.state = state;
           this.options = options;
           this.unit = getIndentUnit(state);
       }
       /**
       Get a description of the line at the given position, taking
       [simulated line
       breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
       into account. If there is such a break at `pos`, the `bias`
       argument determines whether the part of the line line before or
       after the break is used.
       */
       lineAt(pos, bias = 1) {
           let line = this.state.doc.lineAt(pos);
           let { simulateBreak, simulateDoubleBreak } = this.options;
           if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {
               if (simulateDoubleBreak && simulateBreak == pos)
                   return { text: "", from: pos };
               else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)
                   return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };
               else
                   return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };
           }
           return line;
       }
       /**
       Get the text directly after `pos`, either the entire line
       or the next 100 characters, whichever is shorter.
       */
       textAfterPos(pos, bias = 1) {
           if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)
               return "";
           let { text, from } = this.lineAt(pos, bias);
           return text.slice(pos - from, Math.min(text.length, pos + 100 - from));
       }
       /**
       Find the column for the given position.
       */
       column(pos, bias = 1) {
           let { text, from } = this.lineAt(pos, bias);
           let result = this.countColumn(text, pos - from);
           let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;
           if (override > -1)
               result += override - this.countColumn(text, text.search(/\S|$/));
           return result;
       }
       /**
       Find the column position (taking tabs into account) of the given
       position in the given string.
       */
       countColumn(line, pos = line.length) {
           return countColumn(line, this.state.tabSize, pos);
       }
       /**
       Find the indentation column of the line at the given point.
       */
       lineIndent(pos, bias = 1) {
           let { text, from } = this.lineAt(pos, bias);
           let override = this.options.overrideIndentation;
           if (override) {
               let overriden = override(from);
               if (overriden > -1)
                   return overriden;
           }
           return this.countColumn(text, text.search(/\S|$/));
       }
       /**
       Returns the [simulated line
       break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
       for this context, if any.
       */
       get simulatedBreak() {
           return this.options.simulateBreak || null;
       }
   }
   /**
   A syntax tree node prop used to associate indentation strategies
   with node types. Such a strategy is a function from an indentation
   context to a column number or null, where null indicates that no
   definitive indentation can be determined.
   */
   const indentNodeProp = /*@__PURE__*/new NodeProp();
   // Compute the indentation for a given position from the syntax tree.
   function syntaxIndentation(cx, ast, pos) {
       return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos), pos, cx);
   }
   function ignoreClosed(cx) {
       return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;
   }
   function indentStrategy(tree) {
       let strategy = tree.type.prop(indentNodeProp);
       if (strategy)
           return strategy;
       let first = tree.firstChild, close;
       if (first && (close = first.type.prop(NodeProp.closedBy))) {
           let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;
           return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);
       }
       return tree.parent == null ? topIndent : null;
   }
   function indentFrom(node, pos, base) {
       for (; node; node = node.parent) {
           let strategy = indentStrategy(node);
           if (strategy)
               return strategy(TreeIndentContext.create(base, pos, node));
       }
       return null;
   }
   function topIndent() { return 0; }
   /**
   Objects of this type provide context information and helper
   methods to indentation functions registered on syntax nodes.
   */
   class TreeIndentContext extends IndentContext {
       constructor(base, 
       /**
       The position at which indentation is being computed.
       */
       pos, 
       /**
       The syntax tree node to which the indentation strategy
       applies.
       */
       node) {
           super(base.state, base.options);
           this.base = base;
           this.pos = pos;
           this.node = node;
       }
       /**
       @internal
       */
       static create(base, pos, node) {
           return new TreeIndentContext(base, pos, node);
       }
       /**
       Get the text directly after `this.pos`, either the entire line
       or the next 100 characters, whichever is shorter.
       */
       get textAfter() {
           return this.textAfterPos(this.pos);
       }
       /**
       Get the indentation at the reference line for `this.node`, which
       is the line on which it starts, unless there is a node that is
       _not_ a parent of this node covering the start of that line. If
       so, the line at the start of that node is tried, again skipping
       on if it is covered by another such node.
       */
       get baseIndent() {
           let line = this.state.doc.lineAt(this.node.from);
           // Skip line starts that are covered by a sibling (or cousin, etc)
           for (;;) {
               let atBreak = this.node.resolve(line.from);
               while (atBreak.parent && atBreak.parent.from == atBreak.from)
                   atBreak = atBreak.parent;
               if (isParent(atBreak, this.node))
                   break;
               line = this.state.doc.lineAt(atBreak.from);
           }
           return this.lineIndent(line.from);
       }
       /**
       Continue looking for indentations in the node's parent nodes,
       and return the result of that.
       */
       continue() {
           let parent = this.node.parent;
           return parent ? indentFrom(parent, this.pos, this.base) : 0;
       }
   }
   function isParent(parent, of) {
       for (let cur = of; cur; cur = cur.parent)
           if (parent == cur)
               return true;
       return false;
   }
   // Check whether a delimited node is aligned (meaning there are
   // non-skipped nodes on the same line as the opening delimiter). And
   // if so, return the opening token.
   function bracketedAligned(context) {
       let tree = context.node;
       let openToken = tree.childAfter(tree.from), last = tree.lastChild;
       if (!openToken)
           return null;
       let sim = context.options.simulateBreak;
       let openLine = context.state.doc.lineAt(openToken.from);
       let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);
       for (let pos = openToken.to;;) {
           let next = tree.childAfter(pos);
           if (!next || next == last)
               return null;
           if (!next.type.isSkipped)
               return next.from < lineEnd ? openToken : null;
           pos = next.to;
       }
   }
   /**
   An indentation strategy for delimited (usually bracketed) nodes.
   Will, by default, indent one unit more than the parent's base
   indent unless the line starts with a closing token. When `align`
   is true and there are non-skipped nodes on the node's opening
   line, the content of the node will be aligned with the end of the
   opening node, like this:

       foo(bar,
           baz)
   */
   function delimitedIndent({ closing, align = true, units = 1 }) {
       return (context) => delimitedStrategy(context, align, units, closing);
   }
   function delimitedStrategy(context, align, units, closing, closedAt) {
       let after = context.textAfter, space = after.match(/^\s*/)[0].length;
       let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;
       let aligned = align ? bracketedAligned(context) : null;
       if (aligned)
           return closed ? context.column(aligned.from) : context.column(aligned.to);
       return context.baseIndent + (closed ? 0 : context.unit * units);
   }
   /**
   An indentation strategy that aligns a node's content to its base
   indentation.
   */
   const flatIndent = (context) => context.baseIndent;
   /**
   Creates an indentation strategy that, by default, indents
   continued lines one unit more than the node's base indentation.
   You can provide `except` to prevent indentation of lines that
   match a pattern (for example `/^else\b/` in `if`/`else`
   constructs), and you can change the amount of units used with the
   `units` option.
   */
   function continuedIndent({ except, units = 1 } = {}) {
       return (context) => {
           let matchExcept = except && except.test(context.textAfter);
           return context.baseIndent + (matchExcept ? 0 : units * context.unit);
       };
   }
   const DontIndentBeyond = 200;
   /**
   Enables reindentation on input. When a language defines an
   `indentOnInput` field in its [language
   data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular
   expression, the line at the cursor will be reindented whenever new
   text is typed and the input from the start of the line up to the
   cursor matches that regexp.

   To avoid unneccesary reindents, it is recommended to start the
   regexp with `^` (usually followed by `\s*`), and end it with `$`.
   For example, `/^\s*\}$/` will reindent when a closing brace is
   added at the start of a line.
   */
   function indentOnInput() {
       return EditorState.transactionFilter.of(tr => {
           if (!tr.docChanged || !tr.isUserEvent("input.type") && !tr.isUserEvent("input.complete"))
               return tr;
           let rules = tr.startState.languageDataAt("indentOnInput", tr.startState.selection.main.head);
           if (!rules.length)
               return tr;
           let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);
           if (head > line.from + DontIndentBeyond)
               return tr;
           let lineStart = doc.sliceString(line.from, head);
           if (!rules.some(r => r.test(lineStart)))
               return tr;
           let { state } = tr, last = -1, changes = [];
           for (let { head } of state.selection.ranges) {
               let line = state.doc.lineAt(head);
               if (line.from == last)
                   continue;
               last = line.from;
               let indent = getIndentation(state, line.from);
               if (indent == null)
                   continue;
               let cur = /^\s*/.exec(line.text)[0];
               let norm = indentString(state, indent);
               if (cur != norm)
                   changes.push({ from: line.from, to: line.from + cur.length, insert: norm });
           }
           return changes.length ? [tr, { changes, sequential: true }] : tr;
       });
   }

   /**
   A facet that registers a code folding service. When called with
   the extent of a line, such a function should return a foldable
   range that starts on that line (but continues beyond it), if one
   can be found.
   */
   const foldService = /*@__PURE__*/Facet.define();
   /**
   This node prop is used to associate folding information with
   syntax node types. Given a syntax node, it should check whether
   that tree is foldable and return the range that can be collapsed
   when it is.
   */
   const foldNodeProp = /*@__PURE__*/new NodeProp();
   /**
   [Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but
   the first and the last child of a syntax node. Useful for nodes
   that start and end with delimiters.
   */
   function foldInside(node) {
       let first = node.firstChild, last = node.lastChild;
       return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;
   }
   function syntaxFolding(state, start, end) {
       let tree = syntaxTree(state);
       if (tree.length < end)
           return null;
       let inner = tree.resolveInner(end);
       let found = null;
       for (let cur = inner; cur; cur = cur.parent) {
           if (cur.to <= end || cur.from > end)
               continue;
           if (found && cur.from < start)
               break;
           let prop = cur.type.prop(foldNodeProp);
           if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {
               let value = prop(cur, state);
               if (value && value.from <= end && value.from >= start && value.to > end)
                   found = value;
           }
       }
       return found;
   }
   function isUnfinished(node) {
       let ch = node.lastChild;
       return ch && ch.to == node.to && ch.type.isError;
   }
   /**
   Check whether the given line is foldable. First asks any fold
   services registered through
   [`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return
   a result, tries to query the [fold node
   prop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end
   of the line.
   */
   function foldable(state, lineStart, lineEnd) {
       for (let service of state.facet(foldService)) {
           let result = service(state, lineStart, lineEnd);
           if (result)
               return result;
       }
       return syntaxFolding(state, lineStart, lineEnd);
   }
   function mapRange(range, mapping) {
       let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);
       return from >= to ? undefined : { from, to };
   }
   /**
   State effect that can be attached to a transaction to fold the
   given range. (You probably only need this in exceptional
   circumstances—usually you'll just want to let
   [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold
   gutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)
   */
   const foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });
   /**
   State effect that unfolds the given range (if it was folded).
   */
   const unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });
   function selectedLines(view) {
       let lines = [];
       for (let { head } of view.state.selection.ranges) {
           if (lines.some(l => l.from <= head && l.to >= head))
               continue;
           lines.push(view.lineBlockAt(head));
       }
       return lines;
   }
   /**
   The state field that stores the folded ranges (as a [decoration
   set](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to
   [`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and
   [`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold
   state.
   */
   const foldState = /*@__PURE__*/StateField.define({
       create() {
           return Decoration.none;
       },
       update(folded, tr) {
           folded = folded.map(tr.changes);
           for (let e of tr.effects) {
               if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))
                   folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });
               else if (e.is(unfoldEffect))
                   folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,
                       filterFrom: e.value.from, filterTo: e.value.to });
           }
           // Clear folded ranges that cover the selection head
           if (tr.selection) {
               let onSelection = false, { head } = tr.selection.main;
               folded.between(head, head, (a, b) => { if (a < head && b > head)
                   onSelection = true; });
               if (onSelection)
                   folded = folded.update({
                       filterFrom: head,
                       filterTo: head,
                       filter: (a, b) => b <= head || a >= head
                   });
           }
           return folded;
       },
       provide: f => EditorView.decorations.from(f),
       toJSON(folded, state) {
           let ranges = [];
           folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });
           return ranges;
       },
       fromJSON(value) {
           if (!Array.isArray(value) || value.length % 2)
               throw new RangeError("Invalid JSON for fold state");
           let ranges = [];
           for (let i = 0; i < value.length;) {
               let from = value[i++], to = value[i++];
               if (typeof from != "number" || typeof to != "number")
                   throw new RangeError("Invalid JSON for fold state");
               ranges.push(foldWidget.range(from, to));
           }
           return Decoration.set(ranges, true);
       }
   });
   function findFold(state, from, to) {
       var _a;
       let found = null;
       (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {
           if (!found || found.from > from)
               found = { from, to };
       });
       return found;
   }
   function foldExists(folded, from, to) {
       let found = false;
       folded.between(from, from, (a, b) => { if (a == from && b == to)
           found = true; });
       return found;
   }
   function maybeEnable(state, other) {
       return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));
   }
   /**
   Fold the lines that are selected, if possible.
   */
   const foldCode = view => {
       for (let line of selectedLines(view)) {
           let range = foldable(view.state, line.from, line.to);
           if (range) {
               view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });
               return true;
           }
       }
       return false;
   };
   /**
   Unfold folded ranges on selected lines.
   */
   const unfoldCode = view => {
       if (!view.state.field(foldState, false))
           return false;
       let effects = [];
       for (let line of selectedLines(view)) {
           let folded = findFold(view.state, line.from, line.to);
           if (folded)
               effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));
       }
       if (effects.length)
           view.dispatch({ effects });
       return effects.length > 0;
   };
   function announceFold(view, range, fold = true) {
       let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;
       return EditorView.announce.of(`${view.state.phrase(fold ? "Folded lines" : "Unfolded lines")} ${lineFrom} ${view.state.phrase("to")} ${lineTo}.`);
   }
   /**
   Fold all top-level foldable ranges. Note that, in most cases,
   folding information will depend on the [syntax
   tree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work
   reliably when the document hasn't been fully parsed (either
   because the editor state was only just initialized, or because the
   document is so big that the parser decided not to parse it
   entirely).
   */
   const foldAll = view => {
       let { state } = view, effects = [];
       for (let pos = 0; pos < state.doc.length;) {
           let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);
           if (range)
               effects.push(foldEffect.of(range));
           pos = (range ? view.lineBlockAt(range.to) : line).to + 1;
       }
       if (effects.length)
           view.dispatch({ effects: maybeEnable(view.state, effects) });
       return !!effects.length;
   };
   /**
   Unfold all folded code.
   */
   const unfoldAll = view => {
       let field = view.state.field(foldState, false);
       if (!field || !field.size)
           return false;
       let effects = [];
       field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });
       view.dispatch({ effects });
       return true;
   };
   /**
   Default fold-related key bindings.

    - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).
    - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).
    - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).
    - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).
   */
   const foldKeymap = [
       { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: foldCode },
       { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: unfoldCode },
       { key: "Ctrl-Alt-[", run: foldAll },
       { key: "Ctrl-Alt-]", run: unfoldAll }
   ];
   const defaultConfig = {
       placeholderDOM: null,
       placeholderText: "…"
   };
   const foldConfig = /*@__PURE__*/Facet.define({
       combine(values) { return combineConfig(values, defaultConfig); }
   });
   /**
   Create an extension that configures code folding.
   */
   function codeFolding(config) {
       let result = [foldState, baseTheme$1$2];
       if (config)
           result.push(foldConfig.of(config));
       return result;
   }
   const foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {
           toDOM(view) {
               let { state } = view, conf = state.facet(foldConfig);
               let onclick = (event) => {
                   let line = view.lineBlockAt(view.posAtDOM(event.target));
                   let folded = findFold(view.state, line.from, line.to);
                   if (folded)
                       view.dispatch({ effects: unfoldEffect.of(folded) });
                   event.preventDefault();
               };
               if (conf.placeholderDOM)
                   return conf.placeholderDOM(view, onclick);
               let element = document.createElement("span");
               element.textContent = conf.placeholderText;
               element.setAttribute("aria-label", state.phrase("folded code"));
               element.title = state.phrase("unfold");
               element.className = "cm-foldPlaceholder";
               element.onclick = onclick;
               return element;
           }
       } });
   const foldGutterDefaults = {
       openText: "⌄",
       closedText: "›",
       markerDOM: null,
       domEventHandlers: {},
       foldingChanged: () => false
   };
   class FoldMarker extends GutterMarker {
       constructor(config, open) {
           super();
           this.config = config;
           this.open = open;
       }
       eq(other) { return this.config == other.config && this.open == other.open; }
       toDOM(view) {
           if (this.config.markerDOM)
               return this.config.markerDOM(this.open);
           let span = document.createElement("span");
           span.textContent = this.open ? this.config.openText : this.config.closedText;
           span.title = view.state.phrase(this.open ? "Fold line" : "Unfold line");
           return span;
       }
   }
   /**
   Create an extension that registers a fold gutter, which shows a
   fold status indicator before foldable lines (which can be clicked
   to fold or unfold the line).
   */
   function foldGutter(config = {}) {
       let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);
       let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);
       let markers = ViewPlugin.fromClass(class {
           constructor(view) {
               this.from = view.viewport.from;
               this.markers = this.buildMarkers(view);
           }
           update(update) {
               if (update.docChanged || update.viewportChanged ||
                   update.startState.facet(language) != update.state.facet(language) ||
                   update.startState.field(foldState, false) != update.state.field(foldState, false) ||
                   syntaxTree(update.startState) != syntaxTree(update.state) ||
                   fullConfig.foldingChanged(update))
                   this.markers = this.buildMarkers(update.view);
           }
           buildMarkers(view) {
               let builder = new RangeSetBuilder();
               for (let line of view.viewportLineBlocks) {
                   let mark = findFold(view.state, line.from, line.to) ? canUnfold
                       : foldable(view.state, line.from, line.to) ? canFold : null;
                   if (mark)
                       builder.add(line.from, line.from, mark);
               }
               return builder.finish();
           }
       });
       let { domEventHandlers } = fullConfig;
       return [
           markers,
           gutter({
               class: "cm-foldGutter",
               markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },
               initialSpacer() {
                   return new FoldMarker(fullConfig, false);
               },
               domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {
                       if (domEventHandlers.click && domEventHandlers.click(view, line, event))
                           return true;
                       let folded = findFold(view.state, line.from, line.to);
                       if (folded) {
                           view.dispatch({ effects: unfoldEffect.of(folded) });
                           return true;
                       }
                       let range = foldable(view.state, line.from, line.to);
                       if (range) {
                           view.dispatch({ effects: foldEffect.of(range) });
                           return true;
                       }
                       return false;
                   } })
           }),
           codeFolding()
       ];
   }
   const baseTheme$1$2 = /*@__PURE__*/EditorView.baseTheme({
       ".cm-foldPlaceholder": {
           backgroundColor: "#eee",
           border: "1px solid #ddd",
           color: "#888",
           borderRadius: ".2em",
           margin: "0 1px",
           padding: "0 1px",
           cursor: "pointer"
       },
       ".cm-foldGutter span": {
           padding: "0 1px",
           cursor: "pointer"
       }
   });

   /**
   A highlight style associates CSS styles with higlighting
   [tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).
   */
   class HighlightStyle {
       constructor(spec, options) {
           let modSpec;
           function def(spec) {
               let cls = StyleModule.newName();
               (modSpec || (modSpec = Object.create(null)))["." + cls] = spec;
               return cls;
           }
           const all = typeof options.all == "string" ? options.all : options.all ? def(options.all) : undefined;
           const scopeOpt = options.scope;
           this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data
               : scopeOpt ? (type) => type == scopeOpt : undefined;
           this.style = tagHighlighter(spec.map(style => ({
               tag: style.tag,
               class: style.class || def(Object.assign({}, style, { tag: null }))
           })), {
               all,
           }).style;
           this.module = modSpec ? new StyleModule(modSpec) : null;
           this.themeType = options.themeType;
       }
       /**
       Create a highlighter style that associates the given styles to
       the given tags. The specs must be objects that hold a style tag
       or array of tags in their `tag` property, and either a single
       `class` property providing a static CSS class (for highlighter
       that rely on external styling), or a
       [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
       set of CSS properties (which define the styling for those tags).
       
       The CSS rules created for a highlighter will be emitted in the
       order of the spec's properties. That means that for elements that
       have multiple tags associated with them, styles defined further
       down in the list will have a higher CSS precedence than styles
       defined earlier.
       */
       static define(specs, options) {
           return new HighlightStyle(specs, options || {});
       }
   }
   const highlighterFacet = /*@__PURE__*/Facet.define();
   const fallbackHighlighter = /*@__PURE__*/Facet.define({
       combine(values) { return values.length ? [values[0]] : null; }
   });
   function getHighlighters(state) {
       let main = state.facet(highlighterFacet);
       return main.length ? main : state.facet(fallbackHighlighter);
   }
   /**
   Wrap a highlighter in an editor extension that uses it to apply
   syntax highlighting to the editor content.

   When multiple (non-fallback) styles are provided, the styling
   applied is the union of the classes they emit.
   */
   function syntaxHighlighting(highlighter, options) {
       let ext = [treeHighlighter], themeType;
       if (highlighter instanceof HighlightStyle) {
           if (highlighter.module)
               ext.push(EditorView.styleModule.of(highlighter.module));
           themeType = highlighter.themeType;
       }
       if (options === null || options === void 0 ? void 0 : options.fallback)
           ext.push(fallbackHighlighter.of(highlighter));
       else if (themeType)
           ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {
               return state.facet(EditorView.darkTheme) == (themeType == "dark") ? [highlighter] : [];
           }));
       else
           ext.push(highlighterFacet.of(highlighter));
       return ext;
   }
   class TreeHighlighter {
       constructor(view) {
           this.markCache = Object.create(null);
           this.tree = syntaxTree(view.state);
           this.decorations = this.buildDeco(view, getHighlighters(view.state));
       }
       update(update) {
           let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);
           let styleChange = highlighters != getHighlighters(update.startState);
           if (tree.length < update.view.viewport.to && !styleChange && tree.type == this.tree.type) {
               this.decorations = this.decorations.map(update.changes);
           }
           else if (tree != this.tree || update.viewportChanged || styleChange) {
               this.tree = tree;
               this.decorations = this.buildDeco(update.view, highlighters);
           }
       }
       buildDeco(view, highlighters) {
           if (!highlighters || !this.tree.length)
               return Decoration.none;
           let builder = new RangeSetBuilder();
           for (let { from, to } of view.visibleRanges) {
               highlightTree(this.tree, highlighters, (from, to, style) => {
                   builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));
               }, from, to);
           }
           return builder.finish();
       }
   }
   const treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {
       decorations: v => v.decorations
   }));
   /**
   A default highlight style (works well with light themes).
   */
   const defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([
       { tag: tags.meta,
           color: "#7a757a" },
       { tag: tags.link,
           textDecoration: "underline" },
       { tag: tags.heading,
           textDecoration: "underline",
           fontWeight: "bold" },
       { tag: tags.emphasis,
           fontStyle: "italic" },
       { tag: tags.strong,
           fontWeight: "bold" },
       { tag: tags.strikethrough,
           textDecoration: "line-through" },
       { tag: tags.keyword,
           color: "#708" },
       { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],
           color: "#219" },
       { tag: [tags.literal, tags.inserted],
           color: "#164" },
       { tag: [tags.string, tags.deleted],
           color: "#a11" },
       { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],
           color: "#e40" },
       { tag: /*@__PURE__*/tags.definition(tags.variableName),
           color: "#00f" },
       { tag: /*@__PURE__*/tags.local(tags.variableName),
           color: "#30a" },
       { tag: [tags.typeName, tags.namespace],
           color: "#085" },
       { tag: tags.className,
           color: "#167" },
       { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],
           color: "#256" },
       { tag: /*@__PURE__*/tags.definition(tags.propertyName),
           color: "#00c" },
       { tag: tags.comment,
           color: "#940" },
       { tag: tags.invalid,
           color: "#f00" }
   ]);

   const baseTheme$3 = /*@__PURE__*/EditorView.baseTheme({
       "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
       "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
   });
   const DefaultScanDist = 10000, DefaultBrackets = "()[]{}";
   const bracketMatchingConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               afterCursor: true,
               brackets: DefaultBrackets,
               maxScanDistance: DefaultScanDist,
               renderMatch: defaultRenderMatch
           });
       }
   });
   const matchingMark = /*@__PURE__*/Decoration.mark({ class: "cm-matchingBracket" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: "cm-nonmatchingBracket" });
   function defaultRenderMatch(match) {
       let decorations = [];
       let mark = match.matched ? matchingMark : nonmatchingMark;
       decorations.push(mark.range(match.start.from, match.start.to));
       if (match.end)
           decorations.push(mark.range(match.end.from, match.end.to));
       return decorations;
   }
   const bracketMatchingState = /*@__PURE__*/StateField.define({
       create() { return Decoration.none; },
       update(deco, tr) {
           if (!tr.docChanged && !tr.selection)
               return deco;
           let decorations = [];
           let config = tr.state.facet(bracketMatchingConfig);
           for (let range of tr.state.selection.ranges) {
               if (!range.empty)
                   continue;
               let match = matchBrackets(tr.state, range.head, -1, config)
                   || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))
                   || (config.afterCursor &&
                       (matchBrackets(tr.state, range.head, 1, config) ||
                           (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));
               if (match)
                   decorations = decorations.concat(config.renderMatch(match, tr.state));
           }
           return Decoration.set(decorations, true);
       },
       provide: f => EditorView.decorations.from(f)
   });
   const bracketMatchingUnique = [
       bracketMatchingState,
       baseTheme$3
   ];
   /**
   Create an extension that enables bracket matching. Whenever the
   cursor is next to a bracket, that bracket and the one it matches
   are highlighted. Or, when no matching bracket is found, another
   highlighting style is used to indicate this.
   */
   function bracketMatching(config = {}) {
       return [bracketMatchingConfig.of(config), bracketMatchingUnique];
   }
   function matchingNodes(node, dir, brackets) {
       let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);
       if (byProp)
           return byProp;
       if (node.name.length == 1) {
           let index = brackets.indexOf(node.name);
           if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))
               return [brackets[index + dir]];
       }
       return null;
   }
   /**
   Find the matching bracket for the token at `pos`, scanning
   direction `dir`. Only the `brackets` and `maxScanDistance`
   properties are used from `config`, if given. Returns null if no
   bracket was found at `pos`, or a match result otherwise.
   */
   function matchBrackets(state, pos, dir, config = {}) {
       let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;
       let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);
       for (let cur = node; cur; cur = cur.parent) {
           let matches = matchingNodes(cur.type, dir, brackets);
           if (matches && cur.from < cur.to)
               return matchMarkedBrackets(state, pos, dir, cur, matches, brackets);
       }
       return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);
   }
   function matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {
       let parent = token.parent, firstToken = { from: token.from, to: token.to };
       let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();
       if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))
           do {
               if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {
                   if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {
                       return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };
                   }
                   else if (matchingNodes(cursor.type, dir, brackets)) {
                       depth++;
                   }
                   else if (matchingNodes(cursor.type, -dir, brackets)) {
                       if (depth == 0)
                           return {
                               start: firstToken,
                               end: cursor.from == cursor.to ? undefined : { from: cursor.from, to: cursor.to },
                               matched: false
                           };
                       depth--;
                   }
               }
           } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());
       return { start: firstToken, matched: false };
   }
   function matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {
       let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);
       let bracket = brackets.indexOf(startCh);
       if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))
           return null;
       let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };
       let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;
       for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {
           let text = iter.value;
           if (dir < 0)
               distance += text.length;
           let basePos = pos + distance * dir;
           for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {
               let found = brackets.indexOf(text[pos]);
               if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)
                   continue;
               if ((found % 2 == 0) == (dir > 0)) {
                   depth++;
               }
               else if (depth == 1) { // Closing
                   return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };
               }
               else {
                   depth--;
               }
           }
           if (dir > 0)
               distance += text.length;
       }
       return iter.done ? { start: startToken, matched: false } : null;
   }
   const noTokens = /*@__PURE__*/Object.create(null);
   const typeArray = [NodeType.none];
   const warned = [];
   const defaultTable = /*@__PURE__*/Object.create(null);
   for (let [legacyName, name] of [
       ["variable", "variableName"],
       ["variable-2", "variableName.special"],
       ["string-2", "string.special"],
       ["def", "variableName.definition"],
       ["tag", "tagName"],
       ["attribute", "attributeName"],
       ["type", "typeName"],
       ["builtin", "variableName.standard"],
       ["qualifier", "modifier"],
       ["error", "invalid"],
       ["header", "heading"],
       ["property", "propertyName"]
   ])
       defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);
   function warnForPart(part, msg) {
       if (warned.indexOf(part) > -1)
           return;
       warned.push(part);
       console.warn(msg);
   }
   function createTokenType(extra, tagStr) {
       let tag = null;
       for (let part of tagStr.split(".")) {
           let value = (extra[part] || tags[part]);
           if (!value) {
               warnForPart(part, `Unknown highlighting tag ${part}`);
           }
           else if (typeof value == "function") {
               if (!tag)
                   warnForPart(part, `Modifier ${part} used at start of tag`);
               else
                   tag = value(tag);
           }
           else {
               if (tag)
                   warnForPart(part, `Tag ${part} used as modifier`);
               else
                   tag = value;
           }
       }
       if (!tag)
           return 0;
       let name = tagStr.replace(/ /g, "_"), type = NodeType.define({
           id: typeArray.length,
           name,
           props: [styleTags({ [name]: tag })]
       });
       typeArray.push(type);
       return type.id;
   }

   /**
   Comment or uncomment the current selection. Will use line comments
   if available, otherwise falling back to block comments.
   */
   const toggleComment = target => {
       let config = getConfig(target.state);
       return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;
   };
   function command(f, option) {
       return ({ state, dispatch }) => {
           if (state.readOnly)
               return false;
           let tr = f(option, state);
           if (!tr)
               return false;
           dispatch(state.update(tr));
           return true;
       };
   }
   /**
   Comment or uncomment the current selection using line comments.
   The line comment syntax is taken from the
   [`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language
   data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).
   */
   const toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);
   /**
   Comment or uncomment the current selection using block comments.
   The block comment syntax is taken from the
   [`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language
   data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).
   */
   const toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);
   /**
   Comment or uncomment the lines around the current selection using
   block comments.
   */
   const toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);
   function getConfig(state, pos = state.selection.main.head) {
       let data = state.languageDataAt("commentTokens", pos);
       return data.length ? data[0] : {};
   }
   const SearchMargin = 50;
   /**
   Determines if the given range is block-commented in the given
   state.
   */
   function findBlockComment(state, { open, close }, from, to) {
       let textBefore = state.sliceDoc(from - SearchMargin, from);
       let textAfter = state.sliceDoc(to, to + SearchMargin);
       let spaceBefore = /\s*$/.exec(textBefore)[0].length, spaceAfter = /^\s*/.exec(textAfter)[0].length;
       let beforeOff = textBefore.length - spaceBefore;
       if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&
           textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {
           return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },
               close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };
       }
       let startText, endText;
       if (to - from <= 2 * SearchMargin) {
           startText = endText = state.sliceDoc(from, to);
       }
       else {
           startText = state.sliceDoc(from, from + SearchMargin);
           endText = state.sliceDoc(to - SearchMargin, to);
       }
       let startSpace = /^\s*/.exec(startText)[0].length, endSpace = /\s*$/.exec(endText)[0].length;
       let endOff = endText.length - endSpace - close.length;
       if (startText.slice(startSpace, startSpace + open.length) == open &&
           endText.slice(endOff, endOff + close.length) == close) {
           return { open: { pos: from + startSpace + open.length,
                   margin: /\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },
               close: { pos: to - endSpace - close.length,
                   margin: /\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };
       }
       return null;
   }
   function selectedLineRanges(state) {
       let ranges = [];
       for (let r of state.selection.ranges) {
           let fromLine = state.doc.lineAt(r.from);
           let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);
           let last = ranges.length - 1;
           if (last >= 0 && ranges[last].to > fromLine.from)
               ranges[last].to = toLine.to;
           else
               ranges.push({ from: fromLine.from, to: toLine.to });
       }
       return ranges;
   }
   // Performs toggle, comment and uncomment of block comments in
   // languages that support them.
   function changeBlockComment(option, state, ranges = state.selection.ranges) {
       let tokens = ranges.map(r => getConfig(state, r.from).block);
       if (!tokens.every(c => c))
           return null;
       let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));
       if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {
           return { changes: state.changes(ranges.map((range, i) => {
                   if (comments[i])
                       return [];
                   return [{ from: range.from, insert: tokens[i].open + " " }, { from: range.to, insert: " " + tokens[i].close }];
               })) };
       }
       else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {
           let changes = [];
           for (let i = 0, comment; i < comments.length; i++)
               if (comment = comments[i]) {
                   let token = tokens[i], { open, close } = comment;
                   changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });
               }
           return { changes };
       }
       return null;
   }
   // Performs toggle, comment and uncomment of line comments.
   function changeLineComment(option, state, ranges = state.selection.ranges) {
       let lines = [];
       let prevLine = -1;
       for (let { from, to } of ranges) {
           let startI = lines.length, minIndent = 1e9;
           for (let pos = from; pos <= to;) {
               let line = state.doc.lineAt(pos);
               if (line.from > prevLine && (from == to || to > line.from)) {
                   prevLine = line.from;
                   let token = getConfig(state, pos).line;
                   if (!token)
                       continue;
                   let indent = /^\s*/.exec(line.text)[0].length;
                   let empty = indent == line.length;
                   let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;
                   if (indent < line.text.length && indent < minIndent)
                       minIndent = indent;
                   lines.push({ line, comment, token, indent, empty, single: false });
               }
               pos = line.to + 1;
           }
           if (minIndent < 1e9)
               for (let i = startI; i < lines.length; i++)
                   if (lines[i].indent < lines[i].line.text.length)
                       lines[i].indent = minIndent;
           if (lines.length == startI + 1)
               lines[startI].single = true;
       }
       if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {
           let changes = [];
           for (let { line, token, indent, empty, single } of lines)
               if (single || !empty)
                   changes.push({ from: line.from + indent, insert: token + " " });
           let changeSet = state.changes(changes);
           return { changes: changeSet, selection: state.selection.map(changeSet, 1) };
       }
       else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {
           let changes = [];
           for (let { line, comment, token } of lines)
               if (comment >= 0) {
                   let from = line.from + comment, to = from + token.length;
                   if (line.text[to - line.from] == " ")
                       to++;
                   changes.push({ from, to });
               }
           return { changes };
       }
       return null;
   }

   const fromHistory = /*@__PURE__*/Annotation.define();
   /**
   Transaction annotation that will prevent that transaction from
   being combined with other transactions in the undo history. Given
   `"before"`, it'll prevent merging with previous transactions. With
   `"after"`, subsequent transactions won't be combined with this
   one. With `"full"`, the transaction is isolated on both sides.
   */
   const isolateHistory = /*@__PURE__*/Annotation.define();
   /**
   This facet provides a way to register functions that, given a
   transaction, provide a set of effects that the history should
   store when inverting the transaction. This can be used to
   integrate some kinds of effects in the history, so that they can
   be undone (and redone again).
   */
   const invertedEffects = /*@__PURE__*/Facet.define();
   const historyConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               minDepth: 100,
               newGroupDelay: 500
           }, { minDepth: Math.max, newGroupDelay: Math.min });
       }
   });
   function changeEnd(changes) {
       let end = 0;
       changes.iterChangedRanges((_, to) => end = to);
       return end;
   }
   const historyField_ = /*@__PURE__*/StateField.define({
       create() {
           return HistoryState.empty;
       },
       update(state, tr) {
           let config = tr.state.facet(historyConfig);
           let fromHist = tr.annotation(fromHistory);
           if (fromHist) {
               let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;
               let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;
               let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;
               if (item)
                   other = updateBranch(other, other.length, config.minDepth, item);
               else
                   other = addSelection(other, tr.startState.selection);
               return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);
           }
           let isolate = tr.annotation(isolateHistory);
           if (isolate == "full" || isolate == "before")
               state = state.isolate();
           if (tr.annotation(Transaction.addToHistory) === false)
               return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;
           let event = HistEvent.fromTransaction(tr);
           let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);
           if (event)
               state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);
           else if (tr.selection)
               state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);
           if (isolate == "full" || isolate == "after")
               state = state.isolate();
           return state;
       },
       toJSON(value) {
           return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };
       },
       fromJSON(json) {
           return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));
       }
   });
   /**
   Create a history extension with the given configuration.
   */
   function history(config = {}) {
       return [
           historyField_,
           historyConfig.of(config),
           EditorView.domEventHandlers({
               beforeinput(e, view) {
                   let command = e.inputType == "historyUndo" ? undo : e.inputType == "historyRedo" ? redo : null;
                   if (!command)
                       return false;
                   e.preventDefault();
                   return command(view);
               }
           })
       ];
   }
   function cmd(side, selection) {
       return function ({ state, dispatch }) {
           if (!selection && state.readOnly)
               return false;
           let historyState = state.field(historyField_, false);
           if (!historyState)
               return false;
           let tr = historyState.pop(side, state, selection);
           if (!tr)
               return false;
           dispatch(tr);
           return true;
       };
   }
   /**
   Undo a single group of history events. Returns false if no group
   was available.
   */
   const undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);
   /**
   Redo a group of history events. Returns false if no group was
   available.
   */
   const redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);
   /**
   Undo a change or selection change.
   */
   const undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);
   /**
   Redo a change or selection change.
   */
   const redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);
   // History events store groups of changes or effects that need to be
   // undone/redone together.
   class HistEvent {
       constructor(
       // The changes in this event. Normal events hold at least one
       // change or effect. But it may be necessary to store selection
       // events before the first change, in which case a special type of
       // instance is created which doesn't hold any changes, with
       // changes == startSelection == undefined
       changes, 
       // The effects associated with this event
       effects, 
       // Accumulated mapping (from addToHistory==false) that should be
       // applied to events below this one.
       mapped, 
       // The selection before this event
       startSelection, 
       // Stores selection changes after this event, to be used for
       // selection undo/redo.
       selectionsAfter) {
           this.changes = changes;
           this.effects = effects;
           this.mapped = mapped;
           this.startSelection = startSelection;
           this.selectionsAfter = selectionsAfter;
       }
       setSelAfter(after) {
           return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);
       }
       toJSON() {
           var _a, _b, _c;
           return {
               changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),
               mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),
               startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),
               selectionsAfter: this.selectionsAfter.map(s => s.toJSON())
           };
       }
       static fromJSON(json) {
           return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));
       }
       // This does not check `addToHistory` and such, it assumes the
       // transaction needs to be converted to an item. Returns null when
       // there are no changes or effects in the transaction.
       static fromTransaction(tr, selection) {
           let effects = none$1;
           for (let invert of tr.startState.facet(invertedEffects)) {
               let result = invert(tr);
               if (result.length)
                   effects = effects.concat(result);
           }
           if (!effects.length && tr.changes.empty)
               return null;
           return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none$1);
       }
       static selection(selections) {
           return new HistEvent(undefined, none$1, undefined, undefined, selections);
       }
   }
   function updateBranch(branch, to, maxLen, newEvent) {
       let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;
       let newBranch = branch.slice(start, to);
       newBranch.push(newEvent);
       return newBranch;
   }
   function isAdjacent(a, b) {
       let ranges = [], isAdjacent = false;
       a.iterChangedRanges((f, t) => ranges.push(f, t));
       b.iterChangedRanges((_f, _t, f, t) => {
           for (let i = 0; i < ranges.length;) {
               let from = ranges[i++], to = ranges[i++];
               if (t >= from && f <= to)
                   isAdjacent = true;
           }
       });
       return isAdjacent;
   }
   function eqSelectionShape(a, b) {
       return a.ranges.length == b.ranges.length &&
           a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;
   }
   function conc(a, b) {
       return !a.length ? b : !b.length ? a : a.concat(b);
   }
   const none$1 = [];
   const MaxSelectionsPerEvent = 200;
   function addSelection(branch, selection) {
       if (!branch.length) {
           return [HistEvent.selection([selection])];
       }
       else {
           let lastEvent = branch[branch.length - 1];
           let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));
           if (sels.length && sels[sels.length - 1].eq(selection))
               return branch;
           sels.push(selection);
           return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));
       }
   }
   // Assumes the top item has one or more selectionAfter values
   function popSelection(branch) {
       let last = branch[branch.length - 1];
       let newBranch = branch.slice();
       newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));
       return newBranch;
   }
   // Add a mapping to the top event in the given branch. If this maps
   // away all the changes and effects in that item, drop it and
   // propagate the mapping to the next item.
   function addMappingToBranch(branch, mapping) {
       if (!branch.length)
           return branch;
       let length = branch.length, selections = none$1;
       while (length) {
           let event = mapEvent(branch[length - 1], mapping, selections);
           if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping
               let result = branch.slice(0, length);
               result[length - 1] = event;
               return result;
           }
           else { // Drop this event, since there's no changes or effects left
               mapping = event.mapped;
               length--;
               selections = event.selectionsAfter;
           }
       }
       return selections.length ? [HistEvent.selection(selections)] : none$1;
   }
   function mapEvent(event, mapping, extraSelections) {
       let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none$1, extraSelections);
       // Change-less events don't store mappings (they are always the last event in a branch)
       if (!event.changes)
           return HistEvent.selection(selections);
       let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);
       let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;
       return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);
   }
   const joinableUserEvent = /^(input\.type|delete)($|\.)/;
   class HistoryState {
       constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {
           this.done = done;
           this.undone = undone;
           this.prevTime = prevTime;
           this.prevUserEvent = prevUserEvent;
       }
       isolate() {
           return this.prevTime ? new HistoryState(this.done, this.undone) : this;
       }
       addChanges(event, time, userEvent, newGroupDelay, maxLen) {
           let done = this.done, lastEvent = done[done.length - 1];
           if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&
               (!userEvent || joinableUserEvent.test(userEvent)) &&
               ((!lastEvent.selectionsAfter.length &&
                   time - this.prevTime < newGroupDelay &&
                   isAdjacent(lastEvent.changes, event.changes)) ||
                   // For compose (but not compose.start) events, always join with previous event
                   userEvent == "input.type.compose")) {
               done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none$1));
           }
           else {
               done = updateBranch(done, done.length, maxLen, event);
           }
           return new HistoryState(done, none$1, time, userEvent);
       }
       addSelection(selection, time, userEvent, newGroupDelay) {
           let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none$1;
           if (last.length > 0 &&
               time - this.prevTime < newGroupDelay &&
               userEvent == this.prevUserEvent && userEvent && /^select($|\.)/.test(userEvent) &&
               eqSelectionShape(last[last.length - 1], selection))
               return this;
           return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);
       }
       addMapping(mapping) {
           return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);
       }
       pop(side, state, selection) {
           let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;
           if (branch.length == 0)
               return null;
           let event = branch[branch.length - 1];
           if (selection && event.selectionsAfter.length) {
               return state.update({
                   selection: event.selectionsAfter[event.selectionsAfter.length - 1],
                   annotations: fromHistory.of({ side, rest: popSelection(branch) }),
                   userEvent: side == 0 /* BranchName.Done */ ? "select.undo" : "select.redo",
                   scrollIntoView: true
               });
           }
           else if (!event.changes) {
               return null;
           }
           else {
               let rest = branch.length == 1 ? none$1 : branch.slice(0, branch.length - 1);
               if (event.mapped)
                   rest = addMappingToBranch(rest, event.mapped);
               return state.update({
                   changes: event.changes,
                   selection: event.startSelection,
                   effects: event.effects,
                   annotations: fromHistory.of({ side, rest }),
                   filter: false,
                   userEvent: side == 0 /* BranchName.Done */ ? "undo" : "redo",
                   scrollIntoView: true
               });
           }
       }
   }
   HistoryState.empty = /*@__PURE__*/new HistoryState(none$1, none$1);
   /**
   Default key bindings for the undo history.

   - Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).
   - Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).
   - Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).
   - Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).
   */
   const historyKeymap = [
       { key: "Mod-z", run: undo, preventDefault: true },
       { key: "Mod-y", mac: "Mod-Shift-z", run: redo, preventDefault: true },
       { linux: "Ctrl-Shift-z", run: redo, preventDefault: true },
       { key: "Mod-u", run: undoSelection, preventDefault: true },
       { key: "Alt-u", mac: "Mod-Shift-u", run: redoSelection, preventDefault: true }
   ];

   function updateSel(sel, by) {
       return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);
   }
   function setSel(state, selection) {
       return state.update({ selection, scrollIntoView: true, userEvent: "select" });
   }
   function moveSel({ state, dispatch }, how) {
       let selection = updateSel(state.selection, how);
       if (selection.eq(state.selection))
           return false;
       dispatch(setSel(state, selection));
       return true;
   }
   function rangeEnd(range, forward) {
       return EditorSelection.cursor(forward ? range.to : range.from);
   }
   function cursorByChar(view, forward) {
       return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));
   }
   function ltrAtCursor(view) {
       return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;
   }
   /**
   Move the selection one character to the left (which is backward in
   left-to-right text, forward in right-to-left text).
   */
   const cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));
   /**
   Move the selection one character to the right.
   */
   const cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));
   function cursorByGroup(view, forward) {
       return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));
   }
   /**
   Move the selection to the left across one group of word or
   non-word (but also non-space) characters.
   */
   const cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));
   /**
   Move the selection one group to the right.
   */
   const cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));
   function interestingNode(state, node, bracketProp) {
       if (node.type.prop(bracketProp))
           return true;
       let len = node.to - node.from;
       return len && (len > 2 || /[^\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;
   }
   function moveBySyntax(state, start, forward) {
       let pos = syntaxTree(state).resolveInner(start.head);
       let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;
       // Scan forward through child nodes to see if there's an interesting
       // node ahead.
       for (let at = start.head;;) {
           let next = forward ? pos.childAfter(at) : pos.childBefore(at);
           if (!next)
               break;
           if (interestingNode(state, next, bracketProp))
               pos = next;
           else
               at = forward ? next.to : next.from;
       }
       let bracket = pos.type.prop(bracketProp), match, newPos;
       if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)
           newPos = forward ? match.end.to : match.end.from;
       else
           newPos = forward ? pos.to : pos.from;
       return EditorSelection.cursor(newPos, forward ? -1 : 1);
   }
   /**
   Move the cursor over the next syntactic element to the left.
   */
   const cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));
   /**
   Move the cursor over the next syntactic element to the right.
   */
   const cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));
   function cursorByLine(view, forward) {
       return moveSel(view, range => {
           if (!range.empty)
               return rangeEnd(range, forward);
           let moved = view.moveVertically(range, forward);
           return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);
       });
   }
   /**
   Move the selection one line up.
   */
   const cursorLineUp = view => cursorByLine(view, false);
   /**
   Move the selection one line down.
   */
   const cursorLineDown = view => cursorByLine(view, true);
   function pageHeight(view) {
       return Math.max(view.defaultLineHeight, Math.min(view.dom.clientHeight, innerHeight) - 5);
   }
   function cursorByPage(view, forward) {
       let { state } = view, selection = updateSel(state.selection, range => {
           return range.empty ? view.moveVertically(range, forward, pageHeight(view)) : rangeEnd(range, forward);
       });
       if (selection.eq(state.selection))
           return false;
       let startPos = view.coordsAtPos(state.selection.main.head);
       let scrollRect = view.scrollDOM.getBoundingClientRect();
       let effect;
       if (startPos && startPos.top > scrollRect.top && startPos.bottom < scrollRect.bottom &&
           startPos.top - scrollRect.top <= view.scrollDOM.scrollHeight - view.scrollDOM.scrollTop - view.scrollDOM.clientHeight)
           effect = EditorView.scrollIntoView(selection.main.head, { y: "start", yMargin: startPos.top - scrollRect.top });
       view.dispatch(setSel(state, selection), { effects: effect });
       return true;
   }
   /**
   Move the selection one page up.
   */
   const cursorPageUp = view => cursorByPage(view, false);
   /**
   Move the selection one page down.
   */
   const cursorPageDown = view => cursorByPage(view, true);
   function moveByLineBoundary(view, start, forward) {
       let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);
       if (moved.head == start.head && moved.head != (forward ? line.to : line.from))
           moved = view.moveToLineBoundary(start, forward, false);
       if (!forward && moved.head == line.from && line.length) {
           let space = /^\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;
           if (space && start.head != line.from + space)
               moved = EditorSelection.cursor(line.from + space);
       }
       return moved;
   }
   /**
   Move the selection to the next line wrap point, or to the end of
   the line if there isn't one left on this line.
   */
   const cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));
   /**
   Move the selection to previous line wrap point, or failing that to
   the start of the line. If the line is indented, and the cursor
   isn't already at the end of the indentation, this will move to the
   end of the indentation instead of the start of the line.
   */
   const cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));
   /**
   Move the selection one line wrap point to the left.
   */
   const cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));
   /**
   Move the selection one line wrap point to the right.
   */
   const cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));
   /**
   Move the selection to the start of the line.
   */
   const cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));
   /**
   Move the selection to the end of the line.
   */
   const cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));
   function toMatchingBracket(state, dispatch, extend) {
       let found = false, selection = updateSel(state.selection, range => {
           let matching = matchBrackets(state, range.head, -1)
               || matchBrackets(state, range.head, 1)
               || (range.head > 0 && matchBrackets(state, range.head - 1, 1))
               || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));
           if (!matching || !matching.end)
               return range;
           found = true;
           let head = matching.start.from == range.head ? matching.end.to : matching.end.from;
           return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);
       });
       if (!found)
           return false;
       dispatch(setSel(state, selection));
       return true;
   }
   /**
   Move the selection to the bracket matching the one it is currently
   on, if any.
   */
   const cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);
   function extendSel(view, how) {
       let selection = updateSel(view.state.selection, range => {
           let head = how(range);
           return EditorSelection.range(range.anchor, head.head, head.goalColumn);
       });
       if (selection.eq(view.state.selection))
           return false;
       view.dispatch(setSel(view.state, selection));
       return true;
   }
   function selectByChar(view, forward) {
       return extendSel(view, range => view.moveByChar(range, forward));
   }
   /**
   Move the selection head one character to the left, while leaving
   the anchor in place.
   */
   const selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));
   /**
   Move the selection head one character to the right.
   */
   const selectCharRight = view => selectByChar(view, ltrAtCursor(view));
   function selectByGroup(view, forward) {
       return extendSel(view, range => view.moveByGroup(range, forward));
   }
   /**
   Move the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to
   the left.
   */
   const selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));
   /**
   Move the selection head one group to the right.
   */
   const selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));
   /**
   Move the selection head over the next syntactic element to the left.
   */
   const selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));
   /**
   Move the selection head over the next syntactic element to the right.
   */
   const selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));
   function selectByLine(view, forward) {
       return extendSel(view, range => view.moveVertically(range, forward));
   }
   /**
   Move the selection head one line up.
   */
   const selectLineUp = view => selectByLine(view, false);
   /**
   Move the selection head one line down.
   */
   const selectLineDown = view => selectByLine(view, true);
   function selectByPage(view, forward) {
       return extendSel(view, range => view.moveVertically(range, forward, pageHeight(view)));
   }
   /**
   Move the selection head one page up.
   */
   const selectPageUp = view => selectByPage(view, false);
   /**
   Move the selection head one page down.
   */
   const selectPageDown = view => selectByPage(view, true);
   /**
   Move the selection head to the next line boundary.
   */
   const selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));
   /**
   Move the selection head to the previous line boundary.
   */
   const selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));
   /**
   Move the selection head one line boundary to the left.
   */
   const selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));
   /**
   Move the selection head one line boundary to the right.
   */
   const selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));
   /**
   Move the selection head to the start of the line.
   */
   const selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));
   /**
   Move the selection head to the end of the line.
   */
   const selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));
   /**
   Move the selection to the start of the document.
   */
   const cursorDocStart = ({ state, dispatch }) => {
       dispatch(setSel(state, { anchor: 0 }));
       return true;
   };
   /**
   Move the selection to the end of the document.
   */
   const cursorDocEnd = ({ state, dispatch }) => {
       dispatch(setSel(state, { anchor: state.doc.length }));
       return true;
   };
   /**
   Move the selection head to the start of the document.
   */
   const selectDocStart = ({ state, dispatch }) => {
       dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));
       return true;
   };
   /**
   Move the selection head to the end of the document.
   */
   const selectDocEnd = ({ state, dispatch }) => {
       dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));
       return true;
   };
   /**
   Select the entire document.
   */
   const selectAll = ({ state, dispatch }) => {
       dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: "select" }));
       return true;
   };
   /**
   Expand the selection to cover entire lines.
   */
   const selectLine = ({ state, dispatch }) => {
       let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));
       dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: "select" }));
       return true;
   };
   /**
   Select the next syntactic construct that is larger than the
   selection. Note that this will only work insofar as the language
   [provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full
   syntax tree.
   */
   const selectParentSyntax = ({ state, dispatch }) => {
       let selection = updateSel(state.selection, range => {
           var _a;
           let context = syntaxTree(state).resolveInner(range.head, 1);
           while (!((context.from < range.from && context.to >= range.to) ||
               (context.to > range.to && context.from <= range.from) ||
               !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))
               context = context.parent;
           return EditorSelection.range(context.to, context.from);
       });
       dispatch(setSel(state, selection));
       return true;
   };
   /**
   Simplify the current selection. When multiple ranges are selected,
   reduce it to its main range. Otherwise, if the selection is
   non-empty, convert it to a cursor selection.
   */
   const simplifySelection = ({ state, dispatch }) => {
       let cur = state.selection, selection = null;
       if (cur.ranges.length > 1)
           selection = EditorSelection.create([cur.main]);
       else if (!cur.main.empty)
           selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);
       if (!selection)
           return false;
       dispatch(setSel(state, selection));
       return true;
   };
   function deleteBy(target, by) {
       if (target.state.readOnly)
           return false;
       let event = "delete.selection", { state } = target;
       let changes = state.changeByRange(range => {
           let { from, to } = range;
           if (from == to) {
               let towards = by(from);
               if (towards < from) {
                   event = "delete.backward";
                   towards = skipAtomic(target, towards, false);
               }
               else if (towards > from) {
                   event = "delete.forward";
                   towards = skipAtomic(target, towards, true);
               }
               from = Math.min(from, towards);
               to = Math.max(to, towards);
           }
           else {
               from = skipAtomic(target, from, false);
               to = skipAtomic(target, from, true);
           }
           return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };
       });
       if (changes.changes.empty)
           return false;
       target.dispatch(state.update(changes, {
           scrollIntoView: true,
           userEvent: event,
           effects: event == "delete.selection" ? EditorView.announce.of(state.phrase("Selection deleted")) : undefined
       }));
       return true;
   }
   function skipAtomic(target, pos, forward) {
       if (target instanceof EditorView)
           for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))
               ranges.between(pos, pos, (from, to) => {
                   if (from < pos && to > pos)
                       pos = forward ? to : from;
               });
       return pos;
   }
   const deleteByChar = (target, forward) => deleteBy(target, pos => {
       let { state } = target, line = state.doc.lineAt(pos), before, targetPos;
       if (!forward && pos > line.from && pos < line.from + 200 &&
           !/[^ \t]/.test(before = line.text.slice(0, pos - line.from))) {
           if (before[before.length - 1] == "\t")
               return pos - 1;
           let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);
           for (let i = 0; i < drop && before[before.length - 1 - i] == " "; i++)
               pos--;
           targetPos = pos;
       }
       else {
           targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;
           if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))
               targetPos += forward ? 1 : -1;
       }
       return targetPos;
   });
   /**
   Delete the selection, or, for cursor selections, the character
   before the cursor.
   */
   const deleteCharBackward = view => deleteByChar(view, false);
   /**
   Delete the selection or the character after the cursor.
   */
   const deleteCharForward = view => deleteByChar(view, true);
   const deleteByGroup = (target, forward) => deleteBy(target, start => {
       let pos = start, { state } = target, line = state.doc.lineAt(pos);
       let categorize = state.charCategorizer(pos);
       for (let cat = null;;) {
           if (pos == (forward ? line.to : line.from)) {
               if (pos == start && line.number != (forward ? state.doc.lines : 1))
                   pos += forward ? 1 : -1;
               break;
           }
           let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;
           let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);
           let nextCat = categorize(nextChar);
           if (cat != null && nextCat != cat)
               break;
           if (nextChar != " " || pos != start)
               cat = nextCat;
           pos = next;
       }
       return pos;
   });
   /**
   Delete the selection or backward until the end of the next
   [group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of
   whitespace when they consist of a single space.
   */
   const deleteGroupBackward = target => deleteByGroup(target, false);
   /**
   Delete the selection or forward until the end of the next group.
   */
   const deleteGroupForward = target => deleteByGroup(target, true);
   /**
   Delete the selection, or, if it is a cursor selection, delete to
   the end of the line. If the cursor is directly at the end of the
   line, delete the line break after it.
   */
   const deleteToLineEnd = view => deleteBy(view, pos => {
       let lineEnd = view.lineBlockAt(pos).to;
       return pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1);
   });
   /**
   Delete the selection, or, if it is a cursor selection, delete to
   the start of the line. If the cursor is directly at the start of the
   line, delete the line break before it.
   */
   const deleteToLineStart = view => deleteBy(view, pos => {
       let lineStart = view.lineBlockAt(pos).from;
       return pos > lineStart ? lineStart : Math.max(0, pos - 1);
   });
   /**
   Replace each selection range with a line break, leaving the cursor
   on the line before the break.
   */
   const splitLine = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       let changes = state.changeByRange(range => {
           return { changes: { from: range.from, to: range.to, insert: Text.of(["", ""]) },
               range: EditorSelection.cursor(range.from) };
       });
       dispatch(state.update(changes, { scrollIntoView: true, userEvent: "input" }));
       return true;
   };
   /**
   Flip the characters before and after the cursor(s).
   */
   const transposeChars = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       let changes = state.changeByRange(range => {
           if (!range.empty || range.from == 0 || range.from == state.doc.length)
               return { range };
           let pos = range.from, line = state.doc.lineAt(pos);
           let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;
           let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;
           return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },
               range: EditorSelection.cursor(to) };
       });
       if (changes.changes.empty)
           return false;
       dispatch(state.update(changes, { scrollIntoView: true, userEvent: "move.character" }));
       return true;
   };
   function selectedLineBlocks(state) {
       let blocks = [], upto = -1;
       for (let range of state.selection.ranges) {
           let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);
           if (!range.empty && range.to == endLine.from)
               endLine = state.doc.lineAt(range.to - 1);
           if (upto >= startLine.number) {
               let prev = blocks[blocks.length - 1];
               prev.to = endLine.to;
               prev.ranges.push(range);
           }
           else {
               blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });
           }
           upto = endLine.number + 1;
       }
       return blocks;
   }
   function moveLine(state, dispatch, forward) {
       if (state.readOnly)
           return false;
       let changes = [], ranges = [];
       for (let block of selectedLineBlocks(state)) {
           if (forward ? block.to == state.doc.length : block.from == 0)
               continue;
           let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);
           let size = nextLine.length + 1;
           if (forward) {
               changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });
               for (let r of block.ranges)
                   ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));
           }
           else {
               changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });
               for (let r of block.ranges)
                   ranges.push(EditorSelection.range(r.anchor - size, r.head - size));
           }
       }
       if (!changes.length)
           return false;
       dispatch(state.update({
           changes,
           scrollIntoView: true,
           selection: EditorSelection.create(ranges, state.selection.mainIndex),
           userEvent: "move.line"
       }));
       return true;
   }
   /**
   Move the selected lines up one line.
   */
   const moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);
   /**
   Move the selected lines down one line.
   */
   const moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);
   function copyLine(state, dispatch, forward) {
       if (state.readOnly)
           return false;
       let changes = [];
       for (let block of selectedLineBlocks(state)) {
           if (forward)
               changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });
           else
               changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });
       }
       dispatch(state.update({ changes, scrollIntoView: true, userEvent: "input.copyline" }));
       return true;
   }
   /**
   Create a copy of the selected lines. Keep the selection in the top copy.
   */
   const copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);
   /**
   Create a copy of the selected lines. Keep the selection in the bottom copy.
   */
   const copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);
   /**
   Delete selected lines.
   */
   const deleteLine = view => {
       if (view.state.readOnly)
           return false;
       let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {
           if (from > 0)
               from--;
           else if (to < state.doc.length)
               to++;
           return { from, to };
       }));
       let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);
       view.dispatch({ changes, selection, scrollIntoView: true, userEvent: "delete.line" });
       return true;
   };
   function isBetweenBrackets(state, pos) {
       if (/\(\)|\[\]|\{\}/.test(state.sliceDoc(pos - 1, pos + 1)))
           return { from: pos, to: pos };
       let context = syntaxTree(state).resolveInner(pos);
       let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;
       if (before && after && before.to <= pos && after.from >= pos &&
           (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&
           state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)
           return { from: before.to, to: after.from };
       return null;
   }
   /**
   Replace the selection with a newline and indent the newly created
   line(s). If the current line consists only of whitespace, this
   will also delete that whitespace. When the cursor is between
   matching brackets, an additional newline will be inserted after
   the cursor.
   */
   const insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);
   /**
   Create a blank, indented line below the current line.
   */
   const insertBlankLine = /*@__PURE__*/newlineAndIndent(true);
   function newlineAndIndent(atEof) {
       return ({ state, dispatch }) => {
           if (state.readOnly)
               return false;
           let changes = state.changeByRange(range => {
               let { from, to } = range, line = state.doc.lineAt(from);
               let explode = !atEof && from == to && isBetweenBrackets(state, from);
               if (atEof)
                   from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;
               let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });
               let indent = getIndentation(cx, from);
               if (indent == null)
                   indent = /^\s*/.exec(state.doc.lineAt(from).text)[0].length;
               while (to < line.to && /\s/.test(line.text[to - line.from]))
                   to++;
               if (explode)
                   ({ from, to } = explode);
               else if (from > line.from && from < line.from + 100 && !/\S/.test(line.text.slice(0, from)))
                   from = line.from;
               let insert = ["", indentString(state, indent)];
               if (explode)
                   insert.push(indentString(state, cx.lineIndent(line.from, -1)));
               return { changes: { from, to, insert: Text.of(insert) },
                   range: EditorSelection.cursor(from + 1 + insert[1].length) };
           });
           dispatch(state.update(changes, { scrollIntoView: true, userEvent: "input" }));
           return true;
       };
   }
   function changeBySelectedLine(state, f) {
       let atLine = -1;
       return state.changeByRange(range => {
           let changes = [];
           for (let pos = range.from; pos <= range.to;) {
               let line = state.doc.lineAt(pos);
               if (line.number > atLine && (range.empty || range.to > line.from)) {
                   f(line, changes, range);
                   atLine = line.number;
               }
               pos = line.to + 1;
           }
           let changeSet = state.changes(changes);
           return { changes,
               range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };
       });
   }
   /**
   Auto-indent the selected lines. This uses the [indentation service
   facet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent
   information.
   */
   const indentSelection = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       let updated = Object.create(null);
       let context = new IndentContext(state, { overrideIndentation: start => {
               let found = updated[start];
               return found == null ? -1 : found;
           } });
       let changes = changeBySelectedLine(state, (line, changes, range) => {
           let indent = getIndentation(context, line.from);
           if (indent == null)
               return;
           if (!/\S/.test(line.text))
               indent = 0;
           let cur = /^\s*/.exec(line.text)[0];
           let norm = indentString(state, indent);
           if (cur != norm || range.from < line.from + cur.length) {
               updated[line.from] = indent;
               changes.push({ from: line.from, to: line.from + cur.length, insert: norm });
           }
       });
       if (!changes.changes.empty)
           dispatch(state.update(changes, { userEvent: "indent" }));
       return true;
   };
   /**
   Add a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected
   lines.
   */
   const indentMore = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       dispatch(state.update(changeBySelectedLine(state, (line, changes) => {
           changes.push({ from: line.from, insert: state.facet(indentUnit) });
       }), { userEvent: "input.indent" }));
       return true;
   };
   /**
   Remove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all
   selected lines.
   */
   const indentLess = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       dispatch(state.update(changeBySelectedLine(state, (line, changes) => {
           let space = /^\s*/.exec(line.text)[0];
           if (!space)
               return;
           let col = countColumn(space, state.tabSize), keep = 0;
           let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));
           while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))
               keep++;
           changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });
       }), { userEvent: "delete.dedent" }));
       return true;
   };
   /**
   Array of key bindings containing the Emacs-style bindings that are
   available on macOS by default.

    - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)
    - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)
    - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)
    - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)
    - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)
    - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)
    - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)
    - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)
    - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)
    - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)
    - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)
    - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)
    - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)
    - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)
   */
   const emacsStyleKeymap = [
       { key: "Ctrl-b", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },
       { key: "Ctrl-f", run: cursorCharRight, shift: selectCharRight },
       { key: "Ctrl-p", run: cursorLineUp, shift: selectLineUp },
       { key: "Ctrl-n", run: cursorLineDown, shift: selectLineDown },
       { key: "Ctrl-a", run: cursorLineStart, shift: selectLineStart },
       { key: "Ctrl-e", run: cursorLineEnd, shift: selectLineEnd },
       { key: "Ctrl-d", run: deleteCharForward },
       { key: "Ctrl-h", run: deleteCharBackward },
       { key: "Ctrl-k", run: deleteToLineEnd },
       { key: "Ctrl-Alt-h", run: deleteGroupBackward },
       { key: "Ctrl-o", run: splitLine },
       { key: "Ctrl-t", run: transposeChars },
       { key: "Ctrl-v", run: cursorPageDown },
   ];
   /**
   An array of key bindings closely sticking to platform-standard or
   widely used bindings. (This includes the bindings from
   [`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`
   property changed to `mac`.)

    - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)
    - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)
    - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)
    - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)
    - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)
    - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)
    - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)
    - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)
    - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)
    - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)
    - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)
    - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)
    - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)
    - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)
    - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)
    - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)
    - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)
    - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)
    - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)
    - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)
    - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)
    - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)
    - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)
    - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)
    - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).
    - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).
   */
   const standardKeymap = /*@__PURE__*/[
       { key: "ArrowLeft", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },
       { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },
       { mac: "Cmd-ArrowLeft", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },
       { key: "ArrowRight", run: cursorCharRight, shift: selectCharRight, preventDefault: true },
       { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },
       { mac: "Cmd-ArrowRight", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },
       { key: "ArrowUp", run: cursorLineUp, shift: selectLineUp, preventDefault: true },
       { mac: "Cmd-ArrowUp", run: cursorDocStart, shift: selectDocStart },
       { mac: "Ctrl-ArrowUp", run: cursorPageUp, shift: selectPageUp },
       { key: "ArrowDown", run: cursorLineDown, shift: selectLineDown, preventDefault: true },
       { mac: "Cmd-ArrowDown", run: cursorDocEnd, shift: selectDocEnd },
       { mac: "Ctrl-ArrowDown", run: cursorPageDown, shift: selectPageDown },
       { key: "PageUp", run: cursorPageUp, shift: selectPageUp },
       { key: "PageDown", run: cursorPageDown, shift: selectPageDown },
       { key: "Home", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },
       { key: "Mod-Home", run: cursorDocStart, shift: selectDocStart },
       { key: "End", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },
       { key: "Mod-End", run: cursorDocEnd, shift: selectDocEnd },
       { key: "Enter", run: insertNewlineAndIndent },
       { key: "Mod-a", run: selectAll },
       { key: "Backspace", run: deleteCharBackward, shift: deleteCharBackward },
       { key: "Delete", run: deleteCharForward },
       { key: "Mod-Backspace", mac: "Alt-Backspace", run: deleteGroupBackward },
       { key: "Mod-Delete", mac: "Alt-Delete", run: deleteGroupForward },
       { mac: "Mod-Backspace", run: deleteToLineStart },
       { mac: "Mod-Delete", run: deleteToLineEnd }
   ].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));
   /**
   The default keymap. Includes all bindings from
   [`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:

   - Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)
   - Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)
   - Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)
   - Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)
   - Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)
   - Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)
   - Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)
   - Ctrl-Enter (Comd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)
   - Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)
   - Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)
   - Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)
   - Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)
   - Ctrl-Alt-\\ (Cmd-Alt-\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)
   - Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)
   - Shift-Ctrl-\\ (Shift-Cmd-\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)
   - Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).
   - Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).
   */
   const defaultKeymap = /*@__PURE__*/[
       { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: cursorSyntaxLeft, shift: selectSyntaxLeft },
       { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: cursorSyntaxRight, shift: selectSyntaxRight },
       { key: "Alt-ArrowUp", run: moveLineUp },
       { key: "Shift-Alt-ArrowUp", run: copyLineUp },
       { key: "Alt-ArrowDown", run: moveLineDown },
       { key: "Shift-Alt-ArrowDown", run: copyLineDown },
       { key: "Escape", run: simplifySelection },
       { key: "Mod-Enter", run: insertBlankLine },
       { key: "Alt-l", mac: "Ctrl-l", run: selectLine },
       { key: "Mod-i", run: selectParentSyntax, preventDefault: true },
       { key: "Mod-[", run: indentLess },
       { key: "Mod-]", run: indentMore },
       { key: "Mod-Alt-\\", run: indentSelection },
       { key: "Shift-Mod-k", run: deleteLine },
       { key: "Shift-Mod-\\", run: cursorMatchingBracket },
       { key: "Mod-/", run: toggleComment },
       { key: "Alt-A", run: toggleBlockComment }
   ].concat(standardKeymap);

   function crelt() {
     var elt = arguments[0];
     if (typeof elt == "string") elt = document.createElement(elt);
     var i = 1, next = arguments[1];
     if (next && typeof next == "object" && next.nodeType == null && !Array.isArray(next)) {
       for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {
         var value = next[name];
         if (typeof value == "string") elt.setAttribute(name, value);
         else if (value != null) elt[name] = value;
       }
       i++;
     }
     for (; i < arguments.length; i++) add(elt, arguments[i]);
     return elt
   }

   function add(elt, child) {
     if (typeof child == "string") {
       elt.appendChild(document.createTextNode(child));
     } else if (child == null) ; else if (child.nodeType != null) {
       elt.appendChild(child);
     } else if (Array.isArray(child)) {
       for (var i = 0; i < child.length; i++) add(elt, child[i]);
     } else {
       throw new RangeError("Unsupported child node: " + child)
     }
   }

   const basicNormalize = typeof String.prototype.normalize == "function"
       ? x => x.normalize("NFKD") : x => x;
   /**
   A search cursor provides an iterator over text matches in a
   document.
   */
   class SearchCursor {
       /**
       Create a text cursor. The query is the search string, `from` to
       `to` provides the region to search.
       
       When `normalize` is given, it will be called, on both the query
       string and the content it is matched against, before comparing.
       You can, for example, create a case-insensitive search by
       passing `s => s.toLowerCase()`.
       
       Text is always normalized with
       [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
       (when supported).
       */
       constructor(text, query, from = 0, to = text.length, normalize, test) {
           this.test = test;
           /**
           The current match (only holds a meaningful value after
           [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when
           `done` is false).
           */
           this.value = { from: 0, to: 0 };
           /**
           Whether the end of the iterated region has been reached.
           */
           this.done = false;
           this.matches = [];
           this.buffer = "";
           this.bufferPos = 0;
           this.iter = text.iterRange(from, to);
           this.bufferStart = from;
           this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;
           this.query = this.normalize(query);
       }
       peek() {
           if (this.bufferPos == this.buffer.length) {
               this.bufferStart += this.buffer.length;
               this.iter.next();
               if (this.iter.done)
                   return -1;
               this.bufferPos = 0;
               this.buffer = this.iter.value;
           }
           return codePointAt(this.buffer, this.bufferPos);
       }
       /**
       Look for the next match. Updates the iterator's
       [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
       [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
       at least once before using the cursor.
       */
       next() {
           while (this.matches.length)
               this.matches.pop();
           return this.nextOverlapping();
       }
       /**
       The `next` method will ignore matches that partially overlap a
       previous match. This method behaves like `next`, but includes
       such matches.
       */
       nextOverlapping() {
           for (;;) {
               let next = this.peek();
               if (next < 0) {
                   this.done = true;
                   return this;
               }
               let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;
               this.bufferPos += codePointSize(next);
               let norm = this.normalize(str);
               for (let i = 0, pos = start;; i++) {
                   let code = norm.charCodeAt(i);
                   let match = this.match(code, pos);
                   if (match) {
                       this.value = match;
                       return this;
                   }
                   if (i == norm.length - 1)
                       break;
                   if (pos == start && i < str.length && str.charCodeAt(i) == code)
                       pos++;
               }
           }
       }
       match(code, pos) {
           let match = null;
           for (let i = 0; i < this.matches.length; i += 2) {
               let index = this.matches[i], keep = false;
               if (this.query.charCodeAt(index) == code) {
                   if (index == this.query.length - 1) {
                       match = { from: this.matches[i + 1], to: pos + 1 };
                   }
                   else {
                       this.matches[i]++;
                       keep = true;
                   }
               }
               if (!keep) {
                   this.matches.splice(i, 2);
                   i -= 2;
               }
           }
           if (this.query.charCodeAt(0) == code) {
               if (this.query.length == 1)
                   match = { from: pos, to: pos + 1 };
               else
                   this.matches.push(1, pos);
           }
           if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferPos))
               match = null;
           return match;
       }
   }
   if (typeof Symbol != "undefined")
       SearchCursor.prototype[Symbol.iterator] = function () { return this; };

   const empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec("") };
   const baseFlags = "gm" + (/x/.unicode == null ? "" : "u");
   /**
   This class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)
   but searches for a regular expression pattern instead of a plain
   string.
   */
   class RegExpCursor {
       /**
       Create a cursor that will search the given range in the given
       document. `query` should be the raw pattern (as you'd pass it to
       `new RegExp`).
       */
       constructor(text, query, options, from = 0, to = text.length) {
           this.text = text;
           this.to = to;
           this.curLine = "";
           /**
           Set to `true` when the cursor has reached the end of the search
           range.
           */
           this.done = false;
           /**
           Will contain an object with the extent of the match and the
           match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)
           sucessfully finds a match.
           */
           this.value = empty;
           if (/\\[sWDnr]|\n|\r|\[\^/.test(query))
               return new MultilineRegExpCursor(text, query, options, from, to);
           this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? "i" : ""));
           this.test = options === null || options === void 0 ? void 0 : options.test;
           this.iter = text.iter();
           let startLine = text.lineAt(from);
           this.curLineStart = startLine.from;
           this.matchPos = toCharEnd(text, from);
           this.getLine(this.curLineStart);
       }
       getLine(skip) {
           this.iter.next(skip);
           if (this.iter.lineBreak) {
               this.curLine = "";
           }
           else {
               this.curLine = this.iter.value;
               if (this.curLineStart + this.curLine.length > this.to)
                   this.curLine = this.curLine.slice(0, this.to - this.curLineStart);
               this.iter.next();
           }
       }
       nextLine() {
           this.curLineStart = this.curLineStart + this.curLine.length + 1;
           if (this.curLineStart > this.to)
               this.curLine = "";
           else
               this.getLine(0);
       }
       /**
       Move to the next match, if there is one.
       */
       next() {
           for (let off = this.matchPos - this.curLineStart;;) {
               this.re.lastIndex = off;
               let match = this.matchPos <= this.to && this.re.exec(this.curLine);
               if (match) {
                   let from = this.curLineStart + match.index, to = from + match[0].length;
                   this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));
                   if (from == this.curLine.length)
                       this.nextLine();
                   if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {
                       this.value = { from, to, match };
                       return this;
                   }
                   off = this.matchPos - this.curLineStart;
               }
               else if (this.curLineStart + this.curLine.length < this.to) {
                   this.nextLine();
                   off = 0;
               }
               else {
                   this.done = true;
                   return this;
               }
           }
       }
   }
   const flattened = /*@__PURE__*/new WeakMap();
   // Reusable (partially) flattened document strings
   class FlattenedDoc {
       constructor(from, text) {
           this.from = from;
           this.text = text;
       }
       get to() { return this.from + this.text.length; }
       static get(doc, from, to) {
           let cached = flattened.get(doc);
           if (!cached || cached.from >= to || cached.to <= from) {
               let flat = new FlattenedDoc(from, doc.sliceString(from, to));
               flattened.set(doc, flat);
               return flat;
           }
           if (cached.from == from && cached.to == to)
               return cached;
           let { text, from: cachedFrom } = cached;
           if (cachedFrom > from) {
               text = doc.sliceString(from, cachedFrom) + text;
               cachedFrom = from;
           }
           if (cached.to < to)
               text += doc.sliceString(cached.to, to);
           flattened.set(doc, new FlattenedDoc(cachedFrom, text));
           return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));
       }
   }
   class MultilineRegExpCursor {
       constructor(text, query, options, from, to) {
           this.text = text;
           this.to = to;
           this.done = false;
           this.value = empty;
           this.matchPos = toCharEnd(text, from);
           this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? "i" : ""));
           this.test = options === null || options === void 0 ? void 0 : options.test;
           this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));
       }
       chunkEnd(pos) {
           return pos >= this.to ? this.to : this.text.lineAt(pos).to;
       }
       next() {
           for (;;) {
               let off = this.re.lastIndex = this.matchPos - this.flat.from;
               let match = this.re.exec(this.flat.text);
               // Skip empty matches directly after the last match
               if (match && !match[0] && match.index == off) {
                   this.re.lastIndex = off + 1;
                   match = this.re.exec(this.flat.text);
               }
               if (match) {
                   let from = this.flat.from + match.index, to = from + match[0].length;
                   // If a match goes almost to the end of a noncomplete chunk, try
                   // again, since it'll likely be able to match more
                   if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&
                       (!this.test || this.test(from, to, match))) {
                       this.value = { from, to, match };
                       this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));
                       return this;
                   }
               }
               if (this.flat.to == this.to) {
                   this.done = true;
                   return this;
               }
               // Grow the flattened doc
               this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
           }
       }
   }
   if (typeof Symbol != "undefined") {
       RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =
           function () { return this; };
   }
   function validRegExp(source) {
       try {
           new RegExp(source, baseFlags);
           return true;
       }
       catch (_a) {
           return false;
       }
   }
   function toCharEnd(text, pos) {
       if (pos >= text.length)
           return pos;
       let line = text.lineAt(pos), next;
       while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)
           pos++;
       return pos;
   }

   function createLineDialog(view) {
       let input = crelt("input", { class: "cm-textfield", name: "line" });
       let dom = crelt("form", {
           class: "cm-gotoLine",
           onkeydown: (event) => {
               if (event.keyCode == 27) { // Escape
                   event.preventDefault();
                   view.dispatch({ effects: dialogEffect.of(false) });
                   view.focus();
               }
               else if (event.keyCode == 13) { // Enter
                   event.preventDefault();
                   go();
               }
           },
           onsubmit: (event) => {
               event.preventDefault();
               go();
           }
       }, crelt("label", view.state.phrase("Go to line"), ": ", input), " ", crelt("button", { class: "cm-button", type: "submit" }, view.state.phrase("go")));
       function go() {
           let match = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(input.value);
           if (!match)
               return;
           let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);
           let [, sign, ln, cl, percent] = match;
           let col = cl ? +cl.slice(1) : 0;
           let line = ln ? +ln : startLine.number;
           if (ln && percent) {
               let pc = line / 100;
               if (sign)
                   pc = pc * (sign == "-" ? -1 : 1) + (startLine.number / state.doc.lines);
               line = Math.round(state.doc.lines * pc);
           }
           else if (ln && sign) {
               line = line * (sign == "-" ? -1 : 1) + startLine.number;
           }
           let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));
           view.dispatch({
               effects: dialogEffect.of(false),
               selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),
               scrollIntoView: true
           });
           view.focus();
       }
       return { dom };
   }
   const dialogEffect = /*@__PURE__*/StateEffect.define();
   const dialogField = /*@__PURE__*/StateField.define({
       create() { return true; },
       update(value, tr) {
           for (let e of tr.effects)
               if (e.is(dialogEffect))
                   value = e.value;
           return value;
       },
       provide: f => showPanel.from(f, val => val ? createLineDialog : null)
   });
   /**
   Command that shows a dialog asking the user for a line number, and
   when a valid position is provided, moves the cursor to that line.

   Supports line numbers, relative line offsets prefixed with `+` or
   `-`, document percentages suffixed with `%`, and an optional
   column position by adding `:` and a second number after the line
   number.

   The dialog can be styled with the `panel.gotoLine` theme
   selector.
   */
   const gotoLine = view => {
       let panel = getPanel(view, createLineDialog);
       if (!panel) {
           let effects = [dialogEffect.of(true)];
           if (view.state.field(dialogField, false) == null)
               effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1$1]));
           view.dispatch({ effects });
           panel = getPanel(view, createLineDialog);
       }
       if (panel)
           panel.dom.querySelector("input").focus();
       return true;
   };
   const baseTheme$1$1 = /*@__PURE__*/EditorView.baseTheme({
       ".cm-panel.cm-gotoLine": {
           padding: "2px 6px 4px",
           "& label": { fontSize: "80%" }
       }
   });

   const defaultHighlightOptions = {
       highlightWordAroundCursor: false,
       minSelectionLength: 1,
       maxMatches: 100,
       wholeWords: false
   };
   const highlightConfig = /*@__PURE__*/Facet.define({
       combine(options) {
           return combineConfig(options, defaultHighlightOptions, {
               highlightWordAroundCursor: (a, b) => a || b,
               minSelectionLength: Math.min,
               maxMatches: Math.min
           });
       }
   });
   /**
   This extension highlights text that matches the selection. It uses
   the `"cm-selectionMatch"` class for the highlighting. When
   `highlightWordAroundCursor` is enabled, the word at the cursor
   itself will be highlighted with `"cm-selectionMatch-main"`.
   */
   function highlightSelectionMatches(options) {
       let ext = [defaultTheme, matchHighlighter];
       if (options)
           ext.push(highlightConfig.of(options));
       return ext;
   }
   const matchDeco = /*@__PURE__*/Decoration.mark({ class: "cm-selectionMatch" });
   const mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
   // Whether the characters directly outside the given positions are non-word characters
   function insideWordBoundaries(check, state, from, to) {
       return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&
           (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);
   }
   // Whether the characters directly at the given positions are word characters
   function insideWord(check, state, from, to) {
       return check(state.sliceDoc(from, from + 1)) == CharCategory.Word
           && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;
   }
   const matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.decorations = this.getDeco(view);
       }
       update(update) {
           if (update.selectionSet || update.docChanged || update.viewportChanged)
               this.decorations = this.getDeco(update.view);
       }
       getDeco(view) {
           let conf = view.state.facet(highlightConfig);
           let { state } = view, sel = state.selection;
           if (sel.ranges.length > 1)
               return Decoration.none;
           let range = sel.main, query, check = null;
           if (range.empty) {
               if (!conf.highlightWordAroundCursor)
                   return Decoration.none;
               let word = state.wordAt(range.head);
               if (!word)
                   return Decoration.none;
               check = state.charCategorizer(range.head);
               query = state.sliceDoc(word.from, word.to);
           }
           else {
               let len = range.to - range.from;
               if (len < conf.minSelectionLength || len > 200)
                   return Decoration.none;
               if (conf.wholeWords) {
                   query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?
                   check = state.charCategorizer(range.head);
                   if (!(insideWordBoundaries(check, state, range.from, range.to)
                       && insideWord(check, state, range.from, range.to)))
                       return Decoration.none;
               }
               else {
                   query = state.sliceDoc(range.from, range.to).trim();
                   if (!query)
                       return Decoration.none;
               }
           }
           let deco = [];
           for (let part of view.visibleRanges) {
               let cursor = new SearchCursor(state.doc, query, part.from, part.to);
               while (!cursor.next().done) {
                   let { from, to } = cursor.value;
                   if (!check || insideWordBoundaries(check, state, from, to)) {
                       if (range.empty && from <= range.from && to >= range.to)
                           deco.push(mainMatchDeco.range(from, to));
                       else if (from >= range.to || to <= range.from)
                           deco.push(matchDeco.range(from, to));
                       if (deco.length > conf.maxMatches)
                           return Decoration.none;
                   }
               }
           }
           return Decoration.set(deco);
       }
   }, {
       decorations: v => v.decorations
   });
   const defaultTheme = /*@__PURE__*/EditorView.baseTheme({
       ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
       ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
   });
   // Select the words around the cursors.
   const selectWord = ({ state, dispatch }) => {
       let { selection } = state;
       let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);
       if (newSel.eq(selection))
           return false;
       dispatch(state.update({ selection: newSel }));
       return true;
   };
   // Find next occurrence of query relative to last cursor. Wrap around
   // the document if there are no more matches.
   function findNextOccurrence(state, query) {
       let { main, ranges } = state.selection;
       let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;
       for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {
           cursor.next();
           if (cursor.done) {
               if (cycled)
                   return null;
               cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));
               cycled = true;
           }
           else {
               if (cycled && ranges.some(r => r.from == cursor.value.from))
                   continue;
               if (fullWord) {
                   let word = state.wordAt(cursor.value.from);
                   if (!word || word.from != cursor.value.from || word.to != cursor.value.to)
                       continue;
               }
               return cursor.value;
           }
       }
   }
   /**
   Select next occurrence of the current selection. Expand selection
   to the surrounding word when the selection is empty.
   */
   const selectNextOccurrence = ({ state, dispatch }) => {
       let { ranges } = state.selection;
       if (ranges.some(sel => sel.from === sel.to))
           return selectWord({ state, dispatch });
       let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);
       if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))
           return false;
       let range = findNextOccurrence(state, searchedText);
       if (!range)
           return false;
       dispatch(state.update({
           selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),
           effects: EditorView.scrollIntoView(range.to)
       }));
       return true;
   };

   const searchConfigFacet = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               top: false,
               caseSensitive: false,
               literal: false,
               wholeWord: false,
               createPanel: view => new SearchPanel(view)
           });
       }
   });
   /**
   A search query. Part of the editor's search state.
   */
   class SearchQuery {
       /**
       Create a query object.
       */
       constructor(config) {
           this.search = config.search;
           this.caseSensitive = !!config.caseSensitive;
           this.literal = !!config.literal;
           this.regexp = !!config.regexp;
           this.replace = config.replace || "";
           this.valid = !!this.search && (!this.regexp || validRegExp(this.search));
           this.unquoted = this.literal ? this.search : this.search.replace(/\\([nrt\\])/g, (_, ch) => ch == "n" ? "\n" : ch == "r" ? "\r" : ch == "t" ? "\t" : "\\");
           this.wholeWord = !!config.wholeWord;
       }
       /**
       Compare this query to another query.
       */
       eq(other) {
           return this.search == other.search && this.replace == other.replace &&
               this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&
               this.wholeWord == other.wholeWord;
       }
       /**
       @internal
       */
       create() {
           return this.regexp ? new RegExpQuery(this) : new StringQuery(this);
       }
       /**
       Get a search cursor for this query, searching through the given
       range in the given state.
       */
       getCursor(state, from = 0, to) {
           let st = state.doc ? state : EditorState.create({ doc: state });
           if (to == null)
               to = st.doc.length;
           return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);
       }
   }
   class QueryType {
       constructor(spec) {
           this.spec = spec;
       }
   }
   function stringCursor(spec, state, from, to) {
       return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);
   }
   function stringWordTest(doc, categorizer) {
       return (from, to, buf, bufPos) => {
           if (bufPos > from || bufPos + buf.length < to) {
               bufPos = Math.max(0, from - 2);
               buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));
           }
           return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||
               categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&
               (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||
                   categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);
       };
   }
   class StringQuery extends QueryType {
       constructor(spec) {
           super(spec);
       }
       nextMatch(state, curFrom, curTo) {
           let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();
           if (cursor.done)
               cursor = stringCursor(this.spec, state, 0, curFrom).nextOverlapping();
           return cursor.done ? null : cursor.value;
       }
       // Searching in reverse is, rather than implementing inverted search
       // cursor, done by scanning chunk after chunk forward.
       prevMatchInRange(state, from, to) {
           for (let pos = to;;) {
               let start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);
               let cursor = stringCursor(this.spec, state, start, pos), range = null;
               while (!cursor.nextOverlapping().done)
                   range = cursor.value;
               if (range)
                   return range;
               if (start == from)
                   return null;
               pos -= 10000 /* FindPrev.ChunkSize */;
           }
       }
       prevMatch(state, curFrom, curTo) {
           return this.prevMatchInRange(state, 0, curFrom) ||
               this.prevMatchInRange(state, curTo, state.doc.length);
       }
       getReplacement(_result) { return this.spec.replace; }
       matchAll(state, limit) {
           let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];
           while (!cursor.next().done) {
               if (ranges.length >= limit)
                   return null;
               ranges.push(cursor.value);
           }
           return ranges;
       }
       highlight(state, from, to, add) {
           let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));
           while (!cursor.next().done)
               add(cursor.value.from, cursor.value.to);
       }
   }
   function regexpCursor(spec, state, from, to) {
       return new RegExpCursor(state.doc, spec.search, {
           ignoreCase: !spec.caseSensitive,
           test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined
       }, from, to);
   }
   function charBefore(str, index) {
       return str.slice(findClusterBreak(str, index, false), index);
   }
   function charAfter(str, index) {
       return str.slice(index, findClusterBreak(str, index));
   }
   function regexpWordTest(categorizer) {
       return (_from, _to, match) => !match[0].length ||
           (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||
               categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&
               (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||
                   categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);
   }
   class RegExpQuery extends QueryType {
       nextMatch(state, curFrom, curTo) {
           let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();
           if (cursor.done)
               cursor = regexpCursor(this.spec, state, 0, curFrom).next();
           return cursor.done ? null : cursor.value;
       }
       prevMatchInRange(state, from, to) {
           for (let size = 1;; size++) {
               let start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);
               let cursor = regexpCursor(this.spec, state, start, to), range = null;
               while (!cursor.next().done)
                   range = cursor.value;
               if (range && (start == from || range.from > start + 10))
                   return range;
               if (start == from)
                   return null;
           }
       }
       prevMatch(state, curFrom, curTo) {
           return this.prevMatchInRange(state, 0, curFrom) ||
               this.prevMatchInRange(state, curTo, state.doc.length);
       }
       getReplacement(result) {
           return this.spec.replace.replace(/\$([$&\d+])/g, (m, i) => i == "$" ? "$"
               : i == "&" ? result.match[0]
                   : i != "0" && +i < result.match.length ? result.match[i]
                       : m);
       }
       matchAll(state, limit) {
           let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];
           while (!cursor.next().done) {
               if (ranges.length >= limit)
                   return null;
               ranges.push(cursor.value);
           }
           return ranges;
       }
       highlight(state, from, to, add) {
           let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));
           while (!cursor.next().done)
               add(cursor.value.from, cursor.value.to);
       }
   }
   /**
   A state effect that updates the current search query. Note that
   this only has an effect if the search state has been initialized
   (by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or
   by running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least
   once).
   */
   const setSearchQuery = /*@__PURE__*/StateEffect.define();
   const togglePanel$1 = /*@__PURE__*/StateEffect.define();
   const searchState = /*@__PURE__*/StateField.define({
       create(state) {
           return new SearchState(defaultQuery(state).create(), null);
       },
       update(value, tr) {
           for (let effect of tr.effects) {
               if (effect.is(setSearchQuery))
                   value = new SearchState(effect.value.create(), value.panel);
               else if (effect.is(togglePanel$1))
                   value = new SearchState(value.query, effect.value ? createSearchPanel : null);
           }
           return value;
       },
       provide: f => showPanel.from(f, val => val.panel)
   });
   class SearchState {
       constructor(query, panel) {
           this.query = query;
           this.panel = panel;
       }
   }
   const matchMark = /*@__PURE__*/Decoration.mark({ class: "cm-searchMatch" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: "cm-searchMatch cm-searchMatch-selected" });
   const searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.decorations = this.highlight(view.state.field(searchState));
       }
       update(update) {
           let state = update.state.field(searchState);
           if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)
               this.decorations = this.highlight(state);
       }
       highlight({ query, panel }) {
           if (!panel || !query.spec.valid)
               return Decoration.none;
           let { view } = this;
           let builder = new RangeSetBuilder();
           for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {
               let { from, to } = ranges[i];
               while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */)
                   to = ranges[++i].to;
               query.highlight(view.state, from, to, (from, to) => {
                   let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);
                   builder.add(from, to, selected ? selectedMatchMark : matchMark);
               });
           }
           return builder.finish();
       }
   }, {
       decorations: v => v.decorations
   });
   function searchCommand(f) {
       return view => {
           let state = view.state.field(searchState, false);
           return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);
       };
   }
   /**
   Open the search panel if it isn't already open, and move the
   selection to the first match after the current main selection.
   Will wrap around to the start of the document when it reaches the
   end.
   */
   const findNext = /*@__PURE__*/searchCommand((view, { query }) => {
       let { to } = view.state.selection.main;
       let next = query.nextMatch(view.state, to, to);
       if (!next)
           return false;
       view.dispatch({
           selection: { anchor: next.from, head: next.to },
           scrollIntoView: true,
           effects: announceMatch(view, next),
           userEvent: "select.search"
       });
       return true;
   });
   /**
   Move the selection to the previous instance of the search query,
   before the current main selection. Will wrap past the start
   of the document to start searching at the end again.
   */
   const findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {
       let { state } = view, { from } = state.selection.main;
       let range = query.prevMatch(state, from, from);
       if (!range)
           return false;
       view.dispatch({
           selection: { anchor: range.from, head: range.to },
           scrollIntoView: true,
           effects: announceMatch(view, range),
           userEvent: "select.search"
       });
       return true;
   });
   /**
   Select all instances of the search query.
   */
   const selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {
       let ranges = query.matchAll(view.state, 1000);
       if (!ranges || !ranges.length)
           return false;
       view.dispatch({
           selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),
           userEvent: "select.search.matches"
       });
       return true;
   });
   /**
   Select all instances of the currently selected text.
   */
   const selectSelectionMatches = ({ state, dispatch }) => {
       let sel = state.selection;
       if (sel.ranges.length > 1 || sel.main.empty)
           return false;
       let { from, to } = sel.main;
       let ranges = [], main = 0;
       for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {
           if (ranges.length > 1000)
               return false;
           if (cur.value.from == from)
               main = ranges.length;
           ranges.push(EditorSelection.range(cur.value.from, cur.value.to));
       }
       dispatch(state.update({
           selection: EditorSelection.create(ranges, main),
           userEvent: "select.search.matches"
       }));
       return true;
   };
   /**
   Replace the current match of the search query.
   */
   const replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {
       let { state } = view, { from, to } = state.selection.main;
       if (state.readOnly)
           return false;
       let next = query.nextMatch(state, from, from);
       if (!next)
           return false;
       let changes = [], selection, replacement;
       let announce = [];
       if (next.from == from && next.to == to) {
           replacement = state.toText(query.getReplacement(next));
           changes.push({ from: next.from, to: next.to, insert: replacement });
           next = query.nextMatch(state, next.from, next.to);
           announce.push(EditorView.announce.of(state.phrase("replaced match on line $", state.doc.lineAt(from).number) + "."));
       }
       if (next) {
           let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;
           selection = { anchor: next.from - off, head: next.to - off };
           announce.push(announceMatch(view, next));
       }
       view.dispatch({
           changes, selection,
           scrollIntoView: !!selection,
           effects: announce,
           userEvent: "input.replace"
       });
       return true;
   });
   /**
   Replace all instances of the search query with the given
   replacement.
   */
   const replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {
       if (view.state.readOnly)
           return false;
       let changes = query.matchAll(view.state, 1e9).map(match => {
           let { from, to } = match;
           return { from, to, insert: query.getReplacement(match) };
       });
       if (!changes.length)
           return false;
       let announceText = view.state.phrase("replaced $ matches", changes.length) + ".";
       view.dispatch({
           changes,
           effects: EditorView.announce.of(announceText),
           userEvent: "input.replace.all"
       });
       return true;
   });
   function createSearchPanel(view) {
       return view.state.facet(searchConfigFacet).createPanel(view);
   }
   function defaultQuery(state, fallback) {
       var _a, _b, _c, _d;
       let sel = state.selection.main;
       let selText = sel.empty || sel.to > sel.from + 100 ? "" : state.sliceDoc(sel.from, sel.to);
       if (fallback && !selText)
           return fallback;
       let config = state.facet(searchConfigFacet);
       return new SearchQuery({
           search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\n/g, "\\n"),
           caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,
           literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,
           wholeWord: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _d !== void 0 ? _d : config.wholeWord
       });
   }
   /**
   Make sure the search panel is open and focused.
   */
   const openSearchPanel = view => {
       let state = view.state.field(searchState, false);
       if (state && state.panel) {
           let panel = getPanel(view, createSearchPanel);
           if (!panel)
               return false;
           let searchInput = panel.dom.querySelector("[main-field]");
           if (searchInput && searchInput != view.root.activeElement) {
               let query = defaultQuery(view.state, state.query.spec);
               if (query.valid)
                   view.dispatch({ effects: setSearchQuery.of(query) });
               searchInput.focus();
               searchInput.select();
           }
       }
       else {
           view.dispatch({ effects: [
                   togglePanel$1.of(true),
                   state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)
               ] });
       }
       return true;
   };
   /**
   Close the search panel.
   */
   const closeSearchPanel = view => {
       let state = view.state.field(searchState, false);
       if (!state || !state.panel)
           return false;
       let panel = getPanel(view, createSearchPanel);
       if (panel && panel.dom.contains(view.root.activeElement))
           view.focus();
       view.dispatch({ effects: togglePanel$1.of(false) });
       return true;
   };
   /**
   Default search-related key bindings.

    - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)
    - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)
    - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)
    - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)
    - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)
   */
   const searchKeymap = [
       { key: "Mod-f", run: openSearchPanel, scope: "editor search-panel" },
       { key: "F3", run: findNext, shift: findPrevious, scope: "editor search-panel", preventDefault: true },
       { key: "Mod-g", run: findNext, shift: findPrevious, scope: "editor search-panel", preventDefault: true },
       { key: "Escape", run: closeSearchPanel, scope: "editor search-panel" },
       { key: "Mod-Shift-l", run: selectSelectionMatches },
       { key: "Alt-g", run: gotoLine },
       { key: "Mod-d", run: selectNextOccurrence, preventDefault: true },
   ];
   class SearchPanel {
       constructor(view) {
           this.view = view;
           let query = this.query = view.state.field(searchState).query.spec;
           this.commit = this.commit.bind(this);
           this.searchField = crelt("input", {
               value: query.search,
               placeholder: phrase(view, "Find"),
               "aria-label": phrase(view, "Find"),
               class: "cm-textfield",
               name: "search",
               "main-field": "true",
               onchange: this.commit,
               onkeyup: this.commit
           });
           this.replaceField = crelt("input", {
               value: query.replace,
               placeholder: phrase(view, "Replace"),
               "aria-label": phrase(view, "Replace"),
               class: "cm-textfield",
               name: "replace",
               onchange: this.commit,
               onkeyup: this.commit
           });
           this.caseField = crelt("input", {
               type: "checkbox",
               name: "case",
               checked: query.caseSensitive,
               onchange: this.commit
           });
           this.reField = crelt("input", {
               type: "checkbox",
               name: "re",
               checked: query.regexp,
               onchange: this.commit
           });
           this.wordField = crelt("input", {
               type: "checkbox",
               name: "word",
               checked: query.wholeWord,
               onchange: this.commit
           });
           function button(name, onclick, content) {
               return crelt("button", { class: "cm-button", name, onclick, type: "button" }, content);
           }
           this.dom = crelt("div", { onkeydown: (e) => this.keydown(e), class: "cm-search" }, [
               this.searchField,
               button("next", () => findNext(view), [phrase(view, "next")]),
               button("prev", () => findPrevious(view), [phrase(view, "previous")]),
               button("select", () => selectMatches(view), [phrase(view, "all")]),
               crelt("label", null, [this.caseField, phrase(view, "match case")]),
               crelt("label", null, [this.reField, phrase(view, "regexp")]),
               crelt("label", null, [this.wordField, phrase(view, "by word")]),
               ...view.state.readOnly ? [] : [
                   crelt("br"),
                   this.replaceField,
                   button("replace", () => replaceNext(view), [phrase(view, "replace")]),
                   button("replaceAll", () => replaceAll(view), [phrase(view, "replace all")]),
                   crelt("button", {
                       name: "close",
                       onclick: () => closeSearchPanel(view),
                       "aria-label": phrase(view, "close"),
                       type: "button"
                   }, ["×"])
               ]
           ]);
       }
       commit() {
           let query = new SearchQuery({
               search: this.searchField.value,
               caseSensitive: this.caseField.checked,
               regexp: this.reField.checked,
               wholeWord: this.wordField.checked,
               replace: this.replaceField.value,
           });
           if (!query.eq(this.query)) {
               this.query = query;
               this.view.dispatch({ effects: setSearchQuery.of(query) });
           }
       }
       keydown(e) {
           if (runScopeHandlers(this.view, e, "search-panel")) {
               e.preventDefault();
           }
           else if (e.keyCode == 13 && e.target == this.searchField) {
               e.preventDefault();
               (e.shiftKey ? findPrevious : findNext)(this.view);
           }
           else if (e.keyCode == 13 && e.target == this.replaceField) {
               e.preventDefault();
               replaceNext(this.view);
           }
       }
       update(update) {
           for (let tr of update.transactions)
               for (let effect of tr.effects) {
                   if (effect.is(setSearchQuery) && !effect.value.eq(this.query))
                       this.setQuery(effect.value);
               }
       }
       setQuery(query) {
           this.query = query;
           this.searchField.value = query.search;
           this.replaceField.value = query.replace;
           this.caseField.checked = query.caseSensitive;
           this.reField.checked = query.regexp;
           this.wordField.checked = query.wholeWord;
       }
       mount() {
           this.searchField.select();
       }
       get pos() { return 80; }
       get top() { return this.view.state.facet(searchConfigFacet).top; }
   }
   function phrase(view, phrase) { return view.state.phrase(phrase); }
   const AnnounceMargin = 30;
   const Break = /[\s\.,:;?!]/;
   function announceMatch(view, { from, to }) {
       let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;
       let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);
       let text = view.state.sliceDoc(start, end);
       if (start != line.from) {
           for (let i = 0; i < AnnounceMargin; i++)
               if (!Break.test(text[i + 1]) && Break.test(text[i])) {
                   text = text.slice(i);
                   break;
               }
       }
       if (end != lineEnd) {
           for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)
               if (!Break.test(text[i - 1]) && Break.test(text[i])) {
                   text = text.slice(0, i);
                   break;
               }
       }
       return EditorView.announce.of(`${view.state.phrase("current match")}. ${text} ${view.state.phrase("on line")} ${line.number}.`);
   }
   const baseTheme$2 = /*@__PURE__*/EditorView.baseTheme({
       ".cm-panel.cm-search": {
           padding: "2px 6px 4px",
           position: "relative",
           "& [name=close]": {
               position: "absolute",
               top: "0",
               right: "4px",
               backgroundColor: "inherit",
               border: "none",
               font: "inherit",
               padding: 0,
               margin: 0
           },
           "& input, & button, & label": {
               margin: ".2em .6em .2em 0"
           },
           "& input[type=checkbox]": {
               marginRight: ".2em"
           },
           "& label": {
               fontSize: "80%",
               whiteSpace: "pre"
           }
       },
       "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
       "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
       "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
       "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
   });
   const searchExtensions = [
       searchState,
       /*@__PURE__*/Prec.lowest(searchHighlighter),
       baseTheme$2
   ];

   /**
   An instance of this is passed to completion source functions.
   */
   class CompletionContext {
       /**
       Create a new completion context. (Mostly useful for testing
       completion sources—in the editor, the extension will create
       these for you.)
       */
       constructor(
       /**
       The editor state that the completion happens in.
       */
       state, 
       /**
       The position at which the completion is happening.
       */
       pos, 
       /**
       Indicates whether completion was activated explicitly, or
       implicitly by typing. The usual way to respond to this is to
       only return completions when either there is part of a
       completable entity before the cursor, or `explicit` is true.
       */
       explicit) {
           this.state = state;
           this.pos = pos;
           this.explicit = explicit;
           /**
           @internal
           */
           this.abortListeners = [];
       }
       /**
       Get the extent, content, and (if there is a token) type of the
       token before `this.pos`.
       */
       tokenBefore(types) {
           let token = syntaxTree(this.state).resolveInner(this.pos, -1);
           while (token && types.indexOf(token.name) < 0)
               token = token.parent;
           return token ? { from: token.from, to: this.pos,
               text: this.state.sliceDoc(token.from, this.pos),
               type: token.type } : null;
       }
       /**
       Get the match of the given expression directly before the
       cursor.
       */
       matchBefore(expr) {
           let line = this.state.doc.lineAt(this.pos);
           let start = Math.max(line.from, this.pos - 250);
           let str = line.text.slice(start - line.from, this.pos - line.from);
           let found = str.search(ensureAnchor(expr, false));
           return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };
       }
       /**
       Yields true when the query has been aborted. Can be useful in
       asynchronous queries to avoid doing work that will be ignored.
       */
       get aborted() { return this.abortListeners == null; }
       /**
       Allows you to register abort handlers, which will be called when
       the query is
       [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
       */
       addEventListener(type, listener) {
           if (type == "abort" && this.abortListeners)
               this.abortListeners.push(listener);
       }
   }
   function toSet(chars) {
       let flat = Object.keys(chars).join("");
       let words = /\w/.test(flat);
       if (words)
           flat = flat.replace(/\w/g, "");
       return `[${words ? "\\w" : ""}${flat.replace(/[^\w\s]/g, "\\$&")}]`;
   }
   function prefixMatch(options) {
       let first = Object.create(null), rest = Object.create(null);
       for (let { label } of options) {
           first[label[0]] = true;
           for (let i = 1; i < label.length; i++)
               rest[label[i]] = true;
       }
       let source = toSet(first) + toSet(rest) + "*$";
       return [new RegExp("^" + source), new RegExp(source)];
   }
   /**
   Given a a fixed array of options, return an autocompleter that
   completes them.
   */
   function completeFromList(list) {
       let options = list.map(o => typeof o == "string" ? { label: o } : o);
       let [validFor, match] = options.every(o => /^\w+$/.test(o.label)) ? [/\w*$/, /\w+$/] : prefixMatch(options);
       return (context) => {
           let token = context.matchBefore(match);
           return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;
       };
   }
   /**
   Wrap the given completion source so that it will not fire when the
   cursor is in a syntax node with one of the given names.
   */
   function ifNotIn(nodes, source) {
       return (context) => {
           for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent)
               if (nodes.indexOf(pos.name) > -1)
                   return null;
           return source(context);
       };
   }
   class Option {
       constructor(completion, source, match) {
           this.completion = completion;
           this.source = source;
           this.match = match;
       }
   }
   function cur(state) { return state.selection.main.head; }
   // Make sure the given regexp has a $ at its end and, if `start` is
   // true, a ^ at its start.
   function ensureAnchor(expr, start) {
       var _a;
       let { source } = expr;
       let addStart = start && source[0] != "^", addEnd = source[source.length - 1] != "$";
       if (!addStart && !addEnd)
           return expr;
       return new RegExp(`${addStart ? "^" : ""}(?:${source})${addEnd ? "$" : ""}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? "i" : ""));
   }
   /**
   Helper function that returns a transaction spec which inserts a
   completion's text in the main selection range, and any other
   selection range that has the same text in front of it.
   */
   function insertCompletionText(state, text, from, to) {
       return Object.assign(Object.assign({}, state.changeByRange(range => {
           if (range == state.selection.main)
               return {
                   changes: { from: from, to: to, insert: text },
                   range: EditorSelection.cursor(from + text.length)
               };
           let len = to - from;
           if (!range.empty ||
               len && state.sliceDoc(range.from - len, range.from) != state.sliceDoc(from, to))
               return { range };
           return {
               changes: { from: range.from - len, to: range.from, insert: text },
               range: EditorSelection.cursor(range.from - len + text.length)
           };
       })), { userEvent: "input.complete" });
   }
   function applyCompletion(view, option) {
       const apply = option.completion.apply || option.completion.label;
       let result = option.source;
       if (typeof apply == "string")
           view.dispatch(insertCompletionText(view.state, apply, result.from, result.to));
       else
           apply(view, option.completion, result.from, result.to);
   }
   const SourceCache = /*@__PURE__*/new WeakMap();
   function asSource(source) {
       if (!Array.isArray(source))
           return source;
       let known = SourceCache.get(source);
       if (!known)
           SourceCache.set(source, known = completeFromList(source));
       return known;
   }

   // A pattern matcher for fuzzy completion matching. Create an instance
   // once for a pattern, and then use that to match any number of
   // completions.
   class FuzzyMatcher {
       constructor(pattern) {
           this.pattern = pattern;
           this.chars = [];
           this.folded = [];
           // Buffers reused by calls to `match` to track matched character
           // positions.
           this.any = [];
           this.precise = [];
           this.byWord = [];
           for (let p = 0; p < pattern.length;) {
               let char = codePointAt(pattern, p), size = codePointSize(char);
               this.chars.push(char);
               let part = pattern.slice(p, p + size), upper = part.toUpperCase();
               this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));
               p += size;
           }
           this.astral = pattern.length != this.chars.length;
       }
       // Matches a given word (completion) against the pattern (input).
       // Will return null for no match, and otherwise an array that starts
       // with the match score, followed by any number of `from, to` pairs
       // indicating the matched parts of `word`.
       //
       // The score is a number that is more negative the worse the match
       // is. See `Penalty` above.
       match(word) {
           if (this.pattern.length == 0)
               return [0];
           if (word.length < this.pattern.length)
               return null;
           let { chars, folded, any, precise, byWord } = this;
           // For single-character queries, only match when they occur right
           // at the start
           if (chars.length == 1) {
               let first = codePointAt(word, 0);
               return first == chars[0] ? [0, 0, codePointSize(first)]
                   : first == folded[0] ? [-200 /* Penalty.CaseFold */, 0, codePointSize(first)] : null;
           }
           let direct = word.indexOf(this.pattern);
           if (direct == 0)
               return [0, 0, this.pattern.length];
           let len = chars.length, anyTo = 0;
           if (direct < 0) {
               for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {
                   let next = codePointAt(word, i);
                   if (next == chars[anyTo] || next == folded[anyTo])
                       any[anyTo++] = i;
                   i += codePointSize(next);
               }
               // No match, exit immediately
               if (anyTo < len)
                   return null;
           }
           // This tracks the extent of the precise (non-folded, not
           // necessarily adjacent) match
           let preciseTo = 0;
           // Tracks whether there is a match that hits only characters that
           // appear to be starting words. `byWordFolded` is set to true when
           // a case folded character is encountered in such a match
           let byWordTo = 0, byWordFolded = false;
           // If we've found a partial adjacent match, these track its state
           let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;
           let hasLower = /[a-z]/.test(word), wordAdjacent = true;
           // Go over the option's text, scanning for the various kinds of matches
           for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {
               let next = codePointAt(word, i);
               if (direct < 0) {
                   if (preciseTo < len && next == chars[preciseTo])
                       precise[preciseTo++] = i;
                   if (adjacentTo < len) {
                       if (next == chars[adjacentTo] || next == folded[adjacentTo]) {
                           if (adjacentTo == 0)
                               adjacentStart = i;
                           adjacentEnd = i + 1;
                           adjacentTo++;
                       }
                       else {
                           adjacentTo = 0;
                       }
                   }
               }
               let ch, type = next < 0xff
                   ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)
                   : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);
               if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {
                   if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))
                       byWord[byWordTo++] = i;
                   else if (byWord.length)
                       wordAdjacent = false;
               }
               prevType = type;
               i += codePointSize(next);
           }
           if (byWordTo == len && byWord[0] == 0 && wordAdjacent)
               return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);
           if (adjacentTo == len && adjacentStart == 0)
               return [-200 /* Penalty.CaseFold */ - word.length, 0, adjacentEnd];
           if (direct > -1)
               return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];
           if (adjacentTo == len)
               return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];
           if (byWordTo == len)
               return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +
                   (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);
           return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);
       }
       result(score, positions, word) {
           let result = [score - word.length], i = 1;
           for (let pos of positions) {
               let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);
               if (i > 1 && result[i - 1] == pos)
                   result[i - 1] = to;
               else {
                   result[i++] = pos;
                   result[i++] = to;
               }
           }
           return result;
       }
   }

   const completionConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               activateOnTyping: true,
               selectOnOpen: true,
               override: null,
               closeOnBlur: true,
               maxRenderedOptions: 100,
               defaultKeymap: true,
               optionClass: () => "",
               aboveCursor: false,
               icons: true,
               addToOptions: [],
               compareCompletions: (a, b) => a.label.localeCompare(b.label),
               interactionDelay: 75
           }, {
               defaultKeymap: (a, b) => a && b,
               closeOnBlur: (a, b) => a && b,
               icons: (a, b) => a && b,
               optionClass: (a, b) => c => joinClass(a(c), b(c)),
               addToOptions: (a, b) => a.concat(b)
           });
       }
   });
   function joinClass(a, b) {
       return a ? b ? a + " " + b : a : b;
   }

   function optionContent(config) {
       let content = config.addToOptions.slice();
       if (config.icons)
           content.push({
               render(completion) {
                   let icon = document.createElement("div");
                   icon.classList.add("cm-completionIcon");
                   if (completion.type)
                       icon.classList.add(...completion.type.split(/\s+/g).map(cls => "cm-completionIcon-" + cls));
                   icon.setAttribute("aria-hidden", "true");
                   return icon;
               },
               position: 20
           });
       content.push({
           render(completion, _s, match) {
               let labelElt = document.createElement("span");
               labelElt.className = "cm-completionLabel";
               let { label } = completion, off = 0;
               for (let j = 1; j < match.length;) {
                   let from = match[j++], to = match[j++];
                   if (from > off)
                       labelElt.appendChild(document.createTextNode(label.slice(off, from)));
                   let span = labelElt.appendChild(document.createElement("span"));
                   span.appendChild(document.createTextNode(label.slice(from, to)));
                   span.className = "cm-completionMatchedText";
                   off = to;
               }
               if (off < label.length)
                   labelElt.appendChild(document.createTextNode(label.slice(off)));
               return labelElt;
           },
           position: 50
       }, {
           render(completion) {
               if (!completion.detail)
                   return null;
               let detailElt = document.createElement("span");
               detailElt.className = "cm-completionDetail";
               detailElt.textContent = completion.detail;
               return detailElt;
           },
           position: 80
       });
       return content.sort((a, b) => a.position - b.position).map(a => a.render);
   }
   function rangeAroundSelected(total, selected, max) {
       if (total <= max)
           return { from: 0, to: total };
       if (selected < 0)
           selected = 0;
       if (selected <= (total >> 1)) {
           let off = Math.floor(selected / max);
           return { from: off * max, to: (off + 1) * max };
       }
       let off = Math.floor((total - selected) / max);
       return { from: total - (off + 1) * max, to: total - off * max };
   }
   class CompletionTooltip {
       constructor(view, stateField) {
           this.view = view;
           this.stateField = stateField;
           this.info = null;
           this.placeInfo = {
               read: () => this.measureInfo(),
               write: (pos) => this.positionInfo(pos),
               key: this
           };
           let cState = view.state.field(stateField);
           let { options, selected } = cState.open;
           let config = view.state.facet(completionConfig);
           this.optionContent = optionContent(config);
           this.optionClass = config.optionClass;
           this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);
           this.dom = document.createElement("div");
           this.dom.className = "cm-tooltip-autocomplete";
           this.dom.addEventListener("mousedown", (e) => {
               for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {
                   if (dom.nodeName == "LI" && (match = /-(\d+)$/.exec(dom.id)) && +match[1] < options.length) {
                       applyCompletion(view, options[+match[1]]);
                       e.preventDefault();
                       return;
                   }
               }
           });
           this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));
           this.list.addEventListener("scroll", () => {
               if (this.info)
                   this.view.requestMeasure(this.placeInfo);
           });
       }
       mount() { this.updateSel(); }
       update(update) {
           if (update.state.field(this.stateField) != update.startState.field(this.stateField))
               this.updateSel();
       }
       positioned() {
           if (this.info)
               this.view.requestMeasure(this.placeInfo);
       }
       updateSel() {
           let cState = this.view.state.field(this.stateField), open = cState.open;
           if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {
               this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);
               this.list.remove();
               this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));
               this.list.addEventListener("scroll", () => {
                   if (this.info)
                       this.view.requestMeasure(this.placeInfo);
               });
           }
           if (this.updateSelectedOption(open.selected)) {
               if (this.info) {
                   this.info.remove();
                   this.info = null;
               }
               let { completion } = open.options[open.selected];
               let { info } = completion;
               if (!info)
                   return;
               let infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);
               if (!infoResult)
                   return;
               if ('then' in infoResult) {
                   infoResult.then(node => {
                       if (node && this.view.state.field(this.stateField, false) == cState)
                           this.addInfoPane(node);
                   }).catch(e => logException(this.view.state, e, "completion info"));
               }
               else {
                   this.addInfoPane(infoResult);
               }
           }
       }
       addInfoPane(content) {
           let dom = this.info = document.createElement("div");
           dom.className = "cm-tooltip cm-completionInfo";
           dom.appendChild(content);
           this.dom.appendChild(dom);
           this.view.requestMeasure(this.placeInfo);
       }
       updateSelectedOption(selected) {
           let set = null;
           for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {
               if (i == selected) {
                   if (!opt.hasAttribute("aria-selected")) {
                       opt.setAttribute("aria-selected", "true");
                       set = opt;
                   }
               }
               else {
                   if (opt.hasAttribute("aria-selected"))
                       opt.removeAttribute("aria-selected");
               }
           }
           if (set)
               scrollIntoView(this.list, set);
           return set;
       }
       measureInfo() {
           let sel = this.dom.querySelector("[aria-selected]");
           if (!sel || !this.info)
               return null;
           let win = this.dom.ownerDocument.defaultView || window;
           let listRect = this.dom.getBoundingClientRect();
           let infoRect = this.info.getBoundingClientRect();
           let selRect = sel.getBoundingClientRect();
           if (selRect.top > Math.min(win.innerHeight, listRect.bottom) - 10 || selRect.bottom < Math.max(0, listRect.top) + 10)
               return null;
           let rtl = this.view.textDirection == Direction.RTL, left = rtl, narrow = false, maxWidth;
           let top = "", bottom = "";
           let spaceLeft = listRect.left, spaceRight = win.innerWidth - listRect.right;
           if (left && spaceLeft < Math.min(infoRect.width, spaceRight))
               left = false;
           else if (!left && spaceRight < Math.min(infoRect.width, spaceLeft))
               left = true;
           if (infoRect.width <= (left ? spaceLeft : spaceRight)) {
               top = (Math.max(0, Math.min(selRect.top, win.innerHeight - infoRect.height)) - listRect.top) + "px";
               maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight) + "px";
           }
           else {
               narrow = true;
               maxWidth = Math.min(400 /* Info.Width */, (rtl ? listRect.right : win.innerWidth - listRect.left) - 30 /* Info.Margin */) + "px";
               let spaceBelow = win.innerHeight - listRect.bottom;
               if (spaceBelow >= infoRect.height || spaceBelow > listRect.top) // Below the completion
                   top = (selRect.bottom - listRect.top) + "px";
               else // Above it
                   bottom = (listRect.bottom - selRect.top) + "px";
           }
           return {
               top, bottom, maxWidth,
               class: narrow ? (rtl ? "left-narrow" : "right-narrow") : left ? "left" : "right",
           };
       }
       positionInfo(pos) {
           if (this.info) {
               if (pos) {
                   this.info.style.top = pos.top;
                   this.info.style.bottom = pos.bottom;
                   this.info.style.maxWidth = pos.maxWidth;
                   this.info.className = "cm-tooltip cm-completionInfo cm-completionInfo-" + pos.class;
               }
               else {
                   this.info.style.top = "-1e6px";
               }
           }
       }
       createListBox(options, id, range) {
           const ul = document.createElement("ul");
           ul.id = id;
           ul.setAttribute("role", "listbox");
           ul.setAttribute("aria-expanded", "true");
           ul.setAttribute("aria-label", this.view.state.phrase("Completions"));
           for (let i = range.from; i < range.to; i++) {
               let { completion, match } = options[i];
               const li = ul.appendChild(document.createElement("li"));
               li.id = id + "-" + i;
               li.setAttribute("role", "option");
               let cls = this.optionClass(completion);
               if (cls)
                   li.className = cls;
               for (let source of this.optionContent) {
                   let node = source(completion, this.view.state, match);
                   if (node)
                       li.appendChild(node);
               }
           }
           if (range.from)
               ul.classList.add("cm-completionListIncompleteTop");
           if (range.to < options.length)
               ul.classList.add("cm-completionListIncompleteBottom");
           return ul;
       }
   }
   // We allocate a new function instance every time the completion
   // changes to force redrawing/repositioning of the tooltip
   function completionTooltip(stateField) {
       return (view) => new CompletionTooltip(view, stateField);
   }
   function scrollIntoView(container, element) {
       let parent = container.getBoundingClientRect();
       let self = element.getBoundingClientRect();
       if (self.top < parent.top)
           container.scrollTop -= parent.top - self.top;
       else if (self.bottom > parent.bottom)
           container.scrollTop += self.bottom - parent.bottom;
   }

   // Used to pick a preferred option when two options with the same
   // label occur in the result.
   function score(option) {
       return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +
           (option.type ? 1 : 0);
   }
   function sortOptions(active, state) {
       let options = [], i = 0;
       for (let a of active)
           if (a.hasResult()) {
               if (a.result.filter === false) {
                   let getMatch = a.result.getMatch;
                   for (let option of a.result.options) {
                       let match = [1e9 - i++];
                       if (getMatch)
                           for (let n of getMatch(option))
                               match.push(n);
                       options.push(new Option(option, a, match));
                   }
               }
               else {
                   let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;
                   for (let option of a.result.options)
                       if (match = matcher.match(option.label)) {
                           if (option.boost != null)
                               match[0] += option.boost;
                           options.push(new Option(option, a, match));
                       }
               }
           }
       let result = [], prev = null;
       let compare = state.facet(completionConfig).compareCompletions;
       for (let opt of options.sort((a, b) => (b.match[0] - a.match[0]) || compare(a.completion, b.completion))) {
           if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||
               (prev.type != null && opt.completion.type != null && prev.type != opt.completion.type) ||
               prev.apply != opt.completion.apply)
               result.push(opt);
           else if (score(opt.completion) > score(prev))
               result[result.length - 1] = opt;
           prev = opt.completion;
       }
       return result;
   }
   class CompletionDialog {
       constructor(options, attrs, tooltip, timestamp, selected) {
           this.options = options;
           this.attrs = attrs;
           this.tooltip = tooltip;
           this.timestamp = timestamp;
           this.selected = selected;
       }
       setSelected(selected, id) {
           return selected == this.selected || selected >= this.options.length ? this
               : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);
       }
       static build(active, state, id, prev, conf) {
           let options = sortOptions(active, state);
           if (!options.length)
               return null;
           let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;
           if (prev && prev.selected != selected && prev.selected != -1) {
               let selectedValue = prev.options[prev.selected].completion;
               for (let i = 0; i < options.length; i++)
                   if (options[i].completion == selectedValue) {
                       selected = i;
                       break;
                   }
           }
           return new CompletionDialog(options, makeAttrs(id, selected), {
               pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),
               create: completionTooltip(completionState),
               above: conf.aboveCursor,
           }, prev ? prev.timestamp : Date.now(), selected);
       }
       map(changes) {
           return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected);
       }
   }
   class CompletionState {
       constructor(active, id, open) {
           this.active = active;
           this.id = id;
           this.open = open;
       }
       static start() {
           return new CompletionState(none, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
       }
       update(tr) {
           let { state } = tr, conf = state.facet(completionConfig);
           let sources = conf.override ||
               state.languageDataAt("autocomplete", cur(state)).map(asSource);
           let active = sources.map(source => {
               let value = this.active.find(s => s.source == source) ||
                   new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);
               return value.update(tr, conf);
           });
           if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))
               active = this.active;
           let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||
               !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open, conf)
               : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;
           if (!open && active.every(a => a.state != 1 /* State.Pending */) && active.some(a => a.hasResult()))
               active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);
           for (let effect of tr.effects)
               if (effect.is(setSelectedEffect))
                   open = open && open.setSelected(effect.value, this.id);
           return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);
       }
       get tooltip() { return this.open ? this.open.tooltip : null; }
       get attrs() { return this.open ? this.open.attrs : baseAttrs; }
   }
   function sameResults(a, b) {
       if (a == b)
           return true;
       for (let iA = 0, iB = 0;;) {
           while (iA < a.length && !a[iA].hasResult)
               iA++;
           while (iB < b.length && !b[iB].hasResult)
               iB++;
           let endA = iA == a.length, endB = iB == b.length;
           if (endA || endB)
               return endA == endB;
           if (a[iA++].result != b[iB++].result)
               return false;
       }
   }
   const baseAttrs = {
       "aria-autocomplete": "list"
   };
   function makeAttrs(id, selected) {
       let result = {
           "aria-autocomplete": "list",
           "aria-haspopup": "listbox",
           "aria-controls": id
       };
       if (selected > -1)
           result["aria-activedescendant"] = id + "-" + selected;
       return result;
   }
   const none = [];
   function getUserEvent(tr) {
       return tr.isUserEvent("input.type") ? "input" : tr.isUserEvent("delete.backward") ? "delete" : null;
   }
   class ActiveSource {
       constructor(source, state, explicitPos = -1) {
           this.source = source;
           this.state = state;
           this.explicitPos = explicitPos;
       }
       hasResult() { return false; }
       update(tr, conf) {
           let event = getUserEvent(tr), value = this;
           if (event)
               value = value.handleUserEvent(tr, event, conf);
           else if (tr.docChanged)
               value = value.handleChange(tr);
           else if (tr.selection && value.state != 0 /* State.Inactive */)
               value = new ActiveSource(value.source, 0 /* State.Inactive */);
           for (let effect of tr.effects) {
               if (effect.is(startCompletionEffect))
                   value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);
               else if (effect.is(closeCompletionEffect))
                   value = new ActiveSource(value.source, 0 /* State.Inactive */);
               else if (effect.is(setActiveEffect))
                   for (let active of effect.value)
                       if (active.source == value.source)
                           value = active;
           }
           return value;
       }
       handleUserEvent(tr, type, conf) {
           return type == "delete" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);
       }
       handleChange(tr) {
           return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);
       }
       map(changes) {
           return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));
       }
   }
   class ActiveResult extends ActiveSource {
       constructor(source, explicitPos, result, from, to) {
           super(source, 2 /* State.Result */, explicitPos);
           this.result = result;
           this.from = from;
           this.to = to;
       }
       hasResult() { return true; }
       handleUserEvent(tr, type, conf) {
           var _a;
           let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);
           let pos = cur(tr.state);
           if ((this.explicitPos < 0 ? pos <= from : pos < this.from) ||
               pos > to ||
               type == "delete" && cur(tr.startState) == this.from)
               return new ActiveSource(this.source, type == "input" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);
           let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos), updated;
           if (checkValid(this.result.validFor, tr.state, from, to))
               return new ActiveResult(this.source, explicitPos, this.result, from, to);
           if (this.result.update &&
               (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0))))
               return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));
           return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);
       }
       handleChange(tr) {
           return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);
       }
       map(mapping) {
           return mapping.empty ? this :
               new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));
       }
   }
   function checkValid(validFor, state, from, to) {
       if (!validFor)
           return false;
       let text = state.sliceDoc(from, to);
       return typeof validFor == "function" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);
   }
   const startCompletionEffect = /*@__PURE__*/StateEffect.define();
   const closeCompletionEffect = /*@__PURE__*/StateEffect.define();
   const setActiveEffect = /*@__PURE__*/StateEffect.define({
       map(sources, mapping) { return sources.map(s => s.map(mapping)); }
   });
   const setSelectedEffect = /*@__PURE__*/StateEffect.define();
   const completionState = /*@__PURE__*/StateField.define({
       create() { return CompletionState.start(); },
       update(value, tr) { return value.update(tr); },
       provide: f => [
           showTooltip.from(f, val => val.tooltip),
           EditorView.contentAttributes.from(f, state => state.attrs)
       ]
   });

   /**
   Returns a command that moves the completion selection forward or
   backward by the given amount.
   */
   function moveCompletionSelection(forward, by = "option") {
       return (view) => {
           let cState = view.state.field(completionState, false);
           if (!cState || !cState.open ||
               Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)
               return false;
           let step = 1, tooltip;
           if (by == "page" && (tooltip = getTooltip(view, cState.open.tooltip)))
               step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /
                   tooltip.dom.querySelector("li").offsetHeight) - 1);
           let { length } = cState.open.options;
           let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;
           if (selected < 0)
               selected = by == "page" ? 0 : length - 1;
           else if (selected >= length)
               selected = by == "page" ? length - 1 : 0;
           view.dispatch({ effects: setSelectedEffect.of(selected) });
           return true;
       };
   }
   /**
   Accept the current completion.
   */
   const acceptCompletion = (view) => {
       let cState = view.state.field(completionState, false);
       if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 ||
           Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)
           return false;
       applyCompletion(view, cState.open.options[cState.open.selected]);
       return true;
   };
   /**
   Explicitly start autocompletion.
   */
   const startCompletion = (view) => {
       let cState = view.state.field(completionState, false);
       if (!cState)
           return false;
       view.dispatch({ effects: startCompletionEffect.of(true) });
       return true;
   };
   /**
   Close the currently active completion.
   */
   const closeCompletion = (view) => {
       let cState = view.state.field(completionState, false);
       if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))
           return false;
       view.dispatch({ effects: closeCompletionEffect.of(null) });
       return true;
   };
   class RunningQuery {
       constructor(active, context) {
           this.active = active;
           this.context = context;
           this.time = Date.now();
           this.updates = [];
           // Note that 'undefined' means 'not done yet', whereas 'null' means
           // 'query returned null'.
           this.done = undefined;
       }
   }
   const DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;
   const completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.debounceUpdate = -1;
           this.running = [];
           this.debounceAccept = -1;
           this.composing = 0 /* CompositionState.None */;
           for (let active of view.state.field(completionState).active)
               if (active.state == 1 /* State.Pending */)
                   this.startQuery(active);
       }
       update(update) {
           let cState = update.state.field(completionState);
           if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)
               return;
           let doesReset = update.transactions.some(tr => {
               return (tr.selection || tr.docChanged) && !getUserEvent(tr);
           });
           for (let i = 0; i < this.running.length; i++) {
               let query = this.running[i];
               if (doesReset ||
                   query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {
                   for (let handler of query.context.abortListeners) {
                       try {
                           handler();
                       }
                       catch (e) {
                           logException(this.view.state, e);
                       }
                   }
                   query.context.abortListeners = null;
                   this.running.splice(i--, 1);
               }
               else {
                   query.updates.push(...update.transactions);
               }
           }
           if (this.debounceUpdate > -1)
               clearTimeout(this.debounceUpdate);
           this.debounceUpdate = cState.active.some(a => a.state == 1 /* State.Pending */ && !this.running.some(q => q.active.source == a.source))
               ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;
           if (this.composing != 0 /* CompositionState.None */)
               for (let tr of update.transactions) {
                   if (getUserEvent(tr) == "input")
                       this.composing = 2 /* CompositionState.Changed */;
                   else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)
                       this.composing = 3 /* CompositionState.ChangedAndMoved */;
               }
       }
       startUpdate() {
           this.debounceUpdate = -1;
           let { state } = this.view, cState = state.field(completionState);
           for (let active of cState.active) {
               if (active.state == 1 /* State.Pending */ && !this.running.some(r => r.active.source == active.source))
                   this.startQuery(active);
           }
       }
       startQuery(active) {
           let { state } = this.view, pos = cur(state);
           let context = new CompletionContext(state, pos, active.explicitPos == pos);
           let pending = new RunningQuery(active, context);
           this.running.push(pending);
           Promise.resolve(active.source(context)).then(result => {
               if (!pending.context.aborted) {
                   pending.done = result || null;
                   this.scheduleAccept();
               }
           }, err => {
               this.view.dispatch({ effects: closeCompletionEffect.of(null) });
               logException(this.view.state, err);
           });
       }
       scheduleAccept() {
           if (this.running.every(q => q.done !== undefined))
               this.accept();
           else if (this.debounceAccept < 0)
               this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);
       }
       // For each finished query in this.running, try to create a result
       // or, if appropriate, restart the query.
       accept() {
           var _a;
           if (this.debounceAccept > -1)
               clearTimeout(this.debounceAccept);
           this.debounceAccept = -1;
           let updated = [];
           let conf = this.view.state.facet(completionConfig);
           for (let i = 0; i < this.running.length; i++) {
               let query = this.running[i];
               if (query.done === undefined)
                   continue;
               this.running.splice(i--, 1);
               if (query.done) {
                   let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state));
                   // Replay the transactions that happened since the start of
                   // the request and see if that preserves the result
                   for (let tr of query.updates)
                       active = active.update(tr, conf);
                   if (active.hasResult()) {
                       updated.push(active);
                       continue;
                   }
               }
               let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);
               if (current && current.state == 1 /* State.Pending */) {
                   if (query.done == null) {
                       // Explicitly failed. Should clear the pending status if it
                       // hasn't been re-set in the meantime.
                       let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);
                       for (let tr of query.updates)
                           active = active.update(tr, conf);
                       if (active.state != 1 /* State.Pending */)
                           updated.push(active);
                   }
                   else {
                       // Cleared by subsequent transactions. Restart.
                       this.startQuery(current);
                   }
               }
           }
           if (updated.length)
               this.view.dispatch({ effects: setActiveEffect.of(updated) });
       }
   }, {
       eventHandlers: {
           blur() {
               let state = this.view.state.field(completionState, false);
               if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur)
                   this.view.dispatch({ effects: closeCompletionEffect.of(null) });
           },
           compositionstart() {
               this.composing = 1 /* CompositionState.Started */;
           },
           compositionend() {
               if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {
                   // Safari fires compositionend events synchronously, possibly
                   // from inside an update, so dispatch asynchronously to avoid reentrancy
                   setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);
               }
               this.composing = 0 /* CompositionState.None */;
           }
       }
   });

   const baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({
       ".cm-tooltip.cm-tooltip-autocomplete": {
           "& > ul": {
               fontFamily: "monospace",
               whiteSpace: "nowrap",
               overflow: "hidden auto",
               maxWidth_fallback: "700px",
               maxWidth: "min(700px, 95vw)",
               minWidth: "250px",
               maxHeight: "10em",
               listStyle: "none",
               margin: 0,
               padding: 0,
               "& > li": {
                   overflowX: "hidden",
                   textOverflow: "ellipsis",
                   cursor: "pointer",
                   padding: "1px 3px",
                   lineHeight: 1.2
               },
           }
       },
       "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
           background: "#17c",
           color: "white",
       },
       "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
           background: "#347",
           color: "white",
       },
       ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
           content: '"···"',
           opacity: 0.5,
           display: "block",
           textAlign: "center"
       },
       ".cm-tooltip.cm-completionInfo": {
           position: "absolute",
           padding: "3px 9px",
           width: "max-content",
           maxWidth: `${400 /* Info.Width */}px`,
           boxSizing: "border-box"
       },
       ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
       ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
       ".cm-completionInfo.cm-completionInfo-left-narrow": { right: `${30 /* Info.Margin */}px` },
       ".cm-completionInfo.cm-completionInfo-right-narrow": { left: `${30 /* Info.Margin */}px` },
       "&light .cm-snippetField": { backgroundColor: "#00000022" },
       "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
       ".cm-snippetFieldPosition": {
           verticalAlign: "text-top",
           width: 0,
           height: "1.15em",
           display: "inline-block",
           margin: "0 -0.7px -.7em",
           borderLeft: "1.4px dotted #888"
       },
       ".cm-completionMatchedText": {
           textDecoration: "underline"
       },
       ".cm-completionDetail": {
           marginLeft: "0.5em",
           fontStyle: "italic"
       },
       ".cm-completionIcon": {
           fontSize: "90%",
           width: ".8em",
           display: "inline-block",
           textAlign: "center",
           paddingRight: ".6em",
           opacity: "0.6"
       },
       ".cm-completionIcon-function, .cm-completionIcon-method": {
           "&:after": { content: "'ƒ'" }
       },
       ".cm-completionIcon-class": {
           "&:after": { content: "'○'" }
       },
       ".cm-completionIcon-interface": {
           "&:after": { content: "'◌'" }
       },
       ".cm-completionIcon-variable": {
           "&:after": { content: "'𝑥'" }
       },
       ".cm-completionIcon-constant": {
           "&:after": { content: "'𝐶'" }
       },
       ".cm-completionIcon-type": {
           "&:after": { content: "'𝑡'" }
       },
       ".cm-completionIcon-enum": {
           "&:after": { content: "'∪'" }
       },
       ".cm-completionIcon-property": {
           "&:after": { content: "'□'" }
       },
       ".cm-completionIcon-keyword": {
           "&:after": { content: "'🔑\uFE0E'" } // Disable emoji rendering
       },
       ".cm-completionIcon-namespace": {
           "&:after": { content: "'▢'" }
       },
       ".cm-completionIcon-text": {
           "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
       }
   });

   class FieldPos {
       constructor(field, line, from, to) {
           this.field = field;
           this.line = line;
           this.from = from;
           this.to = to;
       }
   }
   class FieldRange {
       constructor(field, from, to) {
           this.field = field;
           this.from = from;
           this.to = to;
       }
       map(changes) {
           let from = changes.mapPos(this.from, -1, MapMode.TrackDel);
           let to = changes.mapPos(this.to, 1, MapMode.TrackDel);
           return from == null || to == null ? null : new FieldRange(this.field, from, to);
       }
   }
   class Snippet {
       constructor(lines, fieldPositions) {
           this.lines = lines;
           this.fieldPositions = fieldPositions;
       }
       instantiate(state, pos) {
           let text = [], lineStart = [pos];
           let lineObj = state.doc.lineAt(pos), baseIndent = /^\s*/.exec(lineObj.text)[0];
           for (let line of this.lines) {
               if (text.length) {
                   let indent = baseIndent, tabs = /^\t*/.exec(line)[0].length;
                   for (let i = 0; i < tabs; i++)
                       indent += state.facet(indentUnit);
                   lineStart.push(pos + indent.length - tabs);
                   line = indent + line.slice(tabs);
               }
               text.push(line);
               pos += line.length + 1;
           }
           let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));
           return { text, ranges };
       }
       static parse(template) {
           let fields = [];
           let lines = [], positions = [], m;
           for (let line of template.split(/\r\n?|\n/)) {
               while (m = /[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(line)) {
                   let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || "", found = -1;
                   for (let i = 0; i < fields.length; i++) {
                       if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)
                           found = i;
                   }
                   if (found < 0) {
                       let i = 0;
                       while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))
                           i++;
                       fields.splice(i, 0, { seq, name });
                       found = i;
                       for (let pos of positions)
                           if (pos.field >= found)
                               pos.field++;
                   }
                   positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));
                   line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);
               }
               for (let esc; esc = /([$#])\\{/.exec(line);) {
                   line = line.slice(0, esc.index) + esc[1] + "{" + line.slice(esc.index + esc[0].length);
                   for (let pos of positions)
                       if (pos.line == lines.length && pos.from > esc.index) {
                           pos.from--;
                           pos.to--;
                       }
               }
               lines.push(line);
           }
           return new Snippet(lines, positions);
       }
   }
   let fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {
           toDOM() {
               let span = document.createElement("span");
               span.className = "cm-snippetFieldPosition";
               return span;
           }
           ignoreEvent() { return false; }
       } });
   let fieldRange = /*@__PURE__*/Decoration.mark({ class: "cm-snippetField" });
   class ActiveSnippet {
       constructor(ranges, active) {
           this.ranges = ranges;
           this.active = active;
           this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));
       }
       map(changes) {
           let ranges = [];
           for (let r of this.ranges) {
               let mapped = r.map(changes);
               if (!mapped)
                   return null;
               ranges.push(mapped);
           }
           return new ActiveSnippet(ranges, this.active);
       }
       selectionInsideField(sel) {
           return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));
       }
   }
   const setActive = /*@__PURE__*/StateEffect.define({
       map(value, changes) { return value && value.map(changes); }
   });
   const moveToField = /*@__PURE__*/StateEffect.define();
   const snippetState = /*@__PURE__*/StateField.define({
       create() { return null; },
       update(value, tr) {
           for (let effect of tr.effects) {
               if (effect.is(setActive))
                   return effect.value;
               if (effect.is(moveToField) && value)
                   return new ActiveSnippet(value.ranges, effect.value);
           }
           if (value && tr.docChanged)
               value = value.map(tr.changes);
           if (value && tr.selection && !value.selectionInsideField(tr.selection))
               value = null;
           return value;
       },
       provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)
   });
   function fieldSelection(ranges, field) {
       return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));
   }
   /**
   Convert a snippet template to a function that can
   [apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written
   using syntax like this:

       "for (let ${index} = 0; ${index} < ${end}; ${index}++) {\n\t${}\n}"

   Each `${}` placeholder (you may also use `#{}`) indicates a field
   that the user can fill in. Its name, if any, will be the default
   content for the field.

   When the snippet is activated by calling the returned function,
   the code is inserted at the given position. Newlines in the
   template are indented by the indentation of the start line, plus
   one [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after
   the newline.

   On activation, (all instances of) the first field are selected.
   The user can move between fields with Tab and Shift-Tab as long as
   the fields are active. Moving to the last field or moving the
   cursor out of the current field deactivates the fields.

   The order of fields defaults to textual order, but you can add
   numbers to placeholders (`${1}` or `${1:defaultText}`) to provide
   a custom order.

   To include a literal `${` or `#{` in your template, put a
   backslash after the dollar or hash and before the brace (`$\\{`).
   This will be removed and the sequence will not be interpreted as a
   placeholder.
   */
   function snippet(template) {
       let snippet = Snippet.parse(template);
       return (editor, _completion, from, to) => {
           let { text, ranges } = snippet.instantiate(editor.state, from);
           let spec = {
               changes: { from, to, insert: Text.of(text) },
               scrollIntoView: true
           };
           if (ranges.length)
               spec.selection = fieldSelection(ranges, 0);
           if (ranges.length > 1) {
               let active = new ActiveSnippet(ranges, 0);
               let effects = spec.effects = [setActive.of(active)];
               if (editor.state.field(snippetState, false) === undefined)
                   effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme$1]));
           }
           editor.dispatch(editor.state.update(spec));
       };
   }
   function moveField(dir) {
       return ({ state, dispatch }) => {
           let active = state.field(snippetState, false);
           if (!active || dir < 0 && active.active == 0)
               return false;
           let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);
           dispatch(state.update({
               selection: fieldSelection(active.ranges, next),
               effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))
           }));
           return true;
       };
   }
   /**
   A command that clears the active snippet, if any.
   */
   const clearSnippet = ({ state, dispatch }) => {
       let active = state.field(snippetState, false);
       if (!active)
           return false;
       dispatch(state.update({ effects: setActive.of(null) }));
       return true;
   };
   /**
   Move to the next snippet field, if available.
   */
   const nextSnippetField = /*@__PURE__*/moveField(1);
   /**
   Move to the previous snippet field, if available.
   */
   const prevSnippetField = /*@__PURE__*/moveField(-1);
   const defaultSnippetKeymap = [
       { key: "Tab", run: nextSnippetField, shift: prevSnippetField },
       { key: "Escape", run: clearSnippet }
   ];
   /**
   A facet that can be used to configure the key bindings used by
   snippets. The default binds Tab to
   [`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to
   [`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape
   to [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).
   */
   const snippetKeymap = /*@__PURE__*/Facet.define({
       combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }
   });
   const addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));
   /**
   Create a completion from a snippet. Returns an object with the
   properties from `completion`, plus an `apply` function that
   applies the snippet.
   */
   function snippetCompletion(template, completion) {
       return Object.assign(Object.assign({}, completion), { apply: snippet(template) });
   }
   const snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({
       mousedown(event, view) {
           let active = view.state.field(snippetState, false), pos;
           if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)
               return false;
           let match = active.ranges.find(r => r.from <= pos && r.to >= pos);
           if (!match || match.field == active.active)
               return false;
           view.dispatch({
               selection: fieldSelection(active.ranges, match.field),
               effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)
           });
           return true;
       }
   });

   const defaults = {
       brackets: ["(", "[", "{", "'", '"'],
       before: ")]}:;>",
       stringPrefixes: []
   };
   const closeBracketEffect = /*@__PURE__*/StateEffect.define({
       map(value, mapping) {
           let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);
           return mapped == null ? undefined : mapped;
       }
   });
   const skipBracketEffect = /*@__PURE__*/StateEffect.define({
       map(value, mapping) { return mapping.mapPos(value); }
   });
   const closedBracket = /*@__PURE__*/new class extends RangeValue {
   };
   closedBracket.startSide = 1;
   closedBracket.endSide = -1;
   const bracketState = /*@__PURE__*/StateField.define({
       create() { return RangeSet.empty; },
       update(value, tr) {
           if (tr.selection) {
               let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;
               let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;
               if (lineStart != tr.changes.mapPos(prevLineStart, -1))
                   value = RangeSet.empty;
           }
           value = value.map(tr.changes);
           for (let effect of tr.effects) {
               if (effect.is(closeBracketEffect))
                   value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });
               else if (effect.is(skipBracketEffect))
                   value = value.update({ filter: from => from != effect.value });
           }
           return value;
       }
   });
   /**
   Extension to enable bracket-closing behavior. When a closeable
   bracket is typed, its closing bracket is immediately inserted
   after the cursor. When closing a bracket directly in front of a
   closing bracket inserted by the extension, the cursor moves over
   that bracket.
   */
   function closeBrackets() {
       return [inputHandler, bracketState];
   }
   const definedClosing = "()[]{}<>";
   function closing(ch) {
       for (let i = 0; i < definedClosing.length; i += 2)
           if (definedClosing.charCodeAt(i) == ch)
               return definedClosing.charAt(i + 1);
       return fromCodePoint(ch < 128 ? ch : ch + 1);
   }
   function config(state, pos) {
       return state.languageDataAt("closeBrackets", pos)[0] || defaults;
   }
   const android$1 = typeof navigator == "object" && /*@__PURE__*//Android\b/.test(navigator.userAgent);
   const inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {
       if ((android$1 ? view.composing : view.compositionStarted) || view.state.readOnly)
           return false;
       let sel = view.state.selection.main;
       if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||
           from != sel.from || to != sel.to)
           return false;
       let tr = insertBracket(view.state, insert);
       if (!tr)
           return false;
       view.dispatch(tr);
       return true;
   });
   /**
   Command that implements deleting a pair of matching brackets when
   the cursor is between them.
   */
   const deleteBracketPair = ({ state, dispatch }) => {
       if (state.readOnly)
           return false;
       let conf = config(state, state.selection.main.head);
       let tokens = conf.brackets || defaults.brackets;
       let dont = null, changes = state.changeByRange(range => {
           if (range.empty) {
               let before = prevChar(state.doc, range.head);
               for (let token of tokens) {
                   if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))
                       return { changes: { from: range.head - token.length, to: range.head + token.length },
                           range: EditorSelection.cursor(range.head - token.length) };
               }
           }
           return { range: dont = range };
       });
       if (!dont)
           dispatch(state.update(changes, { scrollIntoView: true, userEvent: "delete.backward" }));
       return !dont;
   };
   /**
   Close-brackets related key bindings. Binds Backspace to
   [`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).
   */
   const closeBracketsKeymap = [
       { key: "Backspace", run: deleteBracketPair }
   ];
   /**
   Implements the extension's behavior on text insertion. If the
   given string counts as a bracket in the language around the
   selection, and replacing the selection with it requires custom
   behavior (inserting a closing version or skipping past a
   previously-closed bracket), this function returns a transaction
   representing that custom behavior. (You only need this if you want
   to programmatically insert brackets—the
   [`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will
   take care of running this for user input.)
   */
   function insertBracket(state, bracket) {
       let conf = config(state, state.selection.main.head);
       let tokens = conf.brackets || defaults.brackets;
       for (let tok of tokens) {
           let closed = closing(codePointAt(tok, 0));
           if (bracket == tok)
               return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)
                   : handleOpen(state, tok, closed, conf.before || defaults.before);
           if (bracket == closed && closedBracketAt(state, state.selection.main.from))
               return handleClose(state, tok, closed);
       }
       return null;
   }
   function closedBracketAt(state, pos) {
       let found = false;
       state.field(bracketState).between(0, state.doc.length, from => {
           if (from == pos)
               found = true;
       });
       return found;
   }
   function nextChar(doc, pos) {
       let next = doc.sliceString(pos, pos + 2);
       return next.slice(0, codePointSize(codePointAt(next, 0)));
   }
   function prevChar(doc, pos) {
       let prev = doc.sliceString(pos - 2, pos);
       return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);
   }
   function handleOpen(state, open, close, closeBefore) {
       let dont = null, changes = state.changeByRange(range => {
           if (!range.empty)
               return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],
                   effects: closeBracketEffect.of(range.to + open.length),
                   range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };
           let next = nextChar(state.doc, range.head);
           if (!next || /\s/.test(next) || closeBefore.indexOf(next) > -1)
               return { changes: { insert: open + close, from: range.head },
                   effects: closeBracketEffect.of(range.head + open.length),
                   range: EditorSelection.cursor(range.head + open.length) };
           return { range: dont = range };
       });
       return dont ? null : state.update(changes, {
           scrollIntoView: true,
           userEvent: "input.type"
       });
   }
   function handleClose(state, _open, close) {
       let dont = null, moved = state.selection.ranges.map(range => {
           if (range.empty && nextChar(state.doc, range.head) == close)
               return EditorSelection.cursor(range.head + close.length);
           return dont = range;
       });
       return dont ? null : state.update({
           selection: EditorSelection.create(moved, state.selection.mainIndex),
           scrollIntoView: true,
           effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))
       });
   }
   // Handles cases where the open and close token are the same, and
   // possibly triple quotes (as in `"""abc"""`-style quoting).
   function handleSame(state, token, allowTriple, config) {
       let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;
       let dont = null, changes = state.changeByRange(range => {
           if (!range.empty)
               return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],
                   effects: closeBracketEffect.of(range.to + token.length),
                   range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };
           let pos = range.head, next = nextChar(state.doc, pos), start;
           if (next == token) {
               if (nodeStart(state, pos)) {
                   return { changes: { insert: token + token, from: pos },
                       effects: closeBracketEffect.of(pos + token.length),
                       range: EditorSelection.cursor(pos + token.length) };
               }
               else if (closedBracketAt(state, pos)) {
                   let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;
                   return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),
                       effects: skipBracketEffect.of(pos) };
               }
           }
           else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&
               (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&
               nodeStart(state, start)) {
               return { changes: { insert: token + token + token + token, from: pos },
                   effects: closeBracketEffect.of(pos + token.length),
                   range: EditorSelection.cursor(pos + token.length) };
           }
           else if (state.charCategorizer(pos)(next) != CharCategory.Word) {
               if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))
                   return { changes: { insert: token + token, from: pos },
                       effects: closeBracketEffect.of(pos + token.length),
                       range: EditorSelection.cursor(pos + token.length) };
           }
           return { range: dont = range };
       });
       return dont ? null : state.update(changes, {
           scrollIntoView: true,
           userEvent: "input.type"
       });
   }
   function nodeStart(state, pos) {
       let tree = syntaxTree(state).resolveInner(pos + 1);
       return tree.parent && tree.from == pos;
   }
   function probablyInString(state, pos, quoteToken, prefixes) {
       let node = syntaxTree(state).resolveInner(pos, -1);
       let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);
       for (let i = 0; i < 5; i++) {
           let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));
           let quotePos = start.indexOf(quoteToken);
           if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {
               let first = node.firstChild;
               while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {
                   if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)
                       return false;
                   first = first.firstChild;
               }
               return true;
           }
           let parent = node.to == pos && node.parent;
           if (!parent)
               break;
           node = parent;
       }
       return false;
   }
   function canStartStringAt(state, pos, prefixes) {
       let charCat = state.charCategorizer(pos);
       if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)
           return pos;
       for (let prefix of prefixes) {
           let start = pos - prefix.length;
           if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)
               return start;
       }
       return -1;
   }

   /**
   Returns an extension that enables autocompletion.
   */
   function autocompletion(config = {}) {
       return [
           completionState,
           completionConfig.of(config),
           completionPlugin,
           completionKeymapExt,
           baseTheme$1
       ];
   }
   /**
   Basic keybindings for autocompletion.

    - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)
    - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)
    - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`
    - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`
    - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, "page")`
    - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, "page")`
    - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)
   */
   const completionKeymap = [
       { key: "Ctrl-Space", run: startCompletion },
       { key: "Escape", run: closeCompletion },
       { key: "ArrowDown", run: /*@__PURE__*/moveCompletionSelection(true) },
       { key: "ArrowUp", run: /*@__PURE__*/moveCompletionSelection(false) },
       { key: "PageDown", run: /*@__PURE__*/moveCompletionSelection(true, "page") },
       { key: "PageUp", run: /*@__PURE__*/moveCompletionSelection(false, "page") },
       { key: "Enter", run: acceptCompletion }
   ];
   const completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));

   class SelectedDiagnostic {
       constructor(from, to, diagnostic) {
           this.from = from;
           this.to = to;
           this.diagnostic = diagnostic;
       }
   }
   class LintState {
       constructor(diagnostics, panel, selected) {
           this.diagnostics = diagnostics;
           this.panel = panel;
           this.selected = selected;
       }
       static init(diagnostics, panel, state) {
           // Filter the list of diagnostics for which to create markers
           let markedDiagnostics = diagnostics;
           let diagnosticFilter = state.facet(lintConfig).markerFilter;
           if (diagnosticFilter)
               markedDiagnostics = diagnosticFilter(markedDiagnostics);
           let ranges = Decoration.set(markedDiagnostics.map((d) => {
               // For zero-length ranges or ranges covering only a line break, create a widget
               return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)
                   ? Decoration.widget({
                       widget: new DiagnosticWidget(d),
                       diagnostic: d
                   }).range(d.from)
                   : Decoration.mark({
                       attributes: { class: "cm-lintRange cm-lintRange-" + d.severity },
                       diagnostic: d
                   }).range(d.from, d.to);
           }), true);
           return new LintState(ranges, panel, findDiagnostic(ranges));
       }
   }
   function findDiagnostic(diagnostics, diagnostic = null, after = 0) {
       let found = null;
       diagnostics.between(after, 1e9, (from, to, { spec }) => {
           if (diagnostic && spec.diagnostic != diagnostic)
               return;
           found = new SelectedDiagnostic(from, to, spec.diagnostic);
           return false;
       });
       return found;
   }
   function hideTooltip(tr, tooltip) {
       return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(tooltip.pos));
   }
   function maybeEnableLint(state, effects) {
       return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([
           lintState,
           EditorView.decorations.compute([lintState], state => {
               let { selected, panel } = state.field(lintState);
               return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([
                   activeMark.range(selected.from, selected.to)
               ]);
           }),
           hoverTooltip(lintTooltip, { hideOn: hideTooltip }),
           baseTheme
       ]));
   }
   /**
   Returns a transaction spec which updates the current set of
   diagnostics, and enables the lint extension if if wasn't already
   active.
   */
   function setDiagnostics(state, diagnostics) {
       return {
           effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])
       };
   }
   /**
   The state effect that updates the set of active diagnostics. Can
   be useful when writing an extension that needs to track these.
   */
   const setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();
   const togglePanel = /*@__PURE__*/StateEffect.define();
   const movePanelSelection = /*@__PURE__*/StateEffect.define();
   const lintState = /*@__PURE__*/StateField.define({
       create() {
           return new LintState(Decoration.none, null, null);
       },
       update(value, tr) {
           if (tr.docChanged) {
               let mapped = value.diagnostics.map(tr.changes), selected = null;
               if (value.selected) {
                   let selPos = tr.changes.mapPos(value.selected.from, 1);
                   selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);
               }
               value = new LintState(mapped, value.panel, selected);
           }
           for (let effect of tr.effects) {
               if (effect.is(setDiagnosticsEffect)) {
                   value = LintState.init(effect.value, value.panel, tr.state);
               }
               else if (effect.is(togglePanel)) {
                   value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);
               }
               else if (effect.is(movePanelSelection)) {
                   value = new LintState(value.diagnostics, value.panel, effect.value);
               }
           }
           return value;
       },
       provide: f => [showPanel.from(f, val => val.panel),
           EditorView.decorations.from(f, s => s.diagnostics)]
   });
   const activeMark = /*@__PURE__*/Decoration.mark({ class: "cm-lintRange cm-lintRange-active" });
   function lintTooltip(view, pos, side) {
       let { diagnostics } = view.state.field(lintState);
       let found = [], stackStart = 2e8, stackEnd = 0;
       diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {
           if (pos >= from && pos <= to &&
               (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {
               found.push(spec.diagnostic);
               stackStart = Math.min(from, stackStart);
               stackEnd = Math.max(to, stackEnd);
           }
       });
       let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;
       if (diagnosticFilter)
           found = diagnosticFilter(found);
       if (!found.length)
           return null;
       return {
           pos: stackStart,
           end: stackEnd,
           above: view.state.doc.lineAt(stackStart).to < stackEnd,
           create() {
               return { dom: diagnosticsTooltip(view, found) };
           }
       };
   }
   function diagnosticsTooltip(view, diagnostics) {
       return crelt("ul", { class: "cm-tooltip-lint" }, diagnostics.map(d => renderDiagnostic(view, d, false)));
   }
   /**
   Command to open and focus the lint panel.
   */
   const openLintPanel = (view) => {
       let field = view.state.field(lintState, false);
       if (!field || !field.panel)
           view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });
       let panel = getPanel(view, LintPanel.open);
       if (panel)
           panel.dom.querySelector(".cm-panel-lint ul").focus();
       return true;
   };
   /**
   Command to close the lint panel, when open.
   */
   const closeLintPanel = (view) => {
       let field = view.state.field(lintState, false);
       if (!field || !field.panel)
           return false;
       view.dispatch({ effects: togglePanel.of(false) });
       return true;
   };
   /**
   Move the selection to the next diagnostic.
   */
   const nextDiagnostic = (view) => {
       let field = view.state.field(lintState, false);
       if (!field)
           return false;
       let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);
       if (!next.value) {
           next = field.diagnostics.iter(0);
           if (!next.value || next.from == sel.from && next.to == sel.to)
               return false;
       }
       view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });
       return true;
   };
   /**
   A set of default key bindings for the lint functionality.

   - Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)
   - F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)
   */
   const lintKeymap = [
       { key: "Mod-Shift-m", run: openLintPanel },
       { key: "F8", run: nextDiagnostic }
   ];
   const lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {
       constructor(view) {
           this.view = view;
           this.timeout = -1;
           this.set = true;
           let { delay } = view.state.facet(lintConfig);
           this.lintTime = Date.now() + delay;
           this.run = this.run.bind(this);
           this.timeout = setTimeout(this.run, delay);
       }
       run() {
           let now = Date.now();
           if (now < this.lintTime - 10) {
               setTimeout(this.run, this.lintTime - now);
           }
           else {
               this.set = false;
               let { state } = this.view, { sources } = state.facet(lintConfig);
               Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {
                   let all = annotations.reduce((a, b) => a.concat(b));
                   if (this.view.state.doc == state.doc)
                       this.view.dispatch(setDiagnostics(this.view.state, all));
               }, error => { logException(this.view.state, error); });
           }
       }
       update(update) {
           let config = update.state.facet(lintConfig);
           if (update.docChanged || config != update.startState.facet(lintConfig)) {
               this.lintTime = Date.now() + config.delay;
               if (!this.set) {
                   this.set = true;
                   this.timeout = setTimeout(this.run, config.delay);
               }
           }
       }
       force() {
           if (this.set) {
               this.lintTime = Date.now();
               this.run();
           }
       }
       destroy() {
           clearTimeout(this.timeout);
       }
   });
   const lintConfig = /*@__PURE__*/Facet.define({
       combine(input) {
           return Object.assign({ sources: input.map(i => i.source) }, combineConfig(input.map(i => i.config), {
               delay: 750,
               markerFilter: null,
               tooltipFilter: null
           }));
       },
       enables: lintPlugin
   });
   /**
   Given a diagnostic source, this function returns an extension that
   enables linting with that source. It will be called whenever the
   editor is idle (after its content changed).
   */
   function linter(source, config = {}) {
       return lintConfig.of({ source, config });
   }
   function assignKeys(actions) {
       let assigned = [];
       if (actions)
           actions: for (let { name } of actions) {
               for (let i = 0; i < name.length; i++) {
                   let ch = name[i];
                   if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {
                       assigned.push(ch);
                       continue actions;
                   }
               }
               assigned.push("");
           }
       return assigned;
   }
   function renderDiagnostic(view, diagnostic, inPanel) {
       var _a;
       let keys = inPanel ? assignKeys(diagnostic.actions) : [];
       return crelt("li", { class: "cm-diagnostic cm-diagnostic-" + diagnostic.severity }, crelt("span", { class: "cm-diagnosticText" }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {
           let click = (e) => {
               e.preventDefault();
               let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);
               if (found)
                   action.apply(view, found.from, found.to);
           };
           let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;
           let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),
               crelt("u", name.slice(keyIndex, keyIndex + 1)),
               name.slice(keyIndex + 1)];
           return crelt("button", {
               type: "button",
               class: "cm-diagnosticAction",
               onclick: click,
               onmousedown: click,
               "aria-label": ` Action: ${name}${keyIndex < 0 ? "" : ` (access key "${keys[i]})"`}.`
           }, nameElt);
       }), diagnostic.source && crelt("div", { class: "cm-diagnosticSource" }, diagnostic.source));
   }
   class DiagnosticWidget extends WidgetType {
       constructor(diagnostic) {
           super();
           this.diagnostic = diagnostic;
       }
       eq(other) { return other.diagnostic == this.diagnostic; }
       toDOM() {
           return crelt("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
       }
   }
   class PanelItem {
       constructor(view, diagnostic) {
           this.diagnostic = diagnostic;
           this.id = "item_" + Math.floor(Math.random() * 0xffffffff).toString(16);
           this.dom = renderDiagnostic(view, diagnostic, true);
           this.dom.id = this.id;
           this.dom.setAttribute("role", "option");
       }
   }
   class LintPanel {
       constructor(view) {
           this.view = view;
           this.items = [];
           let onkeydown = (event) => {
               if (event.keyCode == 27) { // Escape
                   closeLintPanel(this.view);
                   this.view.focus();
               }
               else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp
                   this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
               }
               else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown
                   this.moveSelection((this.selectedIndex + 1) % this.items.length);
               }
               else if (event.keyCode == 36) { // Home
                   this.moveSelection(0);
               }
               else if (event.keyCode == 35) { // End
                   this.moveSelection(this.items.length - 1);
               }
               else if (event.keyCode == 13) { // Enter
                   this.view.focus();
               }
               else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z
                   let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);
                   for (let i = 0; i < keys.length; i++)
                       if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {
                           let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);
                           if (found)
                               diagnostic.actions[i].apply(view, found.from, found.to);
                       }
               }
               else {
                   return;
               }
               event.preventDefault();
           };
           let onclick = (event) => {
               for (let i = 0; i < this.items.length; i++) {
                   if (this.items[i].dom.contains(event.target))
                       this.moveSelection(i);
               }
           };
           this.list = crelt("ul", {
               tabIndex: 0,
               role: "listbox",
               "aria-label": this.view.state.phrase("Diagnostics"),
               onkeydown,
               onclick
           });
           this.dom = crelt("div", { class: "cm-panel-lint" }, this.list, crelt("button", {
               type: "button",
               name: "close",
               "aria-label": this.view.state.phrase("close"),
               onclick: () => closeLintPanel(this.view)
           }, "×"));
           this.update();
       }
       get selectedIndex() {
           let selected = this.view.state.field(lintState).selected;
           if (!selected)
               return -1;
           for (let i = 0; i < this.items.length; i++)
               if (this.items[i].diagnostic == selected.diagnostic)
                   return i;
           return -1;
       }
       update() {
           let { diagnostics, selected } = this.view.state.field(lintState);
           let i = 0, needsSync = false, newSelectedItem = null;
           diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {
               let found = -1, item;
               for (let j = i; j < this.items.length; j++)
                   if (this.items[j].diagnostic == spec.diagnostic) {
                       found = j;
                       break;
                   }
               if (found < 0) {
                   item = new PanelItem(this.view, spec.diagnostic);
                   this.items.splice(i, 0, item);
                   needsSync = true;
               }
               else {
                   item = this.items[found];
                   if (found > i) {
                       this.items.splice(i, found - i);
                       needsSync = true;
                   }
               }
               if (selected && item.diagnostic == selected.diagnostic) {
                   if (!item.dom.hasAttribute("aria-selected")) {
                       item.dom.setAttribute("aria-selected", "true");
                       newSelectedItem = item;
                   }
               }
               else if (item.dom.hasAttribute("aria-selected")) {
                   item.dom.removeAttribute("aria-selected");
               }
               i++;
           });
           while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {
               needsSync = true;
               this.items.pop();
           }
           if (this.items.length == 0) {
               this.items.push(new PanelItem(this.view, {
                   from: -1, to: -1,
                   severity: "info",
                   message: this.view.state.phrase("No diagnostics")
               }));
               needsSync = true;
           }
           if (newSelectedItem) {
               this.list.setAttribute("aria-activedescendant", newSelectedItem.id);
               this.view.requestMeasure({
                   key: this,
                   read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
                   write: ({ sel, panel }) => {
                       if (sel.top < panel.top)
                           this.list.scrollTop -= panel.top - sel.top;
                       else if (sel.bottom > panel.bottom)
                           this.list.scrollTop += sel.bottom - panel.bottom;
                   }
               });
           }
           else if (this.selectedIndex < 0) {
               this.list.removeAttribute("aria-activedescendant");
           }
           if (needsSync)
               this.sync();
       }
       sync() {
           let domPos = this.list.firstChild;
           function rm() {
               let prev = domPos;
               domPos = prev.nextSibling;
               prev.remove();
           }
           for (let item of this.items) {
               if (item.dom.parentNode == this.list) {
                   while (domPos != item.dom)
                       rm();
                   domPos = item.dom.nextSibling;
               }
               else {
                   this.list.insertBefore(item.dom, domPos);
               }
           }
           while (domPos)
               rm();
       }
       moveSelection(selectedIndex) {
           if (this.selectedIndex < 0)
               return;
           let field = this.view.state.field(lintState);
           let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);
           if (!selection)
               return;
           this.view.dispatch({
               selection: { anchor: selection.from, head: selection.to },
               scrollIntoView: true,
               effects: movePanelSelection.of(selection)
           });
       }
       static open(view) { return new LintPanel(view); }
   }
   function svg(content, attrs = `viewBox="0 0 40 40"`) {
       return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${attrs}>${encodeURIComponent(content)}</svg>')`;
   }
   function underline(color) {
       return svg(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${color}" fill="none" stroke-width=".7"/>`, `width="6" height="3"`);
   }
   const baseTheme = /*@__PURE__*/EditorView.baseTheme({
       ".cm-diagnostic": {
           padding: "3px 6px 3px 8px",
           marginLeft: "-1px",
           display: "block",
           whiteSpace: "pre-wrap"
       },
       ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
       ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
       ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
       ".cm-diagnosticAction": {
           font: "inherit",
           border: "none",
           padding: "2px 4px",
           backgroundColor: "#444",
           color: "white",
           borderRadius: "3px",
           marginLeft: "8px"
       },
       ".cm-diagnosticSource": {
           fontSize: "70%",
           opacity: .7
       },
       ".cm-lintRange": {
           backgroundPosition: "left bottom",
           backgroundRepeat: "repeat-x",
           paddingBottom: "0.7px",
       },
       ".cm-lintRange-error": { backgroundImage: /*@__PURE__*/underline("#d11") },
       ".cm-lintRange-warning": { backgroundImage: /*@__PURE__*/underline("orange") },
       ".cm-lintRange-info": { backgroundImage: /*@__PURE__*/underline("#999") },
       ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
       ".cm-tooltip-lint": {
           padding: 0,
           margin: 0
       },
       ".cm-lintPoint": {
           position: "relative",
           "&:after": {
               content: '""',
               position: "absolute",
               bottom: 0,
               left: "-2px",
               borderLeft: "3px solid transparent",
               borderRight: "3px solid transparent",
               borderBottom: "4px solid #d11"
           }
       },
       ".cm-lintPoint-warning": {
           "&:after": { borderBottomColor: "orange" }
       },
       ".cm-lintPoint-info": {
           "&:after": { borderBottomColor: "#999" }
       },
       ".cm-panel.cm-panel-lint": {
           position: "relative",
           "& ul": {
               maxHeight: "100px",
               overflowY: "auto",
               "& [aria-selected]": {
                   backgroundColor: "#ddd",
                   "& u": { textDecoration: "underline" }
               },
               "&:focus [aria-selected]": {
                   background_fallback: "#bdf",
                   backgroundColor: "Highlight",
                   color_fallback: "white",
                   color: "HighlightText"
               },
               "& u": { textDecoration: "none" },
               padding: 0,
               margin: 0
           },
           "& [name=close]": {
               position: "absolute",
               top: "0",
               right: "2px",
               background: "inherit",
               border: "none",
               font: "inherit",
               padding: 0,
               margin: 0
           }
       }
   });
   class LintGutterMarker extends GutterMarker {
       constructor(diagnostics) {
           super();
           this.diagnostics = diagnostics;
           this.severity = diagnostics.reduce((max, d) => {
               let s = d.severity;
               return s == "error" || s == "warning" && max == "info" ? s : max;
           }, "info");
       }
       toDOM(view) {
           let elt = document.createElement("div");
           elt.className = "cm-lint-marker cm-lint-marker-" + this.severity;
           let diagnostics = this.diagnostics;
           let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;
           if (diagnosticsFilter)
               diagnostics = diagnosticsFilter(diagnostics);
           if (diagnostics.length)
               elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);
           return elt;
       }
   }
   function trackHoverOn(view, marker) {
       let mousemove = (event) => {
           let rect = marker.getBoundingClientRect();
           if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&
               event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)
               return;
           for (let target = event.target; target; target = target.parentNode) {
               if (target.nodeType == 1 && target.classList.contains("cm-tooltip-lint"))
                   return;
           }
           window.removeEventListener("mousemove", mousemove);
           if (view.state.field(lintGutterTooltip))
               view.dispatch({ effects: setLintGutterTooltip.of(null) });
       };
       window.addEventListener("mousemove", mousemove);
   }
   function gutterMarkerMouseOver(view, marker, diagnostics) {
       function hovered() {
           let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);
           const linePos = view.coordsAtPos(line.from);
           if (linePos) {
               view.dispatch({ effects: setLintGutterTooltip.of({
                       pos: line.from,
                       above: false,
                       create() {
                           return {
                               dom: diagnosticsTooltip(view, diagnostics),
                               getCoords: () => marker.getBoundingClientRect()
                           };
                       }
                   }) });
           }
           marker.onmouseout = marker.onmousemove = null;
           trackHoverOn(view, marker);
       }
       let { hoverTime } = view.state.facet(lintGutterConfig);
       let hoverTimeout = setTimeout(hovered, hoverTime);
       marker.onmouseout = () => {
           clearTimeout(hoverTimeout);
           marker.onmouseout = marker.onmousemove = null;
       };
       marker.onmousemove = () => {
           clearTimeout(hoverTimeout);
           hoverTimeout = setTimeout(hovered, hoverTime);
       };
   }
   function markersForDiagnostics(doc, diagnostics) {
       let byLine = Object.create(null);
       for (let diagnostic of diagnostics) {
           let line = doc.lineAt(diagnostic.from);
           (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);
       }
       let markers = [];
       for (let line in byLine) {
           markers.push(new LintGutterMarker(byLine[line]).range(+line));
       }
       return RangeSet.of(markers, true);
   }
   const lintGutterExtension = /*@__PURE__*/gutter({
       class: "cm-gutter-lint",
       markers: view => view.state.field(lintGutterMarkers),
   });
   const lintGutterMarkers = /*@__PURE__*/StateField.define({
       create() {
           return RangeSet.empty;
       },
       update(markers, tr) {
           markers = markers.map(tr.changes);
           let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;
           for (let effect of tr.effects) {
               if (effect.is(setDiagnosticsEffect)) {
                   let diagnostics = effect.value;
                   if (diagnosticFilter)
                       diagnostics = diagnosticFilter(diagnostics || []);
                   markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));
               }
           }
           return markers;
       }
   });
   const setLintGutterTooltip = /*@__PURE__*/StateEffect.define();
   const lintGutterTooltip = /*@__PURE__*/StateField.define({
       create() { return null; },
       update(tooltip, tr) {
           if (tooltip && tr.docChanged)
               tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });
           return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);
       },
       provide: field => showTooltip.from(field)
   });
   const lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({
       ".cm-gutter-lint": {
           width: "1.4em",
           "& .cm-gutterElement": {
               padding: ".2em"
           }
       },
       ".cm-lint-marker": {
           width: "1em",
           height: "1em"
       },
       ".cm-lint-marker-info": {
           content: /*@__PURE__*/svg(`<path fill="#aaf" stroke="#77e" stroke-width="6" stroke-linejoin="round" d="M5 5L35 5L35 35L5 35Z"/>`)
       },
       ".cm-lint-marker-warning": {
           content: /*@__PURE__*/svg(`<path fill="#fe8" stroke="#fd7" stroke-width="6" stroke-linejoin="round" d="M20 6L37 35L3 35Z"/>`),
       },
       ".cm-lint-marker-error:before": {
           content: /*@__PURE__*/svg(`<circle cx="20" cy="20" r="15" fill="#f87" stroke="#f43" stroke-width="6"/>`)
       },
   });
   const lintGutterConfig = /*@__PURE__*/Facet.define({
       combine(configs) {
           return combineConfig(configs, {
               hoverTime: 300 /* Time */,
               markerFilter: null,
               tooltipFilter: null
           });
       }
   });
   /**
   Returns an extension that installs a gutter showing markers for
   each line that has diagnostics, which can be hovered over to see
   the diagnostics.
   */
   function lintGutter(config = {}) {
       return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];
   }

   // (The superfluous function calls around the list of extensions work
   // around current limitations in tree-shaking software.)
   /**
   This is an extension value that just pulls together a number of
   extensions that you might want in a basic editor. It is meant as a
   convenient helper to quickly set up CodeMirror without installing
   and importing a lot of separate packages.

   Specifically, it includes...

    - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)
    - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)
    - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)
    - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)
    - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)
    - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)
    - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)
    - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)
    - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)
    - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)
    - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)
    - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)
    - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)
    - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)
    - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)
    - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)
    - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)
    - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)
    - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)

   (You'll probably want to add some language package to your setup
   too.)

   This extension does not allow customization. The idea is that,
   once you decide you want to configure your editor more precisely,
   you take this package's source (which is just a bunch of imports
   and an array literal), copy it into your own code, and adjust it
   as desired.
   */
   const basicSetup = /*@__PURE__*/(() => [
       lineNumbers(),
       highlightActiveLineGutter(),
       highlightSpecialChars(),
       history(),
       foldGutter(),
       drawSelection(),
       dropCursor(),
       EditorState.allowMultipleSelections.of(true),
       indentOnInput(),
       syntaxHighlighting(defaultHighlightStyle, { fallback: true }),
       bracketMatching(),
       closeBrackets(),
       autocompletion(),
       rectangularSelection(),
       crosshairCursor(),
       highlightActiveLine(),
       highlightSelectionMatches(),
       keymap.of([
           ...closeBracketsKeymap,
           ...defaultKeymap,
           ...searchKeymap,
           ...historyKeymap,
           ...foldKeymap,
           ...completionKeymap,
           ...lintKeymap
       ])
   ])();

   /// A parse stack. These are used internally by the parser to track
   /// parsing progress. They also provide some properties and methods
   /// that external code such as a tokenizer can use to get information
   /// about the parse state.
   class Stack {
       /// @internal
       constructor(
       /// The parse that this stack is part of @internal
       p, 
       /// Holds state, input pos, buffer index triplets for all but the
       /// top state @internal
       stack, 
       /// The current parse state @internal
       state, 
       // The position at which the next reduce should take place. This
       // can be less than `this.pos` when skipped expressions have been
       // added to the stack (which should be moved outside of the next
       // reduction)
       /// @internal
       reducePos, 
       /// The input position up to which this stack has parsed.
       pos, 
       /// The dynamic score of the stack, including dynamic precedence
       /// and error-recovery penalties
       /// @internal
       score, 
       // The output buffer. Holds (type, start, end, size) quads
       // representing nodes created by the parser, where `size` is
       // amount of buffer array entries covered by this node.
       /// @internal
       buffer, 
       // The base offset of the buffer. When stacks are split, the split
       // instance shared the buffer history with its parent up to
       // `bufferBase`, which is the absolute offset (including the
       // offset of previous splits) into the buffer at which this stack
       // starts writing.
       /// @internal
       bufferBase, 
       /// @internal
       curContext, 
       /// @internal
       lookAhead = 0, 
       // A parent stack from which this was split off, if any. This is
       // set up so that it always points to a stack that has some
       // additional buffer content, never to a stack with an equal
       // `bufferBase`.
       /// @internal
       parent) {
           this.p = p;
           this.stack = stack;
           this.state = state;
           this.reducePos = reducePos;
           this.pos = pos;
           this.score = score;
           this.buffer = buffer;
           this.bufferBase = bufferBase;
           this.curContext = curContext;
           this.lookAhead = lookAhead;
           this.parent = parent;
       }
       /// @internal
       toString() {
           return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
       }
       // Start an empty stack
       /// @internal
       static start(p, state, pos = 0) {
           let cx = p.parser.context;
           return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);
       }
       /// The stack's current [context](#lr.ContextTracker) value, if
       /// any. Its type will depend on the context tracker's type
       /// parameter, or it will be `null` if there is no context
       /// tracker.
       get context() { return this.curContext ? this.curContext.context : null; }
       // Push a state onto the stack, tracking its start position as well
       // as the buffer base at that point.
       /// @internal
       pushState(state, start) {
           this.stack.push(this.state, start, this.bufferBase + this.buffer.length);
           this.state = state;
       }
       // Apply a reduce action
       /// @internal
       reduce(action) {
           let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;
           let { parser } = this.p;
           let dPrec = parser.dynamicPrecedence(type);
           if (dPrec)
               this.score += dPrec;
           if (depth == 0) {
               this.pushState(parser.getGoto(this.state, type, true), this.reducePos);
               // Zero-depth reductions are a special case—they add stuff to
               // the stack without popping anything off.
               if (type < parser.minRepeatTerm)
                   this.storeNode(type, this.reducePos, this.reducePos, 4, true);
               this.reduceContext(type, this.reducePos);
               return;
           }
           // Find the base index into `this.stack`, content after which will
           // be dropped. Note that with `StayFlag` reductions we need to
           // consume two extra frames (the dummy parent node for the skipped
           // expression and the state that we'll be staying in, which should
           // be moved to `this.state`).
           let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);
           let start = this.stack[base - 2];
           let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;
           // Store normal terms or `R -> R R` repeat reductions
           if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {
               let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;
               this.storeNode(type, start, pos, count + 4, true);
           }
           if (action & 262144 /* StayFlag */) {
               this.state = this.stack[base];
           }
           else {
               let baseStateID = this.stack[base - 3];
               this.state = parser.getGoto(baseStateID, type, true);
           }
           while (this.stack.length > base)
               this.stack.pop();
           this.reduceContext(type, start);
       }
       // Shift a value into the buffer
       /// @internal
       storeNode(term, start, end, size = 4, isReduce = false) {
           if (term == 0 /* Err */ &&
               (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
               // Try to omit/merge adjacent error nodes
               let cur = this, top = this.buffer.length;
               if (top == 0 && cur.parent) {
                   top = cur.bufferBase - cur.parent.bufferBase;
                   cur = cur.parent;
               }
               if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {
                   if (start == end)
                       return;
                   if (cur.buffer[top - 2] >= start) {
                       cur.buffer[top - 2] = end;
                       return;
                   }
               }
           }
           if (!isReduce || this.pos == end) { // Simple case, just append
               this.buffer.push(term, start, end, size);
           }
           else { // There may be skipped nodes that have to be moved forward
               let index = this.buffer.length;
               if (index > 0 && this.buffer[index - 4] != 0 /* Err */)
                   while (index > 0 && this.buffer[index - 2] > end) {
                       // Move this record forward
                       this.buffer[index] = this.buffer[index - 4];
                       this.buffer[index + 1] = this.buffer[index - 3];
                       this.buffer[index + 2] = this.buffer[index - 2];
                       this.buffer[index + 3] = this.buffer[index - 1];
                       index -= 4;
                       if (size > 4)
                           size -= 4;
                   }
               this.buffer[index] = term;
               this.buffer[index + 1] = start;
               this.buffer[index + 2] = end;
               this.buffer[index + 3] = size;
           }
       }
       // Apply a shift action
       /// @internal
       shift(action, next, nextEnd) {
           let start = this.pos;
           if (action & 131072 /* GotoFlag */) {
               this.pushState(action & 65535 /* ValueMask */, this.pos);
           }
           else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift
               let nextState = action, { parser } = this.p;
               if (nextEnd > this.pos || next <= parser.maxNode) {
                   this.pos = nextEnd;
                   if (!parser.stateFlag(nextState, 1 /* Skipped */))
                       this.reducePos = nextEnd;
               }
               this.pushState(nextState, start);
               this.shiftContext(next, start);
               if (next <= parser.maxNode)
                   this.buffer.push(next, start, nextEnd, 4);
           }
           else { // Shift-and-stay, which means this is a skipped token
               this.pos = nextEnd;
               this.shiftContext(next, start);
               if (next <= this.p.parser.maxNode)
                   this.buffer.push(next, start, nextEnd, 4);
           }
       }
       // Apply an action
       /// @internal
       apply(action, next, nextEnd) {
           if (action & 65536 /* ReduceFlag */)
               this.reduce(action);
           else
               this.shift(action, next, nextEnd);
       }
       // Add a prebuilt (reused) node into the buffer.
       /// @internal
       useNode(value, next) {
           let index = this.p.reused.length - 1;
           if (index < 0 || this.p.reused[index] != value) {
               this.p.reused.push(value);
               index++;
           }
           let start = this.pos;
           this.reducePos = this.pos = start + value.length;
           this.pushState(next, start);
           this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);
           if (this.curContext)
               this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));
       }
       // Split the stack. Due to the buffer sharing and the fact
       // that `this.stack` tends to stay quite shallow, this isn't very
       // expensive.
       /// @internal
       split() {
           let parent = this;
           let off = parent.buffer.length;
           // Because the top of the buffer (after this.pos) may be mutated
           // to reorder reductions and skipped tokens, and shared buffers
           // should be immutable, this copies any outstanding skipped tokens
           // to the new buffer, and puts the base pointer before them.
           while (off > 0 && parent.buffer[off - 2] > parent.reducePos)
               off -= 4;
           let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;
           // Make sure parent points to an actual parent with content, if there is such a parent.
           while (parent && base == parent.bufferBase)
               parent = parent.parent;
           return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);
       }
       // Try to recover from an error by 'deleting' (ignoring) one token.
       /// @internal
       recoverByDelete(next, nextEnd) {
           let isNode = next <= this.p.parser.maxNode;
           if (isNode)
               this.storeNode(next, this.pos, nextEnd, 4);
           this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);
           this.pos = this.reducePos = nextEnd;
           this.score -= 190 /* Delete */;
       }
       /// Check if the given term would be able to be shifted (optionally
       /// after some reductions) on this stack. This can be useful for
       /// external tokenizers that want to make sure they only provide a
       /// given token when it applies.
       canShift(term) {
           for (let sim = new SimulatedStack(this);;) {
               let action = this.p.parser.stateSlot(sim.state, 4 /* DefaultReduce */) || this.p.parser.hasAction(sim.state, term);
               if ((action & 65536 /* ReduceFlag */) == 0)
                   return true;
               if (action == 0)
                   return false;
               sim.reduce(action);
           }
       }
       // Apply up to Recover.MaxNext recovery actions that conceptually
       // inserts some missing token or rule.
       /// @internal
       recoverByInsert(next) {
           if (this.stack.length >= 300 /* MaxInsertStackDepth */)
               return [];
           let nextStates = this.p.parser.nextStates(this.state);
           if (nextStates.length > 4 /* MaxNext */ << 1 || this.stack.length >= 120 /* DampenInsertStackDepth */) {
               let best = [];
               for (let i = 0, s; i < nextStates.length; i += 2) {
                   if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))
                       best.push(nextStates[i], s);
               }
               if (this.stack.length < 120 /* DampenInsertStackDepth */)
                   for (let i = 0; best.length < 4 /* MaxNext */ << 1 && i < nextStates.length; i += 2) {
                       let s = nextStates[i + 1];
                       if (!best.some((v, i) => (i & 1) && v == s))
                           best.push(nextStates[i], s);
                   }
               nextStates = best;
           }
           let result = [];
           for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i += 2) {
               let s = nextStates[i + 1];
               if (s == this.state)
                   continue;
               let stack = this.split();
               stack.pushState(s, this.pos);
               stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);
               stack.shiftContext(nextStates[i], this.pos);
               stack.score -= 200 /* Insert */;
               result.push(stack);
           }
           return result;
       }
       // Force a reduce, if possible. Return false if that can't
       // be done.
       /// @internal
       forceReduce() {
           let reduce = this.p.parser.stateSlot(this.state, 5 /* ForcedReduce */);
           if ((reduce & 65536 /* ReduceFlag */) == 0)
               return false;
           let { parser } = this.p;
           if (!parser.validAction(this.state, reduce)) {
               let depth = reduce >> 19 /* ReduceDepthShift */, term = reduce & 65535 /* ValueMask */;
               let target = this.stack.length - depth * 3;
               if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0)
                   return false;
               this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);
               this.score -= 100 /* Reduce */;
           }
           this.reducePos = this.pos;
           this.reduce(reduce);
           return true;
       }
       /// @internal
       forceAll() {
           while (!this.p.parser.stateFlag(this.state, 2 /* Accepting */)) {
               if (!this.forceReduce()) {
                   this.storeNode(0 /* Err */, this.pos, this.pos, 4, true);
                   break;
               }
           }
           return this;
       }
       /// Check whether this state has no further actions (assumed to be a direct descendant of the
       /// top state, since any other states must be able to continue
       /// somehow). @internal
       get deadEnd() {
           if (this.stack.length != 3)
               return false;
           let { parser } = this.p;
           return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&
               !parser.stateSlot(this.state, 4 /* DefaultReduce */);
       }
       /// Restart the stack (put it back in its start state). Only safe
       /// when this.stack.length == 3 (state is directly below the top
       /// state). @internal
       restart() {
           this.state = this.stack[0];
           this.stack.length = 0;
       }
       /// @internal
       sameState(other) {
           if (this.state != other.state || this.stack.length != other.stack.length)
               return false;
           for (let i = 0; i < this.stack.length; i += 3)
               if (this.stack[i] != other.stack[i])
                   return false;
           return true;
       }
       /// Get the parser used by this stack.
       get parser() { return this.p.parser; }
       /// Test whether a given dialect (by numeric ID, as exported from
       /// the terms file) is enabled.
       dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }
       shiftContext(term, start) {
           if (this.curContext)
               this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));
       }
       reduceContext(term, start) {
           if (this.curContext)
               this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));
       }
       /// @internal
       emitContext() {
           let last = this.buffer.length - 1;
           if (last < 0 || this.buffer[last] != -3)
               this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3);
       }
       /// @internal
       emitLookAhead() {
           let last = this.buffer.length - 1;
           if (last < 0 || this.buffer[last] != -4)
               this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4);
       }
       updateContext(context) {
           if (context != this.curContext.context) {
               let newCx = new StackContext(this.curContext.tracker, context);
               if (newCx.hash != this.curContext.hash)
                   this.emitContext();
               this.curContext = newCx;
           }
       }
       /// @internal
       setLookAhead(lookAhead) {
           if (lookAhead > this.lookAhead) {
               this.emitLookAhead();
               this.lookAhead = lookAhead;
           }
       }
       /// @internal
       close() {
           if (this.curContext && this.curContext.tracker.strict)
               this.emitContext();
           if (this.lookAhead > 0)
               this.emitLookAhead();
       }
   }
   class StackContext {
       constructor(tracker, context) {
           this.tracker = tracker;
           this.context = context;
           this.hash = tracker.strict ? tracker.hash(context) : 0;
       }
   }
   var Recover;
   (function (Recover) {
       Recover[Recover["Insert"] = 200] = "Insert";
       Recover[Recover["Delete"] = 190] = "Delete";
       Recover[Recover["Reduce"] = 100] = "Reduce";
       Recover[Recover["MaxNext"] = 4] = "MaxNext";
       Recover[Recover["MaxInsertStackDepth"] = 300] = "MaxInsertStackDepth";
       Recover[Recover["DampenInsertStackDepth"] = 120] = "DampenInsertStackDepth";
   })(Recover || (Recover = {}));
   // Used to cheaply run some reductions to scan ahead without mutating
   // an entire stack
   class SimulatedStack {
       constructor(start) {
           this.start = start;
           this.state = start.state;
           this.stack = start.stack;
           this.base = this.stack.length;
       }
       reduce(action) {
           let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;
           if (depth == 0) {
               if (this.stack == this.start.stack)
                   this.stack = this.stack.slice();
               this.stack.push(this.state, 0, 0);
               this.base += 3;
           }
           else {
               this.base -= (depth - 1) * 3;
           }
           let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);
           this.state = goto;
       }
   }
   // This is given to `Tree.build` to build a buffer, and encapsulates
   // the parent-stack-walking necessary to read the nodes.
   class StackBufferCursor {
       constructor(stack, pos, index) {
           this.stack = stack;
           this.pos = pos;
           this.index = index;
           this.buffer = stack.buffer;
           if (this.index == 0)
               this.maybeNext();
       }
       static create(stack, pos = stack.bufferBase + stack.buffer.length) {
           return new StackBufferCursor(stack, pos, pos - stack.bufferBase);
       }
       maybeNext() {
           let next = this.stack.parent;
           if (next != null) {
               this.index = this.stack.bufferBase - next.bufferBase;
               this.stack = next;
               this.buffer = next.buffer;
           }
       }
       get id() { return this.buffer[this.index - 4]; }
       get start() { return this.buffer[this.index - 3]; }
       get end() { return this.buffer[this.index - 2]; }
       get size() { return this.buffer[this.index - 1]; }
       next() {
           this.index -= 4;
           this.pos -= 4;
           if (this.index == 0)
               this.maybeNext();
       }
       fork() {
           return new StackBufferCursor(this.stack, this.pos, this.index);
       }
   }

   class CachedToken {
       constructor() {
           this.start = -1;
           this.value = -1;
           this.end = -1;
           this.extended = -1;
           this.lookAhead = 0;
           this.mask = 0;
           this.context = 0;
       }
   }
   const nullToken = new CachedToken;
   /// [Tokenizers](#lr.ExternalTokenizer) interact with the input
   /// through this interface. It presents the input as a stream of
   /// characters, tracking lookahead and hiding the complexity of
   /// [ranges](#common.Parser.parse^ranges) from tokenizer code.
   class InputStream {
       /// @internal
       constructor(
       /// @internal
       input, 
       /// @internal
       ranges) {
           this.input = input;
           this.ranges = ranges;
           /// @internal
           this.chunk = "";
           /// @internal
           this.chunkOff = 0;
           /// Backup chunk
           this.chunk2 = "";
           this.chunk2Pos = 0;
           /// The character code of the next code unit in the input, or -1
           /// when the stream is at the end of the input.
           this.next = -1;
           /// @internal
           this.token = nullToken;
           this.rangeIndex = 0;
           this.pos = this.chunkPos = ranges[0].from;
           this.range = ranges[0];
           this.end = ranges[ranges.length - 1].to;
           this.readNext();
       }
       /// @internal
       resolveOffset(offset, assoc) {
           let range = this.range, index = this.rangeIndex;
           let pos = this.pos + offset;
           while (pos < range.from) {
               if (!index)
                   return null;
               let next = this.ranges[--index];
               pos -= range.from - next.to;
               range = next;
           }
           while (assoc < 0 ? pos > range.to : pos >= range.to) {
               if (index == this.ranges.length - 1)
                   return null;
               let next = this.ranges[++index];
               pos += next.from - range.to;
               range = next;
           }
           return pos;
       }
       /// @internal
       clipPos(pos) {
           if (pos >= this.range.from && pos < this.range.to)
               return pos;
           for (let range of this.ranges)
               if (range.to > pos)
                   return Math.max(pos, range.from);
           return this.end;
       }
       /// Look at a code unit near the stream position. `.peek(0)` equals
       /// `.next`, `.peek(-1)` gives you the previous character, and so
       /// on.
       ///
       /// Note that looking around during tokenizing creates dependencies
       /// on potentially far-away content, which may reduce the
       /// effectiveness incremental parsing—when looking forward—or even
       /// cause invalid reparses when looking backward more than 25 code
       /// units, since the library does not track lookbehind.
       peek(offset) {
           let idx = this.chunkOff + offset, pos, result;
           if (idx >= 0 && idx < this.chunk.length) {
               pos = this.pos + offset;
               result = this.chunk.charCodeAt(idx);
           }
           else {
               let resolved = this.resolveOffset(offset, 1);
               if (resolved == null)
                   return -1;
               pos = resolved;
               if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {
                   result = this.chunk2.charCodeAt(pos - this.chunk2Pos);
               }
               else {
                   let i = this.rangeIndex, range = this.range;
                   while (range.to <= pos)
                       range = this.ranges[++i];
                   this.chunk2 = this.input.chunk(this.chunk2Pos = pos);
                   if (pos + this.chunk2.length > range.to)
                       this.chunk2 = this.chunk2.slice(0, range.to - pos);
                   result = this.chunk2.charCodeAt(0);
               }
           }
           if (pos >= this.token.lookAhead)
               this.token.lookAhead = pos + 1;
           return result;
       }
       /// Accept a token. By default, the end of the token is set to the
       /// current stream position, but you can pass an offset (relative to
       /// the stream position) to change that.
       acceptToken(token, endOffset = 0) {
           let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;
           if (end == null || end < this.token.start)
               throw new RangeError("Token end out of bounds");
           this.token.value = token;
           this.token.end = end;
       }
       getChunk() {
           if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
               let { chunk, chunkPos } = this;
               this.chunk = this.chunk2;
               this.chunkPos = this.chunk2Pos;
               this.chunk2 = chunk;
               this.chunk2Pos = chunkPos;
               this.chunkOff = this.pos - this.chunkPos;
           }
           else {
               this.chunk2 = this.chunk;
               this.chunk2Pos = this.chunkPos;
               let nextChunk = this.input.chunk(this.pos);
               let end = this.pos + nextChunk.length;
               this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;
               this.chunkPos = this.pos;
               this.chunkOff = 0;
           }
       }
       readNext() {
           if (this.chunkOff >= this.chunk.length) {
               this.getChunk();
               if (this.chunkOff == this.chunk.length)
                   return this.next = -1;
           }
           return this.next = this.chunk.charCodeAt(this.chunkOff);
       }
       /// Move the stream forward N (defaults to 1) code units. Returns
       /// the new value of [`next`](#lr.InputStream.next).
       advance(n = 1) {
           this.chunkOff += n;
           while (this.pos + n >= this.range.to) {
               if (this.rangeIndex == this.ranges.length - 1)
                   return this.setDone();
               n -= this.range.to - this.pos;
               this.range = this.ranges[++this.rangeIndex];
               this.pos = this.range.from;
           }
           this.pos += n;
           if (this.pos >= this.token.lookAhead)
               this.token.lookAhead = this.pos + 1;
           return this.readNext();
       }
       setDone() {
           this.pos = this.chunkPos = this.end;
           this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];
           this.chunk = "";
           return this.next = -1;
       }
       /// @internal
       reset(pos, token) {
           if (token) {
               this.token = token;
               token.start = pos;
               token.lookAhead = pos + 1;
               token.value = token.extended = -1;
           }
           else {
               this.token = nullToken;
           }
           if (this.pos != pos) {
               this.pos = pos;
               if (pos == this.end) {
                   this.setDone();
                   return this;
               }
               while (pos < this.range.from)
                   this.range = this.ranges[--this.rangeIndex];
               while (pos >= this.range.to)
                   this.range = this.ranges[++this.rangeIndex];
               if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {
                   this.chunkOff = pos - this.chunkPos;
               }
               else {
                   this.chunk = "";
                   this.chunkOff = 0;
               }
               this.readNext();
           }
           return this;
       }
       /// @internal
       read(from, to) {
           if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)
               return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);
           if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)
               return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);
           if (from >= this.range.from && to <= this.range.to)
               return this.input.read(from, to);
           let result = "";
           for (let r of this.ranges) {
               if (r.from >= to)
                   break;
               if (r.to > from)
                   result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));
           }
           return result;
       }
   }
   /// @internal
   class TokenGroup {
       constructor(data, id) {
           this.data = data;
           this.id = id;
       }
       token(input, stack) { readToken(this.data, input, stack, this.id); }
   }
   TokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;
   /// `@external tokens` declarations in the grammar should resolve to
   /// an instance of this class.
   class ExternalTokenizer {
       /// Create a tokenizer. The first argument is the function that,
       /// given an input stream, scans for the types of tokens it
       /// recognizes at the stream's position, and calls
       /// [`acceptToken`](#lr.InputStream.acceptToken) when it finds
       /// one.
       constructor(
       /// @internal
       token, options = {}) {
           this.token = token;
           this.contextual = !!options.contextual;
           this.fallback = !!options.fallback;
           this.extend = !!options.extend;
       }
   }
   // Tokenizer data is stored a big uint16 array containing, for each
   // state:
   //
   //  - A group bitmask, indicating what token groups are reachable from
   //    this state, so that paths that can only lead to tokens not in
   //    any of the current groups can be cut off early.
   //
   //  - The position of the end of the state's sequence of accepting
   //    tokens
   //
   //  - The number of outgoing edges for the state
   //
   //  - The accepting tokens, as (token id, group mask) pairs
   //
   //  - The outgoing edges, as (start character, end character, state
   //    index) triples, with end character being exclusive
   //
   // This function interprets that data, running through a stream as
   // long as new states with the a matching group mask can be reached,
   // and updating `input.token` when it matches a token.
   function readToken(data, input, stack, group) {
       let state = 0, groupMask = 1 << group, { parser } = stack.p, { dialect } = parser;
       scan: for (;;) {
           if ((groupMask & data[state]) == 0)
               break;
           let accEnd = data[state + 1];
           // Check whether this state can lead to a token in the current group
           // Accept tokens in this state, possibly overwriting
           // lower-precedence / shorter tokens
           for (let i = state + 3; i < accEnd; i += 2)
               if ((data[i + 1] & groupMask) > 0) {
                   let term = data[i];
                   if (dialect.allows(term) &&
                       (input.token.value == -1 || input.token.value == term || parser.overrides(term, input.token.value))) {
                       input.acceptToken(term);
                       break;
                   }
               }
           let next = input.next, low = 0, high = data[state + 2];
           // Special case for EOF
           if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* End */) {
               state = data[accEnd + high * 3 - 1];
               continue scan;
           }
           // Do a binary search on the state's edges
           for (; low < high;) {
               let mid = (low + high) >> 1;
               let index = accEnd + mid + (mid << 1);
               let from = data[index], to = data[index + 1];
               if (next < from)
                   high = mid;
               else if (next >= to)
                   low = mid + 1;
               else {
                   state = data[index + 2];
                   input.advance();
                   continue scan;
               }
           }
           break;
       }
   }

   // See lezer-generator/src/encode.ts for comments about the encoding
   // used here
   function decodeArray(input, Type = Uint16Array) {
       if (typeof input != "string")
           return input;
       let array = null;
       for (let pos = 0, out = 0; pos < input.length;) {
           let value = 0;
           for (;;) {
               let next = input.charCodeAt(pos++), stop = false;
               if (next == 126 /* BigValCode */) {
                   value = 65535 /* BigVal */;
                   break;
               }
               if (next >= 92 /* Gap2 */)
                   next--;
               if (next >= 34 /* Gap1 */)
                   next--;
               let digit = next - 32 /* Start */;
               if (digit >= 46 /* Base */) {
                   digit -= 46 /* Base */;
                   stop = true;
               }
               value += digit;
               if (stop)
                   break;
               value *= 46 /* Base */;
           }
           if (array)
               array[out++] = value;
           else
               array = new Type(value);
       }
       return array;
   }

   // Environment variable used to control console output
   const verbose = typeof process != "undefined" && process.env && /\bparse\b/.test(process.env.LOG);
   let stackIDs = null;
   var Safety;
   (function (Safety) {
       Safety[Safety["Margin"] = 25] = "Margin";
   })(Safety || (Safety = {}));
   function cutAt(tree, pos, side) {
       let cursor = tree.cursor(IterMode.IncludeAnonymous);
       cursor.moveTo(pos);
       for (;;) {
           if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))
               for (;;) {
                   if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)
                       return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Margin */))
                           : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Margin */));
                   if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())
                       break;
                   if (!cursor.parent())
                       return side < 0 ? 0 : tree.length;
               }
       }
   }
   class FragmentCursor {
       constructor(fragments, nodeSet) {
           this.fragments = fragments;
           this.nodeSet = nodeSet;
           this.i = 0;
           this.fragment = null;
           this.safeFrom = -1;
           this.safeTo = -1;
           this.trees = [];
           this.start = [];
           this.index = [];
           this.nextFragment();
       }
       nextFragment() {
           let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
           if (fr) {
               this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;
               this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;
               while (this.trees.length) {
                   this.trees.pop();
                   this.start.pop();
                   this.index.pop();
               }
               this.trees.push(fr.tree);
               this.start.push(-fr.offset);
               this.index.push(0);
               this.nextStart = this.safeFrom;
           }
           else {
               this.nextStart = 1e9;
           }
       }
       // `pos` must be >= any previously given `pos` for this cursor
       nodeAt(pos) {
           if (pos < this.nextStart)
               return null;
           while (this.fragment && this.safeTo <= pos)
               this.nextFragment();
           if (!this.fragment)
               return null;
           for (;;) {
               let last = this.trees.length - 1;
               if (last < 0) { // End of tree
                   this.nextFragment();
                   return null;
               }
               let top = this.trees[last], index = this.index[last];
               if (index == top.children.length) {
                   this.trees.pop();
                   this.start.pop();
                   this.index.pop();
                   continue;
               }
               let next = top.children[index];
               let start = this.start[last] + top.positions[index];
               if (start > pos) {
                   this.nextStart = start;
                   return null;
               }
               if (next instanceof Tree) {
                   if (start == pos) {
                       if (start < this.safeFrom)
                           return null;
                       let end = start + next.length;
                       if (end <= this.safeTo) {
                           let lookAhead = next.prop(NodeProp.lookAhead);
                           if (!lookAhead || end + lookAhead < this.fragment.to)
                               return next;
                       }
                   }
                   this.index[last]++;
                   if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node
                       this.trees.push(next);
                       this.start.push(start);
                       this.index.push(0);
                   }
               }
               else {
                   this.index[last]++;
                   this.nextStart = start + next.length;
               }
           }
       }
   }
   class TokenCache {
       constructor(parser, stream) {
           this.stream = stream;
           this.tokens = [];
           this.mainToken = null;
           this.actions = [];
           this.tokens = parser.tokenizers.map(_ => new CachedToken);
       }
       getActions(stack) {
           let actionIndex = 0;
           let main = null;
           let { parser } = stack.p, { tokenizers } = parser;
           let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);
           let context = stack.curContext ? stack.curContext.hash : 0;
           let lookAhead = 0;
           for (let i = 0; i < tokenizers.length; i++) {
               if (((1 << i) & mask) == 0)
                   continue;
               let tokenizer = tokenizers[i], token = this.tokens[i];
               if (main && !tokenizer.fallback)
                   continue;
               if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {
                   this.updateCachedToken(token, tokenizer, stack);
                   token.mask = mask;
                   token.context = context;
               }
               if (token.lookAhead > token.end + 25 /* Margin */)
                   lookAhead = Math.max(token.lookAhead, lookAhead);
               if (token.value != 0 /* Err */) {
                   let startIndex = actionIndex;
                   if (token.extended > -1)
                       actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);
                   actionIndex = this.addActions(stack, token.value, token.end, actionIndex);
                   if (!tokenizer.extend) {
                       main = token;
                       if (actionIndex > startIndex)
                           break;
                   }
               }
           }
           while (this.actions.length > actionIndex)
               this.actions.pop();
           if (lookAhead)
               stack.setLookAhead(lookAhead);
           if (!main && stack.pos == this.stream.end) {
               main = new CachedToken;
               main.value = stack.p.parser.eofTerm;
               main.start = main.end = stack.pos;
               actionIndex = this.addActions(stack, main.value, main.end, actionIndex);
           }
           this.mainToken = main;
           return this.actions;
       }
       getMainToken(stack) {
           if (this.mainToken)
               return this.mainToken;
           let main = new CachedToken, { pos, p } = stack;
           main.start = pos;
           main.end = Math.min(pos + 1, p.stream.end);
           main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Err */;
           return main;
       }
       updateCachedToken(token, tokenizer, stack) {
           let start = this.stream.clipPos(stack.pos);
           tokenizer.token(this.stream.reset(start, token), stack);
           if (token.value > -1) {
               let { parser } = stack.p;
               for (let i = 0; i < parser.specialized.length; i++)
                   if (parser.specialized[i] == token.value) {
                       let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);
                       if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {
                           if ((result & 1) == 0 /* Specialize */)
                               token.value = result >> 1;
                           else
                               token.extended = result >> 1;
                           break;
                       }
                   }
           }
           else {
               token.value = 0 /* Err */;
               token.end = this.stream.clipPos(start + 1);
           }
       }
       putAction(action, token, end, index) {
           // Don't add duplicate actions
           for (let i = 0; i < index; i += 3)
               if (this.actions[i] == action)
                   return index;
           this.actions[index++] = action;
           this.actions[index++] = token;
           this.actions[index++] = end;
           return index;
       }
       addActions(stack, token, end, index) {
           let { state } = stack, { parser } = stack.p, { data } = parser;
           for (let set = 0; set < 2; set++) {
               for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {
                   if (data[i] == 65535 /* End */) {
                       if (data[i + 1] == 1 /* Next */) {
                           i = pair(data, i + 2);
                       }
                       else {
                           if (index == 0 && data[i + 1] == 2 /* Other */)
                               index = this.putAction(pair(data, i + 2), token, end, index);
                           break;
                       }
                   }
                   if (data[i] == token)
                       index = this.putAction(pair(data, i + 1), token, end, index);
               }
           }
           return index;
       }
   }
   var Rec;
   (function (Rec) {
       Rec[Rec["Distance"] = 5] = "Distance";
       Rec[Rec["MaxRemainingPerStep"] = 3] = "MaxRemainingPerStep";
       // When two stacks have been running independently long enough to
       // add this many elements to their buffers, prune one.
       Rec[Rec["MinBufferLengthPrune"] = 500] = "MinBufferLengthPrune";
       Rec[Rec["ForceReduceLimit"] = 10] = "ForceReduceLimit";
       // Once a stack reaches this depth (in .stack.length) force-reduce
       // it back to CutTo to avoid creating trees that overflow the stack
       // on recursive traversal.
       Rec[Rec["CutDepth"] = 15000] = "CutDepth";
       Rec[Rec["CutTo"] = 9000] = "CutTo";
   })(Rec || (Rec = {}));
   class Parse {
       constructor(parser, input, fragments, ranges) {
           this.parser = parser;
           this.input = input;
           this.ranges = ranges;
           this.recovering = 0;
           this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧
           this.minStackPos = 0;
           this.reused = [];
           this.stoppedAt = null;
           this.stream = new InputStream(input, ranges);
           this.tokens = new TokenCache(parser, this.stream);
           this.topTerm = parser.top[1];
           let { from } = ranges[0];
           this.stacks = [Stack.start(this, parser.top[0], from)];
           this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4
               ? new FragmentCursor(fragments, parser.nodeSet) : null;
       }
       get parsedPos() {
           return this.minStackPos;
       }
       // Move the parser forward. This will process all parse stacks at
       // `this.pos` and try to advance them to a further position. If no
       // stack for such a position is found, it'll start error-recovery.
       //
       // When the parse is finished, this will return a syntax tree. When
       // not, it returns `null`.
       advance() {
           let stacks = this.stacks, pos = this.minStackPos;
           // This will hold stacks beyond `pos`.
           let newStacks = this.stacks = [];
           let stopped, stoppedTokens;
           // Keep advancing any stacks at `pos` until they either move
           // forward or can't be advanced. Gather stacks that can't be
           // advanced further in `stopped`.
           for (let i = 0; i < stacks.length; i++) {
               let stack = stacks[i];
               for (;;) {
                   this.tokens.mainToken = null;
                   if (stack.pos > pos) {
                       newStacks.push(stack);
                   }
                   else if (this.advanceStack(stack, newStacks, stacks)) {
                       continue;
                   }
                   else {
                       if (!stopped) {
                           stopped = [];
                           stoppedTokens = [];
                       }
                       stopped.push(stack);
                       let tok = this.tokens.getMainToken(stack);
                       stoppedTokens.push(tok.value, tok.end);
                   }
                   break;
               }
           }
           if (!newStacks.length) {
               let finished = stopped && findFinished(stopped);
               if (finished)
                   return this.stackToTree(finished);
               if (this.parser.strict) {
                   if (verbose && stopped)
                       console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none"));
                   throw new SyntaxError("No parse at " + pos);
               }
               if (!this.recovering)
                   this.recovering = 5 /* Distance */;
           }
           if (this.recovering && stopped) {
               let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]
                   : this.runRecovery(stopped, stoppedTokens, newStacks);
               if (finished)
                   return this.stackToTree(finished.forceAll());
           }
           if (this.recovering) {
               let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;
               if (newStacks.length > maxRemaining) {
                   newStacks.sort((a, b) => b.score - a.score);
                   while (newStacks.length > maxRemaining)
                       newStacks.pop();
               }
               if (newStacks.some(s => s.reducePos > pos))
                   this.recovering--;
           }
           else if (newStacks.length > 1) {
               // Prune stacks that are in the same state, or that have been
               // running without splitting for a while, to avoid getting stuck
               // with multiple successful stacks running endlessly on.
               outer: for (let i = 0; i < newStacks.length - 1; i++) {
                   let stack = newStacks[i];
                   for (let j = i + 1; j < newStacks.length; j++) {
                       let other = newStacks[j];
                       if (stack.sameState(other) ||
                           stack.buffer.length > 500 /* MinBufferLengthPrune */ && other.buffer.length > 500 /* MinBufferLengthPrune */) {
                           if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {
                               newStacks.splice(j--, 1);
                           }
                           else {
                               newStacks.splice(i--, 1);
                               continue outer;
                           }
                       }
                   }
               }
           }
           this.minStackPos = newStacks[0].pos;
           for (let i = 1; i < newStacks.length; i++)
               if (newStacks[i].pos < this.minStackPos)
                   this.minStackPos = newStacks[i].pos;
           return null;
       }
       stopAt(pos) {
           if (this.stoppedAt != null && this.stoppedAt < pos)
               throw new RangeError("Can't move stoppedAt forward");
           this.stoppedAt = pos;
       }
       // Returns an updated version of the given stack, or null if the
       // stack can't advance normally. When `split` and `stacks` are
       // given, stacks split off by ambiguous operations will be pushed to
       // `split`, or added to `stacks` if they move `pos` forward.
       advanceStack(stack, stacks, split) {
           let start = stack.pos, { parser } = this;
           let base = verbose ? this.stackID(stack) + " -> " : "";
           if (this.stoppedAt != null && start > this.stoppedAt)
               return stack.forceReduce() ? stack : null;
           if (this.fragments) {
               let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;
               for (let cached = this.fragments.nodeAt(start); cached;) {
                   let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;
                   if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {
                       stack.useNode(cached, match);
                       if (verbose)
                           console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);
                       return true;
                   }
                   if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)
                       break;
                   let inner = cached.children[0];
                   if (inner instanceof Tree && cached.positions[0] == 0)
                       cached = inner;
                   else
                       break;
               }
           }
           let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);
           if (defaultReduce > 0) {
               stack.reduce(defaultReduce);
               if (verbose)
                   console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);
               return true;
           }
           if (stack.stack.length >= 15000 /* CutDepth */) {
               while (stack.stack.length > 9000 /* CutTo */ && stack.forceReduce()) { }
           }
           let actions = this.tokens.getActions(stack);
           for (let i = 0; i < actions.length;) {
               let action = actions[i++], term = actions[i++], end = actions[i++];
               let last = i == actions.length || !split;
               let localStack = last ? stack : stack.split();
               localStack.apply(action, term, end);
               if (verbose)
                   console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? "shift"
                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? "" : ", split"})`);
               if (last)
                   return true;
               else if (localStack.pos > start)
                   stacks.push(localStack);
               else
                   split.push(localStack);
           }
           return false;
       }
       // Advance a given stack forward as far as it will go. Returns the
       // (possibly updated) stack if it got stuck, or null if it moved
       // forward and was given to `pushStackDedup`.
       advanceFully(stack, newStacks) {
           let pos = stack.pos;
           for (;;) {
               if (!this.advanceStack(stack, null, null))
                   return false;
               if (stack.pos > pos) {
                   pushStackDedup(stack, newStacks);
                   return true;
               }
           }
       }
       runRecovery(stacks, tokens, newStacks) {
           let finished = null, restarted = false;
           for (let i = 0; i < stacks.length; i++) {
               let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];
               let base = verbose ? this.stackID(stack) + " -> " : "";
               if (stack.deadEnd) {
                   if (restarted)
                       continue;
                   restarted = true;
                   stack.restart();
                   if (verbose)
                       console.log(base + this.stackID(stack) + " (restarted)");
                   let done = this.advanceFully(stack, newStacks);
                   if (done)
                       continue;
               }
               let force = stack.split(), forceBase = base;
               for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {
                   if (verbose)
                       console.log(forceBase + this.stackID(force) + " (via force-reduce)");
                   let done = this.advanceFully(force, newStacks);
                   if (done)
                       break;
                   if (verbose)
                       forceBase = this.stackID(force) + " -> ";
               }
               for (let insert of stack.recoverByInsert(token)) {
                   if (verbose)
                       console.log(base + this.stackID(insert) + " (via recover-insert)");
                   this.advanceFully(insert, newStacks);
               }
               if (this.stream.end > stack.pos) {
                   if (tokenEnd == stack.pos) {
                       tokenEnd++;
                       token = 0 /* Err */;
                   }
                   stack.recoverByDelete(token, tokenEnd);
                   if (verbose)
                       console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);
                   pushStackDedup(stack, newStacks);
               }
               else if (!finished || finished.score < stack.score) {
                   finished = stack;
               }
           }
           return finished;
       }
       // Convert the stack's buffer to a syntax tree.
       stackToTree(stack) {
           stack.close();
           return Tree.build({ buffer: StackBufferCursor.create(stack),
               nodeSet: this.parser.nodeSet,
               topID: this.topTerm,
               maxBufferLength: this.parser.bufferLength,
               reused: this.reused,
               start: this.ranges[0].from,
               length: stack.pos - this.ranges[0].from,
               minRepeatType: this.parser.minRepeatTerm });
       }
       stackID(stack) {
           let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);
           if (!id)
               stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));
           return id + stack;
       }
   }
   function pushStackDedup(stack, newStacks) {
       for (let i = 0; i < newStacks.length; i++) {
           let other = newStacks[i];
           if (other.pos == stack.pos && other.sameState(stack)) {
               if (newStacks[i].score < stack.score)
                   newStacks[i] = stack;
               return;
           }
       }
       newStacks.push(stack);
   }
   class Dialect {
       constructor(source, flags, disabled) {
           this.source = source;
           this.flags = flags;
           this.disabled = disabled;
       }
       allows(term) { return !this.disabled || this.disabled[term] == 0; }
   }
   const id$1 = x => x;
   /// Context trackers are used to track stateful context (such as
   /// indentation in the Python grammar, or parent elements in the XML
   /// grammar) needed by external tokenizers. You declare them in a
   /// grammar file as `@context exportName from "module"`.
   ///
   /// Context values should be immutable, and can be updated (replaced)
   /// on shift or reduce actions.
   ///
   /// The export used in a `@context` declaration should be of this
   /// type.
   class ContextTracker {
       /// Define a context tracker.
       constructor(spec) {
           this.start = spec.start;
           this.shift = spec.shift || id$1;
           this.reduce = spec.reduce || id$1;
           this.reuse = spec.reuse || id$1;
           this.hash = spec.hash || (() => 0);
           this.strict = spec.strict !== false;
       }
   }
   /// Holds the parse tables for a given grammar, as generated by
   /// `lezer-generator`, and provides [methods](#common.Parser) to parse
   /// content with.
   class LRParser extends Parser {
       /// @internal
       constructor(spec) {
           super();
           /// @internal
           this.wrappers = [];
           if (spec.version != 14 /* Version */)
               throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* Version */})`);
           let nodeNames = spec.nodeNames.split(" ");
           this.minRepeatTerm = nodeNames.length;
           for (let i = 0; i < spec.repeatNodeCount; i++)
               nodeNames.push("");
           let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);
           let nodeProps = [];
           for (let i = 0; i < nodeNames.length; i++)
               nodeProps.push([]);
           function setProp(nodeID, prop, value) {
               nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);
           }
           if (spec.nodeProps)
               for (let propSpec of spec.nodeProps) {
                   let prop = propSpec[0];
                   if (typeof prop == "string")
                       prop = NodeProp[prop];
                   for (let i = 1; i < propSpec.length;) {
                       let next = propSpec[i++];
                       if (next >= 0) {
                           setProp(next, prop, propSpec[i++]);
                       }
                       else {
                           let value = propSpec[i + -next];
                           for (let j = -next; j > 0; j--)
                               setProp(propSpec[i++], prop, value);
                           i++;
                       }
                   }
               }
           this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({
               name: i >= this.minRepeatTerm ? undefined : name,
               id: i,
               props: nodeProps[i],
               top: topTerms.indexOf(i) > -1,
               error: i == 0,
               skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1
           })));
           if (spec.propSources)
               this.nodeSet = this.nodeSet.extend(...spec.propSources);
           this.strict = false;
           this.bufferLength = DefaultBufferLength;
           let tokenArray = decodeArray(spec.tokenData);
           this.context = spec.context;
           this.specializerSpecs = spec.specialized || [];
           this.specialized = new Uint16Array(this.specializerSpecs.length);
           for (let i = 0; i < this.specializerSpecs.length; i++)
               this.specialized[i] = this.specializerSpecs[i].term;
           this.specializers = this.specializerSpecs.map(getSpecializer);
           this.states = decodeArray(spec.states, Uint32Array);
           this.data = decodeArray(spec.stateData);
           this.goto = decodeArray(spec.goto);
           this.maxTerm = spec.maxTerm;
           this.tokenizers = spec.tokenizers.map(value => typeof value == "number" ? new TokenGroup(tokenArray, value) : value);
           this.topRules = spec.topRules;
           this.dialects = spec.dialects || {};
           this.dynamicPrecedences = spec.dynamicPrecedences || null;
           this.tokenPrecTable = spec.tokenPrec;
           this.termNames = spec.termNames || null;
           this.maxNode = this.nodeSet.types.length - 1;
           this.dialect = this.parseDialect();
           this.top = this.topRules[Object.keys(this.topRules)[0]];
       }
       createParse(input, fragments, ranges) {
           let parse = new Parse(this, input, fragments, ranges);
           for (let w of this.wrappers)
               parse = w(parse, input, fragments, ranges);
           return parse;
       }
       /// Get a goto table entry @internal
       getGoto(state, term, loose = false) {
           let table = this.goto;
           if (term >= table[0])
               return -1;
           for (let pos = table[term + 1];;) {
               let groupTag = table[pos++], last = groupTag & 1;
               let target = table[pos++];
               if (last && loose)
                   return target;
               for (let end = pos + (groupTag >> 1); pos < end; pos++)
                   if (table[pos] == state)
                       return target;
               if (last)
                   return -1;
           }
       }
       /// Check if this state has an action for a given terminal @internal
       hasAction(state, terminal) {
           let data = this.data;
           for (let set = 0; set < 2; set++) {
               for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {
                   if ((next = data[i]) == 65535 /* End */) {
                       if (data[i + 1] == 1 /* Next */)
                           next = data[i = pair(data, i + 2)];
                       else if (data[i + 1] == 2 /* Other */)
                           return pair(data, i + 2);
                       else
                           break;
                   }
                   if (next == terminal || next == 0 /* Err */)
                       return pair(data, i + 1);
               }
           }
           return 0;
       }
       /// @internal
       stateSlot(state, slot) {
           return this.states[(state * 6 /* Size */) + slot];
       }
       /// @internal
       stateFlag(state, flag) {
           return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;
       }
       /// @internal
       validAction(state, action) {
           if (action == this.stateSlot(state, 4 /* DefaultReduce */))
               return true;
           for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {
               if (this.data[i] == 65535 /* End */) {
                   if (this.data[i + 1] == 1 /* Next */)
                       i = pair(this.data, i + 2);
                   else
                       return false;
               }
               if (action == pair(this.data, i + 1))
                   return true;
           }
       }
       /// Get the states that can follow this one through shift actions or
       /// goto jumps. @internal
       nextStates(state) {
           let result = [];
           for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {
               if (this.data[i] == 65535 /* End */) {
                   if (this.data[i + 1] == 1 /* Next */)
                       i = pair(this.data, i + 2);
                   else
                       break;
               }
               if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0) {
                   let value = this.data[i + 1];
                   if (!result.some((v, i) => (i & 1) && v == value))
                       result.push(this.data[i], value);
               }
           }
           return result;
       }
       /// @internal
       overrides(token, prev) {
           let iPrev = findOffset(this.data, this.tokenPrecTable, prev);
           return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;
       }
       /// Configure the parser. Returns a new parser instance that has the
       /// given settings modified. Settings not provided in `config` are
       /// kept from the original parser.
       configure(config) {
           // Hideous reflection-based kludge to make it easy to create a
           // slightly modified copy of a parser.
           let copy = Object.assign(Object.create(LRParser.prototype), this);
           if (config.props)
               copy.nodeSet = this.nodeSet.extend(...config.props);
           if (config.top) {
               let info = this.topRules[config.top];
               if (!info)
                   throw new RangeError(`Invalid top rule name ${config.top}`);
               copy.top = info;
           }
           if (config.tokenizers)
               copy.tokenizers = this.tokenizers.map(t => {
                   let found = config.tokenizers.find(r => r.from == t);
                   return found ? found.to : t;
               });
           if (config.specializers) {
               copy.specializers = this.specializers.slice();
               copy.specializerSpecs = this.specializerSpecs.map((s, i) => {
                   let found = config.specializers.find(r => r.from == s.external);
                   if (!found)
                       return s;
                   let spec = Object.assign(Object.assign({}, s), { external: found.to });
                   copy.specializers[i] = getSpecializer(spec);
                   return spec;
               });
           }
           if (config.contextTracker)
               copy.context = config.contextTracker;
           if (config.dialect)
               copy.dialect = this.parseDialect(config.dialect);
           if (config.strict != null)
               copy.strict = config.strict;
           if (config.wrap)
               copy.wrappers = copy.wrappers.concat(config.wrap);
           if (config.bufferLength != null)
               copy.bufferLength = config.bufferLength;
           return copy;
       }
       /// Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
       /// are registered for this parser.
       hasWrappers() {
           return this.wrappers.length > 0;
       }
       /// Returns the name associated with a given term. This will only
       /// work for all terms when the parser was generated with the
       /// `--names` option. By default, only the names of tagged terms are
       /// stored.
       getName(term) {
           return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);
       }
       /// The eof term id is always allocated directly after the node
       /// types. @internal
       get eofTerm() { return this.maxNode + 1; }
       /// The type of top node produced by the parser.
       get topNode() { return this.nodeSet.types[this.top[1]]; }
       /// @internal
       dynamicPrecedence(term) {
           let prec = this.dynamicPrecedences;
           return prec == null ? 0 : prec[term] || 0;
       }
       /// @internal
       parseDialect(dialect) {
           let values = Object.keys(this.dialects), flags = values.map(() => false);
           if (dialect)
               for (let part of dialect.split(" ")) {
                   let id = values.indexOf(part);
                   if (id >= 0)
                       flags[id] = true;
               }
           let disabled = null;
           for (let i = 0; i < values.length; i++)
               if (!flags[i]) {
                   for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)
                       (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;
               }
           return new Dialect(dialect, flags, disabled);
       }
       /// Used by the output of the parser generator. Not available to
       /// user code.
       static deserialize(spec) {
           return new LRParser(spec);
       }
   }
   function pair(data, off) { return data[off] | (data[off + 1] << 16); }
   function findOffset(data, start, term) {
       for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)
           if (next == term)
               return i - start;
       return -1;
   }
   function findFinished(stacks) {
       let best = null;
       for (let stack of stacks) {
           let stopped = stack.p.stoppedAt;
           if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&
               stack.p.parser.stateFlag(stack.state, 2 /* Accepting */) &&
               (!best || best.score < stack.score))
               best = stack;
       }
       return best;
   }
   function getSpecializer(spec) {
       if (spec.external) {
           let mask = spec.extend ? 1 /* Extend */ : 0 /* Specialize */;
           return (value, stack) => (spec.external(value, stack) << 1) | mask;
       }
       return spec.get;
   }

   // This file was generated by lezer-generator. You probably shouldn't edit it.
   const TSExtends = 1,
     noSemi = 281,
     incdec = 2,
     incdecPrefix = 3,
     templateContent = 282,
     InterpolationStart = 4,
     templateEnd = 283,
     insertSemi = 284,
     spaces = 286,
     newline = 287,
     LineComment = 5,
     BlockComment = 6,
     Dialect_ts = 1;

   /* Hand-written tokenizers for JavaScript tokens that can't be
      expressed by lezer's built-in tokenizer. */

   const space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
                  8201, 8202, 8232, 8233, 8239, 8287, 12288];

   const braceR = 125, braceL = 123, semicolon = 59, slash = 47, star = 42,
         plus = 43, minus = 45, dollar = 36, backtick = 96, backslash = 92;

   const trackNewline = new ContextTracker({
     start: false,
     shift(context, term) {
       return term == LineComment || term == BlockComment || term == spaces ? context : term == newline
     },
     strict: false
   });

   const insertSemicolon = new ExternalTokenizer((input, stack) => {
     let {next} = input;
     if ((next == braceR || next == -1 || stack.context) && stack.canShift(insertSemi))
       input.acceptToken(insertSemi);
   }, {contextual: true, fallback: true});

   const noSemicolon = new ExternalTokenizer((input, stack) => {
     let {next} = input, after;
     if (space.indexOf(next) > -1) return
     if (next == slash && ((after = input.peek(1)) == slash || after == star)) return
     if (next != braceR && next != semicolon && next != -1 && !stack.context && stack.canShift(noSemi))
       input.acceptToken(noSemi);
   }, {contextual: true});

   const incdecToken = new ExternalTokenizer((input, stack) => {
     let {next} = input;
     if (next == plus || next == minus) {
       input.advance();
       if (next == input.next) {
         input.advance();
         let mayPostfix = !stack.context && stack.canShift(incdec);
         input.acceptToken(mayPostfix ? incdec : incdecPrefix);
       }
     }
   }, {contextual: true});

   const template = new ExternalTokenizer(input => {
     for (let afterDollar = false, i = 0;; i++) {
       let {next} = input;
       if (next < 0) {
         if (i) input.acceptToken(templateContent);
         break
       } else if (next == backtick) {
         if (i) input.acceptToken(templateContent);
         else input.acceptToken(templateEnd, 1);
         break
       } else if (next == braceL && afterDollar) {
         if (i == 1) input.acceptToken(InterpolationStart, 1);
         else input.acceptToken(templateContent, -1);
         break
       } else if (next == 10 /* "\n" */ && i) {
         // Break up template strings on lines, to avoid huge tokens
         input.advance();
         input.acceptToken(templateContent);
         break
       } else if (next == backslash) {
         input.advance();
       }
       afterDollar = next == dollar;
       input.advance();
     }
   });

   const tsExtends = new ExternalTokenizer((input, stack) => {
     if (input.next != 101 || !stack.dialectEnabled(Dialect_ts)) return
     input.advance();
     for (let i = 0; i < 6; i++) {
       if (input.next != "xtends".charCodeAt(i)) return
       input.advance();
     }
     if (input.next >= 57 && input.next <= 65 || input.next >= 48 && input.next <= 90 ||
         input.next == 95 || input.next >= 97 && input.next <= 122 || input.next > 160) return
     input.acceptToken(TSExtends);
   });

   const jsHighlight = styleTags({
     "get set async static": tags.modifier,
     "for while do if else switch try catch finally return throw break continue default case": tags.controlKeyword,
     "in of await yield void typeof delete instanceof": tags.operatorKeyword,
     "let var const function class extends": tags.definitionKeyword,
     "import export from": tags.moduleKeyword,
     "with debugger as new": tags.keyword,
     TemplateString: tags.special(tags.string),
     super: tags.atom,
     BooleanLiteral: tags.bool,
     this: tags.self,
     null: tags.null,
     Star: tags.modifier,
     VariableName: tags.variableName,
     "CallExpression/VariableName TaggedTemplateExpression/VariableName": tags.function(tags.variableName),
     VariableDefinition: tags.definition(tags.variableName),
     Label: tags.labelName,
     PropertyName: tags.propertyName,
     PrivatePropertyName: tags.special(tags.propertyName),
     "CallExpression/MemberExpression/PropertyName": tags.function(tags.propertyName),
     "FunctionDeclaration/VariableDefinition": tags.function(tags.definition(tags.variableName)),
     "ClassDeclaration/VariableDefinition": tags.definition(tags.className),
     PropertyDefinition: tags.definition(tags.propertyName),
     PrivatePropertyDefinition: tags.definition(tags.special(tags.propertyName)),
     UpdateOp: tags.updateOperator,
     LineComment: tags.lineComment,
     BlockComment: tags.blockComment,
     Number: tags.number,
     String: tags.string,
     ArithOp: tags.arithmeticOperator,
     LogicOp: tags.logicOperator,
     BitOp: tags.bitwiseOperator,
     CompareOp: tags.compareOperator,
     RegExp: tags.regexp,
     Equals: tags.definitionOperator,
     Arrow: tags.function(tags.punctuation),
     ": Spread": tags.punctuation,
     "( )": tags.paren,
     "[ ]": tags.squareBracket,
     "{ }": tags.brace,
     "InterpolationStart InterpolationEnd": tags.special(tags.brace),
     ".": tags.derefOperator,
     ", ;": tags.separator,

     TypeName: tags.typeName,
     TypeDefinition: tags.definition(tags.typeName),
     "type enum interface implements namespace module declare": tags.definitionKeyword,
     "abstract global Privacy readonly override": tags.modifier,
     "is keyof unique infer": tags.operatorKeyword,

     JSXAttributeValue: tags.attributeValue,
     JSXText: tags.content,
     "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": tags.angleBracket,
     "JSXIdentifier JSXNameSpacedName": tags.tagName,
     "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": tags.attributeName
   });

   // This file was generated by lezer-generator. You probably shouldn't edit it.
   const spec_identifier = {__proto__:null,export:18, as:23, from:29, default:32, async:37, function:38, this:48, true:56, false:56, void:66, typeof:70, null:86, super:88, new:122, await:139, yield:141, delete:142, class:152, extends:154, public:197, private:197, protected:197, readonly:199, instanceof:220, in:222, const:224, import:256, keyof:307, unique:311, infer:317, is:351, abstract:371, implements:373, type:375, let:378, var:380, interface:387, enum:391, namespace:397, module:399, declare:403, global:407, for:428, of:437, while:440, with:444, do:448, if:452, else:454, switch:458, case:464, try:470, catch:474, finally:478, return:482, throw:486, break:490, continue:494, debugger:498};
   const spec_word = {__proto__:null,async:109, get:111, set:113, public:161, private:161, protected:161, static:163, abstract:165, override:167, readonly:173, new:355};
   const spec_LessThan = {__proto__:null,"<":129};
   const parser = LRParser.deserialize({
     version: 14,
     states: "$8SO`QdOOO'QQ(C|O'#ChO'XOWO'#DVO)dQdO'#D]O)tQdO'#DhO){QdO'#DrO-xQdO'#DxOOQO'#E]'#E]O.]Q`O'#E[O.bQ`O'#E[OOQ(C['#Ef'#EfO0aQ(C|O'#ItO2wQ(C|O'#IuO3eQ`O'#EzO3jQ!bO'#FaOOQ(C['#FS'#FSO3rO#tO'#FSO4QQ&jO'#FhO5bQ`O'#FgOOQ(C['#Iu'#IuOOQ(CW'#It'#ItOOQS'#J^'#J^O5gQ`O'#HpO5lQ(ChO'#HqOOQS'#Ih'#IhOOQS'#Hr'#HrQ`QdOOO){QdO'#DjO5tQ`O'#G[O5yQ&jO'#CmO6XQ`O'#EZO6dQ`O'#EgO6iQ,UO'#FRO7TQ`O'#G[O7YQ`O'#G`O7eQ`O'#G`O7sQ`O'#GcO7sQ`O'#GdO7sQ`O'#GfO5tQ`O'#GiO8dQ`O'#GlO9rQ`O'#CdO:SQ`O'#GyO:[Q`O'#HPO:[Q`O'#HRO`QdO'#HTO:[Q`O'#HVO:[Q`O'#HYO:aQ`O'#H`O:fQ(CjO'#HfO){QdO'#HhO:qQ(CjO'#HjO:|Q(CjO'#HlO5lQ(ChO'#HnO){QdO'#DWOOOW'#Ht'#HtO;XOWO,59qOOQ(C[,59q,59qO=jQtO'#ChO=tQdO'#HuO>XQ`O'#IvO@WQtO'#IvO'dQdO'#IvO@_Q`O,59wO@uQ7[O'#DbOAnQ`O'#E]OA{Q`O'#JROBWQ`O'#JQOBWQ`O'#JQOB`Q`O,5:yOBeQ`O'#JPOBlQaO'#DyO5yQ&jO'#EZOBzQ`O'#EZOCVQpO'#FROOQ(C[,5:S,5:SOC_QdO,5:SOE]Q(C|O,5:^OEyQ`O,5:dOFdQ(ChO'#JOO7YQ`O'#I}OFkQ`O'#I}OFsQ`O,5:xOFxQ`O'#I}OGWQdO,5:vOIWQ&jO'#EWOJeQ`O,5:vOKwQ&jO'#DlOLOQdO'#DqOLYQ7[O,5;PO){QdO,5;POOQS'#Er'#ErOOQS'#Et'#EtO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;RO){QdO,5;ROOQS'#Ex'#ExOLbQdO,5;cOOQ(C[,5;h,5;hOOQ(C[,5;i,5;iONbQ`O,5;iOOQ(C[,5;j,5;jO){QdO'#IPONgQ(ChO,5<TO! RQ&jO,5;RO){QdO,5;fO! kQ!bO'#JVO! YQ!bO'#JVO! rQ!bO'#JVO!!TQ!bO,5;qOOOO,5;{,5;{O!!cQdO'#FcOOOO'#IO'#IOO3rO#tO,5;nO!!jQ!bO'#FeOOQ(C[,5;n,5;nO!#WQ,VO'#CrOOQ(C]'#Cu'#CuO!#kQ`O'#CuO!#pOWO'#CyO!$^Q,VO,5<QO!$eQ`O,5<SO!%tQ&jO'#FrO!&RQ`O'#FsO!&WQ`O'#FsO!&]Q&jO'#FwO!'[Q7[O'#F{O!'}Q,VO'#IqOOQ(C]'#Iq'#IqO!(XQaO'#IpO!(gQ`O'#IoO!(oQ`O'#CqOOQ(C]'#Cs'#CsOOQ(C]'#C|'#C|O!(wQ`O'#DOOJjQ&jO'#FjOJjQ&jO'#FlO!(|Q`O'#FnO!)RQ`O'#FoO!&WQ`O'#FuOJjQ&jO'#FzO!)WQ`O'#E^O!)oQ`O,5<RO`QdO,5>[OOQS'#Ik'#IkOOQS,5>],5>]OOQS-E;p-E;pO!+kQ(C|O,5:UOOQ(CX'#Cp'#CpO!,[Q&kO,5<vOOQO'#Cf'#CfO!,mQ(ChO'#IlO5bQ`O'#IlO:aQ`O,59XO!-OQ!bO,59XO!-WQ&jO,59XO5yQ&jO,59XO!-cQ`O,5:vO!-kQ`O'#GxO!-yQ`O'#JbO){QdO,5;kO!.RQ7[O,5;mO!.WQ`O,5=cO!.]Q`O,5=cO!.bQ`O,5=cO5lQ(ChO,5=cO5tQ`O,5<vO!.pQ`O'#E_O!/UQ7[O'#E`OOQ(CW'#JP'#JPO!/gQ(ChO'#J_O5lQ(ChO,5<zO7sQ`O,5=QOOQP'#Cr'#CrO!/rQ!bO,5<}O!/zQ!cO,5=OO!0VQ`O,5=QO!0[QpO,5=TO:aQ`O'#GnO5tQ`O'#GpO!0dQ`O'#GpO5yQ&jO'#GsO!0iQ`O'#GsOOQS,5=W,5=WO!0nQ`O'#GtO!0vQ`O'#CmO!0{Q`O,59OO!1VQ`O,59OO!3XQdO,59OOOQS,59O,59OO!3fQ(ChO,59OO){QdO,59OO!3qQdO'#G{OOQS'#G|'#G|OOQS'#G}'#G}O`QdO,5=eO!4RQ`O,5=eO){QdO'#DxO`QdO,5=kO`QdO,5=mO!4WQ`O,5=oO`QdO,5=qO!4]Q`O,5=tO!4bQdO,5=zOOQS,5>Q,5>QO){QdO,5>QO5lQ(ChO,5>SOOQS,5>U,5>UO!8cQ`O,5>UOOQS,5>W,5>WO!8cQ`O,5>WOOQS,5>Y,5>YO!8hQpO,59rOOOW-E;r-E;rOOQ(C[1G/]1G/]O!8mQtO,5>aO'dQdO,5>aOOQO,5>f,5>fO!8wQdO'#HuOOQO-E;s-E;sO!9UQ`O,5?bO!9^QtO,5?bO!9eQ`O,5?lOOQ(C[1G/c1G/cO!9mQ!bO'#DTOOQO'#Ix'#IxO){QdO'#IxO!:[Q!bO'#IxO!:yQ!bO'#DcO!;[Q7[O'#DcO!=gQdO'#DcO!=nQ`O'#IwO!=vQ`O,59|O!={Q`O'#EaO!>ZQ`O'#JSO!>cQ`O,5:zO!>yQ7[O'#DcO){QdO,5?mO!?TQ`O'#HzOOQO-E;x-E;xO!9eQ`O,5?lOOQ(CW1G0e1G0eO!@aQ7[O'#D|OOQ(C[,5:e,5:eO){QdO,5:eOIWQ&jO,5:eO!@hQaO,5:eO:aQ`O,5:uO!-OQ!bO,5:uO!-WQ&jO,5:uO5yQ&jO,5:uOOQ(C[1G/n1G/nOOQ(C[1G0O1G0OOOQ(CW'#EV'#EVO){QdO,5?jO!@sQ(ChO,5?jO!AUQ(ChO,5?jO!A]Q`O,5?iO!AeQ`O'#H|O!A]Q`O,5?iOOQ(CW1G0d1G0dO7YQ`O,5?iOOQ(C[1G0b1G0bO!BPQ(C|O1G0bO!CRQ(CyO,5:rOOQ(C]'#Fq'#FqO!CoQ(C}O'#IqOGWQdO1G0bO!EqQ,VO'#IyO!E{Q`O,5:WO!FQQtO'#IzO){QdO'#IzO!F[Q`O,5:]OOQ(C]'#DT'#DTOOQ(C[1G0k1G0kO!FaQ`O1G0kO!HrQ(C|O1G0mO!HyQ(C|O1G0mO!K^Q(C|O1G0mO!KeQ(C|O1G0mO!MlQ(C|O1G0mO!NPQ(C|O1G0mO#!pQ(C|O1G0mO#!wQ(C|O1G0mO#%[Q(C|O1G0mO#%cQ(C|O1G0mO#'WQ(C|O1G0mO#*QQMlO'#ChO#+{QMlO1G0}O#-vQMlO'#IuOOQ(C[1G1T1G1TO#.ZQ(C|O,5>kOOQ(CW-E;}-E;}O#.zQ(C}O1G0mOOQ(C[1G0m1G0mO#1PQ(C|O1G1QO#1pQ!bO,5;sO#1uQ!bO,5;tO#1zQ!bO'#F[O#2`Q`O'#FZOOQO'#JW'#JWOOQO'#H}'#H}O#2eQ!bO1G1]OOQ(C[1G1]1G1]OOOO1G1f1G1fO#2sQMlO'#ItO#2}Q`O,5;}OLbQdO,5;}OOOO-E;|-E;|OOQ(C[1G1Y1G1YOOQ(C[,5<P,5<PO#3SQ!bO,5<POOQ(C],59a,59aOIWQ&jO'#C{OOOW'#Hs'#HsO#3XOWO,59eOOQ(C],59e,59eO){QdO1G1lO!)RQ`O'#IRO#3dQ`O,5<eOOQ(C],5<b,5<bOOQO'#GV'#GVOJjQ&jO,5<pOOQO'#GX'#GXOJjQ&jO,5<rOIWQ&jO,5<tOOQO1G1n1G1nO#3oQqO'#CpO#4SQqO,5<^O#4ZQ`O'#JZO5tQ`O'#JZO#4iQ`O,5<`OJjQ&jO,5<_O#4nQ`O'#FtO#4yQ`O,5<_O#5OQqO'#FqO#5]QqO'#J[O#5gQ`O'#J[OIWQ&jO'#J[O#5lQ`O,5<cOOQ(CW'#Dg'#DgO#5qQ!bO'#F|O!'VQ7[O'#F|O!'VQ7[O'#GOO#6SQ`O'#GPO!&WQ`O'#GSO#6XQ(ChO'#ITO#6dQ7[O,5<gOOQ(C],5<g,5<gO#6kQ7[O'#F|O#6yQ7[O'#F}O#7RQ7[O'#F}OOQ(C],5<u,5<uOJjQ&jO,5?[OJjQ&jO,5?[O#7WQ`O'#IUO#7cQ`O,5?ZO#7kQ`O,59]OOQ(C]'#Ch'#ChO#8[Q,VO,59jOOQ(C],59j,59jO#8}Q,VO,5<UO#9pQ,VO,5<WO#9zQ`O,5<YOOQ(C],5<Z,5<ZO#:PQ`O,5<aO#:UQ,VO,5<fOGWQdO1G1mO#:fQ`O1G1mOOQS1G3v1G3vOOQ(C[1G/p1G/pONbQ`O1G/pOOQS1G2b1G2bOIWQ&jO1G2bO){QdO1G2bOIWQ&jO1G2bO#:kQaO1G2bO#<QQ&jO'#EWOOQ(CW,5?W,5?WO#<[Q(ChO,5?WOOQS1G.s1G.sO:aQ`O1G.sO!-OQ!bO1G.sO!-WQ&jO1G.sO#<mQ`O1G0bO#<rQ`O'#ChO#<}Q`O'#JcO#=VQ`O,5=dO#=[Q`O'#JcO#=aQ`O'#JcO#=iQ`O'#I^O#=wQ`O,5?|O#>PQtO1G1VOOQ(C[1G1X1G1XO5tQ`O1G2}O#>WQ`O1G2}O#>]Q`O1G2}O#>bQ`O1G2}OOQS1G2}1G2}O#>gQ&kO1G2bO7YQ`O'#JQO7YQ`O'#EaO7YQ`O'#IWO#>xQ(ChO,5?yOOQS1G2f1G2fO!0VQ`O1G2lOIWQ&jO1G2iO#?TQ`O1G2iOOQS1G2j1G2jOIWQ&jO1G2jO#?YQaO1G2jO#?bQ7[O'#GhOOQS1G2l1G2lO!'VQ7[O'#IYO!0[QpO1G2oOOQS1G2o1G2oOOQS,5=Y,5=YO#?jQ&kO,5=[O5tQ`O,5=[O#6SQ`O,5=_O5bQ`O,5=_O!-OQ!bO,5=_O!-WQ&jO,5=_O5yQ&jO,5=_O#?{Q`O'#JaO#@WQ`O,5=`OOQS1G.j1G.jO#@]Q(ChO1G.jO#@hQ`O1G.jO#@mQ`O1G.jO5lQ(ChO1G.jO#@uQtO,5@OO#APQ`O,5@OO#A[QdO,5=gO#AcQ`O,5=gO7YQ`O,5@OOOQS1G3P1G3PO`QdO1G3POOQS1G3V1G3VOOQS1G3X1G3XO:[Q`O1G3ZO#AhQdO1G3]O#EcQdO'#H[OOQS1G3`1G3`O#EpQ`O'#HbO:aQ`O'#HdOOQS1G3f1G3fO#ExQdO1G3fO5lQ(ChO1G3lOOQS1G3n1G3nOOQ(CW'#Fx'#FxO5lQ(ChO1G3pO5lQ(ChO1G3rOOOW1G/^1G/^O#IvQpO,5<TO#JOQtO1G3{OOQO1G4Q1G4QO){QdO,5>aO#JYQ`O1G4|O#JbQ`O1G5WO#JjQ`O,5?dOLbQdO,5:{O7YQ`O,5:{O:aQ`O,59}OLbQdO,59}O!-OQ!bO,59}O#JoQMlO,59}OOQO,5:{,5:{O#JyQ7[O'#HvO#KaQ`O,5?cOOQ(C[1G/h1G/hO#KiQ7[O'#H{O#K}Q`O,5?nOOQ(CW1G0f1G0fO!;[Q7[O,59}O#LVQtO1G5XO7YQ`O,5>fOOQ(CW'#ES'#ESO#LaQ(DjO'#ETO!@XQ7[O'#D}OOQO'#Hy'#HyO#L{Q7[O,5:hOOQ(C[,5:h,5:hO#MSQ7[O'#D}O#MeQ7[O'#D}O#MlQ7[O'#EYO#MoQ7[O'#ETO#M|Q7[O'#ETO!@XQ7[O'#ETO#NaQ`O1G0PO#NfQqO1G0POOQ(C[1G0P1G0PO){QdO1G0POIWQ&jO1G0POOQ(C[1G0a1G0aO:aQ`O1G0aO!-OQ!bO1G0aO!-WQ&jO1G0aO#NmQ(C|O1G5UO){QdO1G5UO#N}Q(ChO1G5UO$ `Q`O1G5TO7YQ`O,5>hOOQO,5>h,5>hO$ hQ`O,5>hOOQO-E;z-E;zO$ `Q`O1G5TO$ vQ(C}O,59jO$#xQ(C}O,5<UO$%}Q(C}O,5<WO$(SQ(C}O,5<fOOQ(C[7+%|7+%|O$*_Q(C|O7+%|O$+OQ&jO'#HwO$+YQ`O,5?eOOQ(C]1G/r1G/rO$+bQdO'#HxO$+oQ`O,5?fO$+wQtO,5?fOOQ(C[1G/w1G/wOOQ(C[7+&V7+&VO$,RQMlO,5:^O){QdO7+&iO$,]QMlO,5:UOOQO1G1_1G1_OOQO1G1`1G1`O$,jQ!LQO,5;vOLbQdO,5;uOOQO-E;{-E;{OOQ(C[7+&w7+&wOOOO7+'Q7+'QOOOO1G1i1G1iO$,uQ`O1G1iOOQ(C[1G1k1G1kO$,zQqO,59gOOOW-E;q-E;qOOQ(C]1G/P1G/PO$-RQ(C|O7+'WOOQ(C],5>m,5>mO$-rQ`O,5>mOOQ(C]1G2P1G2PP$-wQ`O'#IRPOQ(C]-E<P-E<PO$.hQ,VO1G2[O$/ZQ,VO1G2^O$/eQqO1G2`OOQ(C]1G1x1G1xO$/lQ`O'#IQO$/zQ`O,5?uO$/zQ`O,5?uO$0SQ`O,5?uO$0_Q`O,5?uOOQO1G1z1G1zO$0mQ,VO1G1yOJjQ&jO1G1yO$0}Q&jO'#ISO$1_Q`O,5?vOIWQ&jO,5?vO$1gQqO,5?vOOQ(C]1G1}1G1}OOQ(CW,5<h,5<hOOQ(CW,5<i,5<iO$1qQ`O,5<iO#5}Q`O,5<iO!-OQ!bO,5<hO$1vQ`O,5<jOOQ(CW,5<k,5<kO$1qQ`O,5<nOOQO,5>o,5>oOOQO-E<R-E<ROOQ(C]1G2R1G2RO!'VQ7[O,5<hO$2OQ`O,5<iO!'VQ7[O,5<jO!'VQ7[O,5<iO$2ZQ,VO1G4vO$2eQ,VO1G4vOOQO,5>p,5>pOOQO-E<S-E<SOOQP1G.w1G.wO!.RQ7[O,59lO){QdO,59lO$2rQ`O1G1tOJjQ&jO1G1{O$2wQ(C|O7+'XOOQ(C[7+'X7+'XOGWQdO7+'XOOQ(C[7+%[7+%[O$3hQqO'#J]O#NaQ`O7+'|O$3rQ`O7+'|O$3zQqO7+'|OOQS7+'|7+'|OIWQ&jO7+'|O){QdO7+'|OIWQ&jO7+'|O$4UQ(CyO'#ChO$4iQ(CyO,5<lO$5ZQ`O,5<lOOQ(CW1G4r1G4rOOQS7+$_7+$_O:aQ`O7+$_O!-OQ!bO7+$_OGWQdO7+%|O$5`Q`O'#I]O$5qQ`O,5?}OOQO1G3O1G3OO5tQ`O,5?}O$5qQ`O,5?}O$5yQ`O,5?}OOQO,5>x,5>xOOQO-E<[-E<[OOQ(C[7+&q7+&qO$6OQ`O7+(iO5lQ(ChO7+(iO5tQ`O7+(iO$6TQ`O7+(iO$6YQaO7+'|OOQ(CW,5>r,5>rOOQ(CW-E<U-E<UOOQS7+(W7+(WO$6hQ(CyO7+(TOIWQ&jO7+(TO$6rQqO7+(UOOQS7+(U7+(UOIWQ&jO7+(UO$6yQ`O'#J`O$7UQ`O,5=SOOQO,5>t,5>tOOQO-E<W-E<WOOQS7+(Z7+(ZO$8OQ7[O'#GqOOQS1G2v1G2vOIWQ&jO1G2vO){QdO1G2vOIWQ&jO1G2vO$8VQaO1G2vO$8eQ&kO1G2vO5lQ(ChO1G2yO#6SQ`O1G2yO5bQ`O1G2yO!-OQ!bO1G2yO!-WQ&jO1G2yO$8vQ`O'#I[O$9RQ`O,5?{O$9ZQ7[O,5?{OOQ(CW1G2z1G2zOOQS7+$U7+$UO$9cQ`O7+$UO5lQ(ChO7+$UO$9hQ`O7+$UO){QdO1G5jO){QdO1G5kO$9mQdO1G3RO$9tQ`O1G3RO$9yQdO1G3RO$:QQ(ChO1G5jOOQS7+(k7+(kO5lQ(ChO7+(uO`QdO7+(wOOQS'#Jf'#JfOOQS'#I_'#I_O$:[QdO,5=vOOQS,5=v,5=vO){QdO'#H]O$:iQ`O'#H_OOQS,5=|,5=|O7YQ`O,5=|OOQS,5>O,5>OOOQS7+)Q7+)QOOQS7+)W7+)WOOQS7+)[7+)[OOQS7+)^7+)^OOQO1G5O1G5OO$:nQMlO1G0gO$:xQ`O1G0gOOQO1G/i1G/iO$;TQMlO1G/iO:aQ`O1G/iOLbQdO'#DcOOQO,5>b,5>bOOQO-E;t-E;tOOQO,5>g,5>gOOQO-E;y-E;yO!-OQ!bO1G/iO:aQ`O,5:iOOQO,5:o,5:oO){QdO,5:oO$;_Q(ChO,5:oO$;jQ(ChO,5:oO!-OQ!bO,5:iOOQO-E;w-E;wOOQ(C[1G0S1G0SO!@XQ7[O,5:iO$;xQ7[O,5:iO$<ZQ(DjO,5:oO$<uQ7[O,5:iO!@XQ7[O,5:oOOQO,5:t,5:tO$<|Q7[O,5:oO$=ZQ(ChO,5:oOOQ(C[7+%k7+%kO#NaQ`O7+%kO#NfQqO7+%kOOQ(C[7+%{7+%{O:aQ`O7+%{O!-OQ!bO7+%{O$=oQ(C|O7+*pO){QdO7+*pOOQO1G4S1G4SO7YQ`O1G4SO$>PQ`O7+*oO$>XQ(C}O1G2[O$@^Q(C}O1G2^O$BcQ(C}O1G1yO$DnQ,VO,5>cOOQO-E;u-E;uO$DxQtO,5>dO){QdO,5>dOOQO-E;v-E;vO$ESQ`O1G5QO$E[QMlO1G0bO$GcQMlO1G0mO$GjQMlO1G0mO$IkQMlO1G0mO$IrQMlO1G0mO$KgQMlO1G0mO$KzQMlO1G0mO$NXQMlO1G0mO$N`QMlO1G0mO%!aQMlO1G0mO%!hQMlO1G0mO%$]QMlO1G0mO%$pQ(C|O<<JTO%%rQMmO1G0mO%'|QMmO'#IqO%)iQMlO1G1QOLbQdO'#F^OOQO'#JX'#JXOOQO1G1b1G1bO%)vQ`O1G1aO%){QMlO,5>kOOOO7+'T7+'TOOOW1G/R1G/ROOQ(C]1G4X1G4XOJjQ&jO7+'zO%*VQ`O,5>lO5tQ`O,5>lOOQO-E<O-E<OO%*eQ`O1G5aO%*eQ`O1G5aO%*mQ`O1G5aO%*xQ,VO7+'eO%+YQqO,5>nO%+dQ`O,5>nOIWQ&jO,5>nOOQO-E<Q-E<QO%+iQqO1G5bO%+sQ`O1G5bOOQ(CW1G2T1G2TO$1qQ`O1G2TOOQ(CW1G2S1G2SO%+{Q`O1G2UOIWQ&jO1G2UOOQ(CW1G2Y1G2YO!-OQ!bO1G2SO#5}Q`O1G2TO%,QQ`O1G2UO%,YQ`O1G2TOJjQ&jO7+*bOOQ(C]1G/W1G/WO%,eQ`O1G/WOOQ(C]7+'`7+'`O%,jQ,VO7+'gO%,zQ(C|O<<JsOOQ(C[<<Js<<JsOIWQ&jO'#IVO%-kQ`O,5?wOOQS<<Kh<<KhOIWQ&jO<<KhO#NaQ`O<<KhO%-sQ`O<<KhO%-{QqO<<KhOIWQ&jO1G2WOOQS<<Gy<<GyO:aQ`O<<GyO%.VQ(C|O<<IhOOQ(C[<<Ih<<IhOOQO,5>w,5>wO%.vQ`O,5>wO%.{Q`O,5>wOOQO-E<Z-E<ZO%/TQ`O1G5iO%/TQ`O1G5iO5tQ`O1G5iO%/]Q`O<<LTOOQS<<LT<<LTO%/bQ`O<<LTO5lQ(ChO<<LTO){QdO<<KhOIWQ&jO<<KhOOQS<<Ko<<KoO$6hQ(CyO<<KoOOQS<<Kp<<KpO$6rQqO<<KpO%/gQ7[O'#IXO%/rQ`O,5?zOLbQdO,5?zOOQS1G2n1G2nO#LaQ(DjO'#ETO!@XQ7[O'#GrOOQO'#IZ'#IZO%/zQ7[O,5=]OOQS,5=],5=]O%0RQ7[O'#ETO%0^Q7[O'#ETO%0uQ7[O'#ETO%1PQ7[O'#GrO%1bQ`O7+(bO%1gQ`O7+(bO%1oQqO7+(bOOQS7+(b7+(bOIWQ&jO7+(bO){QdO7+(bOIWQ&jO7+(bO%1yQaO7+(bOOQS7+(e7+(eO5lQ(ChO7+(eO#6SQ`O7+(eO5bQ`O7+(eO!-OQ!bO7+(eO%2XQ`O,5>vOOQO-E<Y-E<YOOQO'#Gu'#GuO%2dQ`O1G5gO5lQ(ChO<<GpOOQS<<Gp<<GpO%2lQ`O<<GpO%2qQ`O7++UO%2vQ`O7++VOOQS7+(m7+(mO%2{Q`O7+(mO%3QQdO7+(mO%3XQ`O7+(mO){QdO7++UO){QdO7++VOOQS<<La<<LaOOQS<<Lc<<LcOOQS-E<]-E<]OOQS1G3b1G3bO%3^Q`O,5=wOOQS,5=y,5=yO%3cQ`O1G3hOLbQdO7+&ROOQO7+%T7+%TO%3hQMlO1G5XO:aQ`O7+%TOOQO1G0T1G0TO%3rQ(C|O1G0ZOOQO1G0Z1G0ZO){QdO1G0ZO%3|Q(ChO1G0ZO:aQ`O1G0TO!-OQ!bO1G0TO!@XQ7[O1G0TO%4XQ(ChO1G0ZO%4gQ7[O1G0TO%4xQ(ChO1G0ZO%5^Q(DjO1G0ZO%5hQ7[O1G0TO!@XQ7[O1G0ZOOQ(C[<<IV<<IVOOQ(C[<<Ig<<IgO:aQ`O<<IgO%5oQ(C|O<<N[OOQO7+)n7+)nO%6PQ(C}O7+'eO%8[Q(C}O7+'gO%:gQtO1G4OO%:qQMlO7+%|O%;gQMmO,59jO%=hQMmO,5<UO%?lQMmO,5<WO%A[QMmO,5<fO%B}QMlO7+'WO%C[QMlO7+'XO%CiQ`O,5;xOOQO7+&{7+&{O%CnQ,VO<<KfOOQO1G4W1G4WO%CuQ`O1G4WO%DQQ`O1G4WO%D`Q`O7+*{O%D`Q`O7+*{OIWQ&jO1G4YO%DhQqO1G4YO%DrQ`O7+*|OOQ(CW7+'o7+'oO$1qQ`O7+'pO%DzQqO7+'pOOQ(CW7+'n7+'nO$1qQ`O7+'oO%ERQ`O7+'pOIWQ&jO7+'pO#5}Q`O7+'oO%EWQ,VO<<M|OOQ(C]7+$r7+$rO%EbQqO,5>qOOQO-E<T-E<TO#NaQ`OANASOOQSANASANASOIWQ&jOANASO%ElQ(CyO7+'rOOQSAN=eAN=eO5tQ`O1G4cOOQO1G4c1G4cO%E|Q`O1G4cO%FRQ`O7++TO%FRQ`O7++TO5lQ(ChOANAoO%FZQ`OANAoOOQSANAoANAoO%F`Q`OANASO%FhQqOANASOOQSANAZANAZOOQSANA[ANA[O%FrQ`O,5>sOOQO-E<V-E<VO%F}QMlO1G5fO#6SQ`O,5=^O5bQ`O,5=^O!-OQ!bO,5=^OOQO-E<X-E<XOOQS1G2w1G2wO$<ZQ(DjO,5:oO!@XQ7[O,5=^O%GXQ7[O,5=^O%GjQ7[O,5:oOOQS<<K|<<K|OIWQ&jO<<K|O%1bQ`O<<K|O%GtQ`O<<K|O%G|QqO<<K|O){QdO<<K|OIWQ&jO<<K|OOQS<<LP<<LPO5lQ(ChO<<LPO#6SQ`O<<LPO5bQ`O<<LPO%HWQ7[O1G4bO%H`Q`O7++ROOQSAN=[AN=[O5lQ(ChOAN=[OOQS<<Np<<NpOOQS<<Nq<<NqOOQS<<LX<<LXO%HhQ`O<<LXO%HmQdO<<LXO%HtQ`O<<NpO%HyQ`O<<NqOOQS1G3c1G3cO:aQ`O7+)SO%IOQMlO<<ImOOQO<<Ho<<HoOOQO7+%u7+%uO%3rQ(C|O7+%uO){QdO7+%uOOQO7+%o7+%oO:aQ`O7+%oO!-OQ!bO7+%oO%IYQ(ChO7+%uO!@XQ7[O7+%oO%IeQ(ChO7+%uO%IsQ7[O7+%oO%JUQ(ChO7+%uOOQ(C[AN?RAN?RO%JjQMlO<<JTO%JwQMmO1G1yO%MOQMmO1G2[O& SQMmO1G2^O&!rQMlO<<JsO&#PQMlO<<IhOOQO1G1d1G1dOJjQ&jOANAQOOQO7+)r7+)rO&#^Q`O7+)rO&#iQ`O<<NgO&#qQqO7+)tOOQ(CW<<K[<<K[O$1qQ`O<<K[OOQ(CW<<KZ<<KZO&#{QqO<<K[O$1qQ`O<<KZOOQSG26nG26nO#NaQ`OG26nOOQO7+)}7+)}O5tQ`O7+)}O&$SQ`O<<NoOOQSG27ZG27ZO5lQ(ChOG27ZOIWQ&jOG26nOLbQdO1G4_O&$[Q`O7++QO5lQ(ChO1G2xO#6SQ`O1G2xO5bQ`O1G2xO!-OQ!bO1G2xO!@XQ7[O1G2xO%5^Q(DjO1G0ZO&$dQ7[O1G2xO%1bQ`OANAhOOQSANAhANAhOIWQ&jOANAhO&$uQ`OANAhO&$}QqOANAhOOQSANAkANAkO5lQ(ChOANAkO#6SQ`OANAkOOQO'#Gv'#GvOOQO7+)|7+)|OOQSG22vG22vOOQSANAsANAsO&%XQ`OANAsOOQSAND[AND[OOQSAND]AND]OOQS<<Ln<<LnOOQO<<Ia<<IaO%3rQ(C|O<<IaOOQO<<IZ<<IZO:aQ`O<<IZO){QdO<<IaO!-OQ!bO<<IZO&%^Q(ChO<<IaO!@XQ7[O<<IZO&%iQ(ChO<<IaO&%wQMmO7+'eO&'jQMmO7+'gO&)]Q,VOG26lOOQO<<M^<<M^OOQ(CWAN@vAN@vO$1qQ`OAN@vOOQ(CWAN@uAN@uOOQSLD,YLD,YOOQO<<Mi<<MiOOQSLD,uLD,uO#NaQ`OLD,YO&)mQMlO7+)yOOQO7+(d7+(dO5lQ(ChO7+(dO#6SQ`O7+(dO5bQ`O7+(dO!-OQ!bO7+(dO!@XQ7[O7+(dOOQSG27SG27SO%1bQ`OG27SOIWQ&jOG27SOOQSG27VG27VO5lQ(ChOG27VOOQSG27_G27_OOQOAN>{AN>{OOQOAN>uAN>uO%3rQ(C|OAN>{O:aQ`OAN>uO){QdOAN>{O!-OQ!bOAN>uO&)wQ(ChOAN>{O&*SQ(C}OG26lOOQ(CWG26bG26bOOQS!$( t!$( tOOQO<<LO<<LOO5lQ(ChO<<LOO#6SQ`O<<LOO5bQ`O<<LOO!-OQ!bO<<LOOOQSLD,nLD,nO%1bQ`OLD,nOOQSLD,qLD,qOOQOG24gG24gOOQOG24aG24aO%3rQ(C|OG24gO:aQ`OG24aO){QdOG24gO&,pQ!LRO,5:rO&-gQ$ITO'#IqOOQOANAjANAjO5lQ(ChOANAjO#6SQ`OANAjO5bQ`OANAjOOQS!$(!Y!$(!YOOQOLD*RLD*ROOQOLD){LD){O%3rQ(C|OLD*RO&.ZQMmOG26lO&/|Q!LRO,59jO&0pQ!LRO,5<UO&1dQ!LRO,5<WO&2WQ!LRO,5<fOOQOG27UG27UO5lQ(ChOG27UO#6SQ`OG27UOOQO!$'Mm!$'MmO&2}Q!LRO1G2[O&3qQ!LRO1G2^O&4eQ!LRO1G1yOOQOLD,pLD,pO5lQ(ChOLD,pO&5[Q!LRO7+'eO&6RQ!LRO7+'gOOQO!$(![!$(![O&6xQ!LROG26lOLbQdO'#DrO&7oQtO'#ItOLbQdO'#DjO&7vQ(C|O'#ChO&8aQtO'#ChO&8qQdO,5:vO&:qQ&jO'#EWOLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO,5;ROLbQdO'#IPO&<OQ`O,5<TO&=eQ&jO,5;ROLbQdO,5;fO!(wQ`O'#DOO!(wQ`O'#DOO!(wQ`O'#DOOIWQ&jO'#FjO&:qQ&jO'#FjO&<WQ&jO'#FjOIWQ&jO'#FlO&:qQ&jO'#FlO&<WQ&jO'#FlOIWQ&jO'#FzO&:qQ&jO'#FzO&<WQ&jO'#FzOLbQdO,5?mO&8qQdO1G0bO&=lQMlO'#ChOLbQdO1G1lOIWQ&jO,5<pO&:qQ&jO,5<pO&<WQ&jO,5<pOIWQ&jO,5<rO&:qQ&jO,5<rO&<WQ&jO,5<rOIWQ&jO,5<_O&:qQ&jO,5<_O&<WQ&jO,5<_O&8qQdO1G1mOLbQdO7+&iOIWQ&jO1G1yO&:qQ&jO1G1yO&<WQ&jO1G1yOIWQ&jO1G1{O&:qQ&jO1G1{O&<WQ&jO1G1{O&8qQdO7+'XO&8qQdO7+%|O&=vQ`O7+'pOIWQ&jOANAQO&:qQ&jOANAQO&<WQ&jOANAQO&=vQ`O<<K[O&=vQ`OAN@vO&={Q`O'#E[O&>QQ`O'#E[O&>YQ`O'#EzO&>_Q`O'#EgO&>dQ`O'#JRO&>oQ`O'#JPO&>zQ`O,5:vO&?PQ,VO,5<QO&?WQ`O'#FsO&?]Q`O'#FsO&?bQ`O'#FsO&?gQ`O,5<RO&?oQ`O,5:vO&?wQMlO1G0}O&@OQ`O,5<_O&@TQ`O,5<_O&@YQ`O,5<_O&@_Q`O,5<aO&@dQ`O,5<aO&@iQ`O,5<aO&@nQ`O1G1mO&@sQ`O1G0bO&@xQ`O1G2UO&@}Q,VO<<KfO&AUQ,VO<<KfO&A]Q,VO<<KfO&AdQqO7+'pO&AkQ`O7+'pO&ApQqO<<K[O4QQ&jO'#FhO5bQ`O'#FgOBzQ`O'#EZOLbQdO,5;cO!&WQ`O'#FsO!&WQ`O'#FsO!&WQ`O'#FsO!&WQ`O'#FuO!&WQ`O'#FuO!&WQ`O'#FuO&AwQ`O,5<jOJjQ&jO7+'zOJjQ&jO7+'zOJjQ&jO7+'zOIWQ&jO1G2UO&BPQ`O1G2UOIWQ&jO7+'pO!'VQ7[O'#GOO$/eQqO1G2`O$/eQqO1G2`O$/eQqO1G2`O!'VQ7[O,5<jOIWQ&jO,5<tOIWQ&jO,5<tOIWQ&jO,5<t",
     stateData: "&B}~O'YOS'ZOSTOSUOS~OQTORTOXyO]cO_hObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#dsO#tpO#x^O%PqO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO%axO%nzO%t{O%v|O%x}O%z!OO%}!PO&T!QO&Z!RO&]!SO&_!TO&a!UO&c!VO']PO'fQO'oYO'|aO~OQ[XZ[X_[Xj[Xu[Xv[Xx[X!R[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'W[X'f[X'p[X'w[X'x[X~O!]$lX~P$zOS!WO'U!XO'V!ZO~OQTORTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']![O'fQO'oYO'|aO~O!Q!`O!R!]O!O'jP!O'tP~P'dO!S!mO~P`OQTORTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']9aO'fQO'oYO'|aO~OQTORTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'fQO'oYO'|aO~O!Q!rO#U!uO#V!rO']9bO!c'qP~P+{O#W!vO~O!]!wO#W!vO~OQ#^OZ#dOj#ROu!{Ov!{Ox!|O!R#bO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O_'hX'W'hX!c'hX!O'hX!T'hX%Q'hX!]'hX~P.jO!{#eO#o#eOQ'iXZ'iX_'iXj'iXu'iXv'iXx'iX!R'iX!a'iX!b'iX!d'iX!j'iX#['iX#]'iX#^'iX#_'iX#`'iX#a'iX#b'iX#e'iX#g'iX#i'iX#j'iX'f'iX'p'iX'w'iX'x'iX~O#c'iX'W'iX!O'iX!c'iXn'iX!T'iX%Q'iX!]'iX~P0zO!{#eO~O#z#fO$R#jO~O!T#kO#x^O$U#lO$W#nO~O]#qOh$QOj#rOk#qOl#qOq$ROs$SOx#yO!T#zO!_$XO!d#vO#V$YO#t$VO$_$TO$a$UO$d$WO']#pO'b$PO'f#sO'a'cP~O!d$ZO~O!]$]O~O_$^O'W$^O~O']$bO~O!d$ZO']$bO'^$dO'b$PO~Oc$jO!d$ZO']$bO~O#c#TO~O]$sOu$oO!T$lO!d$nO%R$rO']$bO'^$dO^(UP~O!n$tO~Ox$uO!T$vO']$bO~Ox$uO!T$vO%Z$zO']$bO~O']${O~O#dsO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO~Ob%UOc%TO!n%RO%P%SO%c%QO~P7xOb%XOcmO!T%WO!nlO#dsO%PqO%TrO%UrO%XuO%ZvO%^wO%_wO%axO~O`%[O!{%_O%R%YO'^$dO~P8wO!d%`O!g%dO~O!d%eO~O!TSO~O_$^O'T%mO'W$^O~O_$^O'T%pO'W$^O~O_$^O'T%rO'W$^O~OS!WO'U!XO'V%vO~OQ[XZ[Xj[Xu[Xv[Xx[X!R[X!RdX!a[X!b[X!d[X!j[X!{[X!{dX#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'f[X'p[X'w[X'x[X~O!O[X!OdX~P;dO!Q%xO!O&iX!O&nX!R&iX!R&nX~P'dO!R%zO!O'jX~OQ#^OZ#dOj#ROu!{Ov!{Ox!|O!R%zO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O!O'jX~P>aO!O&PO~Ox&SO!W&^O!X&VO!Y&VO'^$dO~O]&TOk&TO!Q&WO'g&QO!S'kP!S'vP~P@dO!O'sX!R'sX!]'sX!c'sX'p'sX~O!{'sX#W#PX!S'sX~PA]O!{&_O!O'uX!R'uX~O!R&`O!O'tX~O!O&cO~O!{#eO~PA]OP&gO!T&dO!o&fO']$bO~Oc&lO!d$ZO']$bO~Ou$oO!d$nO~O!S&mO~P`Ou!{Ov!{Ox!|O!b!yO!d!zO'fQOQ!faZ!faj!fa!R!fa!a!fa!j!fa#[!fa#]!fa#^!fa#_!fa#`!fa#a!fa#b!fa#c!fa#e!fa#g!fa#i!fa#j!fa'p!fa'w!fa'x!fa~O_!fa'W!fa!O!fa!c!fan!fa!T!fa%Q!fa!]!fa~PCfO!c&nO~O!]!wO!{&pO'p&oO!R'rX_'rX'W'rX~O!c'rX~PFOO!R&tO!c'qX~O!c&vO~Ox$uO!T$vO#V&wO']$bO~OQTORTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']9aO'fQO'oYO'|aO~O]#qOh$QOj#rOk#qOl#qOq$ROs9tOx#yO!T#zO!_;eO!d#vO#V9}O#t$VO$_9wO$a9zO$d$WO']&{O'b$PO'f#sO~O#W&}O~O]#qOh$QOj#rOk#qOl#qOq$ROs$SOx#yO!T#zO!_$XO!d#vO#V$YO#t$VO$_$TO$a$UO$d$WO']&{O'b$PO'f#sO~O'a'mP~PJjO!Q'RO!c'nP~P){O'g'TO'oYO~OQ9^OR9^O]cOb;`Oc!jOhcOj9^OkcOlcOq9^Os9^OxRO{cO|cO}cO!T!bO!_9`O!dUO!g9^O!h9^O!i9^O!j9^O!k9^O!n!iO#t!lO#x^O']'cO'fQO'oYO'|;^O~O!d!zO~O!R#bO_$]a'W$]a!c$]a!O$]a!T$]a%Q$]a!]$]a~O#d'jO~PIWO!]'lO!T'yX#w'yX#z'yX$R'yX~Ou'mO~P! YOu'mO!T'yX#w'yX#z'yX$R'yX~O!T'oO#w'sO#z'nO$R'tO~O!Q'wO~PLbO#z#fO$R'zO~OP$eXu$eXx$eX!b$eX'w$eX'x$eX~OPfX!RfX!{fX'afX'a$eX~P!!rOk'|O~OS'}O'U(OO'V(QO~OP(ZOu(SOx(TO'w(VO'x(XO~O'a(RO~P!#{O'a([O~O]#qOh$QOj#rOk#qOl#qOq$ROs9tOx#yO!T#zO!_;eO!d#vO#V9}O#t$VO$_9wO$a9zO$d$WO'b$PO'f#sO~O!Q(`O'](]O!c'}P~P!$jO#W(bO~O!d(cO~O!Q(hO'](eO!O(OP~P!$jOj(uOx(mO!W(sO!X(lO!Y(lO!d(cO!x(tO$w(oO'^$dO'g(jO~O!S(rO~P!&jO!b!yOP'eXu'eXx'eX'w'eX'x'eX!R'eX!{'eX~O'a'eX#m'eX~P!'cOP(xO!{(wO!R'dX'a'dX~O!R(yO'a'cX~O']${O'a'cP~O'](|O~O!d)RO~O']&{O~Ox$uO!Q!rO!T$vO#U!uO#V!rO']$bO!c'qP~O!]!wO#W)VO~OQ#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O_!^a!R!^a'W!^a!O!^a!c!^an!^a!T!^a%Q!^a!]!^a~P!)wOP)_O!T&dO!o)^O%Q)]O'b$PO~O!])aO!T'`X_'`X!R'`X'W'`X~O!d$ZO'b$PO~O!d$ZO']$bO'b$PO~O!]!wO#W&}O~O])lO%R)mO'])iO!S(VP~O!R)nO^(UX~O'g'TO~OZ)rO~O^)sO~O!T$lO']$bO'^$dO^(UP~Ox$uO!Q)xO!R&`O!T$vO']$bO!O'tP~O]&ZOk&ZO!Q)yO'g'TO!S'vP~O!R)zO_(RX'W(RX~O!{*OO'b$PO~OP*RO!T#zO'b$PO~O!T*TO~Ou*VO!TSO~O!n*[O~Oc*aO~O'](|O!S(TP~Oc$jO~O%RtO']${O~P8wOZ*gO^*fO~OQTORTO]cObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#x^O%PqO'fQO'oYO'|aO~O!T!bO#t!lO']9aO~P!1_O^*fO_$^O'W$^O~O_*kO#d*mO%T*mO%U*mO~P){O!d%`O~O%t*rO~O!T*tO~O&V*vO&X*wOQ&SaR&SaX&Sa]&Sa_&Sab&Sac&Sah&Saj&Sak&Sal&Saq&Sas&Sax&Sa{&Sa|&Sa}&Sa!T&Sa!_&Sa!d&Sa!g&Sa!h&Sa!i&Sa!j&Sa!k&Sa!n&Sa#d&Sa#t&Sa#x&Sa%P&Sa%R&Sa%T&Sa%U&Sa%X&Sa%Z&Sa%^&Sa%_&Sa%a&Sa%n&Sa%t&Sa%v&Sa%x&Sa%z&Sa%}&Sa&T&Sa&Z&Sa&]&Sa&_&Sa&a&Sa&c&Sa'S&Sa']&Sa'f&Sa'o&Sa'|&Sa!S&Sa%{&Sa`&Sa&Q&Sa~O']*|O~On+PO~O!O&ia!R&ia~P!)wO!Q+TO!O&iX!R&iX~P){O!R%zO!O'ja~O!O'ja~P>aO!R&`O!O'ta~O!RwX!R!ZX!SwX!S!ZX!]wX!]!ZX!d!ZX!{wX'b!ZX~O!]+YO!{+XO!R#TX!R'lX!S#TX!S'lX!]'lX!d'lX'b'lX~O!]+[O!d$ZO'b$PO!R!VX!S!VX~O]&ROk&ROx&SO'g(jO~OQ9^OR9^O]cOb;`Oc!jOhcOj9^OkcOlcOq9^Os9^OxRO{cO|cO}cO!T!bO!_9`O!dUO!g9^O!h9^O!i9^O!j9^O!k9^O!n!iO#t!lO#x^O'fQO'oYO'|;^O~O']:SO~P!;jO!R+`O!S'kX~O!S+bO~O!]+YO!{+XO!R#TX!S#TX~O!R+cO!S'vX~O!S+eO~O]&ROk&ROx&SO'^$dO'g(jO~O!X+fO!Y+fO~P!>hOx$uO!Q+hO!T$vO']$bO!O&nX!R&nX~O_+lO!W+oO!X+kO!Y+kO!r+sO!s+qO!t+rO!u+pO!x+tO'^$dO'g(jO'o+iO~O!S+nO~P!?iOP+yO!T&dO!o+xO~O!{,PO!R'ra!c'ra_'ra'W'ra~O!]!wO~P!@sO!R&tO!c'qa~Ox$uO!Q,SO!T$vO#U,UO#V,SO']$bO!R&pX!c&pX~O_#Oi!R#Oi'W#Oi!O#Oi!c#Oin#Oi!T#Oi%Q#Oi!]#Oi~P!)wOP;tOu(SOx(TO'w(VO'x(XO~O#W!za!R!za!c!za!{!za!T!za_!za'W!za!O!za~P!BpO#W'eXQ'eXZ'eX_'eXj'eXv'eX!a'eX!d'eX!j'eX#['eX#]'eX#^'eX#_'eX#`'eX#a'eX#b'eX#c'eX#e'eX#g'eX#i'eX#j'eX'W'eX'f'eX'p'eX!c'eX!O'eX!T'eXn'eX%Q'eX!]'eX~P!'cO!R,_O'a'mX~P!#{O'a,aO~O!R,bO!c'nX~P!)wO!c,eO~O!O,fO~OQ#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'fQOZ#Zi_#Zij#Zi!R#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O#[#Zi~P!FfO#[#PO~P!FfOQ#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO'fQOZ#Zi_#Zi!R#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~Oj#Zi~P!IQOj#RO~P!IQOQ#^Oj#ROu!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO'fQO_#Zi!R#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P!KlOZ#dO!a#TO#a#TO#b#TO#c#TO~P!KlOQ#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO'fQO_#Zi!R#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'w#Zi~P!NdO'w!}O~P!NdOQ#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO'fQO'w!}O_#Zi!R#Zi#i#Zi#j#Zi'W#Zi'p#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'x#Zi~P##OO'x#OO~P##OOQ#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO'fQO'w!}O'x#OO~O_#Zi!R#Zi#j#Zi'W#Zi'p#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P#%jOQ[XZ[Xj[Xu[Xv[Xx[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'f[X'p[X'w[X'x[X!R[X!S[X~O#m[X~P#'}OQ#^OZ9rOj9gOu!{Ov!{Ox!|O!a9iO!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO#`9hO#a9iO#b9iO#c9iO#e9jO#g9lO#i9nO#j9oO'fQO'p#[O'w!}O'x#OO~O#m,hO~P#*XOQ'iXZ'iXj'iXu'iXv'iXx'iX!a'iX!b'iX!d'iX!j'iX#['iX#]'iX#^'iX#_'iX#`'iX#a'iX#b'iX#e'iX#g'iX#i'iX#j'iX'f'iX'p'iX'w'iX'x'iX!R'iX~O!{9sO#o9sO#c'iX#m'iX!S'iX~P#,SO_&sa!R&sa'W&sa!c&san&sa!O&sa!T&sa%Q&sa!]&sa~P!)wOQ#ZiZ#Zi_#Zij#Ziv#Zi!R#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'f#Zi'p#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P!BpO_#ni!R#ni'W#ni!O#ni!c#nin#ni!T#ni%Q#ni!]#ni~P!)wO#z,jO~O#z,kO~O!]'lO!{,lO!T$OX#w$OX#z$OX$R$OX~O!Q,mO~O!T'oO#w,oO#z'nO$R,pO~O!R9pO!S'hX~P#*XO!S,qO~O$R,sO~OS'}O'U(OO'V,vO~O],yOk,yO!O,zO~O!RdX!]dX!cdX!c$eX'pdX~P!!rO!c-QO~P!BpO!R-RO!]!wO'p&oO!c'}X~O!c-WO~O!Q(`O']$bO!c'}P~O#W-YO~O!O$eX!R$eX!]$lX~P!!rO!R-ZO!O(OX~P!BpO!]-]O~O!O-_O~Oj-cO!]!wO!d$ZO'b$PO'p&oO~O!])aO~O_$^O!R-hO'W$^O~O!S-jO~P!&jO!X-kO!Y-kO'^$dO'g(jO~Ox-mO'g(jO~O!x-nO~O']${O!R&xX'a&xX~O!R(yO'a'ca~O'a-sO~Ou-tOv-tOx-uOPra'wra'xra!Rra!{ra~O'ara#mra~P#7pOu(SOx(TOP$^a'w$^a'x$^a!R$^a!{$^a~O'a$^a#m$^a~P#8fOu(SOx(TOP$`a'w$`a'x$`a!R$`a!{$`a~O'a$`a#m$`a~P#9XO]-vO~O#W-wO~O'a$na!R$na!{$na#m$na~P!#{O#W-zO~OP.TO!T&dO!o.SO%Q.RO~O]#qOj#rOk#qOl#qOq$ROs9tOx#yO!T#zO!_;eO!d#vO#V9}O#t$VO$_9wO$a9zO$d$WO'b$PO'f#sO~Oh.VO'].UO~P#:yO!])aO!T'`a_'`a!R'`a'W'`a~O#W.]O~OZ[X!RdX!SdX~O!R.^O!S(VX~O!S.`O~OZ.aO~O].cO'])iO~O!T$lO']$bO^'QX!R'QX~O!R)nO^(Ua~O!c.fO~P!)wO].hO~OZ.iO~O^.jO~OP.TO!T&dO!o.SO%Q.RO'b$PO~O!R)zO_(Ra'W(Ra~O!{.pO~OP.sO!T#zO~O'g'TO!S(SP~OP.}O!T.yO!o.|O%Q.{O'b$PO~OZ/XO!R/VO!S(TX~O!S/YO~O^/[O_$^O'W$^O~O]/]O~O]/^O'](|O~O#c/_O%r/`O~P0zO!{#eO#c/_O%r/`O~O_/aO~P){O_/cO~O%{/gOQ%yiR%yiX%yi]%yi_%yib%yic%yih%yij%yik%yil%yiq%yis%yix%yi{%yi|%yi}%yi!T%yi!_%yi!d%yi!g%yi!h%yi!i%yi!j%yi!k%yi!n%yi#d%yi#t%yi#x%yi%P%yi%R%yi%T%yi%U%yi%X%yi%Z%yi%^%yi%_%yi%a%yi%n%yi%t%yi%v%yi%x%yi%z%yi%}%yi&T%yi&Z%yi&]%yi&_%yi&a%yi&c%yi'S%yi']%yi'f%yi'o%yi'|%yi!S%yi`%yi&Q%yi~O`/mO!S/kO&Q/lO~P`O!TSO!d/oO~O&X*wOQ&SiR&SiX&Si]&Si_&Sib&Sic&Sih&Sij&Sik&Sil&Siq&Sis&Six&Si{&Si|&Si}&Si!T&Si!_&Si!d&Si!g&Si!h&Si!i&Si!j&Si!k&Si!n&Si#d&Si#t&Si#x&Si%P&Si%R&Si%T&Si%U&Si%X&Si%Z&Si%^&Si%_&Si%a&Si%n&Si%t&Si%v&Si%x&Si%z&Si%}&Si&T&Si&Z&Si&]&Si&_&Si&a&Si&c&Si'S&Si']&Si'f&Si'o&Si'|&Si!S&Si%{&Si`&Si&Q&Si~O!R#bOn$]a~O!O&ii!R&ii~P!)wO!R%zO!O'ji~O!R&`O!O'ti~O!O/uO~O!R!Va!S!Va~P#*XO]&ROk&RO!Q/{O'g(jO!R&jX!S&jX~P@dO!R+`O!S'ka~O]&ZOk&ZO!Q)yO'g'TO!R&oX!S&oX~O!R+cO!S'va~O!O'ui!R'ui~P!)wO_$^O!]!wO!d$ZO!j0VO!{0TO'W$^O'b$PO'p&oO~O!S0YO~P!?iO!X0ZO!Y0ZO'^$dO'g(jO'o+iO~O!W0[O~P#MSO!TSO!W0[O!u0^O!x0_O~P#MSO!W0[O!s0aO!t0aO!u0^O!x0_O~P#MSO!T&dO~O!T&dO~P!BpO!R'ri!c'ri_'ri'W'ri~P!)wO!{0jO!R'ri!c'ri_'ri'W'ri~O!R&tO!c'qi~Ox$uO!T$vO#V0lO']$bO~O#WraQraZra_rajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra'Wra'fra'pra!cra!Ora!Tranra%Qra!]ra~P#7pO#W$^aQ$^aZ$^a_$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a'W$^a'f$^a'p$^a!c$^a!O$^a!T$^an$^a%Q$^a!]$^a~P#8fO#W$`aQ$`aZ$`a_$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a'W$`a'f$`a'p$`a!c$`a!O$`a!T$`an$`a%Q$`a!]$`a~P#9XO#W$naQ$naZ$na_$naj$nav$na!R$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na'W$na'f$na'p$na!c$na!O$na!T$na!{$nan$na%Q$na!]$na~P!BpO_#Oq!R#Oq'W#Oq!O#Oq!c#Oqn#Oq!T#Oq%Q#Oq!]#Oq~P!)wO!R&kX'a&kX~PJjO!R,_O'a'ma~O!Q0tO!R&lX!c&lX~P){O!R,bO!c'na~O!R,bO!c'na~P!)wO#m!fa!S!fa~PCfO#m!^a!R!^a!S!^a~P#*XO!T1XO#x^O$P1YO~O!S1^O~On1_O~P!BpO_$Yq!R$Yq'W$Yq!O$Yq!c$Yqn$Yq!T$Yq%Q$Yq!]$Yq~P!)wO!O1`O~O],yOk,yO~Ou(SOx(TO'x(XOP$xi'w$xi!R$xi!{$xi~O'a$xi#m$xi~P$.POu(SOx(TOP$zi'w$zi'x$zi!R$zi!{$zi~O'a$zi#m$zi~P$.rO'p#[O~P!BpO!Q1cO']$bO!R&tX!c&tX~O!R-RO!c'}a~O!R-RO!]!wO!c'}a~O!R-RO!]!wO'p&oO!c'}a~O'a$gi!R$gi!{$gi#m$gi~P!#{O!Q1kO'](eO!O&vX!R&vX~P!$jO!R-ZO!O(Oa~O!R-ZO!O(Oa~P!BpO!]!wO~O!]!wO#c1sO~Oj1vO!]!wO'p&oO~O!R'di'a'di~P!#{O!{1yO!R'di'a'di~P!#{O!c1|O~O_$Zq!R$Zq'W$Zq!O$Zq!c$Zqn$Zq!T$Zq%Q$Zq!]$Zq~P!)wO!R2QO!T(PX~P!BpO!T&dO%Q2TO~O!T&dO%Q2TO~P!BpO!T$eX$u[X_$eX!R$eX'W$eX~P!!rO$u2XOPgXugXxgX!TgX'wgX'xgX_gX!RgX'WgX~O$u2XO~O]2_O%R2`O'])iO!R'PX!S'PX~O!R.^O!S(Va~OZ2dO~O^2eO~O]2hO~OP2jO!T&dO!o2iO%Q2TO~O_$^O'W$^O~P!BpO!T#zO~P!BpO!R2oO!{2qO!S(SX~O!S2rO~Ox;oO!W2{O!X2tO!Y2tO!r2zO!s2yO!t2yO!x2xO'^$dO'g(jO'o+iO~O!S2wO~P$7ZOP3SO!T.yO!o3RO%Q3QO~OP3SO!T.yO!o3RO%Q3QO'b$PO~O'](|O!R'OX!S'OX~O!R/VO!S(Ta~O]3^O'g3]O~O]3_O~O^3aO~O!c3dO~P){O_3fO~O_3fO~P){O#c3hO%r3iO~PFOO`/mO!S3mO&Q/lO~P`O!]3oO~O!R#Ti!S#Ti~P#*XO!{3qO!R#Ti!S#Ti~O!R!Vi!S!Vi~P#*XO_$^O!{3xO'W$^O~O_$^O!]!wO!{3xO'W$^O~O!X3|O!Y3|O'^$dO'g(jO'o+iO~O_$^O!]!wO!d$ZO!j3}O!{3xO'W$^O'b$PO'p&oO~O!W4OO~P$;xO!W4OO!u4RO!x4SO~P$;xO_$^O!]!wO!j3}O!{3xO'W$^O'p&oO~O!R'rq!c'rq_'rq'W'rq~P!)wO!R&tO!c'qq~O#W$xiQ$xiZ$xi_$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi'W$xi'f$xi'p$xi!c$xi!O$xi!T$xin$xi%Q$xi!]$xi~P$.PO#W$ziQ$ziZ$zi_$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi'W$zi'f$zi'p$zi!c$zi!O$zi!T$zin$zi%Q$zi!]$zi~P$.rO#W$giQ$giZ$gi_$gij$giv$gi!R$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi'W$gi'f$gi'p$gi!c$gi!O$gi!T$gi!{$gin$gi%Q$gi!]$gi~P!BpO!R&ka'a&ka~P!#{O!R&la!c&la~P!)wO!R,bO!c'ni~O#m#Oi!R#Oi!S#Oi~P#*XOQ#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'fQOZ#Zij#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~O#[#Zi~P$EiO#[9eO~P$EiOQ#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO'fQOZ#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~Oj#Zi~P$GqOj9gO~P$GqOQ#^Oj9gOu!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO#`9hO'fQO#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P$IyOZ9rO!a9iO#a9iO#b9iO#c9iO~P$IyOQ#^OZ9rOj9gOu!{Ov!{Ox!|O!a9iO!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO#`9hO#a9iO#b9iO#c9iO#e9jO'fQO#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'x#Zi!R#Zi!S#Zi~O'w#Zi~P$L_O'w!}O~P$L_OQ#^OZ9rOj9gOu!{Ov!{Ox!|O!a9iO!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO#`9hO#a9iO#b9iO#c9iO#e9jO#g9lO'fQO'w!}O#i#Zi#j#Zi#m#Zi'p#Zi!R#Zi!S#Zi~O'x#Zi~P$NgO'x#OO~P$NgOQ#^OZ9rOj9gOu!{Ov!{Ox!|O!a9iO!b!yO!d!zO!j#^O#[9eO#]9fO#^9fO#_9fO#`9hO#a9iO#b9iO#c9iO#e9jO#g9lO#i9nO'fQO'w!}O'x#OO~O#j#Zi#m#Zi'p#Zi!R#Zi!S#Zi~P%!oO_#ky!R#ky'W#ky!O#ky!c#kyn#ky!T#ky%Q#ky!]#ky~P!)wOP;vOu(SOx(TO'w(VO'x(XO~OQ#ZiZ#Zij#Ziv#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'f#Zi'p#Zi!R#Zi!S#Zi~P%%aO!b!yOP'eXu'eXx'eX'w'eX'x'eX!S'eX~OQ'eXZ'eXj'eXv'eX!a'eX!d'eX!j'eX#['eX#]'eX#^'eX#_'eX#`'eX#a'eX#b'eX#c'eX#e'eX#g'eX#i'eX#j'eX#m'eX'f'eX'p'eX!R'eX~P%'eO#m#ni!R#ni!S#ni~P#*XO!S4eO~O!R&sa!S&sa~P#*XO!]!wO'p&oO!R&ta!c&ta~O!R-RO!c'}i~O!R-RO!]!wO!c'}i~O'a$gq!R$gq!{$gq#m$gq~P!#{O!O&va!R&va~P!BpO!]4lO~O!R-ZO!O(Oi~P!BpO!R-ZO!O(Oi~O!O4pO~O!]!wO#c4uO~Oj4vO!]!wO'p&oO~O!O4xO~O'a$iq!R$iq!{$iq#m$iq~P!#{O_$Zy!R$Zy'W$Zy!O$Zy!c$Zyn$Zy!T$Zy%Q$Zy!]$Zy~P!)wO!R2QO!T(Pa~O!T&dO%Q4}O~O!T&dO%Q4}O~P!BpO_#Oy!R#Oy'W#Oy!O#Oy!c#Oyn#Oy!T#Oy%Q#Oy!]#Oy~P!)wOZ5QO~O]5SO'])iO~O!R.^O!S(Vi~O]5VO~O^5WO~O'g'TO!R&{X!S&{X~O!R2oO!S(Sa~O!S5eO~P$7ZOx;sO'g(jO'o+iO~O!W5hO!X5gO!Y5gO!x0_O'^$dO'g(jO'o+iO~O!s5iO!t5iO~P%0^O!X5gO!Y5gO'^$dO'g(jO'o+iO~O!T.yO~O!T.yO%Q5kO~O!T.yO%Q5kO~P!BpOP5pO!T.yO!o5oO%Q5kO~OZ5uO!R'Oa!S'Oa~O!R/VO!S(Ti~O]5xO~O!c5yO~O!c5zO~O!c5{O~O!c5{O~P){O_5}O~O!]6QO~O!c6RO~O!R'ui!S'ui~P#*XO_$^O'W$^O~P!)wO_$^O!{6WO'W$^O~O_$^O!]!wO!{6WO'W$^O~O!X6]O!Y6]O'^$dO'g(jO'o+iO~O_$^O!]!wO!j6^O!{6WO'W$^O'p&oO~O!d$ZO'b$PO~P%4xO!W6_O~P%4gO!R'ry!c'ry_'ry'W'ry~P!)wO#W$gqQ$gqZ$gq_$gqj$gqv$gq!R$gq!a$gq!b$gq!d$gq!j$gq#[$gq#]$gq#^$gq#_$gq#`$gq#a$gq#b$gq#c$gq#e$gq#g$gq#i$gq#j$gq'W$gq'f$gq'p$gq!c$gq!O$gq!T$gq!{$gqn$gq%Q$gq!]$gq~P!BpO#W$iqQ$iqZ$iq_$iqj$iqv$iq!R$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq'W$iq'f$iq'p$iq!c$iq!O$iq!T$iq!{$iqn$iq%Q$iq!]$iq~P!BpO!R&li!c&li~P!)wO#m#Oq!R#Oq!S#Oq~P#*XOu-tOv-tOx-uOPra'wra'xra!Sra~OQraZrajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra#mra'fra'pra!Rra~P%;OOu(SOx(TOP$^a'w$^a'x$^a!S$^a~OQ$^aZ$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a#m$^a'f$^a'p$^a!R$^a~P%=SOu(SOx(TOP$`a'w$`a'x$`a!S$`a~OQ$`aZ$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a#m$`a'f$`a'p$`a!R$`a~P%?WOQ$naZ$naj$nav$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na#m$na'f$na'p$na!R$na!S$na~P%%aO#m$Yq!R$Yq!S$Yq~P#*XO#m$Zq!R$Zq!S$Zq~P#*XO!S6hO~O#m6iO~P!#{O!]!wO!R&ti!c&ti~O!]!wO'p&oO!R&ti!c&ti~O!R-RO!c'}q~O!O&vi!R&vi~P!BpO!R-ZO!O(Oq~O!O6oO~P!BpO!O6oO~O!R'dy'a'dy~P!#{O!R&ya!T&ya~P!BpO!T$tq_$tq!R$tq'W$tq~P!BpOZ6vO~O!R.^O!S(Vq~O]6yO~O!T&dO%Q6zO~O!T&dO%Q6zO~P!BpO!{6{O!R&{a!S&{a~O!R2oO!S(Si~P#*XO!X7RO!Y7RO'^$dO'g(jO'o+iO~O!W7TO!x4SO~P%GXO!T.yO%Q7WO~O!T.yO%Q7WO~P!BpO]7_O'g7^O~O!R/VO!S(Tq~O!c7aO~O!c7aO~P){O!c7cO~O!c7dO~O!R#Ty!S#Ty~P#*XO_$^O!{7jO'W$^O~O_$^O!]!wO!{7jO'W$^O~O!X7mO!Y7mO'^$dO'g(jO'o+iO~O_$^O!]!wO!j7nO!{7jO'W$^O'p&oO~O#m#ky!R#ky!S#ky~P#*XOQ$giZ$gij$giv$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi#m$gi'f$gi'p$gi!R$gi!S$gi~P%%aOu(SOx(TO'x(XOP$xi'w$xi!S$xi~OQ$xiZ$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi#m$xi'f$xi'p$xi!R$xi~P%LjOu(SOx(TOP$zi'w$zi'x$zi!S$zi~OQ$ziZ$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi#m$zi'f$zi'p$zi!R$zi~P%NnO#m$Zy!R$Zy!S$Zy~P#*XO#m#Oy!R#Oy!S#Oy~P#*XO!]!wO!R&tq!c&tq~O!R-RO!c'}y~O!O&vq!R&vq~P!BpO!O7tO~P!BpO!R.^O!S(Vy~O!R2oO!S(Sq~O!X8QO!Y8QO'^$dO'g(jO'o+iO~O!T.yO%Q8TO~O!T.yO%Q8TO~P!BpO!c8WO~O_$^O!{8]O'W$^O~O_$^O!]!wO!{8]O'W$^O~OQ$gqZ$gqj$gqv$gq!a$gq!b$gq!d$gq!j$gq#[$gq#]$gq#^$gq#_$gq#`$gq#a$gq#b$gq#c$gq#e$gq#g$gq#i$gq#j$gq#m$gq'f$gq'p$gq!R$gq!S$gq~P%%aOQ$iqZ$iqj$iqv$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq#m$iq'f$iq'p$iq!R$iq!S$iq~P%%aO'a$|!Z!R$|!Z!{$|!Z#m$|!Z~P!#{O!R&{q!S&{q~P#*XO_$^O!{8oO'W$^O~O#W$|!ZQ$|!ZZ$|!Z_$|!Zj$|!Zv$|!Z!R$|!Z!a$|!Z!b$|!Z!d$|!Z!j$|!Z#[$|!Z#]$|!Z#^$|!Z#_$|!Z#`$|!Z#a$|!Z#b$|!Z#c$|!Z#e$|!Z#g$|!Z#i$|!Z#j$|!Z'W$|!Z'f$|!Z'p$|!Z!c$|!Z!O$|!Z!T$|!Z!{$|!Zn$|!Z%Q$|!Z!]$|!Z~P!BpOP;uOu(SOx(TO'w(VO'x(XO~O!S!za!W!za!X!za!Y!za!r!za!s!za!t!za!x!za'^!za'g!za'o!za~P&,_O!W'eX!X'eX!Y'eX!r'eX!s'eX!t'eX!x'eX'^'eX'g'eX'o'eX~P%'eOQ$|!ZZ$|!Zj$|!Zv$|!Z!a$|!Z!b$|!Z!d$|!Z!j$|!Z#[$|!Z#]$|!Z#^$|!Z#_$|!Z#`$|!Z#a$|!Z#b$|!Z#c$|!Z#e$|!Z#g$|!Z#i$|!Z#j$|!Z#m$|!Z'f$|!Z'p$|!Z!R$|!Z!S$|!Z~P%%aO!Wra!Xra!Yra!rra!sra!tra!xra'^ra'gra'ora~P%;OO!W$^a!X$^a!Y$^a!r$^a!s$^a!t$^a!x$^a'^$^a'g$^a'o$^a~P%=SO!W$`a!X$`a!Y$`a!r$`a!s$`a!t$`a!x$`a'^$`a'g$`a'o$`a~P%?WO!S$na!W$na!X$na!Y$na!r$na!s$na!t$na!x$na'^$na'g$na'o$na~P&,_O!W$xi!X$xi!Y$xi!r$xi!s$xi!t$xi!x$xi'^$xi'g$xi'o$xi~P%LjO!W$zi!X$zi!Y$zi!r$zi!s$zi!t$zi!x$zi'^$zi'g$zi'o$zi~P%NnO!S$gi!W$gi!X$gi!Y$gi!r$gi!s$gi!t$gi!x$gi'^$gi'g$gi'o$gi~P&,_O!S$gq!W$gq!X$gq!Y$gq!r$gq!s$gq!t$gq!x$gq'^$gq'g$gq'o$gq~P&,_O!S$iq!W$iq!X$iq!Y$iq!r$iq!s$iq!t$iq!x$iq'^$iq'g$iq'o$iq~P&,_O!S$|!Z!W$|!Z!X$|!Z!Y$|!Z!r$|!Z!s$|!Z!t$|!Z!x$|!Z'^$|!Z'g$|!Z'o$|!Z~P&,_On'hX~P.jOn[X!O[X!c[X%r[X!T[X%Q[X!][X~P$zO!]dX!c[X!cdX'pdX~P;dOQ9^OR9^O]cOb;`Oc!jOhcOj9^OkcOlcOq9^Os9^OxRO{cO|cO}cO!TSO!_9`O!dUO!g9^O!h9^O!i9^O!j9^O!k9^O!n!iO#t!lO#x^O']'cO'fQO'oYO'|;^O~O]#qOh$QOj#rOk#qOl#qOq$ROs9uOx#yO!T#zO!_;fO!d#vO#V:OO#t$VO$_9xO$a9{O$d$WO']&{O'b$PO'f#sO~O!R9pO!S$]a~O]#qOh$QOj#rOk#qOl#qOq$ROs9vOx#yO!T#zO!_;gO!d#vO#V:PO#t$VO$_9yO$a9|O$d$WO']&{O'b$PO'f#sO~O#d'jO~P&<WO!S[X!SdX~P;dO!]9dO~O#W9cO~O!]!wO#W9cO~O!{9sO~O#c9iO~O!{:QO!R'uX!S'uX~O!{9sO!R'sX!S'sX~O#W:RO~O'a:TO~P!#{O#W:[O~O#W:]O~O#W:^O~O!]!wO#W:_O~O!]!wO#W:RO~O#m:`O~P#*XO#W:aO~O#W:bO~O#W:cO~O#W:dO~O#W:eO~O#W:fO~O#W:gO~O#W:hO~O!O:iO~O#m:jO~P!#{O#m:kO~P!#{O#m:lO~P!#{O!O:mO~P!BpO!O:mO~O!O:nO~P!BpO!]!wO#c;lO~O!]!wO#c;nO~O#x~!b!r!t!u#U#V'|$_$a$d$u%P%Q%R%X%Z%^%_%a%c~UT#x'|#]}'Y'Z#z'Y']'g~",
     goto: "#Kk(ZPPPPPPPP([P(lP*`PPPP-zPP.a3s7o8SP8SPPP8SP:U8SP8SP:YPP:`P:t?VPPPP?ZPPPP?ZA{PPPBRDdP?ZPFwPPPPHp?ZPPPPPJi?ZPPMjNgPPPPNk!!TP!!]!#^PNg?Z?Z!&n!)i!.[!.[!1kPPP!1r!4h?ZPPPPPPPPPP!7_P!8pPP?Z!9}P?ZP?Z?Z?Z?ZP?Z!;dPP!>]P!AQ!AY!A^!A^P!>YP!Ab!AbP!DVP!DZ?Z?Z!Da!GT8SP8SP8S8SP!HW8S8S!Jf8S!M_8S# g8S8S#!T#$c#$c#$g#$c#$oP#$cP8S#%k8S#'X8S8S-zPPP#(yPP#)c#)cP#)cP#)x#)cPP#*OP#)uP#)u#*b!!X#)u#+P#+V#+Y([#+]([P#+d#+d#+dP([P([P([P([PP([P#+j#+mP#+m([P#+qP#+tP([P([P([P([P([P([([#+z#,U#,[#,b#,p#,v#,|#-W#-^#-m#-s#.R#.X#._#.m#/S#0z#1Y#1`#1f#1l#1r#1|#2S#2Y#2d#2v#2|PPPPPPPP#3SPP#3v#7OPP#8f#8m#8uPP#>a#@t#Fp#Fs#Fv#GR#GUPP#GX#G]#Gz#Hq#Hu#IZPP#I_#Ie#IiP#Il#Ip#Is#Jc#Jy#KO#KR#KU#K[#K_#Kc#KgmhOSj}!n$]%c%f%g%i*o*t/g/jQ$imQ$ppQ%ZyS&V!b+`Q&k!jS(l#z(qQ)g$jQ)t$rQ*`%TQ+f&^S+k&d+mQ+}&lQ-k(sQ/U*aY0Z+o+p+q+r+sS2t.y2vU3|0[0^0aU5g2y2z2{S6]4O4RS7R5h5iQ7m6_R8Q7T$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8o!j'e#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aQ(}$SQ)l$lQ*b%WQ*i%`Q,X9tQ.W)aQ.c)mQ/^*gQ2_.^Q3Z/VQ4^9vQ5S2`R8{9upeOSjy}!n$]%Y%c%f%g%i*o*t/g/jR*d%[&WVOSTjkn}!S!W!k!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$]$n%[%_%`%c%e%f%g%i%m%z&S&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;`;a[!cRU!]!`%x&WQ$clQ$hmS$mp$rv$wrs!r!u$Z$u&`&t&w)x)y)z*m+Y+h,S,U/o0lQ%PwQ&h!iQ&j!jS(_#v(cS)f$i$jQ)j$lQ)w$tQ*Z%RQ*_%TS+|&k&lQ-V(`Q.[)gQ.b)mQ.d)nQ.g)rQ/P*[S/T*`*aQ0h+}Q1b-RQ2^.^Q2b.aQ2g.iQ3Y/UQ4i1cQ5R2`Q5U2dQ6u5QR7w6vx#xa!y$T$U$Y(W(Y(b(w(x,_-Y-w1a1y6i;^;i;j;k!Y$fm!j$h$i$j&U&j&k&l(k)f)g+]+j+|+}-d.[0Q0W0]0h1u3{4Q6Z7k8^Q)`$cQ*P$|Q*S$}Q*^%TQ.k)wQ/O*ZU/S*_*`*aQ3T/PS3X/T/UQ5b2sQ5t3YS7P5c5fS8O7Q7SQ8f8PQ8u8g#[;b!w#d#v#y&g'}(Z(h)])_)a*O*R+y-Z-].R.T.p.s.{.}1k1s2Q2T2X2j3Q3S4l4u4}5k5p6z7W8T9w9z9}:U:X:[:a:d:j;l;n;t;u;vd;c9d9x9{:O:V:Y:]:b:e:ke;d9r9y9|:P:W:Z:^:c:f:lW#}a$P(y;^S$|t%YQ$}uQ%OvR)}$z%P#|a!w!y#d#v#y$T$U$Y&g'}(W(Y(Z(b(h(w(x)])_)a*O*R+y,_-Y-Z-]-w.R.T.p.s.{.}1a1k1s1y2Q2T2X2j3Q3S4l4u4}5k5p6i6z7W8T9d9r9w9x9y9z9{9|9}:O:P:U:V:W:X:Y:Z:[:]:^:a:b:c:d:e:f:j:k:l;^;i;j;k;l;n;t;u;vT(O#s(PX)O$S9t9u9vU&Z!b$v+cQ'U!{Q)q$oQ.t*TQ1z-tR5^2o&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;a$]#aZ!_!o$a%w%}&y'Q'W'X'Y'Z'[']'^'_'`'a'b'd'g'k'u)p+R+^+g,O,^,d,g,i,w-x/v/y0i0s0w0x0y0z0{0|0}1O1P1Q1R1S1T1W1]2O2[3s3v4W4[4]4b4c5`6S6V6b6f6g7g7z8Z8m8y9_:|T!XQ!Y&_cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aQ&X!bR/|+`Y&R!b&V&^+`+fS(k#z(qS+j&d+mS-d(l(sQ-e(mQ-l(tQ.v*VU0W+k+o+pU0]+q+r+sS0b+t2xQ1u-kQ1w-mQ1x-nS2s.y2vU3{0Z0[0^Q4P0_Q4Q0aS5c2t2{S5f2y2zU6Z3|4O4RQ6`4SS7Q5g5hQ7S5iS7k6]6_S8P7R7TQ8^7mQ8g8QQ;h;oR;m;slhOSj}!n$]%c%f%g%i*o*t/g/jQ%k!QS&x!v9cQ)d$gQ*X%PQ*Y%QQ+z&iS,]&}:RS-y)V:_Q.Y)eQ.x*WQ/n*vQ/p*wQ/x+ZQ0`+qQ0f+{S2P-z:gQ2Y.ZS2].]:hQ3r/zQ3u0RQ4U0gQ5P2ZQ6T3tQ6X3zQ6a4VQ7e6RQ7h6YQ8Y7iQ8l8[R8x8n$W#`Z!_!o%w%}&y'Q'W'X'Y'Z'[']'^'_'`'a'b'd'g'k'u)p+R+^+g,O,^,d,g,w-x/v/y0i0s0w0x0y0z0{0|0}1O1P1Q1R1S1T1W1]2O2[3s3v4W4[4]4b4c5`6S6V6b6f6g7g7z8Z8m8y9_:|W(v#{&|1V8qT)Z$a,i$W#_Z!_!o%w%}&y'Q'W'X'Y'Z'[']'^'_'`'a'b'd'g'k'u)p+R+^+g,O,^,d,g,w-x/v/y0i0s0w0x0y0z0{0|0}1O1P1Q1R1S1T1W1]2O2[3s3v4W4[4]4b4c5`6S6V6b6f6g7g7z8Z8m8y9_:|Q'f#`S)Y$a,iR-{)Z&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aQ%f{Q%g|Q%i!OQ%j!PR/f*rQ&e!iQ)[$cQ+w&hS.Q)`)wS0c+u+vW2S-}.O.P.kS4T0d0eU4|2U2V2WU6s4{5Y5ZQ7v6tR8b7yT+l&d+mS+j&d+mU0W+k+o+pU0]+q+r+sS0b+t2xS2s.y2vU3{0Z0[0^Q4P0_Q4Q0aS5c2t2{S5f2y2zU6Z3|4O4RQ6`4SS7Q5g5hQ7S5iS7k6]6_S8P7R7TQ8^7mR8g8QS+l&d+mT2u.y2vS&r!q/dQ-U(_Q-b(kS0V+j2sQ1g-VS1p-c-lU3}0]0b5fQ4h1bS4s1v1xU6^4P4Q7SQ6k4iQ6r4vR7n6`Q!xXS&q!q/dQ)W$[Q)b$eQ)h$kQ,Q&rQ-T(_Q-a(kQ-f(nQ.X)cQ/Q*]S0U+j2sS1f-U-VS1o-b-lQ1r-eQ1t-gQ3V/RW3y0V0]0b5fQ4g1bQ4k1gS4o1p1xQ4t1wQ5r3WW6[3}4P4Q7SS6j4h4iS6n4p:iQ6p4sQ6}5aQ7[5sS7l6^6`Q7r6kS7s6o:mQ7u6rQ7|7OQ8V7]Q8_7nS8a7t:nQ8d7}Q8s8eQ9Q8tQ9X9RQ:u:pQ;T:zQ;U:{Q;V;hR;[;m$rWORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%`%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8oS!xn!k!j:o#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aR:u;`$rXORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%`%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8oQ$[b!Y$em!j$h$i$j&U&j&k&l(k)f)g+]+j+|+}-d.[0Q0W0]0h1u3{4Q6Z7k8^S$kn!kQ)c$fQ*]%TW/R*^*_*`*aU3W/S/T/UQ5a2sS5s3X3YU7O5b5c5fQ7]5tU7}7P7Q7SS8e8O8PS8t8f8gQ9R8u!j:p#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aQ:z;_R:{;`$f]OSTjk}!S!W!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%c%e%f%g%i%m%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8oY!hRU!]!`%xv$wrs!r!u$Z$u&`&t&w)x)y)z*m+Y+h,S,U/o0lQ*j%`!h:q#]#k'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aR:t&WS&[!b$vR0O+c$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8o!j'e#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aR*i%`$roORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%`%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8oQ'U!{!k:r#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;a!h#VZ!_$a%w%}&y'Q'_'`'a'b'g'k)p+R+g,O,^,d,w-x0i0s1T2O2[3v4W4[6V7g8Z8m8y9_!R9k'd'u+^,i/v/y0w1P1Q1R1S1W1]3s4]4b4c5`6S6b6f6g7z:|!d#XZ!_$a%w%}&y'Q'a'b'g'k)p+R+g,O,^,d,w-x0i0s1T2O2[3v4W4[6V7g8Z8m8y9_}9m'd'u+^,i/v/y0w1R1S1W1]3s4]4b4c5`6S6b6f6g7z:|!`#]Z!_$a%w%}&y'Q'g'k)p+R+g,O,^,d,w-x0i0s1T2O2[3v4W4[6V7g8Z8m8y9_Q1a-Px;a'd'u+^,i/v/y0w1W1]3s4]4b4c5`6S6b6f6g7z:|Q;i;pQ;j;qR;k;r&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aS#l`#mR1Y,l&e_ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,l,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aS#g^#nT'n#i'rT#h^#nT'p#i'r&e`ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$]$n%[%_%`%c%e%f%g%i%m%x%z&S&W&_&f&p&}'R'w(R)V)^*k*o*t+T+X+[+x,P,b,h,l,m-u-z.S.].|/_/`/a/c/g/j/l/{0T0j0t1X2i2q3R3f3h3i3q3x5o5}6W6{7j8]8o9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;aT#l`#mQ#o`R'y#m$rbORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$]$n%[%_%`%c%e%f%g%i%m%x%z&S&_&f&p&}'R(R)V)^*k*o*t+T+x,P,b,h-u-z.S.].|/_/`/a/c/g/j/l0T0j0t2i3R3f3h3i3x5o5}6W7j8]8o!k;_#]#k&W'w+X+[,m/{1X2q3q6{9^9`9c9e9f9g9h9i9j9k9l9m9n9o9p9s:Q:R:T:_:`:g:h;a#RdOSUj}!S!W!n!|#k$]%[%_%`%c%e%f%g%i%m&S&f'w)^*k*o*t+x,m-u.S.|/_/`/a/c/g/j/l1X2i3R3f3h3i5o5}x#{a!y$T$U$Y(W(Y(b(w(x,_-Y-w1a1y6i;^;i;j;k#[&|!w#d#v#y&g'}(Z(h)])_)a*O*R+y-Z-].R.T.p.s.{.}1k1s2Q2T2X2j3Q3S4l4u4}5k5p6z7W8T9w9z9}:U:X:[:a:d:j;l;n;t;u;vQ)S$WQ,x(Sd1V9r9y9|:P:W:Z:^:c:f:le8q9d9x9{:O:V:Y:]:b:e:kx#wa!y$T$U$Y(W(Y(b(w(x,_-Y-w1a1y6i;^;i;j;kQ(d#xS(n#z(qQ)T$XQ-g(o#[:w!w#d#v#y&g'}(Z(h)])_)a*O*R+y-Z-].R.T.p.s.{.}1k1s2Q2T2X2j3Q3S4l4u4}5k5p6z7W8T9w9z9}:U:X:[:a:d:j;l;n;t;u;vd:x9d9x9{:O:V:Y:]:b:e:kd:y9r9y9|:P:W:Z:^:c:f:lQ:};bQ;O;cQ;P;dQ;Q;eQ;R;fR;S;gx#{a!y$T$U$Y(W(Y(b(w(x,_-Y-w1a1y6i;^;i;j;k#[&|!w#d#v#y&g'}(Z(h)])_)a*O*R+y-Z-].R.T.p.s.{.}1k1s2Q2T2X2j3Q3S4l4u4}5k5p6z7W8T9w9z9}:U:X:[:a:d:j;l;n;t;u;vd1V9r9y9|:P:W:Z:^:c:f:le8q9d9x9{:O:V:Y:]:b:e:klfOSj}!n$]%c%f%g%i*o*t/g/jQ(g#yQ*}%pQ+O%rR1j-Z%O#|a!w!y#d#v#y$T$U$Y&g'}(W(Y(Z(b(h(w(x)])_)a*O*R+y,_-Y-Z-]-w.R.T.p.s.{.}1a1k1s1y2Q2T2X2j3Q3S4l4u4}5k5p6i6z7W8T9d9r9w9x9y9z9{9|9}:O:P:U:V:W:X:Y:Z:[:]:^:a:b:c:d:e:f:j:k:l;^;i;j;k;l;n;t;u;vQ*Q$}Q.r*SQ2m.qR5]2nT(p#z(qS(p#z(qT2u.y2vQ)b$eQ-f(nQ.X)cQ/Q*]Q3V/RQ5r3WQ6}5aQ7[5sQ7|7OQ8V7]Q8d7}Q8s8eQ9Q8tR9X9Rp(W#t'O)U-X-o-p0q1h1}4f4w7q:v;W;X;Y!n:U&z'i(^(f+v,[,t-P-^-|.P.o.q0e0p1i1m2W2l2n3O4Y4Z4m4q4y5O5Z5n6m6q7Y8`;Z;];p;q;r[:V8p9O9V9Y9Z9]]:W1U4a6c7o7p8zr(Y#t'O)U,}-X-o-p0q1h1}4f4w7q:v;W;X;Y!p:X&z'i(^(f+v,[,t-P-^-|.P.o.q0e0n0p1i1m2W2l2n3O4Y4Z4m4q4y5O5Z5n6m6q7Y8`;Z;];p;q;r^:Y8p9O9T9V9Y9Z9]_:Z1U4a6c6d7o7p8zpeOSjy}!n$]%Y%c%f%g%i*o*t/g/jQ%VxR*k%`peOSjy}!n$]%Y%c%f%g%i*o*t/g/jR%VxQ*U%OR.n)}qeOSjy}!n$]%Y%c%f%g%i*o*t/g/jQ.z*ZS3P/O/PW5j2|2}3O3TU7V5l5m5nU8R7U7X7YQ8h8SR8v8iQ%^yR*e%YR3^/XR7_5uS$mp$rR.d)nQ%czR*o%dR*u%jT/h*t/jR*y%kQ*x%kR/q*yQjOQ!nST$`j!nQ(P#sR,u(PQ!YQR%u!YQ!^RU%{!^%|+UQ%|!_R+U%}Q+a&XR/}+aQ,`'OR0r,`Q,c'QS0u,c0vR0v,dQ+m&dR0X+mS!eR$uU&a!e&b+VQ&b!fR+V&OQ+d&[R0P+dQ&u!sQ,R&sU,V&u,R0mR0m,WQ'r#iR,n'rQ#m`R'x#mQ#cZU'h#c+Q9qQ+Q9_R9q'uQ-S(_W1d-S1e4j6lU1e-T-U-VS4j1f1gR6l4k$k(U#t&z'O'i(^(f)P)Q)U+v,Y,Z,[,t,}-O-P-X-^-o-p-|.P.o.q0e0n0o0p0q1U1h1i1m1}2W2l2n3O4Y4Z4_4`4a4f4m4q4w4y5O5Z5n6c6d6e6m6q7Y7o7p7q8`8p8z8|8}9O9T9U9V9Y9Z9]:v;W;X;Y;Z;];p;q;rQ-[(fU1l-[1n4nQ1n-^R4n1mQ(q#zR-i(qQ(z$OR-r(zQ2R-|R4z2RQ){$xR.m){Q2p.tS5_2p6|R6|5`Q*W%PR.w*WQ2v.yR5d2vQ/W*bS3[/W5vR5v3^Q._)jW2a._2c5T6wQ2c.bQ5T2bR6w5UQ)o$mR.e)oQ/j*tR3l/jWiOSj!nQ%h}Q)X$]Q*n%cQ*p%fQ*q%gQ*s%iQ/e*oS/h*t/jR3k/gQ$_gQ%l!RQ%o!TQ%q!UQ%s!VQ)v$sQ)|$yQ*d%^Q*{%nQ-h(pS/Z*e*hQ/r*zQ/s*}Q/t+OS0S+j2sQ2f.hQ2k.oQ3U/QQ3`/]Q3j/fY3w0U0V0]0b5fQ5X2hQ5[2lQ5q3VQ5w3_[6U3v3y3}4P4Q7SQ6x5VQ7Z5rQ7`5xW7f6V6[6^6`Q7x6yQ7{6}Q8U7[U8X7g7l7nQ8c7|Q8j8VS8k8Z8_Q8r8dQ8w8mQ9P8sQ9S8yQ9W9QR9[9XQ$gmQ&i!jU)e$h$i$jQ+Z&UU+{&j&k&lQ-`(kS.Z)f)gQ/z+]Q0R+jS0g+|+}Q1q-dQ2Z.[Q3t0QS3z0W0]Q4V0hQ4r1uS6Y3{4QQ7i6ZQ8[7kR8n8^S#ua;^R({$PU$Oa$P;^R-q(yQ#taS&z!w)aQ'O!yQ'i#dQ(^#vQ(f#yQ)P$TQ)Q$UQ)U$YQ+v&gQ,Y9wQ,Z9zQ,[9}Q,t'}Q,}(WQ-O(YQ-P(ZQ-X(bQ-^(hQ-o(wQ-p(xd-|)].R.{2T3Q4}5k6z7W8TQ.P)_Q.o*OQ.q*RQ0e+yQ0n:UQ0o:XQ0p:[Q0q,_Q1U9rQ1h-YQ1i-ZQ1m-]Q1}-wQ2W.TQ2l.pQ2n.sQ3O.}Q4Y:aQ4Z:dQ4_9yQ4`9|Q4a:PQ4f1aQ4m1kQ4q1sQ4w1yQ4y2QQ5O2XQ5Z2jQ5n3SQ6c:^Q6d:WQ6e:ZQ6m4lQ6q4uQ7Y5pQ7o:cQ7p:fQ7q6iQ8`:jQ8p9dQ8z:lQ8|9xQ8}9{Q9O:OQ9T:VQ9U:YQ9V:]Q9Y:bQ9Z:eQ9]:kQ:v;^Q;W;iQ;X;jQ;Y;kQ;Z;lQ;];nQ;p;tQ;q;uR;r;vlgOSj}!n$]%c%f%g%i*o*t/g/jS!pU%eQ%n!SQ%t!WQ'V!|Q'v#kS*h%[%_Q*l%`Q*z%mQ+W&SQ+u&fQ,r'wQ.O)^Q/b*kQ0d+xQ1[,mQ1{-uQ2V.SQ2}.|Q3b/_Q3c/`Q3e/aQ3g/cQ3n/lQ4d1XQ5Y2iQ5m3RQ5|3fQ6O3hQ6P3iQ7X5oR7b5}!vZOSUj}!S!n!|$]%[%_%`%c%e%f%g%i%m&S&f)^*k*o*t+x-u.S.|/_/`/a/c/g/j/l2i3R3f3h3i5o5}Q!_RQ!oTQ$akS%w!]%zQ%}!`Q&y!vQ'Q!zQ'W#PQ'X#QQ'Y#RQ'Z#SQ'[#TQ']#UQ'^#VQ'_#WQ'`#XQ'a#YQ'b#ZQ'd#]Q'g#bQ'k#eW'u#k'w,m1XQ)p$nS+R%x+TS+^&W/{Q+g&_Q,O&pQ,^&}Q,d'RQ,g9^Q,i9`Q,w(RQ-x)VQ/v+XQ/y+[Q0i,PQ0s,bQ0w9cQ0x9eQ0y9fQ0z9gQ0{9hQ0|9iQ0}9jQ1O9kQ1P9lQ1Q9mQ1R9nQ1S9oQ1T,hQ1W9sQ1]9pQ2O-zQ2[.]Q3s:QQ3v0TQ4W0jQ4[0tQ4]:RQ4b:TQ4c:_Q5`2qQ6S3qQ6V3xQ6b:`Q6f:gQ6g:hQ7g6WQ7z6{Q8Z7jQ8m8]Q8y8oQ9_!WR:|;aR!aRR&Y!bS&U!b+`S+]&V&^R0Q+fR'P!yR'S!zT!tU$ZS!sU$ZU$xrs*mS&s!r!uQ,T&tQ,W&wQ.l)zS0k,S,UR4X0l`!dR!]!`$u%x&`)x+hh!qUrs!r!u$Z&t&w)z,S,U0lQ/d*mQ/w+YQ3p/oT:s&W)yT!gR$uS!fR$uS%y!]&`S&O!`)xS+S%x+hT+_&W)yT&]!b$vQ#i^R'{#nT'q#i'rR1Z,lT(a#v(cR(i#yQ-})]Q2U.RQ2|.{Q4{2TQ5l3QQ6t4}Q7U5kQ7y6zQ8S7WR8i8TlhOSj}!n$]%c%f%g%i*o*t/g/jQ%]yR*d%YV$yrs*mR.u*TR*c%WQ$qpR)u$rR)k$lT%az%dT%bz%dT/i*t/j",
     nodeNames: "⚠ extends ArithOp ArithOp InterpolationStart LineComment BlockComment Script ExportDeclaration export Star as VariableName String from ; default FunctionDeclaration async function VariableDefinition TypeParamList TypeDefinition ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Interpolation null super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression await yield delete LogicOp BitOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody MethodDeclaration AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement",
     maxTerm: 332,
     context: trackNewline,
     nodeProps: [
       ["closedBy", 4,"InterpolationEnd",40,"]",51,"}",66,")",132,"JSXSelfCloseEndTag JSXEndTag",146,"JSXEndTag"],
       ["group", -26,8,15,17,58,184,188,191,192,194,197,200,211,213,219,221,223,225,228,234,240,242,244,246,248,250,251,"Statement",-30,12,13,24,27,28,41,43,44,45,47,52,60,68,74,75,91,92,101,103,119,122,124,125,126,127,129,130,148,149,151,"Expression",-22,23,25,29,32,34,152,154,156,157,159,160,161,163,164,165,167,168,169,178,180,182,183,"Type",-3,79,85,90,"ClassItem"],
       ["openedBy", 30,"InterpolationStart",46,"[",50,"{",65,"(",131,"JSXStartTag",141,"JSXStartTag JSXStartCloseTag"]
     ],
     propSources: [jsHighlight],
     skippedNodes: [0,5,6],
     repeatNodeCount: 28,
     tokenData: "!C}~R!`OX%TXY%cYZ'RZ[%c[]%T]^'R^p%Tpq%cqr'crs(kst0htu2`uv4pvw5ewx6cxy<yyz=Zz{=k{|>k|}?O}!O>k!O!P?`!P!QCl!Q!R!0[!R![!1q![!]!7s!]!^!8V!^!_!8g!_!`!9d!`!a!:[!a!b!<R!b!c%T!c!}2`!}#O!=d#O#P%T#P#Q!=t#Q#R!>U#R#S2`#S#T!>i#T#o2`#o#p!>y#p#q!?O#q#r!?f#r#s!?x#s$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$I|2`$I|$I}!Bq$I}$JO!Bq$JO$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`W%YR$UWO!^%T!_#o%T#p~%T7Z%jg$UW'Y7ROX%TXY%cYZ%TZ[%c[p%Tpq%cq!^%T!_#o%T#p$f%T$f$g%c$g#BY%T#BY#BZ%c#BZ$IS%T$IS$I_%c$I_$JT%T$JT$JU%c$JU$KV%T$KV$KW%c$KW&FU%T&FU&FV%c&FV?HT%T?HT?HU%c?HU~%T7Z'YR$UW'Z7RO!^%T!_#o%T#p~%T$T'jS$UW!j#{O!^%T!_!`'v!`#o%T#p~%T$O'}S#e#v$UWO!^%T!_!`(Z!`#o%T#p~%T$O(bR#e#v$UWO!^%T!_#o%T#p~%T)X(rZ$UW]#eOY(kYZ)eZr(krs*rs!^(k!^!_+U!_#O(k#O#P-b#P#o(k#o#p+U#p~(k&r)jV$UWOr)ers*Ps!^)e!^!_*a!_#o)e#o#p*a#p~)e&r*WR$P&j$UWO!^%T!_#o%T#p~%T&j*dROr*ars*ms~*a&j*rO$P&j)X*{R$P&j$UW]#eO!^%T!_#o%T#p~%T)P+ZV]#eOY+UYZ*aZr+Urs+ps#O+U#O#P+w#P~+U)P+wO$P&j]#e)P+zROr+Urs,Ts~+U)P,[U$P&j]#eOY,nZr,nrs-Vs#O,n#O#P-[#P~,n#e,sU]#eOY,nZr,nrs-Vs#O,n#O#P-[#P~,n#e-[O]#e#e-_PO~,n)X-gV$UWOr(krs-|s!^(k!^!_+U!_#o(k#o#p+U#p~(k)X.VZ$P&j$UW]#eOY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x#m/PZ$UW]#eOY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x#m/yR$UW]#eO!^%T!_#o%T#p~%T#m0XT$UWO!^.x!^!_,n!_#o.x#o#p,n#p~.x3]0mZ$UWOt%Ttu1`u!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`3]1g]$UW'o3TOt%Ttu1`u!Q%T!Q![1`![!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`7Z2k_$UW#zS']$y'g3SOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`[3q_$UW#zSOt%Ttu3ju}%T}!O3j!O!Q%T!Q![3j![!^%T!_!c%T!c!}3j!}#R%T#R#S3j#S#T%T#T#o3j#p$g%T$g~3j$O4wS#^#v$UWO!^%T!_!`5T!`#o%T#p~%T$O5[R$UW#o#vO!^%T!_#o%T#p~%T5b5lU'x5Y$UWOv%Tvw6Ow!^%T!_!`5T!`#o%T#p~%T$O6VS$UW#i#vO!^%T!_!`5T!`#o%T#p~%T)X6jZ$UW]#eOY6cYZ7]Zw6cwx*rx!^6c!^!_8T!_#O6c#O#P:T#P#o6c#o#p8T#p~6c&r7bV$UWOw7]wx*Px!^7]!^!_7w!_#o7]#o#p7w#p~7]&j7zROw7wwx*mx~7w)P8YV]#eOY8TYZ7wZw8Twx+px#O8T#O#P8o#P~8T)P8rROw8Twx8{x~8T)P9SU$P&j]#eOY9fZw9fwx-Vx#O9f#O#P9}#P~9f#e9kU]#eOY9fZw9fwx-Vx#O9f#O#P9}#P~9f#e:QPO~9f)X:YV$UWOw6cwx:ox!^6c!^!_8T!_#o6c#o#p8T#p~6c)X:xZ$P&j$UW]#eOY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k#m;rZ$UW]#eOY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k#m<jT$UWO!^;k!^!_9f!_#o;k#o#p9f#p~;k&i=QR!d&a$UWO!^%T!_#o%T#p~%Tk=bR!cc$UWO!^%T!_#o%T#p~%T7V=tU'^4V#_#v$UWOz%Tz{>W{!^%T!_!`5T!`#o%T#p~%T$O>_S#[#v$UWO!^%T!_!`5T!`#o%T#p~%T%w>rSj%o$UWO!^%T!_!`5T!`#o%T#p~%T&i?VR!R&a$UWO!^%T!_#o%T#p~%T7Z?gVu5^$UWO!O%T!O!P?|!P!Q%T!Q![@r![!^%T!_#o%T#p~%T!{@RT$UWO!O%T!O!P@b!P!^%T!_#o%T#p~%T!{@iR!Q!s$UWO!^%T!_#o%T#p~%T!{@yZ$UWk!sO!Q%T!Q![@r![!^%T!_!g%T!g!hAl!h#R%T#R#S@r#S#X%T#X#YAl#Y#o%T#p~%T!{AqZ$UWO{%T{|Bd|}%T}!OBd!O!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T!{BiV$UWO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T!{CVV$UWk!sO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T7ZCs`$UW#]#vOYDuYZ%TZzDuz{Jl{!PDu!P!Q!-e!Q!^Du!^!_Fx!_!`!.^!`!a!/]!a!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXD|[$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXEy_$UW}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%TPF}V}POYFxZ!PFx!P!QGd!Q!}Fx!}#OG{#O#PHh#P~FxPGiU}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGdPHOTOYG{Z#OG{#O#PH_#P#QFx#Q~G{PHbQOYG{Z~G{PHkQOYFxZ~FxXHvY$UWOYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~HqXIkV$UWOYHqYZ%TZ!^Hq!^!_G{!_#oHq#o#pG{#p~HqXJVV$UWOYDuYZ%TZ!^Du!^!_Fx!_#oDu#o#pFx#p~Du7ZJs^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q!,R!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl7ZKtV$UWOzKoz{LZ{!^Ko!^!_M]!_#oKo#o#pM]#p~Ko7ZL`X$UWOzKoz{LZ{!PKo!P!QL{!Q!^Ko!^!_M]!_#oKo#o#pM]#p~Ko7ZMSR$UWU7RO!^%T!_#o%T#p~%T7RM`ROzM]z{Mi{~M]7RMlTOzM]z{Mi{!PM]!P!QM{!Q~M]7RNQOU7R7ZNX^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q! T!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl7Z! ^_$UWU7R}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%T7R!!bY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!&x!Q!}!!]!}#O!$`#O#P!&f#P~!!]7R!#VY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!#u!Q!}!!]!}#O!$`#O#P!&f#P~!!]7R!#|UU7R}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGd7R!$cWOY!$`YZM]Zz!$`z{!${{#O!$`#O#P!&S#P#Q!!]#Q~!$`7R!%OYOY!$`YZM]Zz!$`z{!${{!P!$`!P!Q!%n!Q#O!$`#O#P!&S#P#Q!!]#Q~!$`7R!%sTU7ROYG{Z#OG{#O#PH_#P#QFx#Q~G{7R!&VTOY!$`YZM]Zz!$`z{!${{~!$`7R!&iTOY!!]YZM]Zz!!]z{!#Q{~!!]7R!&}_}POzM]z{Mi{#ZM]#Z#[!&x#[#]M]#]#^!&x#^#aM]#a#b!&x#b#gM]#g#h!&x#h#iM]#i#j!&x#j#mM]#m#n!&x#n~M]7Z!(R[$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|7Z!(|^$UWOY!'|YZKoZz!'|z{!(w{!P!'|!P!Q!)x!Q!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|7Z!*PY$UWU7ROYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~Hq7Z!*tX$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#o!'|#o#p!$`#p~!'|7Z!+fX$UWOYJlYZKoZzJlz{NQ{!^Jl!^!_!!]!_#oJl#o#p!!]#p~Jl7Z!,Yc$UW}POzKoz{LZ{!^Ko!^!_M]!_#ZKo#Z#[!,R#[#]Ko#]#^!,R#^#aKo#a#b!,R#b#gKo#g#h!,R#h#iKo#i#j!,R#j#mKo#m#n!,R#n#oKo#o#pM]#p~Ko7Z!-lV$UWT7ROY!-eYZ%TZ!^!-e!^!_!.R!_#o!-e#o#p!.R#p~!-e7R!.WQT7ROY!.RZ~!.R$P!.g[$UW#o#v}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du]!/f[#wS$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du!{!0cd$UWk!sO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#U%T#U#V!3X#V#X%T#X#YAl#Y#b%T#b#c!2w#c#d!4m#d#l%T#l#m!5{#m#o%T#p~%T!{!1x_$UWk!sO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#X%T#X#YAl#Y#b%T#b#c!2w#c#o%T#p~%T!{!3OR$UWk!sO!^%T!_#o%T#p~%T!{!3^W$UWO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#o%T#p~%T!{!3}Y$UWk!sO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#b%T#b#c!2w#c#o%T#p~%T!{!4rV$UWO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#o%T#p~%T!{!5`X$UWk!sO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#b%T#b#c!2w#c#o%T#p~%T!{!6QZ$UWO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#o%T#p~%T!{!6z]$UWk!sO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#b%T#b#c!2w#c#o%T#p~%T$u!7|R!]V$UW#m$fO!^%T!_#o%T#p~%T!q!8^R_!i$UWO!^%T!_#o%T#p~%T5w!8rR'bd!a/n#x&s'|P!P!Q!8{!^!_!9Q!_!`!9_W!9QO$WW#v!9VP#`#v!_!`!9Y#v!9_O#o#v#v!9dO#a#v$u!9kT!{$m$UWO!^%T!_!`'v!`!a!9z!a#o%T#p~%T$P!:RR#W#w$UWO!^%T!_#o%T#p~%T%V!:gT'a!R#a#v$RS$UWO!^%T!_!`!:v!`!a!;W!a#o%T#p~%T$O!:}R#a#v$UWO!^%T!_#o%T#p~%T$O!;_T#`#v$UWO!^%T!_!`5T!`!a!;n!a#o%T#p~%T$O!;uS#`#v$UWO!^%T!_!`5T!`#o%T#p~%T*a!<YV'p#{$UWO!O%T!O!P!<o!P!^%T!_!a%T!a!b!=P!b#o%T#p~%T*[!<vRv*S$UWO!^%T!_#o%T#p~%T$O!=WS$UW#j#vO!^%T!_!`5T!`#o%T#p~%T7V!=kRx6}$UWO!^%T!_#o%T#p~%Tk!={R!Oc$UWO!^%T!_#o%T#p~%T$O!>]S#g#v$UWO!^%T!_!`5T!`#o%T#p~%T$a!>pR$UW'f$XO!^%T!_#o%T#p~%T~!?OO!T~5b!?VT'w5Y$UWO!^%T!_!`5T!`#o%T#p#q!=P#q~%T6X!?oR!S5}nQ$UWO!^%T!_#o%T#p~%TX!@PR!kP$UWO!^%T!_#o%T#p~%T7Z!@gr$UW'Y7R#zS']$y'g3SOX%TXY%cYZ%TZ[%c[p%Tpq%cqt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`7Z!CO_$UW'Z7R#zS']$y'g3SOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`",
     tokenizers: [tsExtends, noSemicolon, incdecToken, template, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, insertSemicolon],
     topRules: {"Script":[0,7]},
     dialects: {jsx: 12107, ts: 12109},
     dynamicPrecedences: {"149":1,"176":1},
     specialized: [{term: 289, get: value => spec_identifier[value] || -1},{term: 299, get: value => spec_word[value] || -1},{term: 63, get: value => spec_LessThan[value] || -1}],
     tokenPrec: 12130
   });

   /**
   A collection of JavaScript-related
   [snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).
   */
   const snippets = [
       /*@__PURE__*/snippetCompletion("function ${name}(${params}) {\n\t${}\n}", {
           label: "function",
           detail: "definition",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n\t${}\n}", {
           label: "for",
           detail: "loop",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("for (let ${name} of ${collection}) {\n\t${}\n}", {
           label: "for",
           detail: "of loop",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("do {\n\t${}\n} while (${})", {
           label: "do",
           detail: "loop",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("while (${}) {\n\t${}\n}", {
           label: "while",
           detail: "loop",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("try {\n\t${}\n} catch (${error}) {\n\t${}\n}", {
           label: "try",
           detail: "/ catch block",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("if (${}) {\n\t${}\n}", {
           label: "if",
           detail: "block",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("if (${}) {\n\t${}\n} else {\n\t${}\n}", {
           label: "if",
           detail: "/ else block",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("class ${name} {\n\tconstructor(${params}) {\n\t\t${}\n\t}\n}", {
           label: "class",
           detail: "definition",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("import {${names}} from \"${module}\"\n${}", {
           label: "import",
           detail: "named",
           type: "keyword"
       }),
       /*@__PURE__*/snippetCompletion("import ${name} from \"${module}\"\n${}", {
           label: "import",
           detail: "default",
           type: "keyword"
       })
   ];

   const cache = /*@__PURE__*/new NodeWeakMap();
   const ScopeNodes = /*@__PURE__*/new Set([
       "Script", "Block",
       "FunctionExpression", "FunctionDeclaration", "ArrowFunction", "MethodDeclaration",
       "ForStatement"
   ]);
   function defID(type) {
       return (node, def) => {
           let id = node.node.getChild("VariableDefinition");
           if (id)
               def(id, type);
           return true;
       };
   }
   const functionContext = ["FunctionDeclaration"];
   const gatherCompletions = {
       FunctionDeclaration: /*@__PURE__*/defID("function"),
       ClassDeclaration: /*@__PURE__*/defID("class"),
       ClassExpression: () => true,
       EnumDeclaration: /*@__PURE__*/defID("constant"),
       TypeAliasDeclaration: /*@__PURE__*/defID("type"),
       NamespaceDeclaration: /*@__PURE__*/defID("namespace"),
       VariableDefinition(node, def) { if (!node.matchContext(functionContext))
           def(node, "variable"); },
       TypeDefinition(node, def) { def(node, "type"); },
       __proto__: null
   };
   function getScope(doc, node) {
       let cached = cache.get(node);
       if (cached)
           return cached;
       let completions = [], top = true;
       function def(node, type) {
           let name = doc.sliceString(node.from, node.to);
           completions.push({ label: name, type });
       }
       node.cursor(IterMode.IncludeAnonymous).iterate(node => {
           if (top) {
               top = false;
           }
           else if (node.name) {
               let gather = gatherCompletions[node.name];
               if (gather && gather(node, def) || ScopeNodes.has(node.name))
                   return false;
           }
           else if (node.to - node.from > 8192) {
               // Allow caching for bigger internal nodes
               for (let c of getScope(doc, node.node))
                   completions.push(c);
               return false;
           }
       });
       cache.set(node, completions);
       return completions;
   }
   const Identifier = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/;
   const dontComplete = [
       "TemplateString", "String", "RegExp",
       "LineComment", "BlockComment",
       "VariableDefinition", "TypeDefinition", "Label",
       "PropertyDefinition", "PropertyName",
       "PrivatePropertyDefinition", "PrivatePropertyName"
   ];
   /**
   Completion source that looks up locally defined names in
   JavaScript code.
   */
   function localCompletionSource(context) {
       let inner = syntaxTree(context.state).resolveInner(context.pos, -1);
       if (dontComplete.indexOf(inner.name) > -1)
           return null;
       let isWord = inner.name == "VariableName" ||
           inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));
       if (!isWord && !context.explicit)
           return null;
       let options = [];
       for (let pos = inner; pos; pos = pos.parent) {
           if (ScopeNodes.has(pos.name))
               options = options.concat(getScope(context.state.doc, pos));
       }
       return {
           options,
           from: isWord ? inner.from : context.pos,
           validFor: Identifier
       };
   }

   /**
   A language provider based on the [Lezer JavaScript
   parser](https://github.com/lezer-parser/javascript), extended with
   highlighting and indentation information.
   */
   const javascriptLanguage = /*@__PURE__*/LRLanguage.define({
       parser: /*@__PURE__*/parser.configure({
           props: [
               /*@__PURE__*/indentNodeProp.add({
                   IfStatement: /*@__PURE__*/continuedIndent({ except: /^\s*({|else\b)/ }),
                   TryStatement: /*@__PURE__*/continuedIndent({ except: /^\s*({|catch\b|finally\b)/ }),
                   LabeledStatement: flatIndent,
                   SwitchBody: context => {
                       let after = context.textAfter, closed = /^\s*\}/.test(after), isCase = /^\s*(case|default)\b/.test(after);
                       return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;
                   },
                   Block: /*@__PURE__*/delimitedIndent({ closing: "}" }),
                   ArrowFunction: cx => cx.baseIndent + cx.unit,
                   "TemplateString BlockComment": () => null,
                   "Statement Property": /*@__PURE__*/continuedIndent({ except: /^{/ }),
                   JSXElement(context) {
                       let closed = /^\s*<\//.test(context.textAfter);
                       return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);
                   },
                   JSXEscape(context) {
                       let closed = /\s*\}/.test(context.textAfter);
                       return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);
                   },
                   "JSXOpenTag JSXSelfClosingTag"(context) {
                       return context.column(context.node.from) + context.unit;
                   }
               }),
               /*@__PURE__*/foldNodeProp.add({
                   "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression": foldInside,
                   BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }
               })
           ]
       }),
       languageData: {
           closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
           commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
           indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
           wordChars: "$"
       }
   });
   /**
   A language provider for TypeScript.
   */
   const typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: "ts" });
   /**
   Language provider for JSX.
   */
   const jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: "jsx" });
   /**
   Language provider for JSX + TypeScript.
   */
   const tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: "jsx ts" });
   const keywords = /*@__PURE__*/"break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(kw => ({ label: kw, type: "keyword" }));
   /**
   JavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)
   completion.
   */
   function javascript(config = {}) {
       let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)
           : config.typescript ? typescriptLanguage : javascriptLanguage;
       return new LanguageSupport(lang, [
           javascriptLanguage.data.of({
               autocomplete: ifNotIn(dontComplete, completeFromList(snippets.concat(keywords)))
           }),
           javascriptLanguage.data.of({
               autocomplete: localCompletionSource
           }),
           config.jsx ? autoCloseTags : [],
       ]);
   }
   function elementName(doc, tree, max = doc.length) {
       if (!tree)
           return "";
       let name = tree.getChild("JSXIdentifier");
       return name ? doc.sliceString(name.from, Math.min(name.to, max)) : "";
   }
   const android = typeof navigator == "object" && /*@__PURE__*//Android\b/.test(navigator.userAgent);
   /**
   Extension that will automatically insert JSX close tags when a `>` or
   `/` is typed.
   */
   const autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {
       if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||
           from != to || (text != ">" && text != "/") ||
           !javascriptLanguage.isActiveAt(view.state, from, -1))
           return false;
       let { state } = view;
       let changes = state.changeByRange(range => {
           var _a, _b, _c;
           let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;
           if (around.name == "JSXStartTag")
               around = around.parent;
           if (text == ">" && around.name == "JSXFragmentTag") {
               return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `><>` } };
           }
           else if (text == ">" && around.name == "JSXIdentifier") {
               if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != "JSXEndTag" && (name = elementName(state.doc, around.parent, head)))
                   return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };
           }
           else if (text == "/" && around.name == "JSXFragmentTag") {
               let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;
               if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != "JSXEndTag" && (name = elementName(state.doc, base === null || base === void 0 ? void 0 : base.firstChild, head))) {
                   let insert = `/${name}>`;
                   return { range: EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };
               }
           }
           return { range };
       });
       if (changes.changes.empty)
           return false;
       view.dispatch(changes, { userEvent: "input.type", scrollIntoView: true });
       return true;
   });

   /**
   Connects an [ESLint](https://eslint.org/) linter to CodeMirror's
   [lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the
   [`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)
   class, and `config` an optional ESLint configuration. The return
   value of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)
   to create a JavaScript linting extension.

   Note that ESLint targets node, and is tricky to run in the
   browser. The
   [eslint-linter-browserify](https://github.com/UziTech/eslint-linter-browserify)
   package may help with that (see
   [example](https://github.com/UziTech/eslint-linter-browserify/blob/master/example/script.js)).
   */
   function esLint(eslint, config) {
       if (!config) {
           config = {
               parserOptions: { ecmaVersion: 2019, sourceType: "module" },
               env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },
               rules: {}
           };
           eslint.getRules().forEach((desc, name) => {
               if (desc.meta.docs.recommended)
                   config.rules[name] = 2;
           });
       }
       return (view) => {
           let { state } = view, found = [];
           for (let { from, to } of javascriptLanguage.findRegions(state)) {
               let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };
               for (let d of eslint.verify(state.sliceDoc(from, to), config))
                   found.push(translateDiagnostic(d, state.doc, offset));
           }
           return found;
       };
   }
   function mapPos(line, col, doc, offset) {
       return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);
   }
   function translateDiagnostic(input, doc, offset) {
       let start = mapPos(input.line, input.column, doc, offset);
       let result = {
           from: start,
           to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,
           message: input.message,
           source: input.ruleId ? "eslint:" + input.ruleId : "eslint",
           severity: input.severity == 1 ? "warning" : "error",
       };
       if (input.fix) {
           let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;
           result.actions = [{
                   name: "fix",
                   apply(view, start) {
                       view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });
                   }
               }];
       }
       return result;
   }

   var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function t(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function r(e,t){return e(t={exports:{}},t.exports),t.exports}function n(e){return e&&e.default||e}function i(e){return (i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}function s(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),e}function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n);}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){u(e,t,r[t]);})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t));}));}return e}function f(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t);}function h(e){return (h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return (d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t,r){return (m=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return !1}}()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var i=new(Function.bind.apply(e,n));return r&&d(i,r.prototype),i}).apply(null,arguments)}function g(e){var t="function"==typeof Map?new Map:void 0;return (g=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf("[native code]")))return e;var r;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n);}function n(){return m(e,arguments,h(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),d(n,e)})(e)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function v(e,t){return !t||"object"!=typeof t&&"function"!=typeof t?y(e):t}function x(e,t,r){return (x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(n){var i=Object.getOwnPropertyDescriptor(n,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}function b(e,t){return C(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var r=[],n=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(n=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}return r}(e,t)||k()}function E(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||S(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function C(e){if(Array.isArray(e))return e}function S(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function k(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}var D=r((function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t);})),F={}.hasOwnProperty,A=function(e,t){return F.call(e,t)},w=function(e){try{return !!e()}catch(e){return !0}},_=!w((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})),T=r((function(e){var t=e.exports={version:"2.6.10"};"number"==typeof __e&&(__e=t);})),P=(T.version,function(e){return "object"===i(e)?null!==e:"function"==typeof e}),I=function(e){if(!P(e))throw TypeError(e+" is not an object!");return e},B=D.document,O=P(B)&&P(B.createElement),L=function(e){return O?B.createElement(e):{}},N=!_&&!w((function(){return 7!=Object.defineProperty(L("div"),"a",{get:function(){return 7}}).a})),j=function(e,t){if(!P(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!P(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!P(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!P(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")},R=Object.defineProperty,M={f:_?Object.defineProperty:function(e,t,r){if(I(e),t=j(t,!0),I(r),N)try{return R(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return "value"in r&&(e[t]=r.value),e}},V=function(e,t){return {enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},U=_?function(e,t,r){return M.f(e,t,V(1,r))}:function(e,t,r){return e[t]=r,e},q=0,W=Math.random(),$=function(e){return "Symbol(".concat(void 0===e?"":e,")_",(++q+W).toString(36))},G=r((function(e){var t=D["__core-js_shared__"]||(D["__core-js_shared__"]={});(e.exports=function(e,r){return t[e]||(t[e]=void 0!==r?r:{})})("versions",[]).push({version:T.version,mode:"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"});})),z=G("native-function-to-string",Function.toString),H=r((function(e){var t=$("src"),r=(""+z).split("toString");T.inspectSource=function(e){return z.call(e)},(e.exports=function(e,n,i,a){var o="function"==typeof i;o&&(A(i,"name")||U(i,"name",n)),e[n]!==i&&(o&&(A(i,t)||U(i,t,e[n]?""+e[n]:r.join(String(n)))),e===D?e[n]=i:a?e[n]?e[n]=i:U(e,n,i):(delete e[n],U(e,n,i)));})(Function.prototype,"toString",(function(){return "function"==typeof this&&this[t]||z.call(this)}));})),K=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e},J=function(e,t,r){if(K(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}},Q=function e(t,r,n){var i,a,o,s,u=t&e.F,c=t&e.G,l=t&e.P,p=t&e.B,f=c?D:t&e.S?D[r]||(D[r]={}):(D[r]||{}).prototype,h=c?T:T[r]||(T[r]={}),d=h.prototype||(h.prototype={});for(i in c&&(n=r),n)o=((a=!u&&f&&void 0!==f[i])?f:n)[i],s=p&&a?J(o,D):l&&"function"==typeof o?J(Function.call,o):o,f&&H(f,i,o,t&e.U),h[i]!=o&&U(h,i,s),l&&d[i]!=o&&(d[i]=o);};D.core=T,Q.F=1,Q.G=2,Q.S=4,Q.P=8,Q.B=16,Q.W=32,Q.U=64,Q.R=128;var X=Q,Y=r((function(e){var t=$("meta"),r=M.f,n=0,a=Object.isExtensible||function(){return !0},o=!w((function(){return a(Object.preventExtensions({}))})),s=function(e){r(e,t,{value:{i:"O"+ ++n,w:{}}});},u=e.exports={KEY:t,NEED:!1,fastKey:function(e,r){if(!P(e))return "symbol"==i(e)?e:("string"==typeof e?"S":"P")+e;if(!A(e,t)){if(!a(e))return "F";if(!r)return "E";s(e);}return e[t].i},getWeak:function(e,r){if(!A(e,t)){if(!a(e))return !0;if(!r)return !1;s(e);}return e[t].w},onFreeze:function(e){return o&&u.NEED&&a(e)&&!A(e,t)&&s(e),e}};})),Z=(Y.KEY,Y.NEED,Y.fastKey,Y.getWeak,Y.onFreeze,r((function(e){var t=G("wks"),r=D.Symbol,n="function"==typeof r;(e.exports=function(e){return t[e]||(t[e]=n&&r[e]||(n?r:$)("Symbol."+e))}).store=t;}))),ee=M.f,te=Z("toStringTag"),re=function(e,t,r){e&&!A(e=r?e:e.prototype,te)&&ee(e,te,{configurable:!0,value:t});},ne={f:Z},ie=M.f,ae=function(e){var t=T.Symbol||(T.Symbol=D.Symbol||{});"_"==e.charAt(0)||e in t||ie(t,e,{value:ne.f(e)});},oe={}.toString,se=function(e){return oe.call(e).slice(8,-1)},ue=Object("z").propertyIsEnumerable(0)?Object:function(e){return "String"==se(e)?e.split(""):Object(e)},ce=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e},le=function(e){return ue(ce(e))},pe=Math.ceil,fe=Math.floor,he=function(e){return isNaN(e=+e)?0:(e>0?fe:pe)(e)},de=Math.min,me=function(e){return e>0?de(he(e),9007199254740991):0},ge=Math.max,ye=Math.min,ve=function(e,t){return (e=he(e))<0?ge(e+t,0):ye(e,t)},xe=function(e){return function(t,r,n){var i,a=le(t),o=me(a.length),s=ve(n,o);if(e&&r!=r){for(;o>s;)if((i=a[s++])!=i)return !0}else for(;o>s;s++)if((e||s in a)&&a[s]===r)return e||s||0;return !e&&-1}},be=G("keys"),Ee=function(e){return be[e]||(be[e]=$(e))},Ce=xe(!1),Se=Ee("IE_PROTO"),ke=function(e,t){var r,n=le(e),i=0,a=[];for(r in n)r!=Se&&A(n,r)&&a.push(r);for(;t.length>i;)A(n,r=t[i++])&&(~Ce(a,r)||a.push(r));return a},De="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(","),Fe=Object.keys||function(e){return ke(e,De)},Ae={f:Object.getOwnPropertySymbols},we={f:{}.propertyIsEnumerable},_e=Array.isArray||function(e){return "Array"==se(e)},Te=function(e){return Object(ce(e))},Pe=_?Object.defineProperties:function(e,t){I(e);for(var r,n=Fe(t),i=n.length,a=0;i>a;)M.f(e,r=n[a++],t[r]);return e},Ie=D.document,Be=Ie&&Ie.documentElement,Oe=Ee("IE_PROTO"),Le=function(){},Ne=function(){var e,t=L("iframe"),r=De.length;for(t.style.display="none",Be.appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),Ne=e.F;r--;)delete Ne.prototype[De[r]];return Ne()},je=Object.create||function(e,t){var r;return null!==e?(Le.prototype=I(e),r=new Le,Le.prototype=null,r[Oe]=e):r=Ne(),void 0===t?r:Pe(r,t)},Re=De.concat("length","prototype"),Me={f:Object.getOwnPropertyNames||function(e){return ke(e,Re)}},Ve=Me.f,Ue={}.toString,qe="object"==("undefined"==typeof window?"undefined":i(window))&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],We={f:function(e){return qe&&"[object Window]"==Ue.call(e)?function(e){try{return Ve(e)}catch(e){return qe.slice()}}(e):Ve(le(e))}},$e=Object.getOwnPropertyDescriptor,Ge={f:_?$e:function(e,t){if(e=le(e),t=j(t,!0),N)try{return $e(e,t)}catch(e){}if(A(e,t))return V(!we.f.call(e,t),e[t])}},ze=Y.KEY,He=Ge.f,Ke=M.f,Je=We.f,Qe=D.Symbol,Xe=D.JSON,Ye=Xe&&Xe.stringify,Ze=Z("_hidden"),et=Z("toPrimitive"),tt={}.propertyIsEnumerable,rt=G("symbol-registry"),nt=G("symbols"),it=G("op-symbols"),at=Object.prototype,ot="function"==typeof Qe&&!!Ae.f,st=D.QObject,ut=!st||!st.prototype||!st.prototype.findChild,ct=_&&w((function(){return 7!=je(Ke({},"a",{get:function(){return Ke(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=He(at,t);n&&delete at[t],Ke(e,t,r),n&&e!==at&&Ke(at,t,n);}:Ke,lt=function(e){var t=nt[e]=je(Qe.prototype);return t._k=e,t},pt=ot&&"symbol"==i(Qe.iterator)?function(e){return "symbol"==i(e)}:function(e){return e instanceof Qe},ft=function(e,t,r){return e===at&&ft(it,t,r),I(e),t=j(t,!0),I(r),A(nt,t)?(r.enumerable?(A(e,Ze)&&e[Ze][t]&&(e[Ze][t]=!1),r=je(r,{enumerable:V(0,!1)})):(A(e,Ze)||Ke(e,Ze,V(1,{})),e[Ze][t]=!0),ct(e,t,r)):Ke(e,t,r)},ht=function(e,t){I(e);for(var r,n=function(e){var t=Fe(e),r=Ae.f;if(r)for(var n,i=r(e),a=we.f,o=0;i.length>o;)a.call(e,n=i[o++])&&t.push(n);return t}(t=le(t)),i=0,a=n.length;a>i;)ft(e,r=n[i++],t[r]);return e},dt=function(e){var t=tt.call(this,e=j(e,!0));return !(this===at&&A(nt,e)&&!A(it,e))&&(!(t||!A(this,e)||!A(nt,e)||A(this,Ze)&&this[Ze][e])||t)},mt=function(e,t){if(e=le(e),t=j(t,!0),e!==at||!A(nt,t)||A(it,t)){var r=He(e,t);return !r||!A(nt,t)||A(e,Ze)&&e[Ze][t]||(r.enumerable=!0),r}},gt=function(e){for(var t,r=Je(le(e)),n=[],i=0;r.length>i;)A(nt,t=r[i++])||t==Ze||t==ze||n.push(t);return n},yt=function(e){for(var t,r=e===at,n=Je(r?it:le(e)),i=[],a=0;n.length>a;)!A(nt,t=n[a++])||r&&!A(at,t)||i.push(nt[t]);return i};ot||(H((Qe=function(){if(this instanceof Qe)throw TypeError("Symbol is not a constructor!");var e=$(arguments.length>0?arguments[0]:void 0),t=function t(r){this===at&&t.call(it,r),A(this,Ze)&&A(this[Ze],e)&&(this[Ze][e]=!1),ct(this,e,V(1,r));};return _&&ut&&ct(at,e,{configurable:!0,set:t}),lt(e)}).prototype,"toString",(function(){return this._k})),Ge.f=mt,M.f=ft,Me.f=We.f=gt,we.f=dt,Ae.f=yt,_&&H(at,"propertyIsEnumerable",dt,!0),ne.f=function(e){return lt(Z(e))}),X(X.G+X.W+X.F*!ot,{Symbol:Qe});for(var vt="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),xt=0;vt.length>xt;)Z(vt[xt++]);for(var bt=Fe(Z.store),Et=0;bt.length>Et;)ae(bt[Et++]);X(X.S+X.F*!ot,"Symbol",{for:function(e){return A(rt,e+="")?rt[e]:rt[e]=Qe(e)},keyFor:function(e){if(!pt(e))throw TypeError(e+" is not a symbol!");for(var t in rt)if(rt[t]===e)return t},useSetter:function(){ut=!0;},useSimple:function(){ut=!1;}}),X(X.S+X.F*!ot,"Object",{create:function(e,t){return void 0===t?je(e):ht(je(e),t)},defineProperty:ft,defineProperties:ht,getOwnPropertyDescriptor:mt,getOwnPropertyNames:gt,getOwnPropertySymbols:yt});var Ct=w((function(){Ae.f(1);}));X(X.S+X.F*Ct,"Object",{getOwnPropertySymbols:function(e){return Ae.f(Te(e))}}),Xe&&X(X.S+X.F*(!ot||w((function(){var e=Qe();return "[null]"!=Ye([e])||"{}"!=Ye({a:e})||"{}"!=Ye(Object(e))}))),"JSON",{stringify:function(e){for(var t,r,n=[e],i=1;arguments.length>i;)n.push(arguments[i++]);if(r=t=n[1],(P(t)||void 0!==e)&&!pt(e))return _e(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!pt(t))return t}),n[1]=t,Ye.apply(Xe,n)}}),Qe.prototype[et]||U(Qe.prototype,et,Qe.prototype.valueOf),re(Qe,"Symbol"),re(Math,"Math",!0),re(D.JSON,"JSON",!0),X(X.S,"Object",{create:je}),X(X.S+X.F*!_,"Object",{defineProperty:M.f}),X(X.S+X.F*!_,"Object",{defineProperties:Pe});var St=function(e,t){var r=(T.Object||{})[e]||Object[e],n={};n[e]=t(r),X(X.S+X.F*w((function(){r(1);})),"Object",n);},kt=Ge.f;St("getOwnPropertyDescriptor",(function(){return function(e,t){return kt(le(e),t)}}));var Dt=Ee("IE_PROTO"),Ft=Object.prototype,At=Object.getPrototypeOf||function(e){return e=Te(e),A(e,Dt)?e[Dt]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?Ft:null};St("getPrototypeOf",(function(){return function(e){return At(Te(e))}})),St("keys",(function(){return function(e){return Fe(Te(e))}})),St("getOwnPropertyNames",(function(){return We.f}));var wt=Y.onFreeze;St("freeze",(function(e){return function(t){return e&&P(t)?e(wt(t)):t}}));var _t=Y.onFreeze;St("seal",(function(e){return function(t){return e&&P(t)?e(_t(t)):t}}));var Tt=Y.onFreeze;St("preventExtensions",(function(e){return function(t){return e&&P(t)?e(Tt(t)):t}})),St("isFrozen",(function(e){return function(t){return !P(t)||!!e&&e(t)}})),St("isSealed",(function(e){return function(t){return !P(t)||!!e&&e(t)}})),St("isExtensible",(function(e){return function(t){return !!P(t)&&(!e||e(t))}}));var Pt=Object.assign,It=!Pt||w((function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach((function(e){t[e]=e;})),7!=Pt({},e)[r]||Object.keys(Pt({},t)).join("")!=n}))?function(e,t){for(var r=Te(e),n=arguments.length,i=1,a=Ae.f,o=we.f;n>i;)for(var s,u=ue(arguments[i++]),c=a?Fe(u).concat(a(u)):Fe(u),l=c.length,p=0;l>p;)s=c[p++],_&&!o.call(u,s)||(r[s]=u[s]);return r}:Pt;X(X.S+X.F,"Object",{assign:It});var Bt=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t};X(X.S,"Object",{is:Bt});var Ot=function(e,t){if(I(e),!P(t)&&null!==t)throw TypeError(t+": can't set as prototype!")},Lt={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=J(Function.call,Ge.f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array);}catch(e){t=!0;}return function(e,n){return Ot(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:Ot};X(X.S,"Object",{setPrototypeOf:Lt.set});var Nt=Z("toStringTag"),jt="Arguments"==se(function(){return arguments}()),Rt=function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),Nt))?r:jt?se(t):"Object"==(n=se(t))&&"function"==typeof t.callee?"Arguments":n},Mt={};Mt[Z("toStringTag")]="z",Mt+""!="[object z]"&&H(Object.prototype,"toString",(function(){return "[object "+Rt(this)+"]"}),!0);var Vt=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)},Ut=[].slice,qt={},Wt=function(e,t,r){if(!(t in qt)){for(var n=[],i=0;i<t;i++)n[i]="a["+i+"]";qt[t]=Function("F,a","return new F("+n.join(",")+")");}return qt[t](e,r)},$t=Function.bind||function(e){var t=K(this),r=Ut.call(arguments,1),n=function n(){var i=r.concat(Ut.call(arguments));return this instanceof n?Wt(t,i.length,i):Vt(t,i,e)};return P(t.prototype)&&(n.prototype=t.prototype),n};X(X.P,"Function",{bind:$t});var Gt=M.f,zt=Function.prototype,Ht=/^\s*function ([^ (]*)/;"name"in zt||_&&Gt(zt,"name",{configurable:!0,get:function(){try{return (""+this).match(Ht)[1]}catch(e){return ""}}});var Kt=Z("hasInstance"),Jt=Function.prototype;Kt in Jt||M.f(Jt,Kt,{value:function(e){if("function"!=typeof this||!P(e))return !1;if(!P(this.prototype))return e instanceof this;for(;e=At(e);)if(this.prototype===e)return !0;return !1}});var Qt="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff",Xt="["+Qt+"]",Yt=RegExp("^"+Xt+Xt+"*"),Zt=RegExp(Xt+Xt+"*$"),er=function(e,t,r){var n={},i=w((function(){return !!Qt[e]()||"​"!="​"[e]()})),a=n[e]=i?t(tr):Qt[e];r&&(n[r]=a),X(X.P+X.F*i,"String",n);},tr=er.trim=function(e,t){return e=String(ce(e)),1&t&&(e=e.replace(Yt,"")),2&t&&(e=e.replace(Zt,"")),e},rr=er,nr=D.parseInt,ir=rr.trim,ar=/^[-+]?0[xX]/,or=8!==nr(Qt+"08")||22!==nr(Qt+"0x16")?function(e,t){var r=ir(String(e),3);return nr(r,t>>>0||(ar.test(r)?16:10))}:nr;X(X.G+X.F*(parseInt!=or),{parseInt:or});var sr=D.parseFloat,ur=rr.trim,cr=1/sr(Qt+"-0")!=-1/0?function(e){var t=ur(String(e),3),r=sr(t);return 0===r&&"-"==t.charAt(0)?-0:r}:sr;X(X.G+X.F*(parseFloat!=cr),{parseFloat:cr});var lr=Lt.set,pr=function(e,t,r){var n,i=t.constructor;return i!==r&&"function"==typeof i&&(n=i.prototype)!==r.prototype&&P(n)&&lr&&lr(e,n),e},fr=Me.f,hr=Ge.f,dr=M.f,mr=rr.trim,gr=D.Number,yr=gr,vr=gr.prototype,xr="Number"==se(je(vr)),br="trim"in String.prototype,Er=function(e){var t=j(e,!1);if("string"==typeof t&&t.length>2){var r,n,i,a=(t=br?t.trim():mr(t,3)).charCodeAt(0);if(43===a||45===a){if(88===(r=t.charCodeAt(2))||120===r)return NaN}else if(48===a){switch(t.charCodeAt(1)){case 66:case 98:n=2,i=49;break;case 79:case 111:n=8,i=55;break;default:return +t}for(var o,s=t.slice(2),u=0,c=s.length;u<c;u++)if((o=s.charCodeAt(u))<48||o>i)return NaN;return parseInt(s,n)}}return +t};if(!gr(" 0o1")||!gr("0b1")||gr("+0x1")){gr=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof gr&&(xr?w((function(){vr.valueOf.call(r);})):"Number"!=se(r))?pr(new yr(Er(t)),r,gr):Er(t)};for(var Cr,Sr=_?fr(yr):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),kr=0;Sr.length>kr;kr++)A(yr,Cr=Sr[kr])&&!A(gr,Cr)&&dr(gr,Cr,hr(yr,Cr));gr.prototype=vr,vr.constructor=gr,H(D,"Number",gr);}var Dr=function(e,t){if("number"!=typeof e&&"Number"!=se(e))throw TypeError(t);return +e},Fr=function(e){var t=String(ce(this)),r="",n=he(e);if(n<0||n==1/0)throw RangeError("Count can't be negative");for(;n>0;(n>>>=1)&&(t+=t))1&n&&(r+=t);return r},Ar=1..toFixed,wr=Math.floor,_r=[0,0,0,0,0,0],Tr="Number.toFixed: incorrect invocation!",Pr=function(e,t){for(var r=-1,n=t;++r<6;)n+=e*_r[r],_r[r]=n%1e7,n=wr(n/1e7);},Ir=function(e){for(var t=6,r=0;--t>=0;)r+=_r[t],_r[t]=wr(r/e),r=r%e*1e7;},Br=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==_r[e]){var r=String(_r[e]);t=""===t?r:t+Fr.call("0",7-r.length)+r;}return t},Or=function e(t,r,n){return 0===r?n:r%2==1?e(t,r-1,n*t):e(t*t,r/2,n)};X(X.P+X.F*(!!Ar&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!w((function(){Ar.call({});}))),"Number",{toFixed:function(e){var t,r,n,i,a=Dr(this,Tr),o=he(e),s="",u="0";if(o<0||o>20)throw RangeError(Tr);if(a!=a)return "NaN";if(a<=-1e21||a>=1e21)return String(a);if(a<0&&(s="-",a=-a),a>1e-21)if(r=(t=function(e){for(var t=0,r=e;r>=4096;)t+=12,r/=4096;for(;r>=2;)t+=1,r/=2;return t}(a*Or(2,69,1))-69)<0?a*Or(2,-t,1):a/Or(2,t,1),r*=4503599627370496,(t=52-t)>0){for(Pr(0,r),n=o;n>=7;)Pr(1e7,0),n-=7;for(Pr(Or(10,n,1),0),n=t-1;n>=23;)Ir(1<<23),n-=23;Ir(1<<n),Pr(1,1),Ir(2),u=Br();}else Pr(0,r),Pr(1<<-t,0),u=Br()+Fr.call("0",o);return u=o>0?s+((i=u.length)<=o?"0."+Fr.call("0",o-i)+u:u.slice(0,i-o)+"."+u.slice(i-o)):s+u}});var Lr=1..toPrecision;X(X.P+X.F*(w((function(){return "1"!==Lr.call(1,void 0)}))||!w((function(){Lr.call({});}))),"Number",{toPrecision:function(e){var t=Dr(this,"Number#toPrecision: incorrect invocation!");return void 0===e?Lr.call(t):Lr.call(t,e)}}),X(X.S,"Number",{EPSILON:Math.pow(2,-52)});var Nr=D.isFinite;X(X.S,"Number",{isFinite:function(e){return "number"==typeof e&&Nr(e)}});var jr=Math.floor,Rr=function(e){return !P(e)&&isFinite(e)&&jr(e)===e};X(X.S,"Number",{isInteger:Rr}),X(X.S,"Number",{isNaN:function(e){return e!=e}});var Mr=Math.abs;X(X.S,"Number",{isSafeInteger:function(e){return Rr(e)&&Mr(e)<=9007199254740991}}),X(X.S,"Number",{MAX_SAFE_INTEGER:9007199254740991}),X(X.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991}),X(X.S+X.F*(Number.parseFloat!=cr),"Number",{parseFloat:cr}),X(X.S+X.F*(Number.parseInt!=or),"Number",{parseInt:or});var Vr=Math.log1p||function(e){return (e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)},Ur=Math.sqrt,qr=Math.acosh;X(X.S+X.F*!(qr&&710==Math.floor(qr(Number.MAX_VALUE))&&qr(1/0)==1/0),"Math",{acosh:function(e){return (e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:Vr(e-1+Ur(e-1)*Ur(e+1))}});var Wr=Math.asinh;X(X.S+X.F*!(Wr&&1/Wr(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}});var $r=Math.atanh;X(X.S+X.F*!($r&&1/$r(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}});var Gr=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1};X(X.S,"Math",{cbrt:function(e){return Gr(e=+e)*Math.pow(Math.abs(e),1/3)}}),X(X.S,"Math",{clz32:function(e){return (e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}});var zr=Math.exp;X(X.S,"Math",{cosh:function(e){return (zr(e=+e)+zr(-e))/2}});var Hr=Math.expm1,Kr=!Hr||Hr(10)>22025.465794806718||Hr(10)<22025.465794806718||-2e-17!=Hr(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:Hr;X(X.S+X.F*(Kr!=Math.expm1),"Math",{expm1:Kr});var Jr=Math.pow,Qr=Jr(2,-52),Xr=Jr(2,-23),Yr=Jr(2,127)*(2-Xr),Zr=Jr(2,-126),en=Math.fround||function(e){var t,r,n=Math.abs(e),i=Gr(e);return n<Zr?i*(n/Zr/Xr+1/Qr-1/Qr)*Zr*Xr:(r=(t=(1+Xr/Qr)*n)-(t-n))>Yr||r!=r?i*(1/0):i*r};X(X.S,"Math",{fround:en});var tn=Math.abs;X(X.S,"Math",{hypot:function(e,t){for(var r,n,i=0,a=0,o=arguments.length,s=0;a<o;)s<(r=tn(arguments[a++]))?(i=i*(n=s/r)*n+1,s=r):i+=r>0?(n=r/s)*n:r;return s===1/0?1/0:s*Math.sqrt(i)}});var rn=Math.imul;X(X.S+X.F*w((function(){return -5!=rn(4294967295,5)||2!=rn.length})),"Math",{imul:function(e,t){var r=+e,n=+t,i=65535&r,a=65535&n;return 0|i*a+((65535&r>>>16)*a+i*(65535&n>>>16)<<16>>>0)}}),X(X.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}}),X(X.S,"Math",{log1p:Vr}),X(X.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}}),X(X.S,"Math",{sign:Gr});var nn=Math.exp;X(X.S+X.F*w((function(){return -2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(Kr(e)-Kr(-e))/2:(nn(e-1)-nn(-e-1))*(Math.E/2)}});var an=Math.exp;X(X.S,"Math",{tanh:function(e){var t=Kr(e=+e),r=Kr(-e);return t==1/0?1:r==1/0?-1:(t-r)/(an(e)+an(-e))}}),X(X.S,"Math",{trunc:function(e){return (e>0?Math.floor:Math.ceil)(e)}});var on=String.fromCharCode,sn=String.fromCodePoint;X(X.S+X.F*(!!sn&&1!=sn.length),"String",{fromCodePoint:function(e){for(var t,r=[],n=arguments.length,i=0;n>i;){if(t=+arguments[i++],ve(t,1114111)!==t)throw RangeError(t+" is not a valid code point");r.push(t<65536?on(t):on(55296+((t-=65536)>>10),t%1024+56320));}return r.join("")}}),X(X.S,"String",{raw:function(e){for(var t=le(e.raw),r=me(t.length),n=arguments.length,i=[],a=0;r>a;)i.push(String(t[a++])),a<n&&i.push(String(arguments[a]));return i.join("")}}),rr("trim",(function(e){return function(){return e(this,3)}}));var un=function(e){return function(t,r){var n,i,a=String(ce(t)),o=he(r),s=a.length;return o<0||o>=s?e?"":void 0:(n=a.charCodeAt(o))<55296||n>56319||o+1===s||(i=a.charCodeAt(o+1))<56320||i>57343?e?a.charAt(o):n:e?a.slice(o,o+2):i-56320+(n-55296<<10)+65536}},cn={},ln={};U(ln,Z("iterator"),(function(){return this}));var pn=function(e,t,r){e.prototype=je(ln,{next:V(1,r)}),re(e,t+" Iterator");},fn=Z("iterator"),hn=!([].keys&&"next"in[].keys()),dn=function(){return this},mn=function(e,t,r,n,i,a,o){pn(r,t,n);var s,u,c,l=function(e){if(!hn&&e in d)return d[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},p=t+" Iterator",f="values"==i,h=!1,d=e.prototype,m=d[fn]||d["@@iterator"]||i&&d[i],g=m||l(i),y=i?f?l("entries"):g:void 0,v="Array"==t&&d.entries||m;if(v&&(c=At(v.call(new e)))!==Object.prototype&&c.next&&(re(c,p,!0),"function"!=typeof c[fn]&&U(c,fn,dn)),f&&m&&"values"!==m.name&&(h=!0,g=function(){return m.call(this)}),(hn||h||!d[fn])&&U(d,fn,g),cn[t]=g,cn[p]=dn,i)if(s={values:f?g:l("values"),keys:a?g:l("keys"),entries:y},o)for(u in s)u in d||H(d,u,s[u]);else X(X.P+X.F*(hn||h),t,s);return s},gn=un(!0);mn(String,"String",(function(e){this._t=String(e),this._i=0;}),(function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=gn(t,r),this._i+=e.length,{value:e,done:!1})}));var yn=un(!1);X(X.P,"String",{codePointAt:function(e){return yn(this,e)}});var vn=Z("match"),xn=function(e){var t;return P(e)&&(void 0!==(t=e[vn])?!!t:"RegExp"==se(e))},bn=function(e,t,r){if(xn(t))throw TypeError("String#"+r+" doesn't accept regex!");return String(ce(e))},En=Z("match"),Cn=function(e){var t=/./;try{"/./"[e](t);}catch(r){try{return t[En]=!1,!"/./"[e](t)}catch(e){}}return !0},Sn="".endsWith;X(X.P+X.F*Cn("endsWith"),"String",{endsWith:function(e){var t=bn(this,e,"endsWith"),r=arguments.length>1?arguments[1]:void 0,n=me(t.length),i=void 0===r?n:Math.min(me(r),n),a=String(e);return Sn?Sn.call(t,a,i):t.slice(i-a.length,i)===a}});X(X.P+X.F*Cn("includes"),"String",{includes:function(e){return !!~bn(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}}),X(X.P,"String",{repeat:Fr});var kn="".startsWith;X(X.P+X.F*Cn("startsWith"),"String",{startsWith:function(e){var t=bn(this,e,"startsWith"),r=me(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return kn?kn.call(t,n,r):t.slice(r,r+n.length)===n}});var Dn=/"/g,Fn=function(e,t,r,n){var i=String(ce(e)),a="<"+t;return ""!==r&&(a+=" "+r+'="'+String(n).replace(Dn,"&quot;")+'"'),a+">"+i+"</"+t+">"},An=function(e,t){var r={};r[e]=t(Fn),X(X.P+X.F*w((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",r);};An("anchor",(function(e){return function(t){return e(this,"a","name",t)}})),An("big",(function(e){return function(){return e(this,"big","","")}})),An("blink",(function(e){return function(){return e(this,"blink","","")}})),An("bold",(function(e){return function(){return e(this,"b","","")}})),An("fixed",(function(e){return function(){return e(this,"tt","","")}})),An("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}})),An("fontsize",(function(e){return function(t){return e(this,"font","size",t)}})),An("italics",(function(e){return function(){return e(this,"i","","")}})),An("link",(function(e){return function(t){return e(this,"a","href",t)}})),An("small",(function(e){return function(){return e(this,"small","","")}})),An("strike",(function(e){return function(){return e(this,"strike","","")}})),An("sub",(function(e){return function(){return e(this,"sub","","")}})),An("sup",(function(e){return function(){return e(this,"sup","","")}})),X(X.S,"Date",{now:function(){return (new Date).getTime()}}),X(X.P+X.F*w((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=Te(this),r=j(t);return "number"!=typeof r||isFinite(r)?t.toISOString():null}});var wn=Date.prototype.getTime,_n=Date.prototype.toISOString,Tn=function(e){return e>9?e:"0"+e},Pn=w((function(){return "0385-07-25T07:06:39.999Z"!=_n.call(new Date(-5e13-1))}))||!w((function(){_n.call(new Date(NaN));}))?function(){if(!isFinite(wn.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),r=e.getUTCMilliseconds(),n=t<0?"-":t>9999?"+":"";return n+("00000"+Math.abs(t)).slice(n?-6:-4)+"-"+Tn(e.getUTCMonth()+1)+"-"+Tn(e.getUTCDate())+"T"+Tn(e.getUTCHours())+":"+Tn(e.getUTCMinutes())+":"+Tn(e.getUTCSeconds())+"."+(r>99?r:"0"+Tn(r))+"Z"}:_n;X(X.P+X.F*(Date.prototype.toISOString!==Pn),"Date",{toISOString:Pn});var In=Date.prototype,Bn=In.toString,On=In.getTime;new Date(NaN)+""!="Invalid Date"&&H(In,"toString",(function(){var e=On.call(this);return e==e?Bn.call(this):"Invalid Date"}));var Ln=Z("toPrimitive"),Nn=Date.prototype;Ln in Nn||U(Nn,Ln,(function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return j(I(this),"number"!=e)})),X(X.S,"Array",{isArray:_e});var jn=function(e,t,r,n){try{return n?t(I(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&I(i.call(e)),t}},Rn=Z("iterator"),Mn=Array.prototype,Vn=function(e){return void 0!==e&&(cn.Array===e||Mn[Rn]===e)},Un=function(e,t,r){t in e?M.f(e,t,V(0,r)):e[t]=r;},qn=Z("iterator"),Wn=T.getIteratorMethod=function(e){if(null!=e)return e[qn]||e["@@iterator"]||cn[Rt(e)]},$n=Z("iterator"),Gn=!1;try{var zn=[7][$n]();zn.return=function(){Gn=!0;},Array.from(zn,(function(){throw 2}));}catch(e){}var Hn=function(e,t){if(!t&&!Gn)return !1;var r=!1;try{var n=[7],i=n[$n]();i.next=function(){return {done:r=!0}},n[$n]=function(){return i},e(n);}catch(e){}return r};X(X.S+X.F*!Hn((function(e){Array.from(e);})),"Array",{from:function(e){var t,r,n,i,a=Te(e),o="function"==typeof this?this:Array,s=arguments.length,u=s>1?arguments[1]:void 0,c=void 0!==u,l=0,p=Wn(a);if(c&&(u=J(u,s>2?arguments[2]:void 0,2)),null==p||o==Array&&Vn(p))for(r=new o(t=me(a.length));t>l;l++)Un(r,l,c?u(a[l],l):a[l]);else for(i=p.call(a),r=new o;!(n=i.next()).done;l++)Un(r,l,c?jn(i,u,[n.value,l],!0):n.value);return r.length=l,r}}),X(X.S+X.F*w((function(){function e(){}return !(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,r=new("function"==typeof this?this:Array)(t);t>e;)Un(r,e,arguments[e++]);return r.length=t,r}});var Kn=function(e,t){return !!e&&w((function(){t?e.call(null,(function(){}),1):e.call(null);}))},Jn=[].join;X(X.P+X.F*(ue!=Object||!Kn(Jn)),"Array",{join:function(e){return Jn.call(le(this),void 0===e?",":e)}});var Qn=[].slice;X(X.P+X.F*w((function(){Be&&Qn.call(Be);})),"Array",{slice:function(e,t){var r=me(this.length),n=se(this);if(t=void 0===t?r:t,"Array"==n)return Qn.call(this,e,t);for(var i=ve(e,r),a=ve(t,r),o=me(a-i),s=new Array(o),u=0;u<o;u++)s[u]="String"==n?this.charAt(i+u):this[i+u];return s}});var Xn=[].sort,Yn=[1,2,3];X(X.P+X.F*(w((function(){Yn.sort(void 0);}))||!w((function(){Yn.sort(null);}))||!Kn(Xn)),"Array",{sort:function(e){return void 0===e?Xn.call(Te(this)):Xn.call(Te(this),K(e))}});var Zn=Z("species"),ei=function(e,t){return new(function(e){var t;return _e(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!_e(t.prototype)||(t=void 0),P(t)&&null===(t=t[Zn])&&(t=void 0)),void 0===t?Array:t}(e))(t)},ti=function(e,t){var r=1==e,n=2==e,i=3==e,a=4==e,o=6==e,s=5==e||o,u=t||ei;return function(t,c,l){for(var p,f,h=Te(t),d=ue(h),m=J(c,l,3),g=me(d.length),y=0,v=r?u(t,g):n?u(t,0):void 0;g>y;y++)if((s||y in d)&&(f=m(p=d[y],y,h),e))if(r)v[y]=f;else if(f)switch(e){case 3:return !0;case 5:return p;case 6:return y;case 2:v.push(p);}else if(a)return !1;return o?-1:i||a?a:v}},ri=ti(0),ni=Kn([].forEach,!0);X(X.P+X.F*!ni,"Array",{forEach:function(e){return ri(this,e,arguments[1])}});var ii=ti(1);X(X.P+X.F*!Kn([].map,!0),"Array",{map:function(e){return ii(this,e,arguments[1])}});var ai=ti(2);X(X.P+X.F*!Kn([].filter,!0),"Array",{filter:function(e){return ai(this,e,arguments[1])}});var oi=ti(3);X(X.P+X.F*!Kn([].some,!0),"Array",{some:function(e){return oi(this,e,arguments[1])}});var si=ti(4);X(X.P+X.F*!Kn([].every,!0),"Array",{every:function(e){return si(this,e,arguments[1])}});var ui=function(e,t,r,n,i){K(t);var a=Te(e),o=ue(a),s=me(a.length),u=i?s-1:0,c=i?-1:1;if(r<2)for(;;){if(u in o){n=o[u],u+=c;break}if(u+=c,i?u<0:s<=u)throw TypeError("Reduce of empty array with no initial value")}for(;i?u>=0:s>u;u+=c)u in o&&(n=t(n,o[u],u,a));return n};X(X.P+X.F*!Kn([].reduce,!0),"Array",{reduce:function(e){return ui(this,e,arguments.length,arguments[1],!1)}}),X(X.P+X.F*!Kn([].reduceRight,!0),"Array",{reduceRight:function(e){return ui(this,e,arguments.length,arguments[1],!0)}});var ci=xe(!1),li=[].indexOf,pi=!!li&&1/[1].indexOf(1,-0)<0;X(X.P+X.F*(pi||!Kn(li)),"Array",{indexOf:function(e){return pi?li.apply(this,arguments)||0:ci(this,e,arguments[1])}});var fi=[].lastIndexOf,hi=!!fi&&1/[1].lastIndexOf(1,-0)<0;X(X.P+X.F*(hi||!Kn(fi)),"Array",{lastIndexOf:function(e){if(hi)return fi.apply(this,arguments)||0;var t=le(this),r=me(t.length),n=r-1;for(arguments.length>1&&(n=Math.min(n,he(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in t&&t[n]===e)return n||0;return -1}});var di=[].copyWithin||function(e,t){var r=Te(this),n=me(r.length),i=ve(e,n),a=ve(t,n),o=arguments.length>2?arguments[2]:void 0,s=Math.min((void 0===o?n:ve(o,n))-a,n-i),u=1;for(a<i&&i<a+s&&(u=-1,a+=s-1,i+=s-1);s-- >0;)a in r?r[i]=r[a]:delete r[i],i+=u,a+=u;return r},mi=Z("unscopables"),gi=Array.prototype;null==gi[mi]&&U(gi,mi,{});var yi=function(e){gi[mi][e]=!0;};X(X.P,"Array",{copyWithin:di}),yi("copyWithin");var vi=function(e){for(var t=Te(this),r=me(t.length),n=arguments.length,i=ve(n>1?arguments[1]:void 0,r),a=n>2?arguments[2]:void 0,o=void 0===a?r:ve(a,r);o>i;)t[i++]=e;return t};X(X.P,"Array",{fill:vi}),yi("fill");var xi=ti(5),bi=!0;"find"in[]&&Array(1).find((function(){bi=!1;})),X(X.P+X.F*bi,"Array",{find:function(e){return xi(this,e,arguments.length>1?arguments[1]:void 0)}}),yi("find");var Ei=ti(6),Ci=!0;"findIndex"in[]&&Array(1).findIndex((function(){Ci=!1;})),X(X.P+X.F*Ci,"Array",{findIndex:function(e){return Ei(this,e,arguments.length>1?arguments[1]:void 0)}}),yi("findIndex");var Si=Z("species"),ki=function(e){var t=D[e];_&&t&&!t[Si]&&M.f(t,Si,{configurable:!0,get:function(){return this}});};ki("Array");var Di=function(e,t){return {value:t,done:!!e}},Fi=mn(Array,"Array",(function(e,t){this._t=le(e),this._i=0,this._k=t;}),(function(){var e=this._t,t=this._k,r=this._i++;return !e||r>=e.length?(this._t=void 0,Di(1)):Di(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])}),"values");cn.Arguments=cn.Array,yi("keys"),yi("values"),yi("entries");var Ai=function(){var e=I(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},wi=M.f,_i=Me.f,Ti=D.RegExp,Pi=Ti,Ii=Ti.prototype,Bi=/a/g,Oi=/a/g,Li=new Ti(Bi)!==Bi;if(_&&(!Li||w((function(){return Oi[Z("match")]=!1,Ti(Bi)!=Bi||Ti(Oi)==Oi||"/a/i"!=Ti(Bi,"i")})))){Ti=function(e,t){var r=this instanceof Ti,n=xn(e),i=void 0===t;return !r&&n&&e.constructor===Ti&&i?e:pr(Li?new Pi(n&&!i?e.source:e,t):Pi((n=e instanceof Ti)?e.source:e,n&&i?Ai.call(e):t),r?this:Ii,Ti)};for(var Ni=function(e){e in Ti||wi(Ti,e,{configurable:!0,get:function(){return Pi[e]},set:function(t){Pi[e]=t;}});},ji=_i(Pi),Ri=0;ji.length>Ri;)Ni(ji[Ri++]);Ii.constructor=Ti,Ti.prototype=Ii,H(D,"RegExp",Ti);}ki("RegExp");var Mi=RegExp.prototype.exec,Vi=String.prototype.replace,Ui=Mi,qi=function(){var e=/a/,t=/b*/g;return Mi.call(e,"a"),Mi.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),Wi=void 0!==/()??/.exec("")[1];(qi||Wi)&&(Ui=function(e){var t,r,n,i,a=this;return Wi&&(r=new RegExp("^"+a.source+"$(?!\\s)",Ai.call(a))),qi&&(t=a.lastIndex),n=Mi.call(a,e),qi&&n&&(a.lastIndex=a.global?n.index+n[0].length:t),Wi&&n&&n.length>1&&Vi.call(n[0],r,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(n[i]=void 0);})),n});var $i=Ui;X({target:"RegExp",proto:!0,forced:$i!==/./.exec},{exec:$i}),_&&"g"!=/./g.flags&&M.f(RegExp.prototype,"flags",{configurable:!0,get:Ai});var Gi=/./.toString,zi=function(e){H(RegExp.prototype,"toString",e,!0);};w((function(){return "/a/b"!=Gi.call({source:"a",flags:"b"})}))?zi((function(){var e=I(this);return "/".concat(e.source,"/","flags"in e?e.flags:!_&&e instanceof RegExp?Ai.call(e):void 0)})):"toString"!=Gi.name&&zi((function(){return Gi.call(this)}));var Hi=un(!0),Ki=function(e,t,r){return t+(r?Hi(e,t).length:1)},Ji=RegExp.prototype.exec,Qi=function(e,t){var r=e.exec;if("function"==typeof r){var n=r.call(e,t);if("object"!==i(n))throw new TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==Rt(e))throw new TypeError("RegExp#exec called on incompatible receiver");return Ji.call(e,t)},Xi=Z("species"),Yi=!w((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),Zi=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2===r.length&&"a"===r[0]&&"b"===r[1]}(),ea=function(e,t,r){var n=Z(e),i=!w((function(){var t={};return t[n]=function(){return 7},7!=""[e](t)})),a=i?!w((function(){var t=!1,r=/a/;return r.exec=function(){return t=!0,null},"split"===e&&(r.constructor={},r.constructor[Xi]=function(){return r}),r[n](""),!t})):void 0;if(!i||!a||"replace"===e&&!Yi||"split"===e&&!Zi){var o=/./[n],s=r(ce,n,""[e],(function(e,t,r,n,a){return t.exec===$i?i&&!a?{done:!0,value:o.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}})),u=s[0],c=s[1];H(String.prototype,e,u),U(RegExp.prototype,n,2==t?function(e,t){return c.call(e,this,t)}:function(e){return c.call(e,this)});}};ea("match",1,(function(e,t,r,n){return [function(r){var n=e(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=n(r,e,this);if(t.done)return t.value;var i=I(e),a=String(this);if(!i.global)return Qi(i,a);var o=i.unicode;i.lastIndex=0;for(var s,u=[],c=0;null!==(s=Qi(i,a));){var l=String(s[0]);u[c]=l,""===l&&(i.lastIndex=Ki(a,me(i.lastIndex),o)),c++;}return 0===c?null:u}]}));var ta=Math.max,ra=Math.min,na=Math.floor,ia=/\$([$&`']|\d\d?|<[^>]*>)/g,aa=/\$([$&`']|\d\d?)/g;ea("replace",2,(function(e,t,r,n){return [function(n,i){var a=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,a,i):r.call(String(a),n,i)},function(e,t){var a=n(r,e,this,t);if(a.done)return a.value;var o=I(e),s=String(this),u="function"==typeof t;u||(t=String(t));var c=o.global;if(c){var l=o.unicode;o.lastIndex=0;}for(var p=[];;){var f=Qi(o,s);if(null===f)break;if(p.push(f),!c)break;""===String(f[0])&&(o.lastIndex=Ki(s,me(o.lastIndex),l));}for(var h,d="",m=0,g=0;g<p.length;g++){f=p[g];for(var y=String(f[0]),v=ta(ra(he(f.index),s.length),0),x=[],b=1;b<f.length;b++)x.push(void 0===(h=f[b])?h:String(h));var E=f.groups;if(u){var C=[y].concat(x,v,s);void 0!==E&&C.push(E);var S=String(t.apply(void 0,C));}else S=i(y,s,v,x,E,t);v>=m&&(d+=s.slice(m,v)+S,m=v+y.length);}return d+s.slice(m)}];function i(e,t,n,i,a,o){var s=n+e.length,u=i.length,c=aa;return void 0!==a&&(a=Te(a),c=ia),r.call(o,c,(function(r,o){var c;switch(o.charAt(0)){case"$":return "$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(s);case"<":c=a[o.slice(1,-1)];break;default:var l=+o;if(0===l)return r;if(l>u){var p=na(l/10);return 0===p?r:p<=u?void 0===i[p-1]?o.charAt(1):i[p-1]+o.charAt(1):r}c=i[l-1];}return void 0===c?"":c}))}})),ea("search",1,(function(e,t,r,n){return [function(r){var n=e(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=n(r,e,this);if(t.done)return t.value;var i=I(e),a=String(this),o=i.lastIndex;Bt(o,0)||(i.lastIndex=0);var s=Qi(i,a);return Bt(i.lastIndex,o)||(i.lastIndex=o),null===s?-1:s.index}]}));var oa=Z("species"),sa=function(e,t){var r,n=I(e).constructor;return void 0===n||null==(r=I(n)[oa])?t:K(r)},ua=Math.min,ca=[].push,la=!w((function(){RegExp(4294967295,"y");}));ea("split",2,(function(e,t,r,n){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var n=String(this);if(void 0===e&&0===t)return [];if(!xn(e))return r.call(n,e,t);for(var i,a,o,s=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),c=0,l=void 0===t?4294967295:t>>>0,p=new RegExp(e.source,u+"g");(i=$i.call(p,n))&&!((a=p.lastIndex)>c&&(s.push(n.slice(c,i.index)),i.length>1&&i.index<n.length&&ca.apply(s,i.slice(1)),o=i[0].length,c=a,s.length>=l));)p.lastIndex===i.index&&p.lastIndex++;return c===n.length?!o&&p.test("")||s.push(""):s.push(n.slice(c)),s.length>l?s.slice(0,l):s}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:r.call(this,e,t)}:r,[function(r,n){var a=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,a,n):i.call(String(a),r,n)},function(e,t){var a=n(i,e,this,t,i!==r);if(a.done)return a.value;var o=I(e),s=String(this),u=sa(o,RegExp),c=o.unicode,l=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(la?"y":"g"),p=new u(la?o:"^(?:"+o.source+")",l),f=void 0===t?4294967295:t>>>0;if(0===f)return [];if(0===s.length)return null===Qi(p,s)?[s]:[];for(var h=0,d=0,m=[];d<s.length;){p.lastIndex=la?d:0;var g,y=Qi(p,la?s:s.slice(d));if(null===y||(g=ua(me(p.lastIndex+(la?0:d)),s.length))===h)d=Ki(s,d,c);else {if(m.push(s.slice(h,d)),m.length===f)return m;for(var v=1;v<=y.length-1;v++)if(m.push(y[v]),m.length===f)return m;d=h=g;}}return m.push(s.slice(h)),m}]}));var pa,fa,ha,da=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e},ma=r((function(e){var t={},r={},n=e.exports=function(e,n,i,a,o){var s,u,c,l,p=o?function(){return e}:Wn(e),f=J(i,a,n?2:1),h=0;if("function"!=typeof p)throw TypeError(e+" is not iterable!");if(Vn(p)){for(s=me(e.length);s>h;h++)if((l=n?f(I(u=e[h])[0],u[1]):f(e[h]))===t||l===r)return l}else for(c=p.call(e);!(u=c.next()).done;)if((l=jn(c,f,u.value,n))===t||l===r)return l};n.BREAK=t,n.RETURN=r;})),ga=D.process,ya=D.setImmediate,va=D.clearImmediate,xa=D.MessageChannel,ba=D.Dispatch,Ea=0,Ca={},Sa=function(){var e=+this;if(Ca.hasOwnProperty(e)){var t=Ca[e];delete Ca[e],t();}},ka=function(e){Sa.call(e.data);};ya&&va||(ya=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return Ca[++Ea]=function(){Vt("function"==typeof e?e:Function(e),t);},pa(Ea),Ea},va=function(e){delete Ca[e];},"process"==se(ga)?pa=function(e){ga.nextTick(J(Sa,e,1));}:ba&&ba.now?pa=function(e){ba.now(J(Sa,e,1));}:xa?(ha=(fa=new xa).port2,fa.port1.onmessage=ka,pa=J(ha.postMessage,ha,1)):D.addEventListener&&"function"==typeof postMessage&&!D.importScripts?(pa=function(e){D.postMessage(e+"","*");},D.addEventListener("message",ka,!1)):pa="onreadystatechange"in L("script")?function(e){Be.appendChild(L("script")).onreadystatechange=function(){Be.removeChild(this),Sa.call(e);};}:function(e){setTimeout(J(Sa,e,1),0);});var Da={set:ya,clear:va},Fa=Da.set,Aa=D.MutationObserver||D.WebKitMutationObserver,wa=D.process,_a=D.Promise,Ta="process"==se(wa);function Pa(e){var t,r;this.promise=new e((function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n;})),this.resolve=K(t),this.reject=K(r);}var Ia,Ba,Oa,La,Na={f:function(e){return new Pa(e)}},ja=function(e){try{return {e:!1,v:e()}}catch(e){return {e:!0,v:e}}},Ra=D.navigator,Ma=Ra&&Ra.userAgent||"",Va=function(e,t){if(I(e),P(t)&&t.constructor===e)return t;var r=Na.f(e);return (0, r.resolve)(t),r.promise},Ua=function(e,t,r){for(var n in t)H(e,n,t[n],r);return e},qa=Da.set,Wa=function(){var e,t,r,n=function(){var n,i;for(Ta&&(n=wa.domain)&&n.exit();e;){i=e.fn,e=e.next;try{i();}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter();};if(Ta)r=function(){wa.nextTick(n);};else if(!Aa||D.navigator&&D.navigator.standalone)if(_a&&_a.resolve){var i=_a.resolve(void 0);r=function(){i.then(n);};}else r=function(){Fa.call(D,n);};else {var a=!0,o=document.createTextNode("");new Aa(n).observe(o,{characterData:!0}),r=function(){o.data=a=!a;};}return function(n){var i={fn:n,next:void 0};t&&(t.next=i),e||(e=i,r()),t=i;}}(),$a=D.TypeError,Ga=D.process,za=Ga&&Ga.versions,Ha=za&&za.v8||"",Ka=D.Promise,Ja="process"==Rt(Ga),Qa=function(){},Xa=Ba=Na.f,Ya=!!function(){try{var e=Ka.resolve(1),t=(e.constructor={})[Z("species")]=function(e){e(Qa,Qa);};return (Ja||"function"==typeof PromiseRejectionEvent)&&e.then(Qa)instanceof t&&0!==Ha.indexOf("6.6")&&-1===Ma.indexOf("Chrome/66")}catch(e){}}(),Za=function(e){var t;return !(!P(e)||"function"!=typeof(t=e.then))&&t},eo=function(e,t){if(!e._n){e._n=!0;var r=e._c;Wa((function(){for(var n=e._v,i=1==e._s,a=0,o=function(t){var r,a,o,s=i?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{s?(i||(2==e._h&&no(e),e._h=1),!0===s?r=n:(l&&l.enter(),r=s(n),l&&(l.exit(),o=!0)),r===t.promise?c($a("Promise-chain cycle")):(a=Za(r))?a.call(r,u,c):u(r)):c(n);}catch(e){l&&!o&&l.exit(),c(e);}};r.length>a;)o(r[a++]);e._c=[],e._n=!1,t&&!e._h&&to(e);}));}},to=function(e){qa.call(D,(function(){var t,r,n,i=e._v,a=ro(e);if(a&&(t=ja((function(){Ja?Ga.emit("unhandledRejection",i,e):(r=D.onunhandledrejection)?r({promise:e,reason:i}):(n=D.console)&&n.error&&n.error("Unhandled promise rejection",i);})),e._h=Ja||ro(e)?2:1),e._a=void 0,a&&t.e)throw t.v}));},ro=function(e){return 1!==e._h&&0===(e._a||e._c).length},no=function(e){qa.call(D,(function(){var t;Ja?Ga.emit("rejectionHandled",e):(t=D.onrejectionhandled)&&t({promise:e,reason:e._v});}));},io=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),eo(t,!0));},ao=function e(t){var r,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw $a("Promise can't be resolved itself");(r=Za(t))?Wa((function(){var i={_w:n,_d:!1};try{r.call(t,J(e,i,1),J(io,i,1));}catch(e){io.call(i,e);}})):(n._v=t,n._s=1,eo(n,!1));}catch(e){io.call({_w:n,_d:!1},e);}}};Ya||(Ka=function(e){da(this,Ka,"Promise","_h"),K(e),Ia.call(this);try{e(J(ao,this,1),J(io,this,1));}catch(e){io.call(this,e);}},(Ia=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1;}).prototype=Ua(Ka.prototype,{then:function(e,t){var r=Xa(sa(this,Ka));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=Ja?Ga.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&eo(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),Oa=function(){var e=new Ia;this.promise=e,this.resolve=J(ao,e,1),this.reject=J(io,e,1);},Na.f=Xa=function(e){return e===Ka||e===La?new Oa(e):Ba(e)}),X(X.G+X.W+X.F*!Ya,{Promise:Ka}),re(Ka,"Promise"),ki("Promise"),La=T.Promise,X(X.S+X.F*!Ya,"Promise",{reject:function(e){var t=Xa(this);return (0, t.reject)(e),t.promise}}),X(X.S+X.F*!Ya,"Promise",{resolve:function(e){return Va(this,e)}}),X(X.S+X.F*!(Ya&&Hn((function(e){Ka.all(e).catch(Qa);}))),"Promise",{all:function(e){var t=this,r=Xa(t),n=r.resolve,i=r.reject,a=ja((function(){var r=[],a=0,o=1;ma(e,!1,(function(e){var s=a++,u=!1;r.push(void 0),o++,t.resolve(e).then((function(e){u||(u=!0,r[s]=e,--o||n(r));}),i);})),--o||n(r);}));return a.e&&i(a.v),r.promise},race:function(e){var t=this,r=Xa(t),n=r.reject,i=ja((function(){ma(e,!1,(function(e){t.resolve(e).then(r.resolve,n);}));}));return i.e&&n(i.v),r.promise}});var oo=function(e,t){if(!P(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e},so=M.f,uo=Y.fastKey,co=_?"_s":"size",lo=function(e,t){var r,n=uo(t);if("F"!==n)return e._i[n];for(r=e._f;r;r=r.n)if(r.k==t)return r},po={getConstructor:function(e,t,r,n){var i=e((function(e,a){da(e,i,t,"_i"),e._t=t,e._i=je(null),e._f=void 0,e._l=void 0,e[co]=0,null!=a&&ma(a,r,e[n],e);}));return Ua(i.prototype,{clear:function(){for(var e=oo(this,t),r=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];e._f=e._l=void 0,e[co]=0;},delete:function(e){var r=oo(this,t),n=lo(r,e);if(n){var i=n.n,a=n.p;delete r._i[n.i],n.r=!0,a&&(a.n=i),i&&(i.p=a),r._f==n&&(r._f=i),r._l==n&&(r._l=a),r[co]--;}return !!n},forEach:function(e){oo(this,t);for(var r,n=J(e,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p;},has:function(e){return !!lo(oo(this,t),e)}}),_&&so(i.prototype,"size",{get:function(){return oo(this,t)[co]}}),i},def:function(e,t,r){var n,i,a=lo(e,t);return a?a.v=r:(e._l=a={i:i=uo(t,!0),k:t,v:r,p:n=e._l,n:void 0,r:!1},e._f||(e._f=a),n&&(n.n=a),e[co]++,"F"!==i&&(e._i[i]=a)),e},getEntry:lo,setStrong:function(e,t,r){mn(e,t,(function(e,r){this._t=oo(e,t),this._k=r,this._l=void 0;}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?Di(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,Di(1))}),r?"entries":"values",!r,!0),ki(t);}},fo=function(e,t,r,n,i,a){var o=D[e],s=o,u=i?"set":"add",c=s&&s.prototype,l={},p=function(e){var t=c[e];H(c,e,"delete"==e?function(e){return !(a&&!P(e))&&t.call(this,0===e?0:e)}:"has"==e?function(e){return !(a&&!P(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return a&&!P(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this});};if("function"==typeof s&&(a||c.forEach&&!w((function(){(new s).entries().next();})))){var f=new s,h=f[u](a?{}:-0,1)!=f,d=w((function(){f.has(1);})),m=Hn((function(e){new s(e);})),g=!a&&w((function(){for(var e=new s,t=5;t--;)e[u](t,t);return !e.has(-0)}));m||((s=t((function(t,r){da(t,s,e);var n=pr(new o,t,s);return null!=r&&ma(r,i,n[u],n),n}))).prototype=c,c.constructor=s),(d||g)&&(p("delete"),p("has"),i&&p("get")),(g||h)&&p(u),a&&c.clear&&delete c.clear;}else s=n.getConstructor(t,e,i,u),Ua(s.prototype,r),Y.NEED=!0;return re(s,e),l[e]=s,X(X.G+X.W+X.F*(s!=o),l),a||n.setStrong(s,e,i),s},ho=(fo("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=po.getEntry(oo(this,"Map"),e);return t&&t.v},set:function(e,t){return po.def(oo(this,"Map"),0===e?0:e,t)}},po,!0),fo("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return po.def(oo(this,"Set"),e=0===e?0:e,e)}},po),Y.getWeak),mo=ti(5),go=ti(6),yo=0,vo=function(e){return e._l||(e._l=new xo)},xo=function(){this.a=[];},bo=function(e,t){return mo(e.a,(function(e){return e[0]===t}))};xo.prototype={get:function(e){var t=bo(this,e);if(t)return t[1]},has:function(e){return !!bo(this,e)},set:function(e,t){var r=bo(this,e);r?r[1]=t:this.a.push([e,t]);},delete:function(e){var t=go(this.a,(function(t){return t[0]===e}));return ~t&&this.a.splice(t,1),!!~t}};var Eo={getConstructor:function(e,t,r,n){var i=e((function(e,a){da(e,i,t,"_i"),e._t=t,e._i=yo++,e._l=void 0,null!=a&&ma(a,r,e[n],e);}));return Ua(i.prototype,{delete:function(e){if(!P(e))return !1;var r=ho(e);return !0===r?vo(oo(this,t)).delete(e):r&&A(r,this._i)&&delete r[this._i]},has:function(e){if(!P(e))return !1;var r=ho(e);return !0===r?vo(oo(this,t)).has(e):r&&A(r,this._i)}}),i},def:function(e,t,r){var n=ho(I(t),!0);return !0===n?vo(e).set(t,r):n[e._i]=r,e},ufstore:vo};r((function(e){var t,r=ti(0),n=oo,i=!D.ActiveXObject&&"ActiveXObject"in D,a=Y.getWeak,o=Object.isExtensible,s=Eo.ufstore,u=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},c={get:function(e){if(P(e)){var t=a(e);return !0===t?s(oo(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return Eo.def(oo(this,"WeakMap"),e,t)}},l=e.exports=fo("WeakMap",u,c,Eo,!0,!0);n&&i&&(t=Eo.getConstructor(u,"WeakMap"),It(t.prototype,c),Y.NEED=!0,r(["delete","has","get","set"],(function(e){var r=l.prototype,n=r[e];H(r,e,(function(r,i){if(P(r)&&!o(r)){this._f||(this._f=new t);var a=this._f[e](r,i);return "set"==e?this:a}return n.call(this,r,i)}));})));}));fo("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return Eo.def(oo(this,"WeakSet"),e,!0)}},Eo,!1,!0);for(var Co,So=$("typed_array"),ko=$("view"),Do=!(!D.ArrayBuffer||!D.DataView),Fo=Do,Ao=0,wo="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");Ao<9;)(Co=D[wo[Ao++]])?(U(Co.prototype,So,!0),U(Co.prototype,ko,!0)):Fo=!1;var _o={ABV:Do,CONSTR:Fo,TYPED:So,VIEW:ko},To=function(e){if(void 0===e)return 0;var t=he(e),r=me(t);if(t!==r)throw RangeError("Wrong length!");return r},Po=r((function(e,t){var r=Me.f,n=M.f,i="prototype",a="Wrong index!",o=D.ArrayBuffer,s=D.DataView,u=D.Math,c=D.RangeError,l=D.Infinity,p=o,f=u.abs,h=u.pow,d=u.floor,m=u.log,g=u.LN2,y=_?"_b":"buffer",v=_?"_l":"byteLength",x=_?"_o":"byteOffset";function b(e,t,r){var n,i,a,o=new Array(r),s=8*r-t-1,u=(1<<s)-1,c=u>>1,p=23===t?h(2,-24)-h(2,-77):0,y=0,v=e<0||0===e&&1/e<0?1:0;for((e=f(e))!=e||e===l?(i=e!=e?1:0,n=u):(n=d(m(e)/g),e*(a=h(2,-n))<1&&(n--,a*=2),(e+=n+c>=1?p/a:p*h(2,1-c))*a>=2&&(n++,a/=2),n+c>=u?(i=0,n=u):n+c>=1?(i=(e*a-1)*h(2,t),n+=c):(i=e*h(2,c-1)*h(2,t),n=0));t>=8;o[y++]=255&i,i/=256,t-=8);for(n=n<<t|i,s+=t;s>0;o[y++]=255&n,n/=256,s-=8);return o[--y]|=128*v,o}function E(e,t,r){var n,i=8*r-t-1,a=(1<<i)-1,o=a>>1,s=i-7,u=r-1,c=e[u--],p=127&c;for(c>>=7;s>0;p=256*p+e[u],u--,s-=8);for(n=p&(1<<-s)-1,p>>=-s,s+=t;s>0;n=256*n+e[u],u--,s-=8);if(0===p)p=1-o;else {if(p===a)return n?NaN:c?-l:l;n+=h(2,t),p-=o;}return (c?-1:1)*n*h(2,p-t)}function C(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function S(e){return [255&e]}function k(e){return [255&e,e>>8&255]}function F(e){return [255&e,e>>8&255,e>>16&255,e>>24&255]}function A(e){return b(e,52,8)}function T(e){return b(e,23,4)}function P(e,t,r){n(e[i],t,{get:function(){return this[r]}});}function I(e,t,r,n){var i=To(+r);if(i+t>e[v])throw c(a);var o=e[y]._b,s=i+e[x],u=o.slice(s,s+t);return n?u:u.reverse()}function B(e,t,r,n,i,o){var s=To(+r);if(s+t>e[v])throw c(a);for(var u=e[y]._b,l=s+e[x],p=n(+i),f=0;f<t;f++)u[l+f]=p[o?f:t-f-1];}if(_o.ABV){if(!w((function(){o(1);}))||!w((function(){new o(-1);}))||w((function(){return new o,new o(1.5),new o(NaN),"ArrayBuffer"!=o.name}))){for(var O,L=(o=function(e){return da(this,o),new p(To(e))})[i]=p[i],N=r(p),j=0;N.length>j;)(O=N[j++])in o||U(o,O,p[O]);L.constructor=o;}var R=new s(new o(2)),V=s[i].setInt8;R.setInt8(0,2147483648),R.setInt8(1,2147483649),!R.getInt8(0)&&R.getInt8(1)||Ua(s[i],{setInt8:function(e,t){V.call(this,e,t<<24>>24);},setUint8:function(e,t){V.call(this,e,t<<24>>24);}},!0);}else o=function(e){da(this,o,"ArrayBuffer");var t=To(e);this._b=vi.call(new Array(t),0),this[v]=t;},s=function(e,t,r){da(this,s,"DataView"),da(e,o,"DataView");var n=e[v],i=he(t);if(i<0||i>n)throw c("Wrong offset!");if(i+(r=void 0===r?n-i:me(r))>n)throw c("Wrong length!");this[y]=e,this[x]=i,this[v]=r;},_&&(P(o,"byteLength","_l"),P(s,"buffer","_b"),P(s,"byteLength","_l"),P(s,"byteOffset","_o")),Ua(s[i],{getInt8:function(e){return I(this,1,e)[0]<<24>>24},getUint8:function(e){return I(this,1,e)[0]},getInt16:function(e){var t=I(this,2,e,arguments[1]);return (t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=I(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return C(I(this,4,e,arguments[1]))},getUint32:function(e){return C(I(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return E(I(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return E(I(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){B(this,1,e,S,t);},setUint8:function(e,t){B(this,1,e,S,t);},setInt16:function(e,t){B(this,2,e,k,t,arguments[2]);},setUint16:function(e,t){B(this,2,e,k,t,arguments[2]);},setInt32:function(e,t){B(this,4,e,F,t,arguments[2]);},setUint32:function(e,t){B(this,4,e,F,t,arguments[2]);},setFloat32:function(e,t){B(this,4,e,T,t,arguments[2]);},setFloat64:function(e,t){B(this,8,e,A,t,arguments[2]);}});re(o,"ArrayBuffer"),re(s,"DataView"),U(s[i],_o.VIEW,!0),t.ArrayBuffer=o,t.DataView=s;})),Io=D.ArrayBuffer,Bo=Po.ArrayBuffer,Oo=Po.DataView,Lo=_o.ABV&&Io.isView,No=Bo.prototype.slice,jo=_o.VIEW;X(X.G+X.W+X.F*(Io!==Bo),{ArrayBuffer:Bo}),X(X.S+X.F*!_o.CONSTR,"ArrayBuffer",{isView:function(e){return Lo&&Lo(e)||P(e)&&jo in e}}),X(X.P+X.U+X.F*w((function(){return !new Bo(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==No&&void 0===t)return No.call(I(this),e);for(var r=I(this).byteLength,n=ve(e,r),i=ve(void 0===t?r:t,r),a=new(sa(this,Bo))(me(i-n)),o=new Oo(this),s=new Oo(a),u=0;n<i;)s.setUint8(u++,o.getUint8(n++));return a}}),ki("ArrayBuffer"),X(X.G+X.W+X.F*!_o.ABV,{DataView:Po.DataView});var Ro=r((function(e){if(_){var t=D,r=w,n=X,a=_o,o=Po,s=J,u=da,c=V,l=U,p=Ua,f=he,h=me,d=To,m=ve,g=j,y=A,v=Rt,x=P,b=Te,E=Vn,C=je,S=At,k=Me.f,F=Wn,T=$,I=Z,B=ti,O=xe,L=sa,N=Fi,R=cn,q=Hn,W=ki,G=vi,z=di,H=M,K=Ge,Q=H.f,Y=K.f,ee=t.RangeError,te=t.TypeError,re=t.Uint8Array,ne=Array.prototype,ie=o.ArrayBuffer,ae=o.DataView,oe=B(0),se=B(2),ue=B(3),ce=B(4),le=B(5),pe=B(6),fe=O(!0),de=O(!1),ge=N.values,ye=N.keys,be=N.entries,Ee=ne.lastIndexOf,Ce=ne.reduce,Se=ne.reduceRight,ke=ne.join,De=ne.sort,Fe=ne.slice,Ae=ne.toString,we=ne.toLocaleString,_e=I("iterator"),Pe=I("toStringTag"),Ie=T("typed_constructor"),Be=T("def_constructor"),Oe=a.CONSTR,Le=a.TYPED,Ne=a.VIEW,Re=B(1,(function(e,t){return $e(L(e,e[Be]),t)})),Ve=r((function(){return 1===new re(new Uint16Array([1]).buffer)[0]})),Ue=!!re&&!!re.prototype.set&&r((function(){new re(1).set({});})),qe=function(e,t){var r=f(e);if(r<0||r%t)throw ee("Wrong offset!");return r},We=function(e){if(x(e)&&Le in e)return e;throw te(e+" is not a typed array!")},$e=function(e,t){if(!(x(e)&&Ie in e))throw te("It is not a typed array constructor!");return new e(t)},ze=function(e,t){return He(L(e,e[Be]),t)},He=function(e,t){for(var r=0,n=t.length,i=$e(e,n);n>r;)i[r]=t[r++];return i},Ke=function(e,t,r){Q(e,t,{get:function(){return this._d[r]}});},Je=function(e){var t,r,n,i,a,o,u=b(e),c=arguments.length,l=c>1?arguments[1]:void 0,p=void 0!==l,f=F(u);if(null!=f&&!E(f)){for(o=f.call(u),n=[],t=0;!(a=o.next()).done;t++)n.push(a.value);u=n;}for(p&&c>2&&(l=s(l,arguments[2],2)),t=0,r=h(u.length),i=$e(this,r);r>t;t++)i[t]=p?l(u[t],t):u[t];return i},Qe=function(){for(var e=0,t=arguments.length,r=$e(this,t);t>e;)r[e]=arguments[e++];return r},Xe=!!re&&r((function(){we.call(new re(1));})),Ye=function(){return we.apply(Xe?Fe.call(We(this)):We(this),arguments)},Ze={copyWithin:function(e,t){return z.call(We(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return ce(We(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return G.apply(We(this),arguments)},filter:function(e){return ze(this,se(We(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return le(We(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return pe(We(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){oe(We(this),e,arguments.length>1?arguments[1]:void 0);},indexOf:function(e){return de(We(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return fe(We(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ke.apply(We(this),arguments)},lastIndexOf:function(e){return Ee.apply(We(this),arguments)},map:function(e){return Re(We(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return Ce.apply(We(this),arguments)},reduceRight:function(e){return Se.apply(We(this),arguments)},reverse:function(){for(var e,t=We(this).length,r=Math.floor(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this},some:function(e){return ue(We(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return De.call(We(this),e)},subarray:function(e,t){var r=We(this),n=r.length,i=m(e,n);return new(L(r,r[Be]))(r.buffer,r.byteOffset+i*r.BYTES_PER_ELEMENT,h((void 0===t?n:m(t,n))-i))}},et=function(e,t){return ze(this,Fe.call(We(this),e,t))},tt=function(e){We(this);var t=qe(arguments[1],1),r=this.length,n=b(e),i=h(n.length),a=0;if(i+t>r)throw ee("Wrong length!");for(;a<i;)this[t+a]=n[a++];},rt={entries:function(){return be.call(We(this))},keys:function(){return ye.call(We(this))},values:function(){return ge.call(We(this))}},nt=function(e,t){return x(e)&&e[Le]&&"symbol"!=i(t)&&t in e&&String(+t)==String(t)},it=function(e,t){return nt(e,t=g(t,!0))?c(2,e[t]):Y(e,t)},at=function(e,t,r){return !(nt(e,t=g(t,!0))&&x(r)&&y(r,"value"))||y(r,"get")||y(r,"set")||r.configurable||y(r,"writable")&&!r.writable||y(r,"enumerable")&&!r.enumerable?Q(e,t,r):(e[t]=r.value,e)};Oe||(K.f=it,H.f=at),n(n.S+n.F*!Oe,"Object",{getOwnPropertyDescriptor:it,defineProperty:at}),r((function(){Ae.call({});}))&&(Ae=we=function(){return ke.call(this)});var ot=p({},Ze);p(ot,rt),l(ot,_e,rt.values),p(ot,{slice:et,set:tt,constructor:function(){},toString:Ae,toLocaleString:Ye}),Ke(ot,"buffer","b"),Ke(ot,"byteOffset","o"),Ke(ot,"byteLength","l"),Ke(ot,"length","e"),Q(ot,Pe,{get:function(){return this[Le]}}),e.exports=function(e,i,o,s){var c=e+((s=!!s)?"Clamped":"")+"Array",p="get"+e,f="set"+e,m=t[c],g=m||{},y=m&&S(m),b=!m||!a.ABV,E={},D=m&&m.prototype,F=function(e,t){Q(e,t,{get:function(){return function(e,t){var r=e._d;return r.v[p](t*i+r.o,Ve)}(this,t)},set:function(e){return function(e,t,r){var n=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),n.v[f](t*i+n.o,r,Ve);}(this,t,e)},enumerable:!0});};b?(m=o((function(e,t,r,n){u(e,m,c,"_d");var a,o,s,p,f=0,g=0;if(x(t)){if(!(t instanceof ie||"ArrayBuffer"==(p=v(t))||"SharedArrayBuffer"==p))return Le in t?He(m,t):Je.call(m,t);a=t,g=qe(r,i);var y=t.byteLength;if(void 0===n){if(y%i)throw ee("Wrong length!");if((o=y-g)<0)throw ee("Wrong length!")}else if((o=h(n)*i)+g>y)throw ee("Wrong length!");s=o/i;}else s=d(t),a=new ie(o=s*i);for(l(e,"_d",{b:a,o:g,l:o,e:s,v:new ae(a)});f<s;)F(e,f++);})),D=m.prototype=C(ot),l(D,"constructor",m)):r((function(){m(1);}))&&r((function(){new m(-1);}))&&q((function(e){new m,new m(null),new m(1.5),new m(e);}),!0)||(m=o((function(e,t,r,n){var a;return u(e,m,c),x(t)?t instanceof ie||"ArrayBuffer"==(a=v(t))||"SharedArrayBuffer"==a?void 0!==n?new g(t,qe(r,i),n):void 0!==r?new g(t,qe(r,i)):new g(t):Le in t?He(m,t):Je.call(m,t):new g(d(t))})),oe(y!==Function.prototype?k(g).concat(k(y)):k(g),(function(e){e in m||l(m,e,g[e]);})),m.prototype=D,D.constructor=m);var A=D[_e],w=!!A&&("values"==A.name||null==A.name),_=rt.values;l(m,Ie,!0),l(D,Le,c),l(D,Ne,!0),l(D,Be,m),(s?new m(1)[Pe]==c:Pe in D)||Q(D,Pe,{get:function(){return c}}),E[c]=m,n(n.G+n.W+n.F*(m!=g),E),n(n.S,c,{BYTES_PER_ELEMENT:i}),n(n.S+n.F*r((function(){g.of.call(m,1);})),c,{from:Je,of:Qe}),"BYTES_PER_ELEMENT"in D||l(D,"BYTES_PER_ELEMENT",i),n(n.P,c,Ze),W(c),n(n.P+n.F*Ue,c,{set:tt}),n(n.P+n.F*!w,c,rt),D.toString!=Ae&&(D.toString=Ae),n(n.P+n.F*r((function(){new m(1).slice();})),c,{slice:et}),n(n.P+n.F*(r((function(){return [1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!r((function(){D.toLocaleString.call([1,2]);}))),c,{toLocaleString:Ye}),R[c]=w?A:_,w||l(D,_e,_);};}else e.exports=function(){};}));Ro("Int8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Uint8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Uint8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}}),!0),Ro("Int16",2,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Uint16",2,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Int32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Uint32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Float32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}})),Ro("Float64",8,(function(e){return function(t,r,n){return e(this,t,r,n)}}));var Mo=(D.Reflect||{}).apply,Vo=Function.apply;X(X.S+X.F*!w((function(){Mo((function(){}));})),"Reflect",{apply:function(e,t,r){var n=K(e),i=I(r);return Mo?Mo(n,t,i):Vo.call(n,t,i)}});var Uo=(D.Reflect||{}).construct,qo=w((function(){function e(){}return !(Uo((function(){}),[],e)instanceof e)})),Wo=!w((function(){Uo((function(){}));}));X(X.S+X.F*(qo||Wo),"Reflect",{construct:function(e,t){K(e),I(t);var r=arguments.length<3?e:K(arguments[2]);if(Wo&&!qo)return Uo(e,t,r);if(e==r){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var n=[null];return n.push.apply(n,t),new($t.apply(e,n))}var i=r.prototype,a=je(P(i)?i:Object.prototype),o=Function.apply.call(e,a,t);return P(o)?o:a}}),X(X.S+X.F*w((function(){Reflect.defineProperty(M.f({},1,{value:1}),1,{value:2});})),"Reflect",{defineProperty:function(e,t,r){I(e),t=j(t,!0),I(r);try{return M.f(e,t,r),!0}catch(e){return !1}}});var $o=Ge.f;X(X.S,"Reflect",{deleteProperty:function(e,t){var r=$o(I(e),t);return !(r&&!r.configurable)&&delete e[t]}});var Go=function(e){this._t=I(e),this._i=0;var t,r=this._k=[];for(t in e)r.push(t);};pn(Go,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return {value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return {value:e,done:!1}})),X(X.S,"Reflect",{enumerate:function(e){return new Go(e)}}),X(X.S,"Reflect",{get:function e(t,r){var n,i,a=arguments.length<3?t:arguments[2];return I(t)===a?t[r]:(n=Ge.f(t,r))?A(n,"value")?n.value:void 0!==n.get?n.get.call(a):void 0:P(i=At(t))?e(i,r,a):void 0}}),X(X.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return Ge.f(I(e),t)}}),X(X.S,"Reflect",{getPrototypeOf:function(e){return At(I(e))}}),X(X.S,"Reflect",{has:function(e,t){return t in e}});var zo=Object.isExtensible;X(X.S,"Reflect",{isExtensible:function(e){return I(e),!zo||zo(e)}});var Ho=D.Reflect,Ko=Ho&&Ho.ownKeys||function(e){var t=Me.f(I(e)),r=Ae.f;return r?t.concat(r(e)):t};X(X.S,"Reflect",{ownKeys:Ko});var Jo=Object.preventExtensions;X(X.S,"Reflect",{preventExtensions:function(e){I(e);try{return Jo&&Jo(e),!0}catch(e){return !1}}}),X(X.S,"Reflect",{set:function e(t,r,n){var i,a,o=arguments.length<4?t:arguments[3],s=Ge.f(I(t),r);if(!s){if(P(a=At(t)))return e(a,r,n,o);s=V(0);}if(A(s,"value")){if(!1===s.writable||!P(o))return !1;if(i=Ge.f(o,r)){if(i.get||i.set||!1===i.writable)return !1;i.value=n,M.f(o,r,i);}else M.f(o,r,V(0,n));return !0}return void 0!==s.set&&(s.set.call(o,n),!0)}}),Lt&&X(X.S,"Reflect",{setPrototypeOf:function(e,t){Lt.check(e,t);try{return Lt.set(e,t),!0}catch(e){return !1}}});var Qo=xe(!0);X(X.P,"Array",{includes:function(e){return Qo(this,e,arguments.length>1?arguments[1]:void 0)}}),yi("includes");T.Array.includes;var Xo=Z("isConcatSpreadable");var Yo=function e(t,r,n,i,a,o,s,u){for(var c,l,p=a,f=0,h=!!s&&J(s,u,3);f<i;){if(f in n){if(c=h?h(n[f],f,r):n[f],l=!1,P(c)&&(l=void 0!==(l=c[Xo])?!!l:_e(c)),l&&o>0)p=e(t,r,c,me(c.length),p,o-1)-1;else {if(p>=9007199254740991)throw TypeError();t[p]=c;}p++;}f++;}return p};X(X.P,"Array",{flatMap:function(e){var t,r,n=Te(this);return K(e),t=me(n.length),r=ei(n,0),Yo(r,n,n,t,0,1,e,arguments[1]),r}}),yi("flatMap");T.Array.flatMap;var Zo=function(e,t,r,n){var i=String(ce(e)),a=i.length,o=void 0===r?" ":String(r),s=me(t);if(s<=a||""==o)return i;var u=s-a,c=Fr.call(o,Math.ceil(u/o.length));return c.length>u&&(c=c.slice(0,u)),n?c+i:i+c},es=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(Ma);X(X.P+X.F*es,"String",{padStart:function(e){return Zo(this,e,arguments.length>1?arguments[1]:void 0,!0)}});T.String.padStart;var ts=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(Ma);X(X.P+X.F*ts,"String",{padEnd:function(e){return Zo(this,e,arguments.length>1?arguments[1]:void 0,!1)}});T.String.padEnd;rr("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart");T.String.trimLeft;rr("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd");T.String.trimRight;ae("asyncIterator");ne.f("asyncIterator");X(X.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,r,n=le(e),i=Ge.f,a=Ko(n),o={},s=0;a.length>s;)void 0!==(r=i(n,t=a[s++]))&&Un(o,t,r);return o}});T.Object.getOwnPropertyDescriptors;var rs=we.f,ns=function(e){return function(t){for(var r,n=le(t),i=Fe(n),a=i.length,o=0,s=[];a>o;)r=i[o++],_&&!rs.call(n,r)||s.push(e?[r,n[r]]:n[r]);return s}},is=ns(!1);X(X.S,"Object",{values:function(e){return is(e)}});T.Object.values;var as=ns(!0);X(X.S,"Object",{entries:function(e){return as(e)}});T.Object.entries;X(X.P+X.R,"Promise",{finally:function(e){var t=sa(this,T.Promise||D.Promise),r="function"==typeof e;return this.then(r?function(r){return Va(t,e()).then((function(){return r}))}:e,r?function(r){return Va(t,e()).then((function(){throw r}))}:e)}});T.Promise.finally;var os=[].slice,ss=/MSIE .\./.test(Ma),us=function(e){return function(t,r){var n=arguments.length>2,i=!!n&&os.call(arguments,2);return e(n?function(){("function"==typeof t?t:Function(t)).apply(this,i);}:t,r)}};X(X.G+X.B+X.F*ss,{setTimeout:us(D.setTimeout),setInterval:us(D.setInterval)}),X(X.G+X.B,{setImmediate:Da.set,clearImmediate:Da.clear});for(var cs=Z("iterator"),ls=Z("toStringTag"),ps=cn.Array,fs={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},hs=Fe(fs),ds=0;ds<hs.length;ds++){var ms,gs=hs[ds],ys=fs[gs],vs=D[gs],xs=vs&&vs.prototype;if(xs&&(xs[cs]||U(xs,cs,ps),xs[ls]||U(xs,ls,gs),cn[gs]=ps,ys))for(ms in Fi)xs[ms]||H(xs,ms,Fi[ms],!0);}r((function(e){var t=function(e){var t,r=Object.prototype,n=r.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",s=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function c(e,t,r,n){var i=t&&t.prototype instanceof g?t:g,a=Object.create(i.prototype),o=new w(n||[]);return a._invoke=function(e,t,r){var n=p;return function(i,a){if(n===h)throw new Error("Generator is already running");if(n===d){if("throw"===i)throw a;return T()}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=D(o,r);if(s){if(s===m)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===p)throw n=d,r.arg;r.dispatchException(r.arg);}else "return"===r.method&&r.abrupt("return",r.arg);n=h;var u=l(e,t,r);if("normal"===u.type){if(n=r.done?d:f,u.arg===m)continue;return {value:u.arg,done:r.done}}"throw"===u.type&&(n=d,r.method="throw",r.arg=u.arg);}}}(e,r,o),a}function l(e,t,r){try{return {type:"normal",arg:e.call(t,r)}}catch(e){return {type:"throw",arg:e}}}e.wrap=c;var p="suspendedStart",f="suspendedYield",h="executing",d="completed",m={};function g(){}function y(){}function v(){}var x={};x[o]=function(){return this};var b=Object.getPrototypeOf,E=b&&b(b(_([])));E&&E!==r&&n.call(E,o)&&(x=E);var C=v.prototype=g.prototype=Object.create(x);function S(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)};}));}function k(e){var t;this._invoke=function(r,a){function o(){return new Promise((function(t,o){!function t(r,a,o,s){var u=l(e[r],e,a);if("throw"!==u.type){var c=u.arg,p=c.value;return p&&"object"===i(p)&&n.call(p,"__await")?Promise.resolve(p.__await).then((function(e){t("next",e,o,s);}),(function(e){t("throw",e,o,s);})):Promise.resolve(p).then((function(e){c.value=e,o(c);}),(function(e){return t("throw",e,o,s)}))}s(u.arg);}(r,a,t,o);}))}return t=t?t.then(o,o):o()};}function D(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,D(e,r),"throw"===r.method))return m;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method");}return m}var i=l(n,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,m;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,m):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,m)}function F(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t);}function A(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t;}function w(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(F,this),this.reset(!0);}function _(e){if(e){var r=e[o];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}return {next:T}}function T(){return {value:t,done:!0}}return y.prototype=C.constructor=v,v.constructor=y,v[u]=y.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return !!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(C),e},e.awrap=function(e){return {__await:e}},S(k.prototype),k.prototype[s]=function(){return this},e.AsyncIterator=k,e.async=function(t,r,n,i){var a=new k(c(t,r,n,i));return e.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},S(C),C[u]="Generator",C[o]=function(){return this},C.toString=function(){return "[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=_,w.prototype={constructor:w,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t);},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return s.type="throw",s.arg=e,r.next=n,i&&(r.method="next",r.arg=t),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var u=n.call(o,"catchLoc"),c=n.call(o,"finallyLoc");if(u&&c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else {if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return "break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),A(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var i=n.arg;A(r);}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:_(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t;}catch(e){Function("r","regeneratorRuntime = r")(t);}}));var bs=r((function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t);})),Es=r((function(e){var t=e.exports={version:"2.6.10"};"number"==typeof __e&&(__e=t);})),Cs=(Es.version,function(e,t,r){if(function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!")}(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}),Ss=function(e){return "object"===i(e)?null!==e:"function"==typeof e},ks=function(e){if(!Ss(e))throw TypeError(e+" is not an object!");return e},Ds=function(e){try{return !!e()}catch(e){return !0}},Fs=!Ds((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})),As=bs.document,ws=Ss(As)&&Ss(As.createElement),_s=!Fs&&!Ds((function(){return 7!=Object.defineProperty((e="div",ws?As.createElement(e):{}),"a",{get:function(){return 7}}).a;var e;})),Ts=Object.defineProperty,Ps={f:Fs?Object.defineProperty:function(e,t,r){if(ks(e),t=function(e,t){if(!Ss(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!Ss(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!Ss(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!Ss(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")}(t,!0),ks(r),_s)try{return Ts(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return "value"in r&&(e[t]=r.value),e}},Is=Fs?function(e,t,r){return Ps.f(e,t,function(e,t){return {enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}(1,r))}:function(e,t,r){return e[t]=r,e},Bs={}.hasOwnProperty,Os=function(e,t){return Bs.call(e,t)},Ls=function e(t,r,n){var i,a,o,s=t&e.F,u=t&e.G,c=t&e.S,l=t&e.P,p=t&e.B,f=t&e.W,h=u?Es:Es[r]||(Es[r]={}),d=h.prototype,m=u?bs:c?bs[r]:(bs[r]||{}).prototype;for(i in u&&(n=r),n)(a=!s&&m&&void 0!==m[i])&&Os(h,i)||(o=a?m[i]:n[i],h[i]=u&&"function"!=typeof m[i]?n[i]:p&&a?Cs(o,bs):f&&m[i]==o?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(o):l&&"function"==typeof o?Cs(Function.call,o):o,l&&((h.virtual||(h.virtual={}))[i]=o,t&e.R&&d&&!d[i]&&Is(d,i,o)));};Ls.F=1,Ls.G=2,Ls.S=4,Ls.P=8,Ls.B=16,Ls.W=32,Ls.U=64,Ls.R=128;Ls(Ls.G,{global:bs});var Ns=Es.global;function js(e,t){for(var r=0,n=e.length-1;n>=0;n--){var i=e[n];"."===i?e.splice(n,1):".."===i?(e.splice(n,1),r++):r&&(e.splice(n,1),r--);}if(t)for(;r--;r)e.unshift("..");return e}t(r((function(e){var t,r=(t=Ns)&&t.__esModule?t:{default:t};r.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),r.default._babelPolyfill=!0;})));var Rs=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Ms=function(e){return Rs.exec(e).slice(1)};function Vs(){for(var e="",t=!1,r=arguments.length-1;r>=-1&&!t;r--){var n=r>=0?arguments[r]:"/";if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(e=n+"/"+e,t="/"===n.charAt(0));}return (t?"/":"")+(e=js($s(e.split("/"),(function(e){return !!e})),!t).join("/"))||"."}function Us(e){var t=qs(e),r="/"===Gs(e,-1);return (e=js($s(e.split("/"),(function(e){return !!e})),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e}function qs(e){return "/"===e.charAt(0)}var Ws={extname:function(e){return Ms(e)[3]},basename:function(e,t){var r=Ms(e)[2];return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},dirname:function(e){var t=Ms(e),r=t[0],n=t[1];return r||n?(n&&(n=n.substr(0,n.length-1)),r+n):"."},sep:"/",delimiter:":",relative:function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=Vs(e).substr(1),t=Vs(t).substr(1);for(var n=r(e.split("/")),i=r(t.split("/")),a=Math.min(n.length,i.length),o=a,s=0;s<a;s++)if(n[s]!==i[s]){o=s;break}var u=[];for(s=o;s<n.length;s++)u.push("..");return (u=u.concat(i.slice(o))).join("/")},join:function(){return Us($s(Array.prototype.slice.call(arguments,0),(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},isAbsolute:qs,normalize:Us,resolve:Vs};function $s(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}var Gs="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)};
   /*!
    * The buffer module from node.js, for the browser.
    *
    * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
    * @license  MIT
    */function zs(e){return null!=e&&(!!e._isBuffer||Hs(e)||function(e){return "function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Hs(e.slice(0,0))}(e))}function Hs(e){return !!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var Ks="function"==typeof Object.create?function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}});}:function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e;},Js=/%[sdj%]/g;function Qs(e){if(!cu(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(Zs(arguments[r]));return t.join(" ")}r=1;for(var n=arguments,i=n.length,a=String(e).replace(Js,(function(e){if("%%"===e)return "%";if(r>=i)return e;switch(e){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(e){return "[Circular]"}default:return e}})),o=n[r];r<i;o=n[++r])su(o)||!fu(o)?a+=" "+o:a+=" "+Zs(o);return a}var Xs,Ys={};function Zs(e,t){var r={seen:[],stylize:tu};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),ou(t)?r.showHidden=t:t&&bu(r,t),lu(r.showHidden)&&(r.showHidden=!1),lu(r.depth)&&(r.depth=2),lu(r.colors)&&(r.colors=!1),lu(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=eu),ru(r,e,r.depth)}function eu(e,t){var r=Zs.styles[t];return r?"["+Zs.colors[r][0]+"m"+e+"["+Zs.colors[r][1]+"m":e}function tu(e,t){return e}function ru(e,t,r){if(e.customInspect&&t&&mu(t.inspect)&&t.inspect!==Zs&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return cu(n)||(n=ru(e,n,r)),n}var i=function(e,t){if(lu(t))return e.stylize("undefined","undefined");if(cu(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}if(uu(t))return e.stylize(""+t,"number");if(ou(t))return e.stylize(""+t,"boolean");if(su(t))return e.stylize("null","null")}(e,t);if(i)return i;var a=Object.keys(t),o=function(e){var t={};return e.forEach((function(e,r){t[e]=!0;})),t}(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(t)),du(t)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return nu(t);if(0===a.length){if(mu(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(pu(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(hu(t))return e.stylize(Date.prototype.toString.call(t),"date");if(du(t))return nu(t)}var u,c="",l=!1,p=["{","}"];(au(t)&&(l=!0,p=["[","]"]),mu(t))&&(c=" [Function"+(t.name?": "+t.name:"")+"]");return pu(t)&&(c=" "+RegExp.prototype.toString.call(t)),hu(t)&&(c=" "+Date.prototype.toUTCString.call(t)),du(t)&&(c=" "+nu(t)),0!==a.length||l&&0!=t.length?r<0?pu(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=l?function(e,t,r,n,i){for(var a=[],o=0,s=t.length;o<s;++o)Eu(t,String(o))?a.push(iu(e,t,r,n,String(o),!0)):a.push("");return i.forEach((function(i){i.match(/^\d+$/)||a.push(iu(e,t,r,n,i,!0));})),a}(e,t,r,o,a):a.map((function(n){return iu(e,t,r,o,n,l)})),e.seen.pop(),function(e,t,r){if(e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1];return r[0]+t+" "+e.join(", ")+" "+r[1]}(u,c,p)):p[0]+c+p[1]}function nu(e){return "["+Error.prototype.toString.call(e)+"]"}function iu(e,t,r,n,i,a){var o,s,u;if((u=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?s=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(s=e.stylize("[Setter]","special")),Eu(n,i)||(o="["+i+"]"),s||(e.seen.indexOf(u.value)<0?(s=su(r)?ru(e,u.value,null):ru(e,u.value,r-1)).indexOf("\n")>-1&&(s=a?s.split("\n").map((function(e){return "  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return "   "+e})).join("\n")):s=e.stylize("[Circular]","special")),lu(o)){if(a&&i.match(/^\d+$/))return s;(o=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"));}return o+": "+s}function au(e){return Array.isArray(e)}function ou(e){return "boolean"==typeof e}function su(e){return null===e}function uu(e){return "number"==typeof e}function cu(e){return "string"==typeof e}function lu(e){return void 0===e}function pu(e){return fu(e)&&"[object RegExp]"===yu(e)}function fu(e){return "object"===i(e)&&null!==e}function hu(e){return fu(e)&&"[object Date]"===yu(e)}function du(e){return fu(e)&&("[object Error]"===yu(e)||e instanceof Error)}function mu(e){return "function"==typeof e}function gu(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"===i(e)||void 0===e}function yu(e){return Object.prototype.toString.call(e)}function vu(e){return e<10?"0"+e.toString(10):e.toString(10)}Zs.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},Zs.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};var xu=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function bu(e,t){if(!t||!fu(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e}function Eu(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var Cu={inherits:Ks,_extend:bu,log:function(){console.log("%s - %s",function(){var e=new Date,t=[vu(e.getHours()),vu(e.getMinutes()),vu(e.getSeconds())].join(":");return [e.getDate(),xu[e.getMonth()],t].join(" ")}(),Qs.apply(null,arguments));},isBuffer:function(e){return Buffer.isBuffer(e)},isPrimitive:gu,isFunction:mu,isError:du,isDate:hu,isObject:fu,isRegExp:pu,isUndefined:lu,isSymbol:function(e){return "symbol"===i(e)},isString:cu,isNumber:uu,isNullOrUndefined:function(e){return null==e},isNull:su,isBoolean:ou,isArray:au,inspect:Zs,deprecate:function e(t,r){if(lu(global.process))return function(){return e(t,r).apply(this,arguments)};var n=!1;return function(){return n||(console.error(r),n=!0),t.apply(this,arguments)}},format:Qs,debuglog:function(e){if(lu(Xs)&&(Xs=""),e=e.toUpperCase(),!Ys[e])if(new RegExp("\\b"+e+"\\b","i").test(Xs)){Ys[e]=function(){var t=Qs.apply(null,arguments);console.error("%s %d: %s",e,0,t);};}else Ys[e]=function(){};return Ys[e]}};function Su(e,t){if(e===t)return 0;for(var r=e.length,n=t.length,i=0,a=Math.min(r,n);i<a;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0}var ku,Du=Object.prototype.hasOwnProperty,Fu=Object.keys||function(e){var t=[];for(var r in e)Du.call(e,r)&&t.push(r);return t},Au=Array.prototype.slice;function wu(){return void 0!==ku?ku:ku="foo"===function(){}.name}function _u(e){return Object.prototype.toString.call(e)}function Tu(e){return !zs(e)&&("function"==typeof global.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}function Pu(e,t){e||ju(e,!0,t,"==",Ru);}var Iu=/\s*function\s+([^\(\s]*)\s*/;function Bu(e){if(mu(e)){if(wu())return e.name;var t=e.toString().match(Iu);return t&&t[1]}}function Ou(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return Lu(Nu(e.actual),128)+" "+e.operator+" "+Lu(Nu(e.expected),128)}(this),this.generatedMessage=!0);var t=e.stackStartFunction||ju;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else {var r=new Error;if(r.stack){var n=r.stack,i=Bu(t),a=n.indexOf("\n"+i);if(a>=0){var o=n.indexOf("\n",a+1);n=n.substring(o+1);}this.stack=n;}}}function Lu(e,t){return "string"==typeof e?e.length<t?e:e.slice(0,t):e}function Nu(e){if(wu()||!mu(e))return Zs(e);var t=Bu(e);return "[Function"+(t?": "+t:"")+"]"}function ju(e,t,r,n,i){throw new Ou({message:r,actual:e,expected:t,operator:n,stackStartFunction:i})}function Ru(e,t){e||ju(e,!0,t,"==",Ru);}function Mu(e,t,r,n){if(e===t)return !0;if(zs(e)&&zs(t))return 0===Su(e,t);if(hu(e)&&hu(t))return e.getTime()===t.getTime();if(pu(e)&&pu(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"===i(e)||null!==t&&"object"===i(t)){if(Tu(e)&&Tu(t)&&_u(e)===_u(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===Su(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(zs(e)!==zs(t))return !1;var a=(n=n||{actual:[],expected:[]}).actual.indexOf(e);return -1!==a&&a===n.expected.indexOf(t)||(n.actual.push(e),n.expected.push(t),function(e,t,r,n){if(null==e||null==t)return !1;if(gu(e)||gu(t))return e===t;if(r&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return !1;var i=Vu(e),a=Vu(t);if(i&&!a||!i&&a)return !1;if(i)return e=Au.call(e),t=Au.call(t),Mu(e,t,r);var o,s,u=Fu(e),c=Fu(t);if(u.length!==c.length)return !1;for(u.sort(),c.sort(),s=u.length-1;s>=0;s--)if(u[s]!==c[s])return !1;for(s=u.length-1;s>=0;s--)if(o=u[s],!Mu(e[o],t[o],r,n))return !1;return !0}(e,t,r,n))}return r?e===t:e==t}function Vu(e){return "[object Arguments]"==Object.prototype.toString.call(e)}function Uu(e,t){if(!e||!t)return !1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return !0}catch(e){}return !Error.isPrototypeOf(t)&&!0===t.call({},e)}function qu(e,t,r,n){var i;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof r&&(n=r,r=null),i=function(e){var t;try{e();}catch(e){t=e;}return t}(t),n=(r&&r.name?" ("+r.name+").":".")+(n?" "+n:"."),e&&!i&&ju(i,r,"Missing expected exception"+n);var a="string"==typeof n,o=!e&&i&&!r;if((!e&&du(i)&&a&&Uu(i,r)||o)&&ju(i,r,"Got unwanted exception"+n),e&&i&&r&&!Uu(i,r)||!e&&i)throw i}Pu.AssertionError=Ou,Ks(Ou,Error),Pu.fail=ju,Pu.ok=Ru,Pu.equal=function e(t,r,n){t!=r&&ju(t,r,n,"==",e);},Pu.notEqual=function e(t,r,n){t==r&&ju(t,r,n,"!=",e);},Pu.deepEqual=function e(t,r,n){Mu(t,r,!1)||ju(t,r,n,"deepEqual",e);},Pu.deepStrictEqual=function e(t,r,n){Mu(t,r,!0)||ju(t,r,n,"deepStrictEqual",e);},Pu.notDeepEqual=function e(t,r,n){Mu(t,r,!1)&&ju(t,r,n,"notDeepEqual",e);},Pu.notDeepStrictEqual=function e(t,r,n){Mu(t,r,!0)&&ju(t,r,n,"notDeepStrictEqual",e);},Pu.strictEqual=function e(t,r,n){t!==r&&ju(t,r,n,"===",e);},Pu.notStrictEqual=function e(t,r,n){t===r&&ju(t,r,n,"!==",e);},Pu.throws=function(e,t,r){qu(!0,e,t,r);},Pu.doesNotThrow=function(e,t,r){qu(!1,e,t,r);},Pu.ifError=function(e){if(e)throw e};var Wu="ECMAScript JS AST traversal functions",$u="https://github.com/estools/estraverse",Gu="estraverse.js",zu={node:">=4.0"},Hu=[{name:"Yusuke Suzuki",email:"utatane.tea@gmail.com",web:"http://github.com/Constellation"}],Ku={type:"git",url:"http://github.com/estools/estraverse.git"},Ju={"babel-preset-env":"^1.6.1","babel-register":"^6.3.13",chai:"^2.1.1",espree:"^1.11.0",gulp:"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.3.0",jshint:"^2.5.6",mocha:"^2.1.0"},Qu={test:"npm run-script lint && npm run-script unit-test",lint:"jshint estraverse.js","unit-test":"mocha --compilers js:babel-register"},Xu={name:"estraverse",description:Wu,homepage:$u,main:Gu,version:"4.3.0",engines:zu,maintainers:Hu,repository:Ku,devDependencies:Ju,license:"BSD-2-Clause",scripts:Qu},Yu=n(Object.freeze({__proto__:null,name:"estraverse",description:Wu,homepage:$u,main:Gu,version:"4.3.0",engines:zu,maintainers:Hu,repository:Ku,devDependencies:Ju,license:"BSD-2-Clause",scripts:Qu,default:Xu})),Zu=r((function(e,t){!function e(t){var r,n,a,o,s,u;function c(e){var t,r,n={};for(t in e)e.hasOwnProperty(t)&&("object"===i(r=e[t])&&null!==r?n[t]=c(r):n[t]=r);return n}function l(e,t){this.parent=e,this.key=t;}function p(e,t,r,n){this.node=e,this.path=t,this.wrap=r,this.ref=n;}function f(){}function h(e){return null!=e&&("object"===i(e)&&"string"==typeof e.type)}function d(e,t){return (e===r.ObjectExpression||e===r.ObjectPattern)&&"properties"===t}function m(e,t){return (new f).traverse(e,t)}function g(e,t){var r;return r=function(e,t){var r,n,i,a;for(n=e.length,i=0;n;)t(e[a=i+(r=n>>>1)])?n=r:(i=a+1,n-=r+1);return i}(t,(function(t){return t.range[0]>e.range[0]})),e.extendedRange=[e.range[0],e.range[1]],r!==t.length&&(e.extendedRange[1]=t[r].range[0]),(r-=1)>=0&&(e.extendedRange[0]=t[r].range[1]),e}return r={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ComprehensionBlock:"ComprehensionBlock",ComprehensionExpression:"ComprehensionExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DebuggerStatement:"DebuggerStatement",DirectiveStatement:"DirectiveStatement",DoWhileStatement:"DoWhileStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",GeneratorExpression:"GeneratorExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportExpression:"ImportExpression",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",ModuleSpecifier:"ModuleSpecifier",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"},a={AssignmentExpression:["left","right"],AssignmentPattern:["left","right"],ArrayExpression:["elements"],ArrayPattern:["elements"],ArrowFunctionExpression:["params","body"],AwaitExpression:["argument"],BlockStatement:["body"],BinaryExpression:["left","right"],BreakStatement:["label"],CallExpression:["callee","arguments"],CatchClause:["param","body"],ClassBody:["body"],ClassDeclaration:["id","superClass","body"],ClassExpression:["id","superClass","body"],ComprehensionBlock:["left","right"],ComprehensionExpression:["blocks","filter","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DirectiveStatement:[],DoWhileStatement:["body","test"],EmptyStatement:[],ExportAllDeclaration:["source"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source"],ExportSpecifier:["exported","local"],ExpressionStatement:["expression"],ForStatement:["init","test","update","body"],ForInStatement:["left","right","body"],ForOfStatement:["left","right","body"],FunctionDeclaration:["id","params","body"],FunctionExpression:["id","params","body"],GeneratorExpression:["blocks","filter","body"],Identifier:[],IfStatement:["test","consequent","alternate"],ImportExpression:["source"],ImportDeclaration:["specifiers","source"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["imported","local"],Literal:[],LabeledStatement:["label","body"],LogicalExpression:["left","right"],MemberExpression:["object","property"],MetaProperty:["meta","property"],MethodDefinition:["key","value"],ModuleSpecifier:[],NewExpression:["callee","arguments"],ObjectExpression:["properties"],ObjectPattern:["properties"],Program:["body"],Property:["key","value"],RestElement:["argument"],ReturnStatement:["argument"],SequenceExpression:["expressions"],SpreadElement:["argument"],Super:[],SwitchStatement:["discriminant","cases"],SwitchCase:["test","consequent"],TaggedTemplateExpression:["tag","quasi"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],YieldExpression:["argument"]},n={Break:o={},Skip:s={},Remove:u={}},l.prototype.replace=function(e){this.parent[this.key]=e;},l.prototype.remove=function(){return Array.isArray(this.parent)?(this.parent.splice(this.key,1),!0):(this.replace(null),!1)},f.prototype.path=function(){var e,t,r,n,i;function a(e,t){if(Array.isArray(t))for(r=0,n=t.length;r<n;++r)e.push(t[r]);else e.push(t);}if(!this.__current.path)return null;for(i=[],e=2,t=this.__leavelist.length;e<t;++e)a(i,this.__leavelist[e].path);return a(i,this.__current.path),i},f.prototype.type=function(){return this.current().type||this.__current.wrap},f.prototype.parents=function(){var e,t,r;for(r=[],e=1,t=this.__leavelist.length;e<t;++e)r.push(this.__leavelist[e].node);return r},f.prototype.current=function(){return this.__current.node},f.prototype.__execute=function(e,t){var r,n;return n=void 0,r=this.__current,this.__current=t,this.__state=null,e&&(n=e.call(this,t.node,this.__leavelist[this.__leavelist.length-1].node)),this.__current=r,n},f.prototype.notify=function(e){this.__state=e;},f.prototype.skip=function(){this.notify(s);},f.prototype.break=function(){this.notify(o);},f.prototype.remove=function(){this.notify(u);},f.prototype.__initialize=function(e,t){this.visitor=t,this.root=e,this.__worklist=[],this.__leavelist=[],this.__current=null,this.__state=null,this.__fallback=null,"iteration"===t.fallback?this.__fallback=Object.keys:"function"==typeof t.fallback&&(this.__fallback=t.fallback),this.__keys=a,t.keys&&(this.__keys=Object.assign(Object.create(this.__keys),t.keys));},f.prototype.traverse=function(e,t){var r,n,i,a,u,c,l,f,m,g,y,v;for(this.__initialize(e,t),v={},r=this.__worklist,n=this.__leavelist,r.push(new p(e,null,null,null)),n.push(new p(null,null,null,null));r.length;)if((i=r.pop())!==v){if(i.node){if(c=this.__execute(t.enter,i),this.__state===o||c===o)return;if(r.push(v),n.push(i),this.__state===s||c===s)continue;if(u=(a=i.node).type||i.wrap,!(g=this.__keys[u])){if(!this.__fallback)throw new Error("Unknown node type "+u+".");g=this.__fallback(a);}for(f=g.length;(f-=1)>=0;)if(y=a[l=g[f]])if(Array.isArray(y)){for(m=y.length;(m-=1)>=0;)if(y[m]){if(d(u,g[f]))i=new p(y[m],[l,m],"Property",null);else {if(!h(y[m]))continue;i=new p(y[m],[l,m],null,null);}r.push(i);}}else h(y)&&r.push(new p(y,l,null,null));}}else if(i=n.pop(),c=this.__execute(t.leave,i),this.__state===o||c===o)return},f.prototype.replace=function(e,t){var r,n,i,a,c,f,m,g,y,v,x,b,E;function C(e){var t,n,i,a;if(e.ref.remove())for(n=e.ref.key,a=e.ref.parent,t=r.length;t--;)if((i=r[t]).ref&&i.ref.parent===a){if(i.ref.key<n)break;--i.ref.key;}}for(this.__initialize(e,t),x={},r=this.__worklist,n=this.__leavelist,f=new p(e,null,null,new l(b={root:e},"root")),r.push(f),n.push(f);r.length;)if((f=r.pop())!==x){if(void 0!==(c=this.__execute(t.enter,f))&&c!==o&&c!==s&&c!==u&&(f.ref.replace(c),f.node=c),this.__state!==u&&c!==u||(C(f),f.node=null),this.__state===o||c===o)return b.root;if((i=f.node)&&(r.push(x),n.push(f),this.__state!==s&&c!==s)){if(a=i.type||f.wrap,!(y=this.__keys[a])){if(!this.__fallback)throw new Error("Unknown node type "+a+".");y=this.__fallback(i);}for(m=y.length;(m-=1)>=0;)if(v=i[E=y[m]])if(Array.isArray(v)){for(g=v.length;(g-=1)>=0;)if(v[g]){if(d(a,y[m]))f=new p(v[g],[E,g],"Property",new l(v,g));else {if(!h(v[g]))continue;f=new p(v[g],[E,g],null,new l(v,g));}r.push(f);}}else h(v)&&r.push(new p(v,E,null,new l(i,E)));}}else if(f=n.pop(),void 0!==(c=this.__execute(t.leave,f))&&c!==o&&c!==s&&c!==u&&f.ref.replace(c),this.__state!==u&&c!==u||C(f),this.__state===o||c===o)return b.root;return b.root},t.version=Yu.version,t.Syntax=r,t.traverse=m,t.replace=function(e,t){return (new f).replace(e,t)},t.attachComments=function(e,t,r){var i,a,o,s,u=[];if(!e.range)throw new Error("attachComments needs range information");if(!r.length){if(t.length){for(o=0,a=t.length;o<a;o+=1)(i=c(t[o])).extendedRange=[0,e.range[0]],u.push(i);e.leadingComments=u;}return e}for(o=0,a=t.length;o<a;o+=1)u.push(g(c(t[o]),r));return s=0,m(e,{enter:function(e){for(var t;s<u.length&&!((t=u[s]).extendedRange[1]>e.range[0]);)t.extendedRange[1]===e.range[0]?(e.leadingComments||(e.leadingComments=[]),e.leadingComments.push(t),u.splice(s,1)):s+=1;return s===u.length?n.Break:u[s].extendedRange[0]>e.range[1]?n.Skip:void 0}}),s=0,m(e,{leave:function(e){for(var t;s<u.length&&(t=u[s],!(e.range[1]<t.extendedRange[0]));)e.range[1]===t.extendedRange[0]?(e.trailingComments||(e.trailingComments=[]),e.trailingComments.push(t),u.splice(s,1)):s+=1;return s===u.length?n.Break:u[s].extendedRange[0]>e.range[1]?n.Skip:void 0}}),e},t.VisitorKeys=a,t.VisitorOption=n,t.Controller=f,t.cloneEnvironment=function(){return e({})},t}(t);})),ec=function(){function e(t,r,n,i,o,s,u){a(this,e),this.identifier=t,this.from=r,this.tainted=!1,this.resolved=null,this.flag=n,this.isWrite()&&(this.writeExpr=i,this.partial=s,this.init=u),this.__maybeImplicitGlobal=o;}return s(e,[{key:"isStatic",value:function(){return !this.tainted&&this.resolved&&this.resolved.scope.isStatic()}},{key:"isWrite",value:function(){return !!(this.flag&e.WRITE)}},{key:"isRead",value:function(){return !!(this.flag&e.READ)}},{key:"isReadOnly",value:function(){return this.flag===e.READ}},{key:"isWriteOnly",value:function(){return this.flag===e.WRITE}},{key:"isReadWrite",value:function(){return this.flag===e.RW}}]),e}();ec.READ=1,ec.WRITE=2,ec.RW=3;var tc=ec,rc=function e(t,r){a(this,e),this.name=t,this.identifiers=[],this.references=[],this.defs=[],this.tainted=!1,this.stack=!0,this.scope=r;};rc.CatchClause="CatchClause",rc.Parameter="Parameter",rc.FunctionName="FunctionName",rc.ClassName="ClassName",rc.Variable="Variable",rc.ImportBinding="ImportBinding",rc.ImplicitGlobalVariable="ImplicitGlobalVariable";var nc=rc,ic=function e(t,r,n,i,o,s){a(this,e),this.type=t,this.name=r,this.node=n,this.parent=i,this.index=o,this.kind=s;},ac={ParameterDefinition:function(e){function t(e,r,n,i){var o;return a(this,t),(o=v(this,h(t).call(this,nc.Parameter,e,r,null,n,null))).rest=i,o}return f(t,ic),t}(),Definition:ic},oc=Zu.Syntax,sc=ac.Definition;function uc(e){return e.type===nc.ClassName||e.type===nc.Variable&&"var"!==e.parent.kind}var cc=function(){function e(t,r,n,i,o){a(this,e),this.type=r,this.set=new Map,this.taints=new Map,this.dynamic="global"===this.type||"with"===this.type,this.block=i,this.through=[],this.variables=[],this.references=[],this.variableScope="global"===this.type||"function"===this.type||"module"===this.type?this:n.variableScope,this.functionExpressionScope=!1,this.directCallToEvalScope=!1,this.thisFound=!1,this.__left=[],this.upper=n,this.isStrict=function(e,t,r,n){var i;if(e.upper&&e.upper.isStrict)return !0;if(r)return !0;if("class"===e.type||"module"===e.type)return !0;if("block"===e.type||"switch"===e.type)return !1;if("function"===e.type){if(t.type===oc.ArrowFunctionExpression&&t.body.type!==oc.BlockStatement)return !1;if(!(i=t.type===oc.Program?t:t.body))return !1}else {if("global"!==e.type)return !1;i=t;}if(n)for(var a=0,o=i.body.length;a<o;++a){var s=i.body[a];if(s.type!==oc.DirectiveStatement)break;if('"use strict"'===s.raw||"'use strict'"===s.raw)return !0}else for(var u=0,c=i.body.length;u<c;++u){var l=i.body[u];if(l.type!==oc.ExpressionStatement)break;var p=l.expression;if(p.type!==oc.Literal||"string"!=typeof p.value)break;if(null!==p.raw&&void 0!==p.raw){if('"use strict"'===p.raw||"'use strict'"===p.raw)return !0}else if("use strict"===p.value)return !0}return !1}(this,i,o,t.__useDirective()),this.childScopes=[],this.upper&&this.upper.childScopes.push(this),this.__declaredVariables=t.__declaredVariables,function(e,t){e.scopes.push(t);var r=e.__nodeToScope.get(t.block);r?r.push(t):e.__nodeToScope.set(t.block,[t]);}(t,this);}return s(e,[{key:"__shouldStaticallyClose",value:function(e){return !this.dynamic||e.__isOptimistic()}},{key:"__shouldStaticallyCloseForGlobal",value:function(e){var t=e.identifier.name;if(!this.set.has(t))return !1;var r=this.set.get(t).defs;return r.length>0&&r.every(uc)}},{key:"__staticCloseRef",value:function(e){this.__resolve(e)||this.__delegateToUpperScope(e);}},{key:"__dynamicCloseRef",value:function(e){var t=this;do{t.through.push(e),t=t.upper;}while(t)}},{key:"__globalCloseRef",value:function(e){this.__shouldStaticallyCloseForGlobal(e)?this.__staticCloseRef(e):this.__dynamicCloseRef(e);}},{key:"__close",value:function(e){var t;t=this.__shouldStaticallyClose(e)?this.__staticCloseRef:"global"!==this.type?this.__dynamicCloseRef:this.__globalCloseRef;for(var r=0,n=this.__left.length;r<n;++r){var i=this.__left[r];t.call(this,i);}return this.__left=null,this.upper}},{key:"__isValidResolution",value:function(e,t){return !0}},{key:"__resolve",value:function(e){var t=e.identifier.name;if(!this.set.has(t))return !1;var r=this.set.get(t);return !!this.__isValidResolution(e,r)&&(r.references.push(e),r.stack=r.stack&&e.from.variableScope===this.variableScope,e.tainted&&(r.tainted=!0,this.taints.set(r.name,!0)),e.resolved=r,!0)}},{key:"__delegateToUpperScope",value:function(e){this.upper&&this.upper.__left.push(e),this.through.push(e);}},{key:"__addDeclaredVariablesOfNode",value:function(e,t){if(null!=t){var r=this.__declaredVariables.get(t);null==r&&(r=[],this.__declaredVariables.set(t,r)),-1===r.indexOf(e)&&r.push(e);}}},{key:"__defineGeneric",value:function(e,t,r,n,i){var a;(a=t.get(e))||(a=new nc(e,this),t.set(e,a),r.push(a)),i&&(a.defs.push(i),this.__addDeclaredVariablesOfNode(a,i.node),this.__addDeclaredVariablesOfNode(a,i.parent)),n&&a.identifiers.push(n);}},{key:"__define",value:function(e,t){e&&e.type===oc.Identifier&&this.__defineGeneric(e.name,this.set,this.variables,e,t);}},{key:"__referencing",value:function(e,t,r,n,i,a){if(e&&e.type===oc.Identifier&&"super"!==e.name){var o=new tc(e,this,t||tc.READ,r,n,!!i,!!a);this.references.push(o),this.__left.push(o);}}},{key:"__detectEval",value:function(){var e=this;this.directCallToEvalScope=!0;do{e.dynamic=!0,e=e.upper;}while(e)}},{key:"__detectThis",value:function(){this.thisFound=!0;}},{key:"__isClosed",value:function(){return null===this.__left}},{key:"resolve",value:function(e){var t,r,n;for(Pu(this.__isClosed(),"Scope should be closed."),Pu(e.type===oc.Identifier,"Target should be identifier."),r=0,n=this.references.length;r<n;++r)if((t=this.references[r]).identifier===e)return t;return null}},{key:"isStatic",value:function(){return !this.dynamic}},{key:"isArgumentsMaterialized",value:function(){return !0}},{key:"isThisMaterialized",value:function(){return !0}},{key:"isUsedName",value:function(e){if(this.set.has(e))return !0;for(var t=0,r=this.through.length;t<r;++t)if(this.through[t].identifier.name===e)return !0;return !1}}]),e}(),lc={Scope:cc,GlobalScope:function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,e,"global",null,r,!1))).implicit={set:new Map,variables:[],left:[]},n}return f(t,cc),s(t,[{key:"__close",value:function(e){for(var r=[],n=0,i=this.__left.length;n<i;++n){var a=this.__left[n];a.__maybeImplicitGlobal&&!this.set.has(a.identifier.name)&&r.push(a.__maybeImplicitGlobal);}for(var o=0,s=r.length;o<s;++o){var u=r[o];this.__defineImplicit(u.pattern,new sc(nc.ImplicitGlobalVariable,u.pattern,u.node,null,null,null));}return this.implicit.left=this.__left,x(h(t.prototype),"__close",this).call(this,e)}},{key:"__defineImplicit",value:function(e,t){e&&e.type===oc.Identifier&&this.__defineGeneric(e.name,this.implicit.set,this.implicit.variables,e,t);}}]),t}(),ModuleScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"module",r,n,!1))}return f(t,cc),t}(),FunctionExpressionNameScope:function(e){function t(e,r,n){var i;return a(this,t),(i=v(this,h(t).call(this,e,"function-expression-name",r,n,!1))).__define(n.id,new sc(nc.FunctionName,n.id,n,null,null,null)),i.functionExpressionScope=!0,i}return f(t,cc),t}(),CatchScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"catch",r,n,!1))}return f(t,cc),t}(),WithScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"with",r,n,!1))}return f(t,cc),s(t,[{key:"__close",value:function(e){if(this.__shouldStaticallyClose(e))return x(h(t.prototype),"__close",this).call(this,e);for(var r=0,n=this.__left.length;r<n;++r){var i=this.__left[r];i.tainted=!0,this.__delegateToUpperScope(i);}return this.__left=null,this.upper}}]),t}(),BlockScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"block",r,n,!1))}return f(t,cc),t}(),SwitchScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"switch",r,n,!1))}return f(t,cc),t}(),FunctionScope:function(e){function t(e,r,n,i){var o;return a(this,t),(o=v(this,h(t).call(this,e,"function",r,n,i))).block.type!==oc.ArrowFunctionExpression&&o.__defineArguments(),o}return f(t,cc),s(t,[{key:"isArgumentsMaterialized",value:function(){if(this.block.type===oc.ArrowFunctionExpression)return !1;if(!this.isStatic())return !0;var e=this.set.get("arguments");return Pu(e,"Always have arguments variable."),e.tainted||0!==e.references.length}},{key:"isThisMaterialized",value:function(){return !this.isStatic()||this.thisFound}},{key:"__defineArguments",value:function(){this.__defineGeneric("arguments",this.set,this.variables,null,null),this.taints.set("arguments",!0);}},{key:"__isValidResolution",value:function(e,t){if("Program"===this.block.type)return !0;var r=this.block.body.range[0];return !(t.scope===this&&e.identifier.range[0]<r&&t.defs.every((function(e){return e.name.range[0]>=r})))}}]),t}(),ForScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"for",r,n,!1))}return f(t,cc),t}(),ClassScope:function(e){function t(e,r,n){return a(this,t),v(this,h(t).call(this,e,"class",r,n,!1))}return f(t,cc),t}()},pc=lc.GlobalScope,fc=lc.CatchScope,hc=lc.WithScope,dc=lc.ModuleScope,mc=lc.ClassScope,gc=lc.SwitchScope,yc=lc.FunctionScope,vc=lc.ForScope,xc=lc.FunctionExpressionNameScope,bc=lc.BlockScope,Ec=function(){function e(t){a(this,e),this.scopes=[],this.globalScope=null,this.__nodeToScope=new WeakMap,this.__currentScope=null,this.__options=t,this.__declaredVariables=new WeakMap;}return s(e,[{key:"__useDirective",value:function(){return this.__options.directive}},{key:"__isOptimistic",value:function(){return this.__options.optimistic}},{key:"__ignoreEval",value:function(){return this.__options.ignoreEval}},{key:"__isNodejsScope",value:function(){return this.__options.nodejsScope}},{key:"isModule",value:function(){return "module"===this.__options.sourceType}},{key:"isImpliedStrict",value:function(){return this.__options.impliedStrict}},{key:"isStrictModeSupported",value:function(){return this.__options.ecmaVersion>=5}},{key:"__get",value:function(e){return this.__nodeToScope.get(e)}},{key:"getDeclaredVariables",value:function(e){return this.__declaredVariables.get(e)||[]}},{key:"acquire",value:function(e,t){function r(e){return "function"!==e.type||!e.functionExpressionScope}var n=this.__get(e);if(!n||0===n.length)return null;if(1===n.length)return n[0];if(t)for(var i=n.length-1;i>=0;--i){var a=n[i];if(r(a))return a}else for(var o=0,s=n.length;o<s;++o){var u=n[o];if(r(u))return u}return null}},{key:"acquireAll",value:function(e){return this.__get(e)}},{key:"release",value:function(e,t){var r=this.__get(e);if(r&&r.length){var n=r[0].upper;return n?this.acquire(n.block,t):null}return null}},{key:"attach",value:function(){}},{key:"detach",value:function(){}},{key:"__nestScope",value:function(e){return e instanceof pc&&(Pu(null===this.__currentScope),this.globalScope=e),this.__currentScope=e,e}},{key:"__nestGlobalScope",value:function(e){return this.__nestScope(new pc(this,e))}},{key:"__nestBlockScope",value:function(e){return this.__nestScope(new bc(this,this.__currentScope,e))}},{key:"__nestFunctionScope",value:function(e,t){return this.__nestScope(new yc(this,this.__currentScope,e,t))}},{key:"__nestForScope",value:function(e){return this.__nestScope(new vc(this,this.__currentScope,e))}},{key:"__nestCatchScope",value:function(e){return this.__nestScope(new fc(this,this.__currentScope,e))}},{key:"__nestWithScope",value:function(e){return this.__nestScope(new hc(this,this.__currentScope,e))}},{key:"__nestClassScope",value:function(e){return this.__nestScope(new mc(this,this.__currentScope,e))}},{key:"__nestSwitchScope",value:function(e){return this.__nestScope(new gc(this,this.__currentScope,e))}},{key:"__nestModuleScope",value:function(e){return this.__nestScope(new dc(this,this.__currentScope,e))}},{key:"__nestFunctionExpressionNameScope",value:function(e){return this.__nestScope(new xc(this,this.__currentScope,e))}},{key:"__isES6",value:function(){return this.__options.ecmaVersion>=6}}]),e}(),Cc="https://github.com/estools/esrecurse",Sc={node:">=4.0"},kc=[{name:"Yusuke Suzuki",email:"utatane.tea@gmail.com",web:"https://github.com/Constellation"}],Dc={type:"git",url:"https://github.com/estools/esrecurse.git"},Fc={estraverse:"^4.1.0"},Ac={"babel-cli":"^6.24.1","babel-eslint":"^7.2.3","babel-preset-es2015":"^6.24.1","babel-register":"^6.24.1",chai:"^4.0.2",esprima:"^4.0.0",gulp:"^3.9.0","gulp-bump":"^2.7.0","gulp-eslint":"^4.0.0","gulp-filter":"^5.0.0","gulp-git":"^2.4.1","gulp-mocha":"^4.3.1","gulp-tag-version":"^1.2.1",jsdoc:"^3.3.0-alpha10",minimist:"^1.1.0"},wc={test:"gulp travis","unit-test":"gulp test",lint:"gulp lint"},_c={presets:["es2015"]},Tc={name:"esrecurse",description:"ECMAScript AST recursive visitor",homepage:Cc,main:"esrecurse.js",version:"4.2.1",engines:Sc,maintainers:kc,repository:Dc,dependencies:Fc,devDependencies:Ac,license:"BSD-2-Clause",scripts:wc,babel:_c},Pc=n(Object.freeze({__proto__:null,name:"esrecurse",description:"ECMAScript AST recursive visitor",homepage:Cc,main:"esrecurse.js",version:"4.2.1",engines:Sc,maintainers:kc,repository:Dc,dependencies:Fc,devDependencies:Ac,license:"BSD-2-Clause",scripts:wc,babel:_c,default:Tc})),Ic=r((function(e,t){!function(){var e=Zu;function r(e){return null!=e&&("object"===i(e)&&"string"==typeof e.type)}function n(t,r){return (t===e.Syntax.ObjectExpression||t===e.Syntax.ObjectPattern)&&"properties"===r}function a(t,r){r=r||{},this.__visitor=t||this,this.__childVisitorKeys=r.childVisitorKeys?Object.assign({},e.VisitorKeys,r.childVisitorKeys):e.VisitorKeys,"iteration"===r.fallback?this.__fallback=Object.keys:"function"==typeof r.fallback&&(this.__fallback=r.fallback);}a.prototype.visitChildren=function(t){var i,a,o,s,u,c,l;if(null!=t){if(i=t.type||e.Syntax.Property,!(a=this.__childVisitorKeys[i])){if(!this.__fallback)throw new Error("Unknown node type "+i+".");a=this.__fallback(t);}for(o=0,s=a.length;o<s;++o)if(l=t[a[o]])if(Array.isArray(l))for(u=0,c=l.length;u<c;++u)l[u]&&(r(l[u])||n(i,a[o]))&&this.visit(l[u]);else r(l)&&this.visit(l);}},a.prototype.visit=function(t){var r;null!=t&&(r=t.type||e.Syntax.Property,this.__visitor[r]?this.__visitor[r].call(this,t):this.visitChildren(t));},t.version=Pc.version,t.Visitor=a,t.visit=function(e,t,r){new a(t,r).visit(e);};}();})),Bc=(Ic.version,Ic.Visitor,Ic.visit,Zu.Syntax);var Oc=function(e){function t(e,r,n){var i;return a(this,t),(i=v(this,h(t).call(this,null,e))).rootPattern=r,i.callback=n,i.assignments=[],i.rightHandNodes=[],i.restElements=[],i}return f(t,Ic.Visitor),s(t,null,[{key:"isPattern",value:function(e){var t=e.type;return t===Bc.Identifier||t===Bc.ObjectPattern||t===Bc.ArrayPattern||t===Bc.SpreadElement||t===Bc.RestElement||t===Bc.AssignmentPattern}}]),s(t,[{key:"Identifier",value:function(e){var t,r=(t=this.restElements)[t.length-1]||null;this.callback(e,{topLevel:e===this.rootPattern,rest:null!=r&&r.argument===e,assignments:this.assignments});}},{key:"Property",value:function(e){e.computed&&this.rightHandNodes.push(e.key),this.visit(e.value);}},{key:"ArrayPattern",value:function(e){for(var t=0,r=e.elements.length;t<r;++t){var n=e.elements[t];this.visit(n);}}},{key:"AssignmentPattern",value:function(e){this.assignments.push(e),this.visit(e.left),this.rightHandNodes.push(e.right),this.assignments.pop();}},{key:"RestElement",value:function(e){this.restElements.push(e),this.visit(e.argument),this.restElements.pop();}},{key:"MemberExpression",value:function(e){e.computed&&this.rightHandNodes.push(e.property),this.rightHandNodes.push(e.object);}},{key:"SpreadElement",value:function(e){this.visit(e.argument);}},{key:"ArrayExpression",value:function(e){e.elements.forEach(this.visit,this);}},{key:"AssignmentExpression",value:function(e){this.assignments.push(e),this.visit(e.left),this.rightHandNodes.push(e.right),this.assignments.pop();}},{key:"CallExpression",value:function(e){var t=this;e.arguments.forEach((function(e){t.rightHandNodes.push(e);})),this.visit(e.callee);}}]),t}(),Lc=Zu.Syntax,Nc=ac.ParameterDefinition,jc=ac.Definition;var Rc=function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,null,r.options))).declaration=e,n.referencer=r,n}return f(t,Ic.Visitor),s(t,[{key:"visitImport",value:function(e,t){var r=this;this.referencer.visitPattern(e,(function(e){r.referencer.currentScope().__define(e,new jc(nc.ImportBinding,e,t,r.declaration,null,null));}));}},{key:"ImportNamespaceSpecifier",value:function(e){var t=e.local||e.id;t&&this.visitImport(t,e);}},{key:"ImportDefaultSpecifier",value:function(e){var t=e.local||e.id;this.visitImport(t,e);}},{key:"ImportSpecifier",value:function(e){var t=e.local||e.id;e.name?this.visitImport(e.name,e):this.visitImport(t,e);}}]),t}(),Mc=function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,null,e))).options=e,n.scopeManager=r,n.parent=null,n.isInnerMethodDefinition=!1,n}return f(t,Ic.Visitor),s(t,[{key:"currentScope",value:function(){return this.scopeManager.__currentScope}},{key:"close",value:function(e){for(;this.currentScope()&&e===this.currentScope().block;)this.scopeManager.__currentScope=this.currentScope().__close(this.scopeManager);}},{key:"pushInnerMethodDefinition",value:function(e){var t=this.isInnerMethodDefinition;return this.isInnerMethodDefinition=e,t}},{key:"popInnerMethodDefinition",value:function(e){this.isInnerMethodDefinition=e;}},{key:"referencingDefaultValue",value:function(e,t,r,n){var i=this.currentScope();t.forEach((function(t){i.__referencing(e,tc.WRITE,t.right,r,e!==t.left,n);}));}},{key:"visitPattern",value:function(e,t,r){var n=t,i=r;"function"==typeof t&&(i=t,n={processRightHandNodes:!1}),function(e,t,r,n){var i=new Oc(e,t,n);i.visit(t),null!=r&&i.rightHandNodes.forEach(r.visit,r);}(this.options,e,n.processRightHandNodes?this:null,i);}},{key:"visitFunction",value:function(e){var t,r,n=this;e.type===Lc.FunctionDeclaration&&this.currentScope().__define(e.id,new jc(nc.FunctionName,e.id,e,null,null,null)),e.type===Lc.FunctionExpression&&e.id&&this.scopeManager.__nestFunctionExpressionNameScope(e),this.scopeManager.__nestFunctionScope(e,this.isInnerMethodDefinition);var i=this;function a(r,n){i.currentScope().__define(r,new Nc(r,e,t,n.rest)),i.referencingDefaultValue(r,n.assignments,null,!0);}for(t=0,r=e.params.length;t<r;++t)this.visitPattern(e.params[t],{processRightHandNodes:!0},a);e.rest&&this.visitPattern({type:"RestElement",argument:e.rest},(function(t){n.currentScope().__define(t,new Nc(t,e,e.params.length,!0));})),e.body&&(e.body.type===Lc.BlockStatement?this.visitChildren(e.body):this.visit(e.body)),this.close(e);}},{key:"visitClass",value:function(e){e.type===Lc.ClassDeclaration&&this.currentScope().__define(e.id,new jc(nc.ClassName,e.id,e,null,null,null)),this.visit(e.superClass),this.scopeManager.__nestClassScope(e),e.id&&this.currentScope().__define(e.id,new jc(nc.ClassName,e.id,e)),this.visit(e.body),this.close(e);}},{key:"visitProperty",value:function(e){var t;e.computed&&this.visit(e.key);var r=e.type===Lc.MethodDefinition;r&&(t=this.pushInnerMethodDefinition(!0)),this.visit(e.value),r&&this.popInnerMethodDefinition(t);}},{key:"visitForIn",value:function(e){var t=this;e.left.type===Lc.VariableDeclaration&&"var"!==e.left.kind&&this.scopeManager.__nestForScope(e),e.left.type===Lc.VariableDeclaration?(this.visit(e.left),this.visitPattern(e.left.declarations[0].id,(function(r){t.currentScope().__referencing(r,tc.WRITE,e.right,null,!0,!0);}))):this.visitPattern(e.left,{processRightHandNodes:!0},(function(r,n){var i=null;t.currentScope().isStrict||(i={pattern:r,node:e}),t.referencingDefaultValue(r,n.assignments,i,!1),t.currentScope().__referencing(r,tc.WRITE,e.right,i,!0,!1);})),this.visit(e.right),this.visit(e.body),this.close(e);}},{key:"visitVariableDeclaration",value:function(e,t,r,n){var i=this,a=r.declarations[n],o=a.init;this.visitPattern(a.id,{processRightHandNodes:!0},(function(s,u){e.__define(s,new jc(t,s,a,r,n,r.kind)),i.referencingDefaultValue(s,u.assignments,null,!0),o&&i.currentScope().__referencing(s,tc.WRITE,o,null,!u.topLevel,!0);}));}},{key:"AssignmentExpression",value:function(e){var t=this;Oc.isPattern(e.left)?"="===e.operator?this.visitPattern(e.left,{processRightHandNodes:!0},(function(r,n){var i=null;t.currentScope().isStrict||(i={pattern:r,node:e}),t.referencingDefaultValue(r,n.assignments,i,!1),t.currentScope().__referencing(r,tc.WRITE,e.right,i,!n.topLevel,!1);})):this.currentScope().__referencing(e.left,tc.RW,e.right):this.visit(e.left),this.visit(e.right);}},{key:"CatchClause",value:function(e){var t=this;this.scopeManager.__nestCatchScope(e),this.visitPattern(e.param,{processRightHandNodes:!0},(function(r,n){t.currentScope().__define(r,new jc(nc.CatchClause,e.param,e,null,null,null)),t.referencingDefaultValue(r,n.assignments,null,!0);})),this.visit(e.body),this.close(e);}},{key:"Program",value:function(e){this.scopeManager.__nestGlobalScope(e),this.scopeManager.__isNodejsScope()&&(this.currentScope().isStrict=!1,this.scopeManager.__nestFunctionScope(e,!1)),this.scopeManager.__isES6()&&this.scopeManager.isModule()&&this.scopeManager.__nestModuleScope(e),this.scopeManager.isStrictModeSupported()&&this.scopeManager.isImpliedStrict()&&(this.currentScope().isStrict=!0),this.visitChildren(e),this.close(e);}},{key:"Identifier",value:function(e){this.currentScope().__referencing(e);}},{key:"UpdateExpression",value:function(e){Oc.isPattern(e.argument)?this.currentScope().__referencing(e.argument,tc.RW,null):this.visitChildren(e);}},{key:"MemberExpression",value:function(e){this.visit(e.object),e.computed&&this.visit(e.property);}},{key:"Property",value:function(e){this.visitProperty(e);}},{key:"MethodDefinition",value:function(e){this.visitProperty(e);}},{key:"BreakStatement",value:function(){}},{key:"ContinueStatement",value:function(){}},{key:"LabeledStatement",value:function(e){this.visit(e.body);}},{key:"ForStatement",value:function(e){e.init&&e.init.type===Lc.VariableDeclaration&&"var"!==e.init.kind&&this.scopeManager.__nestForScope(e),this.visitChildren(e),this.close(e);}},{key:"ClassExpression",value:function(e){this.visitClass(e);}},{key:"ClassDeclaration",value:function(e){this.visitClass(e);}},{key:"CallExpression",value:function(e){this.scopeManager.__ignoreEval()||e.callee.type!==Lc.Identifier||"eval"!==e.callee.name||this.currentScope().variableScope.__detectEval(),this.visitChildren(e);}},{key:"BlockStatement",value:function(e){this.scopeManager.__isES6()&&this.scopeManager.__nestBlockScope(e),this.visitChildren(e),this.close(e);}},{key:"ThisExpression",value:function(){this.currentScope().variableScope.__detectThis();}},{key:"WithStatement",value:function(e){this.visit(e.object),this.scopeManager.__nestWithScope(e),this.visit(e.body),this.close(e);}},{key:"VariableDeclaration",value:function(e){for(var t="var"===e.kind?this.currentScope().variableScope:this.currentScope(),r=0,n=e.declarations.length;r<n;++r){var i=e.declarations[r];this.visitVariableDeclaration(t,nc.Variable,e,r),i.init&&this.visit(i.init);}}},{key:"SwitchStatement",value:function(e){this.visit(e.discriminant),this.scopeManager.__isES6()&&this.scopeManager.__nestSwitchScope(e);for(var t=0,r=e.cases.length;t<r;++t)this.visit(e.cases[t]);this.close(e);}},{key:"FunctionDeclaration",value:function(e){this.visitFunction(e);}},{key:"FunctionExpression",value:function(e){this.visitFunction(e);}},{key:"ForOfStatement",value:function(e){this.visitForIn(e);}},{key:"ForInStatement",value:function(e){this.visitForIn(e);}},{key:"ArrowFunctionExpression",value:function(e){this.visitFunction(e);}},{key:"ImportDeclaration",value:function(e){Pu(this.scopeManager.__isES6()&&this.scopeManager.isModule(),"ImportDeclaration should appear when the mode is ES6 and in the module context."),new Rc(e,this).visit(e);}},{key:"visitExportDeclaration",value:function(e){e.source||(e.declaration?this.visit(e.declaration):this.visitChildren(e));}},{key:"ExportDeclaration",value:function(e){this.visitExportDeclaration(e);}},{key:"ExportNamedDeclaration",value:function(e){this.visitExportDeclaration(e);}},{key:"ExportSpecifier",value:function(e){var t=e.id||e.local;this.visit(t);}},{key:"MetaProperty",value:function(){}}]),t}(),Vc="http://github.com/eslint/eslint-scope",Uc={node:">=8.0.0"},qc={url:"https://github.com/eslint/eslint-scope/issues"},Wc={test:"node Makefile.js test",lint:"node Makefile.js lint","generate-release":"eslint-generate-release","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","publish-release":"eslint-publish-release"},$c=["LICENSE","README.md","lib"],Gc={esrecurse:"^4.1.0",estraverse:"^4.1.1"},zc={"@typescript-eslint/parser":"^1.11.0",chai:"^4.2.0",eslint:"^6.0.1","eslint-config-eslint":"^5.0.1","eslint-plugin-node":"^9.1.0","eslint-release":"^1.0.0",espree:"^6.0.0",istanbul:"^0.4.5",mocha:"^6.1.4","npm-license":"^0.3.3",shelljs:"^0.8.3",typescript:"^3.5.2"},Hc={name:"eslint-scope",description:"ECMAScript scope analyzer for ESLint",homepage:Vc,main:"lib/index.js",version:"5.0.0",engines:Uc,repository:"eslint/eslint-scope",bugs:qc,license:"BSD-2-Clause",scripts:Wc,files:$c,dependencies:Gc,devDependencies:zc},Kc=n(Object.freeze({__proto__:null,name:"eslint-scope",description:"ECMAScript scope analyzer for ESLint",homepage:Vc,main:"lib/index.js",version:"5.0.0",engines:Uc,repository:"eslint/eslint-scope",bugs:qc,license:"BSD-2-Clause",scripts:Wc,files:$c,dependencies:Gc,devDependencies:zc,default:Hc})),Jc=lc.Scope;var Qc={version:Kc.version,Reference:tc,Variable:nc,Scope:Jc,ScopeManager:Ec,analyze:function(e,t){var r=function e(t,r){function n(e){return "object"===i(e)&&e instanceof Object&&!(e instanceof Array)&&!(e instanceof RegExp)}for(var a in r)if(Object.prototype.hasOwnProperty.call(r,a)){var o=r[a];n(o)?n(t[a])?e(t[a],o):t[a]=e({},o):t[a]=o;}return t}({optimistic:!1,directive:!1,nodejsScope:!1,impliedStrict:!1,sourceType:"script",ecmaVersion:5,childVisitorKeys:null,fallback:"iteration"},t),n=new Ec(r);return new Mc(r,n).visit(e),Pu(null===n.__currentScope,"currentScope should be null."),n}},Xc=["left","right"],Yc=["left","right"],Zc=["elements"],el=["elements"],tl=["params","body"],rl=["argument"],nl=["body"],il=["left","right"],al=["label"],ol=["callee","arguments"],sl=["param","body"],ul=["body"],cl=["id","superClass","body"],ll=["id","superClass","body"],pl=["test","consequent","alternate"],fl=["label"],hl=[],dl=["body","test"],ml=[],gl=["source"],yl=["declaration"],vl=["declaration","specifiers","source"],xl=["exported","local"],bl=["expression"],El=["argument"],Cl=["argument"],Sl=["init","test","update","body"],kl=["left","right","body"],Dl=["left","right","body"],Fl=["id","params","body"],Al=["id","params","body"],wl=[],_l=["test","consequent","alternate"],Tl=["specifiers","source"],Pl=["local"],Il=["source"],Bl=["local"],Ol=["imported","local"],Ll=["name","value"],Nl=["name"],jl=["openingElement","children","closingElement"],Rl=[],Ml=["expression"],Vl=[],Ul=["object","property"],ql=["namespace","name"],Wl=["name","attributes"],$l=["argument"],Gl=[],zl=["openingFragment","children","closingFragment"],Hl=[],Kl=["label","body"],Jl=["left","right"],Ql=["object","property"],Xl=["meta","property"],Yl=["key","value"],Zl=["callee","arguments"],ep=["properties"],tp=["properties"],rp=["body"],np=["key","value"],ip=["argument"],ap=["argument"],op=["expressions"],sp=["argument"],up=[],cp=["discriminant","cases"],lp=["test","consequent"],pp=["tag","quasi"],fp=[],hp=["quasis","expressions"],dp=[],mp=["argument"],gp=["block","handler","finalizer"],yp=["argument"],vp=["argument"],xp=["declarations"],bp=["id","init"],Ep=["test","body"],Cp=["object","body"],Sp=["argument"],kp={AssignmentExpression:Xc,AssignmentPattern:Yc,ArrayExpression:Zc,ArrayPattern:el,ArrowFunctionExpression:tl,AwaitExpression:rl,BlockStatement:nl,BinaryExpression:il,BreakStatement:al,CallExpression:ol,CatchClause:sl,ClassBody:ul,ClassDeclaration:cl,ClassExpression:ll,ConditionalExpression:pl,ContinueStatement:fl,DebuggerStatement:hl,DoWhileStatement:dl,EmptyStatement:ml,ExportAllDeclaration:gl,ExportDefaultDeclaration:yl,ExportNamedDeclaration:vl,ExportSpecifier:xl,ExpressionStatement:bl,ExperimentalRestProperty:El,ExperimentalSpreadProperty:Cl,ForStatement:Sl,ForInStatement:kl,ForOfStatement:Dl,FunctionDeclaration:Fl,FunctionExpression:Al,Identifier:wl,IfStatement:_l,ImportDeclaration:Tl,ImportDefaultSpecifier:Pl,ImportExpression:Il,ImportNamespaceSpecifier:Bl,ImportSpecifier:Ol,JSXAttribute:Ll,JSXClosingElement:Nl,JSXElement:jl,JSXEmptyExpression:Rl,JSXExpressionContainer:Ml,JSXIdentifier:Vl,JSXMemberExpression:Ul,JSXNamespacedName:ql,JSXOpeningElement:Wl,JSXSpreadAttribute:$l,JSXText:Gl,JSXFragment:zl,Literal:Hl,LabeledStatement:Kl,LogicalExpression:Jl,MemberExpression:Ql,MetaProperty:Xl,MethodDefinition:Yl,NewExpression:Zl,ObjectExpression:ep,ObjectPattern:tp,Program:rp,Property:np,RestElement:ip,ReturnStatement:ap,SequenceExpression:op,SpreadElement:sp,Super:up,SwitchStatement:cp,SwitchCase:lp,TaggedTemplateExpression:pp,TemplateElement:fp,TemplateLiteral:hp,ThisExpression:dp,ThrowStatement:mp,TryStatement:gp,UnaryExpression:yp,UpdateExpression:vp,VariableDeclaration:xp,VariableDeclarator:bp,WhileStatement:Ep,WithStatement:Cp,YieldExpression:Sp},Dp=n(Object.freeze({__proto__:null,AssignmentExpression:Xc,AssignmentPattern:Yc,ArrayExpression:Zc,ArrayPattern:el,ArrowFunctionExpression:tl,AwaitExpression:rl,BlockStatement:nl,BinaryExpression:il,BreakStatement:al,CallExpression:ol,CatchClause:sl,ClassBody:ul,ClassDeclaration:cl,ClassExpression:ll,ConditionalExpression:pl,ContinueStatement:fl,DebuggerStatement:hl,DoWhileStatement:dl,EmptyStatement:ml,ExportAllDeclaration:gl,ExportDefaultDeclaration:yl,ExportNamedDeclaration:vl,ExportSpecifier:xl,ExpressionStatement:bl,ExperimentalRestProperty:El,ExperimentalSpreadProperty:Cl,ForStatement:Sl,ForInStatement:kl,ForOfStatement:Dl,FunctionDeclaration:Fl,FunctionExpression:Al,Identifier:wl,IfStatement:_l,ImportDeclaration:Tl,ImportDefaultSpecifier:Pl,ImportExpression:Il,ImportNamespaceSpecifier:Bl,ImportSpecifier:Ol,JSXAttribute:Ll,JSXClosingElement:Nl,JSXElement:jl,JSXEmptyExpression:Rl,JSXExpressionContainer:Ml,JSXIdentifier:Vl,JSXMemberExpression:Ul,JSXNamespacedName:ql,JSXOpeningElement:Wl,JSXSpreadAttribute:$l,JSXText:Gl,JSXFragment:zl,Literal:Hl,LabeledStatement:Kl,LogicalExpression:Jl,MemberExpression:Ql,MetaProperty:Xl,MethodDefinition:Yl,NewExpression:Zl,ObjectExpression:ep,ObjectPattern:tp,Program:rp,Property:np,RestElement:ip,ReturnStatement:ap,SequenceExpression:op,SpreadElement:sp,Super:up,SwitchStatement:cp,SwitchCase:lp,TaggedTemplateExpression:pp,TemplateElement:fp,TemplateLiteral:hp,ThisExpression:dp,ThrowStatement:mp,TryStatement:gp,UnaryExpression:yp,UpdateExpression:vp,VariableDeclaration:xp,VariableDeclarator:bp,WhileStatement:Ep,WithStatement:Cp,YieldExpression:Sp,default:kp})),Fp=Object.freeze(Object.keys(Dp)),Ap=!0,wp=!1,_p=void 0;try{for(var Tp,Pp=Fp[Symbol.iterator]();!(Ap=(Tp=Pp.next()).done);Ap=!0){var Ip=Tp.value;Object.freeze(Dp[Ip]);}}catch(e){wp=!0,_p=e;}finally{try{Ap||null==Pp.return||Pp.return();}finally{if(wp)throw _p}}Object.freeze(Dp);var Bp=new Set(["parent","leadingComments","trailingComments"]);function Op(e){return !Bp.has(e)&&"_"!==e[0]}var Lp=Object.freeze({KEYS:Dp,getKeys:function(e){return Object.keys(e).filter(Op)},unionWith:function(e){for(var t=Object.assign({},Dp),r=0,n=Object.keys(e);r<n.length;r++){var i=n[r];if(t.hasOwnProperty(i)){var a=new Set(e[i]),o=!0,s=!1,u=void 0;try{for(var c,l=t[i][Symbol.iterator]();!(o=(c=l.next()).done);o=!0){var p=c.value;a.add(p);}}catch(e){s=!0,u=e;}finally{try{o||null==l.return||l.return();}finally{if(s)throw u}}t[i]=Object.freeze(Array.from(a));}else t[i]=Object.freeze(Array.from(e[i]));}return Object.freeze(t)}}),Np={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},jp="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",Rp={5:jp,"5module":jp+" export import",6:jp+" const class extends export import super"},Mp=/^in(stanceof)?$/,Vp="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-Ᶎꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭧꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",Up="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",qp=new RegExp("["+Vp+"]"),Wp=new RegExp("["+Vp+Up+"]");Vp=Up=null;var $p=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541],Gp=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];function zp(e,t){for(var r=65536,n=0;n<t.length;n+=2){if((r+=t[n])>e)return !1;if((r+=t[n+1])>=e)return !0}}function Hp(e,t){return e<65?36===e:e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&qp.test(String.fromCharCode(e)):!1!==t&&zp(e,$p)))}function Kp(e,t){return e<48?36===e:e<58||!(e<65)&&(e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&Wp.test(String.fromCharCode(e)):!1!==t&&(zp(e,$p)||zp(e,Gp)))))}var Jp=function(e,t){void 0===t&&(t={}),this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=t.binop||null,this.updateContext=null;};function Qp(e,t){return new Jp(e,{beforeExpr:!0,binop:t})}var Xp={beforeExpr:!0},Yp={startsExpr:!0},Zp={};function ef(e,t){return void 0===t&&(t={}),t.keyword=e,Zp[e]=new Jp(e,t)}var tf={num:new Jp("num",Yp),regexp:new Jp("regexp",Yp),string:new Jp("string",Yp),name:new Jp("name",Yp),eof:new Jp("eof"),bracketL:new Jp("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new Jp("]"),braceL:new Jp("{",{beforeExpr:!0,startsExpr:!0}),braceR:new Jp("}"),parenL:new Jp("(",{beforeExpr:!0,startsExpr:!0}),parenR:new Jp(")"),comma:new Jp(",",Xp),semi:new Jp(";",Xp),colon:new Jp(":",Xp),dot:new Jp("."),question:new Jp("?",Xp),arrow:new Jp("=>",Xp),template:new Jp("template"),invalidTemplate:new Jp("invalidTemplate"),ellipsis:new Jp("...",Xp),backQuote:new Jp("`",Yp),dollarBraceL:new Jp("${",{beforeExpr:!0,startsExpr:!0}),eq:new Jp("=",{beforeExpr:!0,isAssign:!0}),assign:new Jp("_=",{beforeExpr:!0,isAssign:!0}),incDec:new Jp("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new Jp("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:Qp("||",1),logicalAND:Qp("&&",2),bitwiseOR:Qp("|",3),bitwiseXOR:Qp("^",4),bitwiseAND:Qp("&",5),equality:Qp("==/!=/===/!==",6),relational:Qp("</>/<=/>=",7),bitShift:Qp("<</>>/>>>",8),plusMin:new Jp("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:Qp("%",10),star:Qp("*",10),slash:Qp("/",10),starstar:new Jp("**",{beforeExpr:!0}),_break:ef("break"),_case:ef("case",Xp),_catch:ef("catch"),_continue:ef("continue"),_debugger:ef("debugger"),_default:ef("default",Xp),_do:ef("do",{isLoop:!0,beforeExpr:!0}),_else:ef("else",Xp),_finally:ef("finally"),_for:ef("for",{isLoop:!0}),_function:ef("function",Yp),_if:ef("if"),_return:ef("return",Xp),_switch:ef("switch"),_throw:ef("throw",Xp),_try:ef("try"),_var:ef("var"),_const:ef("const"),_while:ef("while",{isLoop:!0}),_with:ef("with"),_new:ef("new",{beforeExpr:!0,startsExpr:!0}),_this:ef("this",Yp),_super:ef("super",Yp),_class:ef("class",Yp),_extends:ef("extends",Xp),_export:ef("export"),_import:ef("import",Yp),_null:ef("null",Yp),_true:ef("true",Yp),_false:ef("false",Yp),_in:ef("in",{beforeExpr:!0,binop:7}),_instanceof:ef("instanceof",{beforeExpr:!0,binop:7}),_typeof:ef("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:ef("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:ef("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},rf=/\r\n?|\n|\u2028|\u2029/,nf=new RegExp(rf.source,"g");function af(e,t){return 10===e||13===e||!t&&(8232===e||8233===e)}var of=/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,sf=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,uf=Object.prototype,cf=uf.hasOwnProperty,lf=uf.toString;function pf(e,t){return cf.call(e,t)}var ff=Array.isArray||function(e){return "[object Array]"===lf.call(e)};function hf(e){return new RegExp("^(?:"+e.replace(/ /g,"|")+")$")}var df=function(e,t){this.line=e,this.column=t;};df.prototype.offset=function(e){return new df(this.line,this.column+e)};var mf=function(e,t,r){this.start=t,this.end=r,null!==e.sourceFile&&(this.source=e.sourceFile);};function gf(e,t){for(var r=1,n=0;;){nf.lastIndex=n;var i=nf.exec(e);if(!(i&&i.index<t))return new df(r,t-n);++r,n=i.index+i[0].length;}}var yf={ecmaVersion:10,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1};function vf(e){var t={};for(var r in yf)t[r]=e&&pf(e,r)?e[r]:yf[r];if(t.ecmaVersion>=2015&&(t.ecmaVersion-=2009),null==t.allowReserved&&(t.allowReserved=t.ecmaVersion<5),ff(t.onToken)){var n=t.onToken;t.onToken=function(e){return n.push(e)};}return ff(t.onComment)&&(t.onComment=function(e,t){return function(r,n,i,a,o,s){var u={type:r?"Block":"Line",value:n,start:i,end:a};e.locations&&(u.loc=new mf(this,o,s)),e.ranges&&(u.range=[i,a]),t.push(u);}}(t,t.onComment)),t}var xf=2,bf=1|xf,Ef=4,Cf=8;function Sf(e,t){return xf|(e?Ef:0)|(t?Cf:0)}var kf=function(e,t,r){this.options=e=vf(e),this.sourceFile=e.sourceFile,this.keywords=hf(Rp[e.ecmaVersion>=6?6:"module"===e.sourceType?"5module":5]);var n="";if(!0!==e.allowReserved){for(var i=e.ecmaVersion;!(n=Np[i]);i--);"module"===e.sourceType&&(n+=" await");}this.reservedWords=hf(n);var a=(n?n+" ":"")+Np.strict;this.reservedWordsStrict=hf(a),this.reservedWordsStrictBind=hf(a+" "+Np.strictBind),this.input=String(t),this.containsEsc=!1,r?(this.pos=r,this.lineStart=this.input.lastIndexOf("\n",r-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(rf).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=tf.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule="module"===e.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports={},0===this.pos&&e.allowHashBang&&"#!"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(1),this.regexpState=null;},Df={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0}};kf.prototype.parse=function(){var e=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(e)},Df.inFunction.get=function(){return (this.currentVarScope().flags&xf)>0},Df.inGenerator.get=function(){return (this.currentVarScope().flags&Cf)>0},Df.inAsync.get=function(){return (this.currentVarScope().flags&Ef)>0},Df.allowSuper.get=function(){return (64&this.currentThisScope().flags)>0},Df.allowDirectSuper.get=function(){return (128&this.currentThisScope().flags)>0},Df.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())},kf.prototype.inNonArrowFunction=function(){return (this.currentThisScope().flags&xf)>0},kf.extend=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var r=this,n=0;n<e.length;n++)r=e[n](r);return r},kf.parse=function(e,t){return new this(t,e).parse()},kf.parseExpressionAt=function(e,t,r){var n=new this(r,e,t);return n.nextToken(),n.parseExpression()},kf.tokenizer=function(e,t){return new this(t,e)},Object.defineProperties(kf.prototype,Df);var Ff=kf.prototype,Af=/^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)")/;function wf(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1;}Ff.strictDirective=function(e){for(;;){sf.lastIndex=e,e+=sf.exec(this.input)[0].length;var t=Af.exec(this.input.slice(e));if(!t)return !1;if("use strict"===(t[1]||t[2]))return !0;e+=t[0].length,sf.lastIndex=e,e+=sf.exec(this.input)[0].length,";"===this.input[e]&&e++;}},Ff.eat=function(e){return this.type===e&&(this.next(),!0)},Ff.isContextual=function(e){return this.type===tf.name&&this.value===e&&!this.containsEsc},Ff.eatContextual=function(e){return !!this.isContextual(e)&&(this.next(),!0)},Ff.expectContextual=function(e){this.eatContextual(e)||this.unexpected();},Ff.canInsertSemicolon=function(){return this.type===tf.eof||this.type===tf.braceR||rf.test(this.input.slice(this.lastTokEnd,this.start))},Ff.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},Ff.semicolon=function(){this.eat(tf.semi)||this.insertSemicolon()||this.unexpected();},Ff.afterTrailingComma=function(e,t){if(this.type===e)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),t||this.next(),!0},Ff.expect=function(e){this.eat(e)||this.unexpected();},Ff.unexpected=function(e){this.raise(null!=e?e:this.start,"Unexpected token");},Ff.checkPatternErrors=function(e,t){if(e){e.trailingComma>-1&&this.raiseRecoverable(e.trailingComma,"Comma is not permitted after the rest element");var r=t?e.parenthesizedAssign:e.parenthesizedBind;r>-1&&this.raiseRecoverable(r,"Parenthesized pattern");}},Ff.checkExpressionErrors=function(e,t){if(!e)return !1;var r=e.shorthandAssign,n=e.doubleProto;if(!t)return r>=0||n>=0;r>=0&&this.raise(r,"Shorthand property assignments are valid only in destructuring patterns"),n>=0&&this.raiseRecoverable(n,"Redefinition of __proto__ property");},Ff.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value");},Ff.isSimpleAssignTarget=function(e){return "ParenthesizedExpression"===e.type?this.isSimpleAssignTarget(e.expression):"Identifier"===e.type||"MemberExpression"===e.type};var _f=kf.prototype;_f.parseTopLevel=function(e){var t={};for(e.body||(e.body=[]);this.type!==tf.eof;){var r=this.parseStatement(null,!0,t);e.body.push(r);}if(this.inModule)for(var n=0,i=Object.keys(this.undefinedExports);n<i.length;n+=1){var a=i[n];this.raiseRecoverable(this.undefinedExports[a].start,"Export '"+a+"' is not defined");}return this.adaptDirectivePrologue(e.body),this.next(),e.sourceType=this.options.sourceType,this.finishNode(e,"Program")};var Tf={kind:"loop"},Pf={kind:"switch"};_f.isLet=function(e){if(this.options.ecmaVersion<6||!this.isContextual("let"))return !1;sf.lastIndex=this.pos;var t=sf.exec(this.input),r=this.pos+t[0].length,n=this.input.charCodeAt(r);if(91===n)return !0;if(e)return !1;if(123===n)return !0;if(Hp(n,!0)){for(var i=r+1;Kp(this.input.charCodeAt(i),!0);)++i;var a=this.input.slice(r,i);if(!Mp.test(a))return !0}return !1},_f.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return !1;sf.lastIndex=this.pos;var e=sf.exec(this.input),t=this.pos+e[0].length;return !(rf.test(this.input.slice(this.pos,t))||"function"!==this.input.slice(t,t+8)||t+8!==this.input.length&&Kp(this.input.charAt(t+8)))},_f.parseStatement=function(e,t,r){var n,i=this.type,a=this.startNode();switch(this.isLet(e)&&(i=tf._var,n="let"),i){case tf._break:case tf._continue:return this.parseBreakContinueStatement(a,i.keyword);case tf._debugger:return this.parseDebuggerStatement(a);case tf._do:return this.parseDoStatement(a);case tf._for:return this.parseForStatement(a);case tf._function:return e&&(this.strict||"if"!==e&&"label"!==e)&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(a,!1,!e);case tf._class:return e&&this.unexpected(),this.parseClass(a,!0);case tf._if:return this.parseIfStatement(a);case tf._return:return this.parseReturnStatement(a);case tf._switch:return this.parseSwitchStatement(a);case tf._throw:return this.parseThrowStatement(a);case tf._try:return this.parseTryStatement(a);case tf._const:case tf._var:return n=n||this.value,e&&"var"!==n&&this.unexpected(),this.parseVarStatement(a,n);case tf._while:return this.parseWhileStatement(a);case tf._with:return this.parseWithStatement(a);case tf.braceL:return this.parseBlock(!0,a);case tf.semi:return this.parseEmptyStatement(a);case tf._export:case tf._import:if(this.options.ecmaVersion>10&&i===tf._import){sf.lastIndex=this.pos;var o=sf.exec(this.input),s=this.pos+o[0].length;if(40===this.input.charCodeAt(s))return this.parseExpressionStatement(a,this.parseExpression())}return this.options.allowImportExportEverywhere||(t||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),i===tf._import?this.parseImport(a):this.parseExport(a,r);default:if(this.isAsyncFunction())return e&&this.unexpected(),this.next(),this.parseFunctionStatement(a,!0,!e);var u=this.value,c=this.parseExpression();return i===tf.name&&"Identifier"===c.type&&this.eat(tf.colon)?this.parseLabeledStatement(a,u,c,e):this.parseExpressionStatement(a,c)}},_f.parseBreakContinueStatement=function(e,t){var r="break"===t;this.next(),this.eat(tf.semi)||this.insertSemicolon()?e.label=null:this.type!==tf.name?this.unexpected():(e.label=this.parseIdent(),this.semicolon());for(var n=0;n<this.labels.length;++n){var i=this.labels[n];if(null==e.label||i.name===e.label.name){if(null!=i.kind&&(r||"loop"===i.kind))break;if(e.label&&r)break}}return n===this.labels.length&&this.raise(e.start,"Unsyntactic "+t),this.finishNode(e,r?"BreakStatement":"ContinueStatement")},_f.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,"DebuggerStatement")},_f.parseDoStatement=function(e){return this.next(),this.labels.push(Tf),e.body=this.parseStatement("do"),this.labels.pop(),this.expect(tf._while),e.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(tf.semi):this.semicolon(),this.finishNode(e,"DoWhileStatement")},_f.parseForStatement=function(e){this.next();var t=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(Tf),this.enterScope(0),this.expect(tf.parenL),this.type===tf.semi)return t>-1&&this.unexpected(t),this.parseFor(e,null);var r=this.isLet();if(this.type===tf._var||this.type===tf._const||r){var n=this.startNode(),i=r?"let":this.value;return this.next(),this.parseVar(n,!0,i),this.finishNode(n,"VariableDeclaration"),(this.type===tf._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&1===n.declarations.length?(this.options.ecmaVersion>=9&&(this.type===tf._in?t>-1&&this.unexpected(t):e.await=t>-1),this.parseForIn(e,n)):(t>-1&&this.unexpected(t),this.parseFor(e,n))}var a=new wf,o=this.parseExpression(!0,a);return this.type===tf._in||this.options.ecmaVersion>=6&&this.isContextual("of")?(this.options.ecmaVersion>=9&&(this.type===tf._in?t>-1&&this.unexpected(t):e.await=t>-1),this.toAssignable(o,!1,a),this.checkLVal(o),this.parseForIn(e,o)):(this.checkExpressionErrors(a,!0),t>-1&&this.unexpected(t),this.parseFor(e,o))},_f.parseFunctionStatement=function(e,t,r){return this.next(),this.parseFunction(e,Bf|(r?0:Of),!1,t)},_f.parseIfStatement=function(e){return this.next(),e.test=this.parseParenExpression(),e.consequent=this.parseStatement("if"),e.alternate=this.eat(tf._else)?this.parseStatement("if"):null,this.finishNode(e,"IfStatement")},_f.parseReturnStatement=function(e){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,"'return' outside of function"),this.next(),this.eat(tf.semi)||this.insertSemicolon()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,"ReturnStatement")},_f.parseSwitchStatement=function(e){var t;this.next(),e.discriminant=this.parseParenExpression(),e.cases=[],this.expect(tf.braceL),this.labels.push(Pf),this.enterScope(0);for(var r=!1;this.type!==tf.braceR;)if(this.type===tf._case||this.type===tf._default){var n=this.type===tf._case;t&&this.finishNode(t,"SwitchCase"),e.cases.push(t=this.startNode()),t.consequent=[],this.next(),n?t.test=this.parseExpression():(r&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),r=!0,t.test=null),this.expect(tf.colon);}else t||this.unexpected(),t.consequent.push(this.parseStatement(null));return this.exitScope(),t&&this.finishNode(t,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(e,"SwitchStatement")},_f.parseThrowStatement=function(e){return this.next(),rf.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,"ThrowStatement")};var If=[];_f.parseTryStatement=function(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.type===tf._catch){var t=this.startNode();if(this.next(),this.eat(tf.parenL)){t.param=this.parseBindingAtom();var r="Identifier"===t.param.type;this.enterScope(r?32:0),this.checkLVal(t.param,r?4:2),this.expect(tf.parenR);}else this.options.ecmaVersion<10&&this.unexpected(),t.param=null,this.enterScope(0);t.body=this.parseBlock(!1),this.exitScope(),e.handler=this.finishNode(t,"CatchClause");}return e.finalizer=this.eat(tf._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,"Missing catch or finally clause"),this.finishNode(e,"TryStatement")},_f.parseVarStatement=function(e,t){return this.next(),this.parseVar(e,!1,t),this.semicolon(),this.finishNode(e,"VariableDeclaration")},_f.parseWhileStatement=function(e){return this.next(),e.test=this.parseParenExpression(),this.labels.push(Tf),e.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(e,"WhileStatement")},_f.parseWithStatement=function(e){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),e.object=this.parseParenExpression(),e.body=this.parseStatement("with"),this.finishNode(e,"WithStatement")},_f.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,"EmptyStatement")},_f.parseLabeledStatement=function(e,t,r,n){for(var i=0,a=this.labels;i<a.length;i+=1){a[i].name===t&&this.raise(r.start,"Label '"+t+"' is already declared");}for(var o=this.type.isLoop?"loop":this.type===tf._switch?"switch":null,s=this.labels.length-1;s>=0;s--){var u=this.labels[s];if(u.statementStart!==e.start)break;u.statementStart=this.start,u.kind=o;}return this.labels.push({name:t,kind:o,statementStart:this.start}),e.body=this.parseStatement(n?-1===n.indexOf("label")?n+"label":n:"label"),this.labels.pop(),e.label=r,this.finishNode(e,"LabeledStatement")},_f.parseExpressionStatement=function(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,"ExpressionStatement")},_f.parseBlock=function(e,t){for(void 0===e&&(e=!0),void 0===t&&(t=this.startNode()),t.body=[],this.expect(tf.braceL),e&&this.enterScope(0);!this.eat(tf.braceR);){var r=this.parseStatement(null);t.body.push(r);}return e&&this.exitScope(),this.finishNode(t,"BlockStatement")},_f.parseFor=function(e,t){return e.init=t,this.expect(tf.semi),e.test=this.type===tf.semi?null:this.parseExpression(),this.expect(tf.semi),e.update=this.type===tf.parenR?null:this.parseExpression(),this.expect(tf.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,"ForStatement")},_f.parseForIn=function(e,t){var r=this.type===tf._in;return this.next(),"VariableDeclaration"===t.type&&null!=t.declarations[0].init&&(!r||this.options.ecmaVersion<8||this.strict||"var"!==t.kind||"Identifier"!==t.declarations[0].id.type)?this.raise(t.start,(r?"for-in":"for-of")+" loop variable declaration may not have an initializer"):"AssignmentPattern"===t.type&&this.raise(t.start,"Invalid left-hand side in for-loop"),e.left=t,e.right=r?this.parseExpression():this.parseMaybeAssign(),this.expect(tf.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,r?"ForInStatement":"ForOfStatement")},_f.parseVar=function(e,t,r){for(e.declarations=[],e.kind=r;;){var n=this.startNode();if(this.parseVarId(n,r),this.eat(tf.eq)?n.init=this.parseMaybeAssign(t):"const"!==r||this.type===tf._in||this.options.ecmaVersion>=6&&this.isContextual("of")?"Identifier"===n.id.type||t&&(this.type===tf._in||this.isContextual("of"))?n.init=null:this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):this.unexpected(),e.declarations.push(this.finishNode(n,"VariableDeclarator")),!this.eat(tf.comma))break}return e},_f.parseVarId=function(e,t){e.id=this.parseBindingAtom(),this.checkLVal(e.id,"var"===t?1:2,!1);};var Bf=1,Of=2;_f.parseFunction=function(e,t,r,n){this.initFunction(e),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!n)&&(this.type===tf.star&&t&Of&&this.unexpected(),e.generator=this.eat(tf.star)),this.options.ecmaVersion>=8&&(e.async=!!n),t&Bf&&(e.id=4&t&&this.type!==tf.name?null:this.parseIdent(),!e.id||t&Of||this.checkLVal(e.id,this.strict||e.generator||e.async?this.treatFunctionsAsVar?1:2:3));var i=this.yieldPos,a=this.awaitPos,o=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(Sf(e.async,e.generator)),t&Bf||(e.id=this.type===tf.name?this.parseIdent():null),this.parseFunctionParams(e),this.parseFunctionBody(e,r,!1),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=o,this.finishNode(e,t&Bf?"FunctionDeclaration":"FunctionExpression")},_f.parseFunctionParams=function(e){this.expect(tf.parenL),e.params=this.parseBindingList(tf.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams();},_f.parseClass=function(e,t){this.next();var r=this.strict;this.strict=!0,this.parseClassId(e,t),this.parseClassSuper(e);var n=this.startNode(),i=!1;for(n.body=[],this.expect(tf.braceL);!this.eat(tf.braceR);){var a=this.parseClassElement(null!==e.superClass);a&&(n.body.push(a),"MethodDefinition"===a.type&&"constructor"===a.kind&&(i&&this.raise(a.start,"Duplicate constructor in the same class"),i=!0));}return e.body=this.finishNode(n,"ClassBody"),this.strict=r,this.finishNode(e,t?"ClassDeclaration":"ClassExpression")},_f.parseClassElement=function(e){var t=this;if(this.eat(tf.semi))return null;var r=this.startNode(),n=function(e,n){void 0===n&&(n=!1);var i=t.start,a=t.startLoc;return !!t.eatContextual(e)&&(!(t.type===tf.parenL||n&&t.canInsertSemicolon())||(r.key&&t.unexpected(),r.computed=!1,r.key=t.startNodeAt(i,a),r.key.name=e,t.finishNode(r.key,"Identifier"),!1))};r.kind="method",r.static=n("static");var i=this.eat(tf.star),a=!1;i||(this.options.ecmaVersion>=8&&n("async",!0)?(a=!0,i=this.options.ecmaVersion>=9&&this.eat(tf.star)):n("get")?r.kind="get":n("set")&&(r.kind="set")),r.key||this.parsePropertyName(r);var o=r.key,s=!1;return r.computed||r.static||!("Identifier"===o.type&&"constructor"===o.name||"Literal"===o.type&&"constructor"===o.value)?r.static&&"Identifier"===o.type&&"prototype"===o.name&&this.raise(o.start,"Classes may not have a static property named prototype"):("method"!==r.kind&&this.raise(o.start,"Constructor can't have get/set modifier"),i&&this.raise(o.start,"Constructor can't be a generator"),a&&this.raise(o.start,"Constructor can't be an async method"),r.kind="constructor",s=e),this.parseClassMethod(r,i,a,s),"get"===r.kind&&0!==r.value.params.length&&this.raiseRecoverable(r.value.start,"getter should have no params"),"set"===r.kind&&1!==r.value.params.length&&this.raiseRecoverable(r.value.start,"setter should have exactly one param"),"set"===r.kind&&"RestElement"===r.value.params[0].type&&this.raiseRecoverable(r.value.params[0].start,"Setter cannot use rest params"),r},_f.parseClassMethod=function(e,t,r,n){return e.value=this.parseMethod(t,r,n),this.finishNode(e,"MethodDefinition")},_f.parseClassId=function(e,t){this.type===tf.name?(e.id=this.parseIdent(),t&&this.checkLVal(e.id,2,!1)):(!0===t&&this.unexpected(),e.id=null);},_f.parseClassSuper=function(e){e.superClass=this.eat(tf._extends)?this.parseExprSubscripts():null;},_f.parseExport=function(e,t){if(this.next(),this.eat(tf.star))return this.expectContextual("from"),this.type!==tf.string&&this.unexpected(),e.source=this.parseExprAtom(),this.semicolon(),this.finishNode(e,"ExportAllDeclaration");if(this.eat(tf._default)){var r;if(this.checkExport(t,"default",this.lastTokStart),this.type===tf._function||(r=this.isAsyncFunction())){var n=this.startNode();this.next(),r&&this.next(),e.declaration=this.parseFunction(n,4|Bf,!1,r);}else if(this.type===tf._class){var i=this.startNode();e.declaration=this.parseClass(i,"nullableID");}else e.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(e,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())e.declaration=this.parseStatement(null),"VariableDeclaration"===e.declaration.type?this.checkVariableExport(t,e.declaration.declarations):this.checkExport(t,e.declaration.id.name,e.declaration.id.start),e.specifiers=[],e.source=null;else {if(e.declaration=null,e.specifiers=this.parseExportSpecifiers(t),this.eatContextual("from"))this.type!==tf.string&&this.unexpected(),e.source=this.parseExprAtom();else {for(var a=0,o=e.specifiers;a<o.length;a+=1){var s=o[a];this.checkUnreserved(s.local),this.checkLocalExport(s.local);}e.source=null;}this.semicolon();}return this.finishNode(e,"ExportNamedDeclaration")},_f.checkExport=function(e,t,r){e&&(pf(e,t)&&this.raiseRecoverable(r,"Duplicate export '"+t+"'"),e[t]=!0);},_f.checkPatternExport=function(e,t){var r=t.type;if("Identifier"===r)this.checkExport(e,t.name,t.start);else if("ObjectPattern"===r)for(var n=0,i=t.properties;n<i.length;n+=1){var a=i[n];this.checkPatternExport(e,a);}else if("ArrayPattern"===r)for(var o=0,s=t.elements;o<s.length;o+=1){var u=s[o];u&&this.checkPatternExport(e,u);}else "Property"===r?this.checkPatternExport(e,t.value):"AssignmentPattern"===r?this.checkPatternExport(e,t.left):"RestElement"===r?this.checkPatternExport(e,t.argument):"ParenthesizedExpression"===r&&this.checkPatternExport(e,t.expression);},_f.checkVariableExport=function(e,t){if(e)for(var r=0,n=t;r<n.length;r+=1){var i=n[r];this.checkPatternExport(e,i.id);}},_f.shouldParseExportStatement=function(){return "var"===this.type.keyword||"const"===this.type.keyword||"class"===this.type.keyword||"function"===this.type.keyword||this.isLet()||this.isAsyncFunction()},_f.parseExportSpecifiers=function(e){var t=[],r=!0;for(this.expect(tf.braceL);!this.eat(tf.braceR);){if(r)r=!1;else if(this.expect(tf.comma),this.afterTrailingComma(tf.braceR))break;var n=this.startNode();n.local=this.parseIdent(!0),n.exported=this.eatContextual("as")?this.parseIdent(!0):n.local,this.checkExport(e,n.exported.name,n.exported.start),t.push(this.finishNode(n,"ExportSpecifier"));}return t},_f.parseImport=function(e){return this.next(),this.type===tf.string?(e.specifiers=If,e.source=this.parseExprAtom()):(e.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),e.source=this.type===tf.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(e,"ImportDeclaration")},_f.parseImportSpecifiers=function(){var e=[],t=!0;if(this.type===tf.name){var r=this.startNode();if(r.local=this.parseIdent(),this.checkLVal(r.local,2),e.push(this.finishNode(r,"ImportDefaultSpecifier")),!this.eat(tf.comma))return e}if(this.type===tf.star){var n=this.startNode();return this.next(),this.expectContextual("as"),n.local=this.parseIdent(),this.checkLVal(n.local,2),e.push(this.finishNode(n,"ImportNamespaceSpecifier")),e}for(this.expect(tf.braceL);!this.eat(tf.braceR);){if(t)t=!1;else if(this.expect(tf.comma),this.afterTrailingComma(tf.braceR))break;var i=this.startNode();i.imported=this.parseIdent(!0),this.eatContextual("as")?i.local=this.parseIdent():(this.checkUnreserved(i.imported),i.local=i.imported),this.checkLVal(i.local,2),e.push(this.finishNode(i,"ImportSpecifier"));}return e},_f.adaptDirectivePrologue=function(e){for(var t=0;t<e.length&&this.isDirectiveCandidate(e[t]);++t)e[t].directive=e[t].expression.raw.slice(1,-1);},_f.isDirectiveCandidate=function(e){return "ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value&&('"'===this.input[e.start]||"'"===this.input[e.start])};var Lf=kf.prototype;Lf.toAssignable=function(e,t,r){if(this.options.ecmaVersion>=6&&e)switch(e.type){case"Identifier":this.inAsync&&"await"===e.name&&this.raise(e.start,"Cannot use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":e.type="ObjectPattern",r&&this.checkPatternErrors(r,!0);for(var n=0,i=e.properties;n<i.length;n+=1){var a=i[n];this.toAssignable(a,t),"RestElement"!==a.type||"ArrayPattern"!==a.argument.type&&"ObjectPattern"!==a.argument.type||this.raise(a.argument.start,"Unexpected token");}break;case"Property":"init"!==e.kind&&this.raise(e.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(e.value,t);break;case"ArrayExpression":e.type="ArrayPattern",r&&this.checkPatternErrors(r,!0),this.toAssignableList(e.elements,t);break;case"SpreadElement":e.type="RestElement",this.toAssignable(e.argument,t),"AssignmentPattern"===e.argument.type&&this.raise(e.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":"="!==e.operator&&this.raise(e.left.end,"Only '=' operator can be used for specifying default value."),e.type="AssignmentPattern",delete e.operator,this.toAssignable(e.left,t);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(e.expression,t,r);break;case"MemberExpression":if(!t)break;default:this.raise(e.start,"Assigning to rvalue");}else r&&this.checkPatternErrors(r,!0);return e},Lf.toAssignableList=function(e,t){for(var r=e.length,n=0;n<r;n++){var i=e[n];i&&this.toAssignable(i,t);}if(r){var a=e[r-1];6===this.options.ecmaVersion&&t&&a&&"RestElement"===a.type&&"Identifier"!==a.argument.type&&this.unexpected(a.argument.start);}return e},Lf.parseSpread=function(e){var t=this.startNode();return this.next(),t.argument=this.parseMaybeAssign(!1,e),this.finishNode(t,"SpreadElement")},Lf.parseRestBinding=function(){var e=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==tf.name&&this.unexpected(),e.argument=this.parseBindingAtom(),this.finishNode(e,"RestElement")},Lf.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case tf.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(tf.bracketR,!0,!0),this.finishNode(e,"ArrayPattern");case tf.braceL:return this.parseObj(!0)}return this.parseIdent()},Lf.parseBindingList=function(e,t,r){for(var n=[],i=!0;!this.eat(e);)if(i?i=!1:this.expect(tf.comma),t&&this.type===tf.comma)n.push(null);else {if(r&&this.afterTrailingComma(e))break;if(this.type===tf.ellipsis){var a=this.parseRestBinding();this.parseBindingListItem(a),n.push(a),this.type===tf.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(e);break}var o=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(o),n.push(o);}return n},Lf.parseBindingListItem=function(e){return e},Lf.parseMaybeDefault=function(e,t,r){if(r=r||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(tf.eq))return r;var n=this.startNodeAt(e,t);return n.left=r,n.right=this.parseMaybeAssign(),this.finishNode(n,"AssignmentPattern")},Lf.checkLVal=function(e,t,r){switch(void 0===t&&(t=0),e.type){case"Identifier":2===t&&"let"===e.name&&this.raiseRecoverable(e.start,"let is disallowed as a lexically bound name"),this.strict&&this.reservedWordsStrictBind.test(e.name)&&this.raiseRecoverable(e.start,(t?"Binding ":"Assigning to ")+e.name+" in strict mode"),r&&(pf(r,e.name)&&this.raiseRecoverable(e.start,"Argument name clash"),r[e.name]=!0),0!==t&&5!==t&&this.declareName(e.name,t,e.start);break;case"MemberExpression":t&&this.raiseRecoverable(e.start,"Binding member expression");break;case"ObjectPattern":for(var n=0,i=e.properties;n<i.length;n+=1){var a=i[n];this.checkLVal(a,t,r);}break;case"Property":this.checkLVal(e.value,t,r);break;case"ArrayPattern":for(var o=0,s=e.elements;o<s.length;o+=1){var u=s[o];u&&this.checkLVal(u,t,r);}break;case"AssignmentPattern":this.checkLVal(e.left,t,r);break;case"RestElement":this.checkLVal(e.argument,t,r);break;case"ParenthesizedExpression":this.checkLVal(e.expression,t,r);break;default:this.raise(e.start,(t?"Binding":"Assigning to")+" rvalue");}};var Nf=kf.prototype;Nf.checkPropClash=function(e,t,r){if(!(this.options.ecmaVersion>=9&&"SpreadElement"===e.type||this.options.ecmaVersion>=6&&(e.computed||e.method||e.shorthand))){var n,i=e.key;switch(i.type){case"Identifier":n=i.name;break;case"Literal":n=String(i.value);break;default:return}var a=e.kind;if(this.options.ecmaVersion>=6)"__proto__"===n&&"init"===a&&(t.proto&&(r&&r.doubleProto<0?r.doubleProto=i.start:this.raiseRecoverable(i.start,"Redefinition of __proto__ property")),t.proto=!0);else {var o=t[n="$"+n];if(o)("init"===a?this.strict&&o.init||o.get||o.set:o.init||o[a])&&this.raiseRecoverable(i.start,"Redefinition of property");else o=t[n]={init:!1,get:!1,set:!1};o[a]=!0;}}},Nf.parseExpression=function(e,t){var r=this.start,n=this.startLoc,i=this.parseMaybeAssign(e,t);if(this.type===tf.comma){var a=this.startNodeAt(r,n);for(a.expressions=[i];this.eat(tf.comma);)a.expressions.push(this.parseMaybeAssign(e,t));return this.finishNode(a,"SequenceExpression")}return i},Nf.parseMaybeAssign=function(e,t,r){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(e);this.exprAllowed=!1;}var n=!1,i=-1,a=-1,o=-1;t?(i=t.parenthesizedAssign,a=t.trailingComma,o=t.shorthandAssign,t.parenthesizedAssign=t.trailingComma=t.shorthandAssign=-1):(t=new wf,n=!0);var s=this.start,u=this.startLoc;this.type!==tf.parenL&&this.type!==tf.name||(this.potentialArrowAt=this.start);var c=this.parseMaybeConditional(e,t);if(r&&(c=r.call(this,c,s,u)),this.type.isAssign){var l=this.startNodeAt(s,u);return l.operator=this.value,l.left=this.type===tf.eq?this.toAssignable(c,!1,t):c,n||wf.call(t),t.shorthandAssign=-1,this.checkLVal(c),this.next(),l.right=this.parseMaybeAssign(e),this.finishNode(l,"AssignmentExpression")}return n&&this.checkExpressionErrors(t,!0),i>-1&&(t.parenthesizedAssign=i),a>-1&&(t.trailingComma=a),o>-1&&(t.shorthandAssign=o),c},Nf.parseMaybeConditional=function(e,t){var r=this.start,n=this.startLoc,i=this.parseExprOps(e,t);if(this.checkExpressionErrors(t))return i;if(this.eat(tf.question)){var a=this.startNodeAt(r,n);return a.test=i,a.consequent=this.parseMaybeAssign(),this.expect(tf.colon),a.alternate=this.parseMaybeAssign(e),this.finishNode(a,"ConditionalExpression")}return i},Nf.parseExprOps=function(e,t){var r=this.start,n=this.startLoc,i=this.parseMaybeUnary(t,!1);return this.checkExpressionErrors(t)?i:i.start===r&&"ArrowFunctionExpression"===i.type?i:this.parseExprOp(i,r,n,-1,e)},Nf.parseExprOp=function(e,t,r,n,i){var a=this.type.binop;if(null!=a&&(!i||this.type!==tf._in)&&a>n){var o=this.type===tf.logicalOR||this.type===tf.logicalAND,s=this.value;this.next();var u=this.start,c=this.startLoc,l=this.parseExprOp(this.parseMaybeUnary(null,!1),u,c,a,i),p=this.buildBinary(t,r,e,l,s,o);return this.parseExprOp(p,t,r,n,i)}return e},Nf.buildBinary=function(e,t,r,n,i,a){var o=this.startNodeAt(e,t);return o.left=r,o.operator=i,o.right=n,this.finishNode(o,a?"LogicalExpression":"BinaryExpression")},Nf.parseMaybeUnary=function(e,t){var r,n=this.start,i=this.startLoc;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction))r=this.parseAwait(),t=!0;else if(this.type.prefix){var a=this.startNode(),o=this.type===tf.incDec;a.operator=this.value,a.prefix=!0,this.next(),a.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(e,!0),o?this.checkLVal(a.argument):this.strict&&"delete"===a.operator&&"Identifier"===a.argument.type?this.raiseRecoverable(a.start,"Deleting local variable in strict mode"):t=!0,r=this.finishNode(a,o?"UpdateExpression":"UnaryExpression");}else {if(r=this.parseExprSubscripts(e),this.checkExpressionErrors(e))return r;for(;this.type.postfix&&!this.canInsertSemicolon();){var s=this.startNodeAt(n,i);s.operator=this.value,s.prefix=!1,s.argument=r,this.checkLVal(r),this.next(),r=this.finishNode(s,"UpdateExpression");}}return !t&&this.eat(tf.starstar)?this.buildBinary(n,i,r,this.parseMaybeUnary(null,!1),"**",!1):r},Nf.parseExprSubscripts=function(e){var t=this.start,r=this.startLoc,n=this.parseExprAtom(e),i="ArrowFunctionExpression"===n.type&&")"!==this.input.slice(this.lastTokStart,this.lastTokEnd);if(this.checkExpressionErrors(e)||i)return n;var a=this.parseSubscripts(n,t,r);return e&&"MemberExpression"===a.type&&(e.parenthesizedAssign>=a.start&&(e.parenthesizedAssign=-1),e.parenthesizedBind>=a.start&&(e.parenthesizedBind=-1)),a},Nf.parseSubscripts=function(e,t,r,n){for(var i=this.options.ecmaVersion>=8&&"Identifier"===e.type&&"async"===e.name&&this.lastTokEnd===e.end&&!this.canInsertSemicolon()&&"async"===this.input.slice(e.start,e.end);;){var a=this.parseSubscript(e,t,r,n,i);if(a===e||"ArrowFunctionExpression"===a.type)return a;e=a;}},Nf.parseSubscript=function(e,t,r,n,i){var a=this.eat(tf.bracketL);if(a||this.eat(tf.dot)){var o=this.startNodeAt(t,r);o.object=e,o.property=a?this.parseExpression():this.parseIdent("never"!==this.options.allowReserved),o.computed=!!a,a&&this.expect(tf.bracketR),e=this.finishNode(o,"MemberExpression");}else if(!n&&this.eat(tf.parenL)){var s=new wf,u=this.yieldPos,c=this.awaitPos,l=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var p=this.parseExprList(tf.parenR,this.options.ecmaVersion>=8,!1,s);if(i&&!this.canInsertSemicolon()&&this.eat(tf.arrow))return this.checkPatternErrors(s,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=u,this.awaitPos=c,this.awaitIdentPos=l,this.parseArrowExpression(this.startNodeAt(t,r),p,!0);this.checkExpressionErrors(s,!0),this.yieldPos=u||this.yieldPos,this.awaitPos=c||this.awaitPos,this.awaitIdentPos=l||this.awaitIdentPos;var f=this.startNodeAt(t,r);f.callee=e,f.arguments=p,e=this.finishNode(f,"CallExpression");}else if(this.type===tf.backQuote){var h=this.startNodeAt(t,r);h.tag=e,h.quasi=this.parseTemplate({isTagged:!0}),e=this.finishNode(h,"TaggedTemplateExpression");}return e},Nf.parseExprAtom=function(e){this.type===tf.slash&&this.readRegexp();var t,r=this.potentialArrowAt===this.start;switch(this.type){case tf._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),t=this.startNode(),this.next(),this.type!==tf.parenL||this.allowDirectSuper||this.raise(t.start,"super() call outside constructor of a subclass"),this.type!==tf.dot&&this.type!==tf.bracketL&&this.type!==tf.parenL&&this.unexpected(),this.finishNode(t,"Super");case tf._this:return t=this.startNode(),this.next(),this.finishNode(t,"ThisExpression");case tf.name:var n=this.start,i=this.startLoc,a=this.containsEsc,o=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!a&&"async"===o.name&&!this.canInsertSemicolon()&&this.eat(tf._function))return this.parseFunction(this.startNodeAt(n,i),0,!1,!0);if(r&&!this.canInsertSemicolon()){if(this.eat(tf.arrow))return this.parseArrowExpression(this.startNodeAt(n,i),[o],!1);if(this.options.ecmaVersion>=8&&"async"===o.name&&this.type===tf.name&&!a)return o=this.parseIdent(!1),!this.canInsertSemicolon()&&this.eat(tf.arrow)||this.unexpected(),this.parseArrowExpression(this.startNodeAt(n,i),[o],!0)}return o;case tf.regexp:var s=this.value;return (t=this.parseLiteral(s.value)).regex={pattern:s.pattern,flags:s.flags},t;case tf.num:case tf.string:return this.parseLiteral(this.value);case tf._null:case tf._true:case tf._false:return (t=this.startNode()).value=this.type===tf._null?null:this.type===tf._true,t.raw=this.type.keyword,this.next(),this.finishNode(t,"Literal");case tf.parenL:var u=this.start,c=this.parseParenAndDistinguishExpression(r);return e&&(e.parenthesizedAssign<0&&!this.isSimpleAssignTarget(c)&&(e.parenthesizedAssign=u),e.parenthesizedBind<0&&(e.parenthesizedBind=u)),c;case tf.bracketL:return t=this.startNode(),this.next(),t.elements=this.parseExprList(tf.bracketR,!0,!0,e),this.finishNode(t,"ArrayExpression");case tf.braceL:return this.parseObj(!1,e);case tf._function:return t=this.startNode(),this.next(),this.parseFunction(t,0);case tf._class:return this.parseClass(this.startNode(),!1);case tf._new:return this.parseNew();case tf.backQuote:return this.parseTemplate();case tf._import:return this.options.ecmaVersion>=11?this.parseExprImport():this.unexpected();default:this.unexpected();}},Nf.parseExprImport=function(){var e=this.startNode();switch(this.next(),this.type){case tf.parenL:return this.parseDynamicImport(e);default:this.unexpected();}},Nf.parseDynamicImport=function(e){if(this.next(),e.source=this.parseMaybeAssign(),!this.eat(tf.parenR)){var t=this.start;this.eat(tf.comma)&&this.eat(tf.parenR)?this.raiseRecoverable(t,"Trailing comma is not allowed in import()"):this.unexpected(t);}return this.finishNode(e,"ImportExpression")},Nf.parseLiteral=function(e){var t=this.startNode();return t.value=e,t.raw=this.input.slice(this.start,this.end),110===t.raw.charCodeAt(t.raw.length-1)&&(t.bigint=t.raw.slice(0,-1)),this.next(),this.finishNode(t,"Literal")},Nf.parseParenExpression=function(){this.expect(tf.parenL);var e=this.parseExpression();return this.expect(tf.parenR),e},Nf.parseParenAndDistinguishExpression=function(e){var t,r=this.start,n=this.startLoc,i=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var a,o=this.start,s=this.startLoc,u=[],c=!0,l=!1,p=new wf,f=this.yieldPos,h=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==tf.parenR;){if(c?c=!1:this.expect(tf.comma),i&&this.afterTrailingComma(tf.parenR,!0)){l=!0;break}if(this.type===tf.ellipsis){a=this.start,u.push(this.parseParenItem(this.parseRestBinding())),this.type===tf.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}u.push(this.parseMaybeAssign(!1,p,this.parseParenItem));}var d=this.start,m=this.startLoc;if(this.expect(tf.parenR),e&&!this.canInsertSemicolon()&&this.eat(tf.arrow))return this.checkPatternErrors(p,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=f,this.awaitPos=h,this.parseParenArrowList(r,n,u);u.length&&!l||this.unexpected(this.lastTokStart),a&&this.unexpected(a),this.checkExpressionErrors(p,!0),this.yieldPos=f||this.yieldPos,this.awaitPos=h||this.awaitPos,u.length>1?((t=this.startNodeAt(o,s)).expressions=u,this.finishNodeAt(t,"SequenceExpression",d,m)):t=u[0];}else t=this.parseParenExpression();if(this.options.preserveParens){var g=this.startNodeAt(r,n);return g.expression=t,this.finishNode(g,"ParenthesizedExpression")}return t},Nf.parseParenItem=function(e){return e},Nf.parseParenArrowList=function(e,t,r){return this.parseArrowExpression(this.startNodeAt(e,t),r)};var jf=[];Nf.parseNew=function(){var e=this.startNode(),t=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(tf.dot)){e.meta=t;var r=this.containsEsc;return e.property=this.parseIdent(!0),("target"!==e.property.name||r)&&this.raiseRecoverable(e.property.start,"The only valid meta property for new is new.target"),this.inNonArrowFunction()||this.raiseRecoverable(e.start,"new.target can only be used in functions"),this.finishNode(e,"MetaProperty")}var n=this.start,i=this.startLoc,a=this.type===tf._import;return e.callee=this.parseSubscripts(this.parseExprAtom(),n,i,!0),a&&"ImportExpression"===e.callee.type&&this.raise(n,"Cannot use new with import()"),this.eat(tf.parenL)?e.arguments=this.parseExprList(tf.parenR,this.options.ecmaVersion>=8,!1):e.arguments=jf,this.finishNode(e,"NewExpression")},Nf.parseTemplateElement=function(e){var t=e.isTagged,r=this.startNode();return this.type===tf.invalidTemplate?(t||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),r.value={raw:this.value,cooked:null}):r.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,"\n"),cooked:this.value},this.next(),r.tail=this.type===tf.backQuote,this.finishNode(r,"TemplateElement")},Nf.parseTemplate=function(e){void 0===e&&(e={});var t=e.isTagged;void 0===t&&(t=!1);var r=this.startNode();this.next(),r.expressions=[];var n=this.parseTemplateElement({isTagged:t});for(r.quasis=[n];!n.tail;)this.type===tf.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(tf.dollarBraceL),r.expressions.push(this.parseExpression()),this.expect(tf.braceR),r.quasis.push(n=this.parseTemplateElement({isTagged:t}));return this.next(),this.finishNode(r,"TemplateLiteral")},Nf.isAsyncProp=function(e){return !e.computed&&"Identifier"===e.key.type&&"async"===e.key.name&&(this.type===tf.name||this.type===tf.num||this.type===tf.string||this.type===tf.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===tf.star)&&!rf.test(this.input.slice(this.lastTokEnd,this.start))},Nf.parseObj=function(e,t){var r=this.startNode(),n=!0,i={};for(r.properties=[],this.next();!this.eat(tf.braceR);){if(n)n=!1;else if(this.expect(tf.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(tf.braceR))break;var a=this.parseProperty(e,t);e||this.checkPropClash(a,i,t),r.properties.push(a);}return this.finishNode(r,e?"ObjectPattern":"ObjectExpression")},Nf.parseProperty=function(e,t){var r,n,i,a,o=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(tf.ellipsis))return e?(o.argument=this.parseIdent(!1),this.type===tf.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(o,"RestElement")):(this.type===tf.parenL&&t&&(t.parenthesizedAssign<0&&(t.parenthesizedAssign=this.start),t.parenthesizedBind<0&&(t.parenthesizedBind=this.start)),o.argument=this.parseMaybeAssign(!1,t),this.type===tf.comma&&t&&t.trailingComma<0&&(t.trailingComma=this.start),this.finishNode(o,"SpreadElement"));this.options.ecmaVersion>=6&&(o.method=!1,o.shorthand=!1,(e||t)&&(i=this.start,a=this.startLoc),e||(r=this.eat(tf.star)));var s=this.containsEsc;return this.parsePropertyName(o),!e&&!s&&this.options.ecmaVersion>=8&&!r&&this.isAsyncProp(o)?(n=!0,r=this.options.ecmaVersion>=9&&this.eat(tf.star),this.parsePropertyName(o,t)):n=!1,this.parsePropertyValue(o,e,r,n,i,a,t,s),this.finishNode(o,"Property")},Nf.parsePropertyValue=function(e,t,r,n,i,a,o,s){if((r||n)&&this.type===tf.colon&&this.unexpected(),this.eat(tf.colon))e.value=t?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,o),e.kind="init";else if(this.options.ecmaVersion>=6&&this.type===tf.parenL)t&&this.unexpected(),e.kind="init",e.method=!0,e.value=this.parseMethod(r,n);else if(t||s||!(this.options.ecmaVersion>=5)||e.computed||"Identifier"!==e.key.type||"get"!==e.key.name&&"set"!==e.key.name||this.type===tf.comma||this.type===tf.braceR)this.options.ecmaVersion>=6&&!e.computed&&"Identifier"===e.key.type?((r||n)&&this.unexpected(),this.checkUnreserved(e.key),"await"!==e.key.name||this.awaitIdentPos||(this.awaitIdentPos=i),e.kind="init",t?e.value=this.parseMaybeDefault(i,a,e.key):this.type===tf.eq&&o?(o.shorthandAssign<0&&(o.shorthandAssign=this.start),e.value=this.parseMaybeDefault(i,a,e.key)):e.value=e.key,e.shorthand=!0):this.unexpected();else {(r||n)&&this.unexpected(),e.kind=e.key.name,this.parsePropertyName(e),e.value=this.parseMethod(!1);var u="get"===e.kind?0:1;if(e.value.params.length!==u){var c=e.value.start;"get"===e.kind?this.raiseRecoverable(c,"getter should have no params"):this.raiseRecoverable(c,"setter should have exactly one param");}else "set"===e.kind&&"RestElement"===e.value.params[0].type&&this.raiseRecoverable(e.value.params[0].start,"Setter cannot use rest params");}},Nf.parsePropertyName=function(e){if(this.options.ecmaVersion>=6){if(this.eat(tf.bracketL))return e.computed=!0,e.key=this.parseMaybeAssign(),this.expect(tf.bracketR),e.key;e.computed=!1;}return e.key=this.type===tf.num||this.type===tf.string?this.parseExprAtom():this.parseIdent("never"!==this.options.allowReserved)},Nf.initFunction=function(e){e.id=null,this.options.ecmaVersion>=6&&(e.generator=e.expression=!1),this.options.ecmaVersion>=8&&(e.async=!1);},Nf.parseMethod=function(e,t,r){var n=this.startNode(),i=this.yieldPos,a=this.awaitPos,o=this.awaitIdentPos;return this.initFunction(n),this.options.ecmaVersion>=6&&(n.generator=e),this.options.ecmaVersion>=8&&(n.async=!!t),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(64|Sf(t,n.generator)|(r?128:0)),this.expect(tf.parenL),n.params=this.parseBindingList(tf.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(n,!1,!0),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=o,this.finishNode(n,"FunctionExpression")},Nf.parseArrowExpression=function(e,t,r){var n=this.yieldPos,i=this.awaitPos,a=this.awaitIdentPos;return this.enterScope(16|Sf(r,!1)),this.initFunction(e),this.options.ecmaVersion>=8&&(e.async=!!r),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,e.params=this.toAssignableList(t,!0),this.parseFunctionBody(e,!0,!1),this.yieldPos=n,this.awaitPos=i,this.awaitIdentPos=a,this.finishNode(e,"ArrowFunctionExpression")},Nf.parseFunctionBody=function(e,t,r){var n=t&&this.type!==tf.braceL,i=this.strict,a=!1;if(n)e.body=this.parseMaybeAssign(),e.expression=!0,this.checkParams(e,!1);else {var o=this.options.ecmaVersion>=7&&!this.isSimpleParamList(e.params);i&&!o||(a=this.strictDirective(this.end))&&o&&this.raiseRecoverable(e.start,"Illegal 'use strict' directive in function with non-simple parameter list");var s=this.labels;this.labels=[],a&&(this.strict=!0),this.checkParams(e,!i&&!a&&!t&&!r&&this.isSimpleParamList(e.params)),e.body=this.parseBlock(!1),e.expression=!1,this.adaptDirectivePrologue(e.body.body),this.labels=s;}this.exitScope(),this.strict&&e.id&&this.checkLVal(e.id,5),this.strict=i;},Nf.isSimpleParamList=function(e){for(var t=0,r=e;t<r.length;t+=1){if("Identifier"!==r[t].type)return !1}return !0},Nf.checkParams=function(e,t){for(var r={},n=0,i=e.params;n<i.length;n+=1){var a=i[n];this.checkLVal(a,1,t?null:r);}},Nf.parseExprList=function(e,t,r,n){for(var i=[],a=!0;!this.eat(e);){if(a)a=!1;else if(this.expect(tf.comma),t&&this.afterTrailingComma(e))break;var o=void 0;r&&this.type===tf.comma?o=null:this.type===tf.ellipsis?(o=this.parseSpread(n),n&&this.type===tf.comma&&n.trailingComma<0&&(n.trailingComma=this.start)):o=this.parseMaybeAssign(!1,n),i.push(o);}return i},Nf.checkUnreserved=function(e){var t=e.start,r=e.end,n=e.name;(this.inGenerator&&"yield"===n&&this.raiseRecoverable(t,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&"await"===n&&this.raiseRecoverable(t,"Cannot use 'await' as identifier inside an async function"),this.keywords.test(n)&&this.raise(t,"Unexpected keyword '"+n+"'"),this.options.ecmaVersion<6&&-1!==this.input.slice(t,r).indexOf("\\"))||(this.strict?this.reservedWordsStrict:this.reservedWords).test(n)&&(this.inAsync||"await"!==n||this.raiseRecoverable(t,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(t,"The keyword '"+n+"' is reserved"));},Nf.parseIdent=function(e,t){var r=this.startNode();return this.type===tf.name?r.name=this.value:this.type.keyword?(r.name=this.type.keyword,"class"!==r.name&&"function"!==r.name||this.lastTokEnd===this.lastTokStart+1&&46===this.input.charCodeAt(this.lastTokStart)||this.context.pop()):this.unexpected(),this.next(),this.finishNode(r,"Identifier"),e||(this.checkUnreserved(r),"await"!==r.name||this.awaitIdentPos||(this.awaitIdentPos=r.start)),r},Nf.parseYield=function(e){this.yieldPos||(this.yieldPos=this.start);var t=this.startNode();return this.next(),this.type===tf.semi||this.canInsertSemicolon()||this.type!==tf.star&&!this.type.startsExpr?(t.delegate=!1,t.argument=null):(t.delegate=this.eat(tf.star),t.argument=this.parseMaybeAssign(e)),this.finishNode(t,"YieldExpression")},Nf.parseAwait=function(){this.awaitPos||(this.awaitPos=this.start);var e=this.startNode();return this.next(),e.argument=this.parseMaybeUnary(null,!0),this.finishNode(e,"AwaitExpression")};var Rf=kf.prototype;Rf.raise=function(e,t){var r=gf(this.input,e);t+=" ("+r.line+":"+r.column+")";var n=new SyntaxError(t);throw n.pos=e,n.loc=r,n.raisedAt=this.pos,n},Rf.raiseRecoverable=Rf.raise,Rf.curPosition=function(){if(this.options.locations)return new df(this.curLine,this.pos-this.lineStart)};var Mf=kf.prototype,Vf=function(e){this.flags=e,this.var=[],this.lexical=[],this.functions=[];};Mf.enterScope=function(e){this.scopeStack.push(new Vf(e));},Mf.exitScope=function(){this.scopeStack.pop();},Mf.treatFunctionsAsVarInScope=function(e){return e.flags&xf||!this.inModule&&1&e.flags},Mf.declareName=function(e,t,r){var n=!1;if(2===t){var i=this.currentScope();n=i.lexical.indexOf(e)>-1||i.functions.indexOf(e)>-1||i.var.indexOf(e)>-1,i.lexical.push(e),this.inModule&&1&i.flags&&delete this.undefinedExports[e];}else if(4===t){this.currentScope().lexical.push(e);}else if(3===t){var a=this.currentScope();n=this.treatFunctionsAsVar?a.lexical.indexOf(e)>-1:a.lexical.indexOf(e)>-1||a.var.indexOf(e)>-1,a.functions.push(e);}else for(var o=this.scopeStack.length-1;o>=0;--o){var s=this.scopeStack[o];if(s.lexical.indexOf(e)>-1&&!(32&s.flags&&s.lexical[0]===e)||!this.treatFunctionsAsVarInScope(s)&&s.functions.indexOf(e)>-1){n=!0;break}if(s.var.push(e),this.inModule&&1&s.flags&&delete this.undefinedExports[e],s.flags&bf)break}n&&this.raiseRecoverable(r,"Identifier '"+e+"' has already been declared");},Mf.checkLocalExport=function(e){-1===this.scopeStack[0].lexical.indexOf(e.name)&&-1===this.scopeStack[0].var.indexOf(e.name)&&(this.undefinedExports[e.name]=e);},Mf.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},Mf.currentVarScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(t.flags&bf)return t}},Mf.currentThisScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(t.flags&bf&&!(16&t.flags))return t}};var Uf=function(e,t,r){this.type="",this.start=t,this.end=0,e.options.locations&&(this.loc=new mf(e,r)),e.options.directSourceFile&&(this.sourceFile=e.options.directSourceFile),e.options.ranges&&(this.range=[t,0]);},qf=kf.prototype;function Wf(e,t,r,n){return e.type=t,e.end=r,this.options.locations&&(e.loc.end=n),this.options.ranges&&(e.range[1]=r),e}qf.startNode=function(){return new Uf(this,this.start,this.startLoc)},qf.startNodeAt=function(e,t){return new Uf(this,e,t)},qf.finishNode=function(e,t){return Wf.call(this,e,t,this.lastTokEnd,this.lastTokEndLoc)},qf.finishNodeAt=function(e,t,r,n){return Wf.call(this,e,t,r,n)};var $f=function(e,t,r,n,i){this.token=e,this.isExpr=!!t,this.preserveSpace=!!r,this.override=n,this.generator=!!i;},Gf={b_stat:new $f("{",!1),b_expr:new $f("{",!0),b_tmpl:new $f("${",!1),p_stat:new $f("(",!1),p_expr:new $f("(",!0),q_tmpl:new $f("`",!0,!0,(function(e){return e.tryReadTemplateToken()})),f_stat:new $f("function",!1),f_expr:new $f("function",!0),f_expr_gen:new $f("function",!0,!1,null,!0),f_gen:new $f("function",!1,!1,null,!0)},zf=kf.prototype;zf.initialContext=function(){return [Gf.b_stat]},zf.braceIsBlock=function(e){var t=this.curContext();return t===Gf.f_expr||t===Gf.f_stat||(e!==tf.colon||t!==Gf.b_stat&&t!==Gf.b_expr?e===tf._return||e===tf.name&&this.exprAllowed?rf.test(this.input.slice(this.lastTokEnd,this.start)):e===tf._else||e===tf.semi||e===tf.eof||e===tf.parenR||e===tf.arrow||(e===tf.braceL?t===Gf.b_stat:e!==tf._var&&e!==tf._const&&e!==tf.name&&!this.exprAllowed):!t.isExpr)},zf.inGeneratorContext=function(){for(var e=this.context.length-1;e>=1;e--){var t=this.context[e];if("function"===t.token)return t.generator}return !1},zf.updateContext=function(e){var t,r=this.type;r.keyword&&e===tf.dot?this.exprAllowed=!1:(t=r.updateContext)?t.call(this,e):this.exprAllowed=r.beforeExpr;},tf.parenR.updateContext=tf.braceR.updateContext=function(){if(1!==this.context.length){var e=this.context.pop();e===Gf.b_stat&&"function"===this.curContext().token&&(e=this.context.pop()),this.exprAllowed=!e.isExpr;}else this.exprAllowed=!0;},tf.braceL.updateContext=function(e){this.context.push(this.braceIsBlock(e)?Gf.b_stat:Gf.b_expr),this.exprAllowed=!0;},tf.dollarBraceL.updateContext=function(){this.context.push(Gf.b_tmpl),this.exprAllowed=!0;},tf.parenL.updateContext=function(e){var t=e===tf._if||e===tf._for||e===tf._with||e===tf._while;this.context.push(t?Gf.p_stat:Gf.p_expr),this.exprAllowed=!0;},tf.incDec.updateContext=function(){},tf._function.updateContext=tf._class.updateContext=function(e){!e.beforeExpr||e===tf.semi||e===tf._else||e===tf._return&&rf.test(this.input.slice(this.lastTokEnd,this.start))||(e===tf.colon||e===tf.braceL)&&this.curContext()===Gf.b_stat?this.context.push(Gf.f_stat):this.context.push(Gf.f_expr),this.exprAllowed=!1;},tf.backQuote.updateContext=function(){this.curContext()===Gf.q_tmpl?this.context.pop():this.context.push(Gf.q_tmpl),this.exprAllowed=!1;},tf.star.updateContext=function(e){if(e===tf._function){var t=this.context.length-1;this.context[t]===Gf.f_expr?this.context[t]=Gf.f_expr_gen:this.context[t]=Gf.f_gen;}this.exprAllowed=!0;},tf.name.updateContext=function(e){var t=!1;this.options.ecmaVersion>=6&&e!==tf.dot&&("of"===this.value&&!this.exprAllowed||"yield"===this.value&&this.inGeneratorContext())&&(t=!0),this.exprAllowed=t;};var Hf="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",Kf=Hf+" Extended_Pictographic",Jf={9:Hf,10:Kf,11:"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS Extended_Pictographic"},Qf="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",Xf="Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",Yf=Xf+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",Zf={9:Xf,10:Yf,11:"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho"},eh={};function th(e){var t=eh[e]={binary:hf(Jf[e]+" "+Qf),nonBinary:{General_Category:hf(Qf),Script:hf(Zf[e])}};t.nonBinary.Script_Extensions=t.nonBinary.Script,t.nonBinary.gc=t.nonBinary.General_Category,t.nonBinary.sc=t.nonBinary.Script,t.nonBinary.scx=t.nonBinary.Script_Extensions;}th(9),th(10),th(11);var rh=kf.prototype,nh=function(e){this.parser=e,this.validFlags="gim"+(e.options.ecmaVersion>=6?"uy":"")+(e.options.ecmaVersion>=9?"s":""),this.unicodeProperties=eh[e.options.ecmaVersion>=11?11:e.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[];};function ih(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}function ah(e){return 36===e||e>=40&&e<=43||46===e||63===e||e>=91&&e<=94||e>=123&&e<=125}function oh(e){return e>=65&&e<=90||e>=97&&e<=122}function sh(e){return oh(e)||95===e}function uh(e){return sh(e)||ch(e)}function ch(e){return e>=48&&e<=57}function lh(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function ph(e){return e>=65&&e<=70?e-65+10:e>=97&&e<=102?e-97+10:e-48}function fh(e){return e>=48&&e<=55}nh.prototype.reset=function(e,t,r){var n=-1!==r.indexOf("u");this.start=0|e,this.source=t+"",this.flags=r,this.switchU=n&&this.parser.options.ecmaVersion>=6,this.switchN=n&&this.parser.options.ecmaVersion>=9;},nh.prototype.raise=function(e){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+e);},nh.prototype.at=function(e){var t=this.source,r=t.length;if(e>=r)return -1;var n=t.charCodeAt(e);return !this.switchU||n<=55295||n>=57344||e+1>=r?n:(n<<10)+t.charCodeAt(e+1)-56613888},nh.prototype.nextIndex=function(e){var t=this.source,r=t.length;if(e>=r)return r;var n=t.charCodeAt(e);return !this.switchU||n<=55295||n>=57344||e+1>=r?e+1:e+2},nh.prototype.current=function(){return this.at(this.pos)},nh.prototype.lookahead=function(){return this.at(this.nextIndex(this.pos))},nh.prototype.advance=function(){this.pos=this.nextIndex(this.pos);},nh.prototype.eat=function(e){return this.current()===e&&(this.advance(),!0)},rh.validateRegExpFlags=function(e){for(var t=e.validFlags,r=e.flags,n=0;n<r.length;n++){var i=r.charAt(n);-1===t.indexOf(i)&&this.raise(e.start,"Invalid regular expression flag"),r.indexOf(i,n+1)>-1&&this.raise(e.start,"Duplicate regular expression flag");}},rh.validateRegExpPattern=function(e){this.regexp_pattern(e),!e.switchN&&this.options.ecmaVersion>=9&&e.groupNames.length>0&&(e.switchN=!0,this.regexp_pattern(e));},rh.regexp_pattern=function(e){e.pos=0,e.lastIntValue=0,e.lastStringValue="",e.lastAssertionIsQuantifiable=!1,e.numCapturingParens=0,e.maxBackReference=0,e.groupNames.length=0,e.backReferenceNames.length=0,this.regexp_disjunction(e),e.pos!==e.source.length&&(e.eat(41)&&e.raise("Unmatched ')'"),(e.eat(93)||e.eat(125))&&e.raise("Lone quantifier brackets")),e.maxBackReference>e.numCapturingParens&&e.raise("Invalid escape");for(var t=0,r=e.backReferenceNames;t<r.length;t+=1){var n=r[t];-1===e.groupNames.indexOf(n)&&e.raise("Invalid named capture referenced");}},rh.regexp_disjunction=function(e){for(this.regexp_alternative(e);e.eat(124);)this.regexp_alternative(e);this.regexp_eatQuantifier(e,!0)&&e.raise("Nothing to repeat"),e.eat(123)&&e.raise("Lone quantifier brackets");},rh.regexp_alternative=function(e){for(;e.pos<e.source.length&&this.regexp_eatTerm(e););},rh.regexp_eatTerm=function(e){return this.regexp_eatAssertion(e)?(e.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(e)&&e.switchU&&e.raise("Invalid quantifier"),!0):!(e.switchU?!this.regexp_eatAtom(e):!this.regexp_eatExtendedAtom(e))&&(this.regexp_eatQuantifier(e),!0)},rh.regexp_eatAssertion=function(e){var t=e.pos;if(e.lastAssertionIsQuantifiable=!1,e.eat(94)||e.eat(36))return !0;if(e.eat(92)){if(e.eat(66)||e.eat(98))return !0;e.pos=t;}if(e.eat(40)&&e.eat(63)){var r=!1;if(this.options.ecmaVersion>=9&&(r=e.eat(60)),e.eat(61)||e.eat(33))return this.regexp_disjunction(e),e.eat(41)||e.raise("Unterminated group"),e.lastAssertionIsQuantifiable=!r,!0}return e.pos=t,!1},rh.regexp_eatQuantifier=function(e,t){return void 0===t&&(t=!1),!!this.regexp_eatQuantifierPrefix(e,t)&&(e.eat(63),!0)},rh.regexp_eatQuantifierPrefix=function(e,t){return e.eat(42)||e.eat(43)||e.eat(63)||this.regexp_eatBracedQuantifier(e,t)},rh.regexp_eatBracedQuantifier=function(e,t){var r=e.pos;if(e.eat(123)){var n=0,i=-1;if(this.regexp_eatDecimalDigits(e)&&(n=e.lastIntValue,e.eat(44)&&this.regexp_eatDecimalDigits(e)&&(i=e.lastIntValue),e.eat(125)))return -1!==i&&i<n&&!t&&e.raise("numbers out of order in {} quantifier"),!0;e.switchU&&!t&&e.raise("Incomplete quantifier"),e.pos=r;}return !1},rh.regexp_eatAtom=function(e){return this.regexp_eatPatternCharacters(e)||e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)},rh.regexp_eatReverseSolidusAtomEscape=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatAtomEscape(e))return !0;e.pos=t;}return !1},rh.regexp_eatUncapturingGroup=function(e){var t=e.pos;if(e.eat(40)){if(e.eat(63)&&e.eat(58)){if(this.regexp_disjunction(e),e.eat(41))return !0;e.raise("Unterminated group");}e.pos=t;}return !1},rh.regexp_eatCapturingGroup=function(e){if(e.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(e):63===e.current()&&e.raise("Invalid group"),this.regexp_disjunction(e),e.eat(41))return e.numCapturingParens+=1,!0;e.raise("Unterminated group");}return !1},rh.regexp_eatExtendedAtom=function(e){return e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)||this.regexp_eatInvalidBracedQuantifier(e)||this.regexp_eatExtendedPatternCharacter(e)},rh.regexp_eatInvalidBracedQuantifier=function(e){return this.regexp_eatBracedQuantifier(e,!0)&&e.raise("Nothing to repeat"),!1},rh.regexp_eatSyntaxCharacter=function(e){var t=e.current();return !!ah(t)&&(e.lastIntValue=t,e.advance(),!0)},rh.regexp_eatPatternCharacters=function(e){for(var t=e.pos,r=0;-1!==(r=e.current())&&!ah(r);)e.advance();return e.pos!==t},rh.regexp_eatExtendedPatternCharacter=function(e){var t=e.current();return !(-1===t||36===t||t>=40&&t<=43||46===t||63===t||91===t||94===t||124===t)&&(e.advance(),!0)},rh.regexp_groupSpecifier=function(e){if(e.eat(63)){if(this.regexp_eatGroupName(e))return -1!==e.groupNames.indexOf(e.lastStringValue)&&e.raise("Duplicate capture group name"),void e.groupNames.push(e.lastStringValue);e.raise("Invalid group");}},rh.regexp_eatGroupName=function(e){if(e.lastStringValue="",e.eat(60)){if(this.regexp_eatRegExpIdentifierName(e)&&e.eat(62))return !0;e.raise("Invalid capture group name");}return !1},rh.regexp_eatRegExpIdentifierName=function(e){if(e.lastStringValue="",this.regexp_eatRegExpIdentifierStart(e)){for(e.lastStringValue+=ih(e.lastIntValue);this.regexp_eatRegExpIdentifierPart(e);)e.lastStringValue+=ih(e.lastIntValue);return !0}return !1},rh.regexp_eatRegExpIdentifierStart=function(e){var t=e.pos,r=e.current();return e.advance(),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e)&&(r=e.lastIntValue),function(e){return Hp(e,!0)||36===e||95===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},rh.regexp_eatRegExpIdentifierPart=function(e){var t=e.pos,r=e.current();return e.advance(),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e)&&(r=e.lastIntValue),function(e){return Kp(e,!0)||36===e||95===e||8204===e||8205===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},rh.regexp_eatAtomEscape=function(e){return !!(this.regexp_eatBackReference(e)||this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)||e.switchN&&this.regexp_eatKGroupName(e))||(e.switchU&&(99===e.current()&&e.raise("Invalid unicode escape"),e.raise("Invalid escape")),!1)},rh.regexp_eatBackReference=function(e){var t=e.pos;if(this.regexp_eatDecimalEscape(e)){var r=e.lastIntValue;if(e.switchU)return r>e.maxBackReference&&(e.maxBackReference=r),!0;if(r<=e.numCapturingParens)return !0;e.pos=t;}return !1},rh.regexp_eatKGroupName=function(e){if(e.eat(107)){if(this.regexp_eatGroupName(e))return e.backReferenceNames.push(e.lastStringValue),!0;e.raise("Invalid named reference");}return !1},rh.regexp_eatCharacterEscape=function(e){return this.regexp_eatControlEscape(e)||this.regexp_eatCControlLetter(e)||this.regexp_eatZero(e)||this.regexp_eatHexEscapeSequence(e)||this.regexp_eatRegExpUnicodeEscapeSequence(e)||!e.switchU&&this.regexp_eatLegacyOctalEscapeSequence(e)||this.regexp_eatIdentityEscape(e)},rh.regexp_eatCControlLetter=function(e){var t=e.pos;if(e.eat(99)){if(this.regexp_eatControlLetter(e))return !0;e.pos=t;}return !1},rh.regexp_eatZero=function(e){return 48===e.current()&&!ch(e.lookahead())&&(e.lastIntValue=0,e.advance(),!0)},rh.regexp_eatControlEscape=function(e){var t=e.current();return 116===t?(e.lastIntValue=9,e.advance(),!0):110===t?(e.lastIntValue=10,e.advance(),!0):118===t?(e.lastIntValue=11,e.advance(),!0):102===t?(e.lastIntValue=12,e.advance(),!0):114===t&&(e.lastIntValue=13,e.advance(),!0)},rh.regexp_eatControlLetter=function(e){var t=e.current();return !!oh(t)&&(e.lastIntValue=t%32,e.advance(),!0)},rh.regexp_eatRegExpUnicodeEscapeSequence=function(e){var t,r=e.pos;if(e.eat(117)){if(this.regexp_eatFixedHexDigits(e,4)){var n=e.lastIntValue;if(e.switchU&&n>=55296&&n<=56319){var i=e.pos;if(e.eat(92)&&e.eat(117)&&this.regexp_eatFixedHexDigits(e,4)){var a=e.lastIntValue;if(a>=56320&&a<=57343)return e.lastIntValue=1024*(n-55296)+(a-56320)+65536,!0}e.pos=i,e.lastIntValue=n;}return !0}if(e.switchU&&e.eat(123)&&this.regexp_eatHexDigits(e)&&e.eat(125)&&((t=e.lastIntValue)>=0&&t<=1114111))return !0;e.switchU&&e.raise("Invalid unicode escape"),e.pos=r;}return !1},rh.regexp_eatIdentityEscape=function(e){if(e.switchU)return !!this.regexp_eatSyntaxCharacter(e)||!!e.eat(47)&&(e.lastIntValue=47,!0);var t=e.current();return !(99===t||e.switchN&&107===t)&&(e.lastIntValue=t,e.advance(),!0)},rh.regexp_eatDecimalEscape=function(e){e.lastIntValue=0;var t=e.current();if(t>=49&&t<=57){do{e.lastIntValue=10*e.lastIntValue+(t-48),e.advance();}while((t=e.current())>=48&&t<=57);return !0}return !1},rh.regexp_eatCharacterClassEscape=function(e){var t=e.current();if(function(e){return 100===e||68===e||115===e||83===e||119===e||87===e}(t))return e.lastIntValue=-1,e.advance(),!0;if(e.switchU&&this.options.ecmaVersion>=9&&(80===t||112===t)){if(e.lastIntValue=-1,e.advance(),e.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(e)&&e.eat(125))return !0;e.raise("Invalid property name");}return !1},rh.regexp_eatUnicodePropertyValueExpression=function(e){var t=e.pos;if(this.regexp_eatUnicodePropertyName(e)&&e.eat(61)){var r=e.lastStringValue;if(this.regexp_eatUnicodePropertyValue(e)){var n=e.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(e,r,n),!0}}if(e.pos=t,this.regexp_eatLoneUnicodePropertyNameOrValue(e)){var i=e.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(e,i),!0}return !1},rh.regexp_validateUnicodePropertyNameAndValue=function(e,t,r){pf(e.unicodeProperties.nonBinary,t)||e.raise("Invalid property name"),e.unicodeProperties.nonBinary[t].test(r)||e.raise("Invalid property value");},rh.regexp_validateUnicodePropertyNameOrValue=function(e,t){e.unicodeProperties.binary.test(t)||e.raise("Invalid property name");},rh.regexp_eatUnicodePropertyName=function(e){var t=0;for(e.lastStringValue="";sh(t=e.current());)e.lastStringValue+=ih(t),e.advance();return ""!==e.lastStringValue},rh.regexp_eatUnicodePropertyValue=function(e){var t=0;for(e.lastStringValue="";uh(t=e.current());)e.lastStringValue+=ih(t),e.advance();return ""!==e.lastStringValue},rh.regexp_eatLoneUnicodePropertyNameOrValue=function(e){return this.regexp_eatUnicodePropertyValue(e)},rh.regexp_eatCharacterClass=function(e){if(e.eat(91)){if(e.eat(94),this.regexp_classRanges(e),e.eat(93))return !0;e.raise("Unterminated character class");}return !1},rh.regexp_classRanges=function(e){for(;this.regexp_eatClassAtom(e);){var t=e.lastIntValue;if(e.eat(45)&&this.regexp_eatClassAtom(e)){var r=e.lastIntValue;!e.switchU||-1!==t&&-1!==r||e.raise("Invalid character class"),-1!==t&&-1!==r&&t>r&&e.raise("Range out of order in character class");}}},rh.regexp_eatClassAtom=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatClassEscape(e))return !0;if(e.switchU){var r=e.current();(99===r||fh(r))&&e.raise("Invalid class escape"),e.raise("Invalid escape");}e.pos=t;}var n=e.current();return 93!==n&&(e.lastIntValue=n,e.advance(),!0)},rh.regexp_eatClassEscape=function(e){var t=e.pos;if(e.eat(98))return e.lastIntValue=8,!0;if(e.switchU&&e.eat(45))return e.lastIntValue=45,!0;if(!e.switchU&&e.eat(99)){if(this.regexp_eatClassControlLetter(e))return !0;e.pos=t;}return this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)},rh.regexp_eatClassControlLetter=function(e){var t=e.current();return !(!ch(t)&&95!==t)&&(e.lastIntValue=t%32,e.advance(),!0)},rh.regexp_eatHexEscapeSequence=function(e){var t=e.pos;if(e.eat(120)){if(this.regexp_eatFixedHexDigits(e,2))return !0;e.switchU&&e.raise("Invalid escape"),e.pos=t;}return !1},rh.regexp_eatDecimalDigits=function(e){var t=e.pos,r=0;for(e.lastIntValue=0;ch(r=e.current());)e.lastIntValue=10*e.lastIntValue+(r-48),e.advance();return e.pos!==t},rh.regexp_eatHexDigits=function(e){var t=e.pos,r=0;for(e.lastIntValue=0;lh(r=e.current());)e.lastIntValue=16*e.lastIntValue+ph(r),e.advance();return e.pos!==t},rh.regexp_eatLegacyOctalEscapeSequence=function(e){if(this.regexp_eatOctalDigit(e)){var t=e.lastIntValue;if(this.regexp_eatOctalDigit(e)){var r=e.lastIntValue;t<=3&&this.regexp_eatOctalDigit(e)?e.lastIntValue=64*t+8*r+e.lastIntValue:e.lastIntValue=8*t+r;}else e.lastIntValue=t;return !0}return !1},rh.regexp_eatOctalDigit=function(e){var t=e.current();return fh(t)?(e.lastIntValue=t-48,e.advance(),!0):(e.lastIntValue=0,!1)},rh.regexp_eatFixedHexDigits=function(e,t){var r=e.pos;e.lastIntValue=0;for(var n=0;n<t;++n){var i=e.current();if(!lh(i))return e.pos=r,!1;e.lastIntValue=16*e.lastIntValue+ph(i),e.advance();}return !0};var hh=function(e){this.type=e.type,this.value=e.value,this.start=e.start,this.end=e.end,e.options.locations&&(this.loc=new mf(e,e.startLoc,e.endLoc)),e.options.ranges&&(this.range=[e.start,e.end]);},dh=kf.prototype;function mh(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}dh.next=function(){this.options.onToken&&this.options.onToken(new hh(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken();},dh.getToken=function(){return this.next(),new hh(this)},"undefined"!=typeof Symbol&&(dh[Symbol.iterator]=function(){var e=this;return {next:function(){var t=e.getToken();return {done:t.type===tf.eof,value:t}}}}),dh.curContext=function(){return this.context[this.context.length-1]},dh.nextToken=function(){var e=this.curContext();return e&&e.preserveSpace||this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(tf.eof):e.override?e.override(this):void this.readToken(this.fullCharCodeAtPos())},dh.readToken=function(e){return Hp(e,this.options.ecmaVersion>=6)||92===e?this.readWord():this.getTokenFromCode(e)},dh.fullCharCodeAtPos=function(){var e=this.input.charCodeAt(this.pos);return e<=55295||e>=57344?e:(e<<10)+this.input.charCodeAt(this.pos+1)-56613888},dh.skipBlockComment=function(){var e,t=this.options.onComment&&this.curPosition(),r=this.pos,n=this.input.indexOf("*/",this.pos+=2);if(-1===n&&this.raise(this.pos-2,"Unterminated comment"),this.pos=n+2,this.options.locations)for(nf.lastIndex=r;(e=nf.exec(this.input))&&e.index<this.pos;)++this.curLine,this.lineStart=e.index+e[0].length;this.options.onComment&&this.options.onComment(!0,this.input.slice(r+2,n),r,this.pos,t,this.curPosition());},dh.skipLineComment=function(e){for(var t=this.pos,r=this.options.onComment&&this.curPosition(),n=this.input.charCodeAt(this.pos+=e);this.pos<this.input.length&&!af(n);)n=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(t+e,this.pos),t,this.pos,r,this.curPosition());},dh.skipSpace=function(){e:for(;this.pos<this.input.length;){var e=this.input.charCodeAt(this.pos);switch(e){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(!(e>8&&e<14||e>=5760&&of.test(String.fromCharCode(e))))break e;++this.pos;}}},dh.finishToken=function(e,t){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var r=this.type;this.type=e,this.value=t,this.updateContext(r);},dh.readToken_dot=function(){var e=this.input.charCodeAt(this.pos+1);if(e>=48&&e<=57)return this.readNumber(!0);var t=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===e&&46===t?(this.pos+=3,this.finishToken(tf.ellipsis)):(++this.pos,this.finishToken(tf.dot))},dh.readToken_slash=function(){var e=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===e?this.finishOp(tf.assign,2):this.finishOp(tf.slash,1)},dh.readToken_mult_modulo_exp=function(e){var t=this.input.charCodeAt(this.pos+1),r=1,n=42===e?tf.star:tf.modulo;return this.options.ecmaVersion>=7&&42===e&&42===t&&(++r,n=tf.starstar,t=this.input.charCodeAt(this.pos+2)),61===t?this.finishOp(tf.assign,r+1):this.finishOp(n,r)},dh.readToken_pipe_amp=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?this.finishOp(124===e?tf.logicalOR:tf.logicalAND,2):61===t?this.finishOp(tf.assign,2):this.finishOp(124===e?tf.bitwiseOR:tf.bitwiseAND,1)},dh.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(tf.assign,2):this.finishOp(tf.bitwiseXOR,1)},dh.readToken_plus_min=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?45!==t||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!rf.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(tf.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===t?this.finishOp(tf.assign,2):this.finishOp(tf.plusMin,1)},dh.readToken_lt_gt=function(e){var t=this.input.charCodeAt(this.pos+1),r=1;return t===e?(r=62===e&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+r)?this.finishOp(tf.assign,r+1):this.finishOp(tf.bitShift,r)):33!==t||60!==e||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===t&&(r=2),this.finishOp(tf.relational,r)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},dh.readToken_eq_excl=function(e){var t=this.input.charCodeAt(this.pos+1);return 61===t?this.finishOp(tf.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===e&&62===t&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(tf.arrow)):this.finishOp(61===e?tf.eq:tf.prefix,1)},dh.getTokenFromCode=function(e){switch(e){case 46:return this.readToken_dot();case 40:return ++this.pos,this.finishToken(tf.parenL);case 41:return ++this.pos,this.finishToken(tf.parenR);case 59:return ++this.pos,this.finishToken(tf.semi);case 44:return ++this.pos,this.finishToken(tf.comma);case 91:return ++this.pos,this.finishToken(tf.bracketL);case 93:return ++this.pos,this.finishToken(tf.bracketR);case 123:return ++this.pos,this.finishToken(tf.braceL);case 125:return ++this.pos,this.finishToken(tf.braceR);case 58:return ++this.pos,this.finishToken(tf.colon);case 63:return ++this.pos,this.finishToken(tf.question);case 96:if(this.options.ecmaVersion<6)break;return ++this.pos,this.finishToken(tf.backQuote);case 48:var t=this.input.charCodeAt(this.pos+1);if(120===t||88===t)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===t||79===t)return this.readRadixNumber(8);if(98===t||66===t)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(e);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(e);case 124:case 38:return this.readToken_pipe_amp(e);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(e);case 60:case 62:return this.readToken_lt_gt(e);case 61:case 33:return this.readToken_eq_excl(e);case 126:return this.finishOp(tf.prefix,1)}this.raise(this.pos,"Unexpected character '"+mh(e)+"'");},dh.finishOp=function(e,t){var r=this.input.slice(this.pos,this.pos+t);return this.pos+=t,this.finishToken(e,r)},dh.readRegexp=function(){for(var e,t,r=this.pos;;){this.pos>=this.input.length&&this.raise(r,"Unterminated regular expression");var n=this.input.charAt(this.pos);if(rf.test(n)&&this.raise(r,"Unterminated regular expression"),e)e=!1;else {if("["===n)t=!0;else if("]"===n&&t)t=!1;else if("/"===n&&!t)break;e="\\"===n;}++this.pos;}var i=this.input.slice(r,this.pos);++this.pos;var a=this.pos,o=this.readWord1();this.containsEsc&&this.unexpected(a);var s=this.regexpState||(this.regexpState=new nh(this));s.reset(r,i,o),this.validateRegExpFlags(s),this.validateRegExpPattern(s);var u=null;try{u=new RegExp(i,o);}catch(e){}return this.finishToken(tf.regexp,{pattern:i,flags:o,value:u})},dh.readInt=function(e,t){for(var r=this.pos,n=0,i=0,a=null==t?1/0:t;i<a;++i){var o=this.input.charCodeAt(this.pos),s=void 0;if((s=o>=97?o-97+10:o>=65?o-65+10:o>=48&&o<=57?o-48:1/0)>=e)break;++this.pos,n=n*e+s;}return this.pos===r||null!=t&&this.pos-r!==t?null:n},dh.readRadixNumber=function(e){var t=this.pos;this.pos+=2;var r=this.readInt(e);return null==r&&this.raise(this.start+2,"Expected number in radix "+e),this.options.ecmaVersion>=11&&110===this.input.charCodeAt(this.pos)?(r="undefined"!=typeof BigInt?BigInt(this.input.slice(t,this.pos)):null,++this.pos):Hp(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(tf.num,r)},dh.readNumber=function(e){var t=this.pos;e||null!==this.readInt(10)||this.raise(t,"Invalid number");var r=this.pos-t>=2&&48===this.input.charCodeAt(t);r&&this.strict&&this.raise(t,"Invalid number"),r&&/[89]/.test(this.input.slice(t,this.pos))&&(r=!1);var n=this.input.charCodeAt(this.pos);if(!r&&!e&&this.options.ecmaVersion>=11&&110===n){var i=this.input.slice(t,this.pos),a="undefined"!=typeof BigInt?BigInt(i):null;return ++this.pos,Hp(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(tf.num,a)}46!==n||r||(++this.pos,this.readInt(10),n=this.input.charCodeAt(this.pos)),69!==n&&101!==n||r||(43!==(n=this.input.charCodeAt(++this.pos))&&45!==n||++this.pos,null===this.readInt(10)&&this.raise(t,"Invalid number")),Hp(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var o=this.input.slice(t,this.pos),s=r?parseInt(o,8):parseFloat(o);return this.finishToken(tf.num,s)},dh.readCodePoint=function(){var e;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var t=++this.pos;e=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,e>1114111&&this.invalidStringToken(t,"Code point out of bounds");}else e=this.readHexChar(4);return e},dh.readString=function(e){for(var t="",r=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var n=this.input.charCodeAt(this.pos);if(n===e)break;92===n?(t+=this.input.slice(r,this.pos),t+=this.readEscapedChar(!1),r=this.pos):(af(n,this.options.ecmaVersion>=10)&&this.raise(this.start,"Unterminated string constant"),++this.pos);}return t+=this.input.slice(r,this.pos++),this.finishToken(tf.string,t)};var gh={};dh.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken();}catch(e){if(e!==gh)throw e;this.readInvalidTemplateToken();}this.inTemplateElement=!1;},dh.invalidStringToken=function(e,t){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw gh;this.raise(e,t);},dh.readTmplToken=function(){for(var e="",t=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var r=this.input.charCodeAt(this.pos);if(96===r||36===r&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==tf.template&&this.type!==tf.invalidTemplate?(e+=this.input.slice(t,this.pos),this.finishToken(tf.template,e)):36===r?(this.pos+=2,this.finishToken(tf.dollarBraceL)):(++this.pos,this.finishToken(tf.backQuote));if(92===r)e+=this.input.slice(t,this.pos),e+=this.readEscapedChar(!0),t=this.pos;else if(af(r)){switch(e+=this.input.slice(t,this.pos),++this.pos,r){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:e+="\n";break;default:e+=String.fromCharCode(r);}this.options.locations&&(++this.curLine,this.lineStart=this.pos),t=this.pos;}else ++this.pos;}},dh.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\":++this.pos;break;case"$":if("{"!==this.input[this.pos+1])break;case"`":return this.finishToken(tf.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template");},dh.readEscapedChar=function(e){var t=this.input.charCodeAt(++this.pos);switch(++this.pos,t){case 110:return "\n";case 114:return "\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return mh(this.readCodePoint());case 116:return "\t";case 98:return "\b";case 118:return "\v";case 102:return "\f";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";default:if(t>=48&&t<=55){var r=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],n=parseInt(r,8);return n>255&&(r=r.slice(0,-1),n=parseInt(r,8)),this.pos+=r.length-1,t=this.input.charCodeAt(this.pos),"0"===r&&56!==t&&57!==t||!this.strict&&!e||this.invalidStringToken(this.pos-1-r.length,e?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(n)}return af(t)?"":String.fromCharCode(t)}},dh.readHexChar=function(e){var t=this.pos,r=this.readInt(16,e);return null===r&&this.invalidStringToken(t,"Bad character escape sequence"),r},dh.readWord1=function(){this.containsEsc=!1;for(var e="",t=!0,r=this.pos,n=this.options.ecmaVersion>=6;this.pos<this.input.length;){var i=this.fullCharCodeAtPos();if(Kp(i,n))this.pos+=i<=65535?1:2;else {if(92!==i)break;this.containsEsc=!0,e+=this.input.slice(r,this.pos);var a=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var o=this.readCodePoint();(t?Hp:Kp)(o,n)||this.invalidStringToken(a,"Invalid Unicode escape"),e+=mh(o),r=this.pos;}t=!1;}return e+this.input.slice(r,this.pos)},dh.readWord=function(){var e=this.readWord1(),t=tf.name;return this.keywords.test(e)&&(this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+e),t=Zp[e]),this.finishToken(t,e)};kf.acorn={Parser:kf,version:"7.1.0",defaultOptions:yf,Position:df,SourceLocation:mf,getLineInfo:gf,Node:Uf,TokenType:Jp,tokTypes:tf,keywordTypes:Zp,TokContext:$f,tokContexts:Gf,isIdentifierChar:Kp,isIdentifierStart:Hp,Token:hh,isNewLine:af,lineBreak:rf,lineBreakG:nf,nonASCIIwhitespace:of};var yh=Object.freeze({__proto__:null,Node:Uf,Parser:kf,Position:df,SourceLocation:mf,TokContext:$f,Token:hh,TokenType:Jp,defaultOptions:yf,getLineInfo:gf,isIdentifierChar:Kp,isIdentifierStart:Hp,isNewLine:af,keywordTypes:Zp,lineBreak:rf,lineBreakG:nf,nonASCIIwhitespace:of,parse:function(e,t){return kf.parse(e,t)},parseExpressionAt:function(e,t,r){return kf.parseExpressionAt(e,t,r)},tokContexts:Gf,tokTypes:tf,tokenizer:function(e,t){return kf.tokenizer(e,t)},version:"7.1.0"}),vh={quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"},xh={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},bh="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",Eh={5:bh,"5module":bh+" export import",6:bh+" const class extends export import super"},Ch=/^in(stanceof)?$/,Sh="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-Ᶎꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭧꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",kh="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",Dh=new RegExp("["+Sh+"]"),Fh=new RegExp("["+Sh+kh+"]");Sh=kh=null;var Ah=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541],wh=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];function _h(e,t){for(var r=65536,n=0;n<t.length;n+=2){if((r+=t[n])>e)return !1;if((r+=t[n+1])>=e)return !0}}function Th(e,t){return e<65?36===e:e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&Dh.test(String.fromCharCode(e)):!1!==t&&_h(e,Ah)))}function Ph(e,t){return e<48?36===e:e<58||!(e<65)&&(e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&Fh.test(String.fromCharCode(e)):!1!==t&&(_h(e,Ah)||_h(e,wh)))))}var Ih=function(e,t){void 0===t&&(t={}),this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=t.binop||null,this.updateContext=null;};function Bh(e,t){return new Ih(e,{beforeExpr:!0,binop:t})}var Oh={beforeExpr:!0},Lh={startsExpr:!0},Nh={};function jh(e,t){return void 0===t&&(t={}),t.keyword=e,Nh[e]=new Ih(e,t)}var Rh={num:new Ih("num",Lh),regexp:new Ih("regexp",Lh),string:new Ih("string",Lh),name:new Ih("name",Lh),eof:new Ih("eof"),bracketL:new Ih("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new Ih("]"),braceL:new Ih("{",{beforeExpr:!0,startsExpr:!0}),braceR:new Ih("}"),parenL:new Ih("(",{beforeExpr:!0,startsExpr:!0}),parenR:new Ih(")"),comma:new Ih(",",Oh),semi:new Ih(";",Oh),colon:new Ih(":",Oh),dot:new Ih("."),question:new Ih("?",Oh),arrow:new Ih("=>",Oh),template:new Ih("template"),invalidTemplate:new Ih("invalidTemplate"),ellipsis:new Ih("...",Oh),backQuote:new Ih("`",Lh),dollarBraceL:new Ih("${",{beforeExpr:!0,startsExpr:!0}),eq:new Ih("=",{beforeExpr:!0,isAssign:!0}),assign:new Ih("_=",{beforeExpr:!0,isAssign:!0}),incDec:new Ih("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new Ih("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:Bh("||",1),logicalAND:Bh("&&",2),bitwiseOR:Bh("|",3),bitwiseXOR:Bh("^",4),bitwiseAND:Bh("&",5),equality:Bh("==/!=/===/!==",6),relational:Bh("</>/<=/>=",7),bitShift:Bh("<</>>/>>>",8),plusMin:new Ih("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:Bh("%",10),star:Bh("*",10),slash:Bh("/",10),starstar:new Ih("**",{beforeExpr:!0}),_break:jh("break"),_case:jh("case",Oh),_catch:jh("catch"),_continue:jh("continue"),_debugger:jh("debugger"),_default:jh("default",Oh),_do:jh("do",{isLoop:!0,beforeExpr:!0}),_else:jh("else",Oh),_finally:jh("finally"),_for:jh("for",{isLoop:!0}),_function:jh("function",Lh),_if:jh("if"),_return:jh("return",Oh),_switch:jh("switch"),_throw:jh("throw",Oh),_try:jh("try"),_var:jh("var"),_const:jh("const"),_while:jh("while",{isLoop:!0}),_with:jh("with"),_new:jh("new",{beforeExpr:!0,startsExpr:!0}),_this:jh("this",Lh),_super:jh("super",Lh),_class:jh("class",Lh),_extends:jh("extends",Oh),_export:jh("export"),_import:jh("import",Lh),_null:jh("null",Lh),_true:jh("true",Lh),_false:jh("false",Lh),_in:jh("in",{beforeExpr:!0,binop:7}),_instanceof:jh("instanceof",{beforeExpr:!0,binop:7}),_typeof:jh("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:jh("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:jh("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},Mh=/\r\n?|\n|\u2028|\u2029/,Vh=new RegExp(Mh.source,"g");function Uh(e,t){return 10===e||13===e||!t&&(8232===e||8233===e)}var qh=/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,Wh=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,$h=Object.prototype,Gh=$h.hasOwnProperty,zh=$h.toString;function Hh(e,t){return Gh.call(e,t)}var Kh=Array.isArray||function(e){return "[object Array]"===zh.call(e)};function Jh(e){return new RegExp("^(?:"+e.replace(/ /g,"|")+")$")}var Qh=function(e,t){this.line=e,this.column=t;};Qh.prototype.offset=function(e){return new Qh(this.line,this.column+e)};var Xh=function(e,t,r){this.start=t,this.end=r,null!==e.sourceFile&&(this.source=e.sourceFile);};function Yh(e,t){for(var r=1,n=0;;){Vh.lastIndex=n;var i=Vh.exec(e);if(!(i&&i.index<t))return new Qh(r,t-n);++r,n=i.index+i[0].length;}}var Zh={ecmaVersion:9,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1};function ed(e){var t={};for(var r in Zh)t[r]=e&&Hh(e,r)?e[r]:Zh[r];if(t.ecmaVersion>=2015&&(t.ecmaVersion-=2009),null==t.allowReserved&&(t.allowReserved=t.ecmaVersion<5),Kh(t.onToken)){var n=t.onToken;t.onToken=function(e){return n.push(e)};}return Kh(t.onComment)&&(t.onComment=function(e,t){return function(r,n,i,a,o,s){var u={type:r?"Block":"Line",value:n,start:i,end:a};e.locations&&(u.loc=new Xh(this,o,s)),e.ranges&&(u.range=[i,a]),t.push(u);}}(t,t.onComment)),t}var td=2,rd=1|td,nd=4,id=8;function ad(e,t){return td|(e?nd:0)|(t?id:0)}var od=function(e,t,r){this.options=e=ed(e),this.sourceFile=e.sourceFile,this.keywords=Jh(Eh[e.ecmaVersion>=6?6:"module"===e.sourceType?"5module":5]);var n="";if(!0!==e.allowReserved){for(var i=e.ecmaVersion;!(n=xh[i]);i--);"module"===e.sourceType&&(n+=" await");}this.reservedWords=Jh(n);var a=(n?n+" ":"")+xh.strict;this.reservedWordsStrict=Jh(a),this.reservedWordsStrictBind=Jh(a+" "+xh.strictBind),this.input=String(t),this.containsEsc=!1,r?(this.pos=r,this.lineStart=this.input.lastIndexOf("\n",r-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(Mh).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=Rh.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule="module"===e.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports={},0===this.pos&&e.allowHashBang&&"#!"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(1),this.regexpState=null;},sd={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0}};od.prototype.parse=function(){var e=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(e)},sd.inFunction.get=function(){return (this.currentVarScope().flags&td)>0},sd.inGenerator.get=function(){return (this.currentVarScope().flags&id)>0},sd.inAsync.get=function(){return (this.currentVarScope().flags&nd)>0},sd.allowSuper.get=function(){return (64&this.currentThisScope().flags)>0},sd.allowDirectSuper.get=function(){return (128&this.currentThisScope().flags)>0},sd.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())},od.prototype.inNonArrowFunction=function(){return (this.currentThisScope().flags&td)>0},od.extend=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var r=this,n=0;n<e.length;n++)r=e[n](r);return r},od.parse=function(e,t){return new this(t,e).parse()},od.parseExpressionAt=function(e,t,r){var n=new this(r,e,t);return n.nextToken(),n.parseExpression()},od.tokenizer=function(e,t){return new this(t,e)},Object.defineProperties(od.prototype,sd);var ud=od.prototype,cd=/^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)")/;function ld(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1;}ud.strictDirective=function(e){for(;;){Wh.lastIndex=e,e+=Wh.exec(this.input)[0].length;var t=cd.exec(this.input.slice(e));if(!t)return !1;if("use strict"===(t[1]||t[2]))return !0;e+=t[0].length,Wh.lastIndex=e,e+=Wh.exec(this.input)[0].length,";"===this.input[e]&&e++;}},ud.eat=function(e){return this.type===e&&(this.next(),!0)},ud.isContextual=function(e){return this.type===Rh.name&&this.value===e&&!this.containsEsc},ud.eatContextual=function(e){return !!this.isContextual(e)&&(this.next(),!0)},ud.expectContextual=function(e){this.eatContextual(e)||this.unexpected();},ud.canInsertSemicolon=function(){return this.type===Rh.eof||this.type===Rh.braceR||Mh.test(this.input.slice(this.lastTokEnd,this.start))},ud.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},ud.semicolon=function(){this.eat(Rh.semi)||this.insertSemicolon()||this.unexpected();},ud.afterTrailingComma=function(e,t){if(this.type===e)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),t||this.next(),!0},ud.expect=function(e){this.eat(e)||this.unexpected();},ud.unexpected=function(e){this.raise(null!=e?e:this.start,"Unexpected token");},ud.checkPatternErrors=function(e,t){if(e){e.trailingComma>-1&&this.raiseRecoverable(e.trailingComma,"Comma is not permitted after the rest element");var r=t?e.parenthesizedAssign:e.parenthesizedBind;r>-1&&this.raiseRecoverable(r,"Parenthesized pattern");}},ud.checkExpressionErrors=function(e,t){if(!e)return !1;var r=e.shorthandAssign,n=e.doubleProto;if(!t)return r>=0||n>=0;r>=0&&this.raise(r,"Shorthand property assignments are valid only in destructuring patterns"),n>=0&&this.raiseRecoverable(n,"Redefinition of __proto__ property");},ud.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value");},ud.isSimpleAssignTarget=function(e){return "ParenthesizedExpression"===e.type?this.isSimpleAssignTarget(e.expression):"Identifier"===e.type||"MemberExpression"===e.type};var pd=od.prototype;pd.parseTopLevel=function(e){var t={};for(e.body||(e.body=[]);this.type!==Rh.eof;){var r=this.parseStatement(null,!0,t);e.body.push(r);}if(this.inModule)for(var n=0,i=Object.keys(this.undefinedExports);n<i.length;n+=1){var a=i[n];this.raiseRecoverable(this.undefinedExports[a].start,"Export '"+a+"' is not defined");}return this.adaptDirectivePrologue(e.body),this.next(),e.sourceType=this.options.sourceType,this.finishNode(e,"Program")};var fd={kind:"loop"},hd={kind:"switch"};pd.isLet=function(e){if(this.options.ecmaVersion<6||!this.isContextual("let"))return !1;Wh.lastIndex=this.pos;var t=Wh.exec(this.input),r=this.pos+t[0].length,n=this.input.charCodeAt(r);if(91===n)return !0;if(e)return !1;if(123===n)return !0;if(Th(n,!0)){for(var i=r+1;Ph(this.input.charCodeAt(i),!0);)++i;var a=this.input.slice(r,i);if(!Ch.test(a))return !0}return !1},pd.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return !1;Wh.lastIndex=this.pos;var e=Wh.exec(this.input),t=this.pos+e[0].length;return !(Mh.test(this.input.slice(this.pos,t))||"function"!==this.input.slice(t,t+8)||t+8!==this.input.length&&Ph(this.input.charAt(t+8)))},pd.parseStatement=function(e,t,r){var n,i=this.type,a=this.startNode();switch(this.isLet(e)&&(i=Rh._var,n="let"),i){case Rh._break:case Rh._continue:return this.parseBreakContinueStatement(a,i.keyword);case Rh._debugger:return this.parseDebuggerStatement(a);case Rh._do:return this.parseDoStatement(a);case Rh._for:return this.parseForStatement(a);case Rh._function:return e&&(this.strict||"if"!==e&&"label"!==e)&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(a,!1,!e);case Rh._class:return e&&this.unexpected(),this.parseClass(a,!0);case Rh._if:return this.parseIfStatement(a);case Rh._return:return this.parseReturnStatement(a);case Rh._switch:return this.parseSwitchStatement(a);case Rh._throw:return this.parseThrowStatement(a);case Rh._try:return this.parseTryStatement(a);case Rh._const:case Rh._var:return n=n||this.value,e&&"var"!==n&&this.unexpected(),this.parseVarStatement(a,n);case Rh._while:return this.parseWhileStatement(a);case Rh._with:return this.parseWithStatement(a);case Rh.braceL:return this.parseBlock(!0,a);case Rh.semi:return this.parseEmptyStatement(a);case Rh._export:case Rh._import:if(this.options.ecmaVersion>10&&i===Rh._import){Wh.lastIndex=this.pos;var o=Wh.exec(this.input),s=this.pos+o[0].length;if(40===this.input.charCodeAt(s))return this.parseExpressionStatement(a,this.parseExpression())}return this.options.allowImportExportEverywhere||(t||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),i===Rh._import?this.parseImport(a):this.parseExport(a,r);default:if(this.isAsyncFunction())return e&&this.unexpected(),this.next(),this.parseFunctionStatement(a,!0,!e);var u=this.value,c=this.parseExpression();return i===Rh.name&&"Identifier"===c.type&&this.eat(Rh.colon)?this.parseLabeledStatement(a,u,c,e):this.parseExpressionStatement(a,c)}},pd.parseBreakContinueStatement=function(e,t){var r="break"===t;this.next(),this.eat(Rh.semi)||this.insertSemicolon()?e.label=null:this.type!==Rh.name?this.unexpected():(e.label=this.parseIdent(),this.semicolon());for(var n=0;n<this.labels.length;++n){var i=this.labels[n];if(null==e.label||i.name===e.label.name){if(null!=i.kind&&(r||"loop"===i.kind))break;if(e.label&&r)break}}return n===this.labels.length&&this.raise(e.start,"Unsyntactic "+t),this.finishNode(e,r?"BreakStatement":"ContinueStatement")},pd.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,"DebuggerStatement")},pd.parseDoStatement=function(e){return this.next(),this.labels.push(fd),e.body=this.parseStatement("do"),this.labels.pop(),this.expect(Rh._while),e.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(Rh.semi):this.semicolon(),this.finishNode(e,"DoWhileStatement")},pd.parseForStatement=function(e){this.next();var t=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(fd),this.enterScope(0),this.expect(Rh.parenL),this.type===Rh.semi)return t>-1&&this.unexpected(t),this.parseFor(e,null);var r=this.isLet();if(this.type===Rh._var||this.type===Rh._const||r){var n=this.startNode(),i=r?"let":this.value;return this.next(),this.parseVar(n,!0,i),this.finishNode(n,"VariableDeclaration"),(this.type===Rh._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&1===n.declarations.length?(this.options.ecmaVersion>=9&&(this.type===Rh._in?t>-1&&this.unexpected(t):e.await=t>-1),this.parseForIn(e,n)):(t>-1&&this.unexpected(t),this.parseFor(e,n))}var a=new ld,o=this.parseExpression(!0,a);return this.type===Rh._in||this.options.ecmaVersion>=6&&this.isContextual("of")?(this.options.ecmaVersion>=9&&(this.type===Rh._in?t>-1&&this.unexpected(t):e.await=t>-1),this.toAssignable(o,!1,a),this.checkLVal(o),this.parseForIn(e,o)):(this.checkExpressionErrors(a,!0),t>-1&&this.unexpected(t),this.parseFor(e,o))},pd.parseFunctionStatement=function(e,t,r){return this.next(),this.parseFunction(e,md|(r?0:gd),!1,t)},pd.parseIfStatement=function(e){return this.next(),e.test=this.parseParenExpression(),e.consequent=this.parseStatement("if"),e.alternate=this.eat(Rh._else)?this.parseStatement("if"):null,this.finishNode(e,"IfStatement")},pd.parseReturnStatement=function(e){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,"'return' outside of function"),this.next(),this.eat(Rh.semi)||this.insertSemicolon()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,"ReturnStatement")},pd.parseSwitchStatement=function(e){var t;this.next(),e.discriminant=this.parseParenExpression(),e.cases=[],this.expect(Rh.braceL),this.labels.push(hd),this.enterScope(0);for(var r=!1;this.type!==Rh.braceR;)if(this.type===Rh._case||this.type===Rh._default){var n=this.type===Rh._case;t&&this.finishNode(t,"SwitchCase"),e.cases.push(t=this.startNode()),t.consequent=[],this.next(),n?t.test=this.parseExpression():(r&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),r=!0,t.test=null),this.expect(Rh.colon);}else t||this.unexpected(),t.consequent.push(this.parseStatement(null));return this.exitScope(),t&&this.finishNode(t,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(e,"SwitchStatement")},pd.parseThrowStatement=function(e){return this.next(),Mh.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,"ThrowStatement")};var dd=[];pd.parseTryStatement=function(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.type===Rh._catch){var t=this.startNode();if(this.next(),this.eat(Rh.parenL)){t.param=this.parseBindingAtom();var r="Identifier"===t.param.type;this.enterScope(r?32:0),this.checkLVal(t.param,r?4:2),this.expect(Rh.parenR);}else this.options.ecmaVersion<10&&this.unexpected(),t.param=null,this.enterScope(0);t.body=this.parseBlock(!1),this.exitScope(),e.handler=this.finishNode(t,"CatchClause");}return e.finalizer=this.eat(Rh._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,"Missing catch or finally clause"),this.finishNode(e,"TryStatement")},pd.parseVarStatement=function(e,t){return this.next(),this.parseVar(e,!1,t),this.semicolon(),this.finishNode(e,"VariableDeclaration")},pd.parseWhileStatement=function(e){return this.next(),e.test=this.parseParenExpression(),this.labels.push(fd),e.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(e,"WhileStatement")},pd.parseWithStatement=function(e){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),e.object=this.parseParenExpression(),e.body=this.parseStatement("with"),this.finishNode(e,"WithStatement")},pd.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,"EmptyStatement")},pd.parseLabeledStatement=function(e,t,r,n){for(var i=0,a=this.labels;i<a.length;i+=1){a[i].name===t&&this.raise(r.start,"Label '"+t+"' is already declared");}for(var o=this.type.isLoop?"loop":this.type===Rh._switch?"switch":null,s=this.labels.length-1;s>=0;s--){var u=this.labels[s];if(u.statementStart!==e.start)break;u.statementStart=this.start,u.kind=o;}return this.labels.push({name:t,kind:o,statementStart:this.start}),e.body=this.parseStatement(n?-1===n.indexOf("label")?n+"label":n:"label"),this.labels.pop(),e.label=r,this.finishNode(e,"LabeledStatement")},pd.parseExpressionStatement=function(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,"ExpressionStatement")},pd.parseBlock=function(e,t){for(void 0===e&&(e=!0),void 0===t&&(t=this.startNode()),t.body=[],this.expect(Rh.braceL),e&&this.enterScope(0);!this.eat(Rh.braceR);){var r=this.parseStatement(null);t.body.push(r);}return e&&this.exitScope(),this.finishNode(t,"BlockStatement")},pd.parseFor=function(e,t){return e.init=t,this.expect(Rh.semi),e.test=this.type===Rh.semi?null:this.parseExpression(),this.expect(Rh.semi),e.update=this.type===Rh.parenR?null:this.parseExpression(),this.expect(Rh.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,"ForStatement")},pd.parseForIn=function(e,t){var r=this.type===Rh._in;return this.next(),"VariableDeclaration"===t.type&&null!=t.declarations[0].init&&(!r||this.options.ecmaVersion<8||this.strict||"var"!==t.kind||"Identifier"!==t.declarations[0].id.type)?this.raise(t.start,(r?"for-in":"for-of")+" loop variable declaration may not have an initializer"):"AssignmentPattern"===t.type&&this.raise(t.start,"Invalid left-hand side in for-loop"),e.left=t,e.right=r?this.parseExpression():this.parseMaybeAssign(),this.expect(Rh.parenR),e.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(e,r?"ForInStatement":"ForOfStatement")},pd.parseVar=function(e,t,r){for(e.declarations=[],e.kind=r;;){var n=this.startNode();if(this.parseVarId(n,r),this.eat(Rh.eq)?n.init=this.parseMaybeAssign(t):"const"!==r||this.type===Rh._in||this.options.ecmaVersion>=6&&this.isContextual("of")?"Identifier"===n.id.type||t&&(this.type===Rh._in||this.isContextual("of"))?n.init=null:this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):this.unexpected(),e.declarations.push(this.finishNode(n,"VariableDeclarator")),!this.eat(Rh.comma))break}return e},pd.parseVarId=function(e,t){e.id=this.parseBindingAtom(),this.checkLVal(e.id,"var"===t?1:2,!1);};var md=1,gd=2;pd.parseFunction=function(e,t,r,n){this.initFunction(e),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!n)&&(this.type===Rh.star&&t&gd&&this.unexpected(),e.generator=this.eat(Rh.star)),this.options.ecmaVersion>=8&&(e.async=!!n),t&md&&(e.id=4&t&&this.type!==Rh.name?null:this.parseIdent(),!e.id||t&gd||this.checkLVal(e.id,this.strict||e.generator||e.async?this.treatFunctionsAsVar?1:2:3));var i=this.yieldPos,a=this.awaitPos,o=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(ad(e.async,e.generator)),t&md||(e.id=this.type===Rh.name?this.parseIdent():null),this.parseFunctionParams(e),this.parseFunctionBody(e,r,!1),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=o,this.finishNode(e,t&md?"FunctionDeclaration":"FunctionExpression")},pd.parseFunctionParams=function(e){this.expect(Rh.parenL),e.params=this.parseBindingList(Rh.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams();},pd.parseClass=function(e,t){this.next();var r=this.strict;this.strict=!0,this.parseClassId(e,t),this.parseClassSuper(e);var n=this.startNode(),i=!1;for(n.body=[],this.expect(Rh.braceL);!this.eat(Rh.braceR);){var a=this.parseClassElement(null!==e.superClass);a&&(n.body.push(a),"MethodDefinition"===a.type&&"constructor"===a.kind&&(i&&this.raise(a.start,"Duplicate constructor in the same class"),i=!0));}return e.body=this.finishNode(n,"ClassBody"),this.strict=r,this.finishNode(e,t?"ClassDeclaration":"ClassExpression")},pd.parseClassElement=function(e){var t=this;if(this.eat(Rh.semi))return null;var r=this.startNode(),n=function(e,n){void 0===n&&(n=!1);var i=t.start,a=t.startLoc;return !!t.eatContextual(e)&&(!(t.type===Rh.parenL||n&&t.canInsertSemicolon())||(r.key&&t.unexpected(),r.computed=!1,r.key=t.startNodeAt(i,a),r.key.name=e,t.finishNode(r.key,"Identifier"),!1))};r.kind="method",r.static=n("static");var i=this.eat(Rh.star),a=!1;i||(this.options.ecmaVersion>=8&&n("async",!0)?(a=!0,i=this.options.ecmaVersion>=9&&this.eat(Rh.star)):n("get")?r.kind="get":n("set")&&(r.kind="set")),r.key||this.parsePropertyName(r);var o=r.key,s=!1;return r.computed||r.static||!("Identifier"===o.type&&"constructor"===o.name||"Literal"===o.type&&"constructor"===o.value)?r.static&&"Identifier"===o.type&&"prototype"===o.name&&this.raise(o.start,"Classes may not have a static property named prototype"):("method"!==r.kind&&this.raise(o.start,"Constructor can't have get/set modifier"),i&&this.raise(o.start,"Constructor can't be a generator"),a&&this.raise(o.start,"Constructor can't be an async method"),r.kind="constructor",s=e),this.parseClassMethod(r,i,a,s),"get"===r.kind&&0!==r.value.params.length&&this.raiseRecoverable(r.value.start,"getter should have no params"),"set"===r.kind&&1!==r.value.params.length&&this.raiseRecoverable(r.value.start,"setter should have exactly one param"),"set"===r.kind&&"RestElement"===r.value.params[0].type&&this.raiseRecoverable(r.value.params[0].start,"Setter cannot use rest params"),r},pd.parseClassMethod=function(e,t,r,n){return e.value=this.parseMethod(t,r,n),this.finishNode(e,"MethodDefinition")},pd.parseClassId=function(e,t){this.type===Rh.name?(e.id=this.parseIdent(),t&&this.checkLVal(e.id,2,!1)):(!0===t&&this.unexpected(),e.id=null);},pd.parseClassSuper=function(e){e.superClass=this.eat(Rh._extends)?this.parseExprSubscripts():null;},pd.parseExport=function(e,t){if(this.next(),this.eat(Rh.star))return this.expectContextual("from"),this.type!==Rh.string&&this.unexpected(),e.source=this.parseExprAtom(),this.semicolon(),this.finishNode(e,"ExportAllDeclaration");if(this.eat(Rh._default)){var r;if(this.checkExport(t,"default",this.lastTokStart),this.type===Rh._function||(r=this.isAsyncFunction())){var n=this.startNode();this.next(),r&&this.next(),e.declaration=this.parseFunction(n,4|md,!1,r);}else if(this.type===Rh._class){var i=this.startNode();e.declaration=this.parseClass(i,"nullableID");}else e.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(e,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())e.declaration=this.parseStatement(null),"VariableDeclaration"===e.declaration.type?this.checkVariableExport(t,e.declaration.declarations):this.checkExport(t,e.declaration.id.name,e.declaration.id.start),e.specifiers=[],e.source=null;else {if(e.declaration=null,e.specifiers=this.parseExportSpecifiers(t),this.eatContextual("from"))this.type!==Rh.string&&this.unexpected(),e.source=this.parseExprAtom();else {for(var a=0,o=e.specifiers;a<o.length;a+=1){var s=o[a];this.checkUnreserved(s.local),this.checkLocalExport(s.local);}e.source=null;}this.semicolon();}return this.finishNode(e,"ExportNamedDeclaration")},pd.checkExport=function(e,t,r){e&&(Hh(e,t)&&this.raiseRecoverable(r,"Duplicate export '"+t+"'"),e[t]=!0);},pd.checkPatternExport=function(e,t){var r=t.type;if("Identifier"===r)this.checkExport(e,t.name,t.start);else if("ObjectPattern"===r)for(var n=0,i=t.properties;n<i.length;n+=1){var a=i[n];this.checkPatternExport(e,a);}else if("ArrayPattern"===r)for(var o=0,s=t.elements;o<s.length;o+=1){var u=s[o];u&&this.checkPatternExport(e,u);}else "Property"===r?this.checkPatternExport(e,t.value):"AssignmentPattern"===r?this.checkPatternExport(e,t.left):"RestElement"===r?this.checkPatternExport(e,t.argument):"ParenthesizedExpression"===r&&this.checkPatternExport(e,t.expression);},pd.checkVariableExport=function(e,t){if(e)for(var r=0,n=t;r<n.length;r+=1){var i=n[r];this.checkPatternExport(e,i.id);}},pd.shouldParseExportStatement=function(){return "var"===this.type.keyword||"const"===this.type.keyword||"class"===this.type.keyword||"function"===this.type.keyword||this.isLet()||this.isAsyncFunction()},pd.parseExportSpecifiers=function(e){var t=[],r=!0;for(this.expect(Rh.braceL);!this.eat(Rh.braceR);){if(r)r=!1;else if(this.expect(Rh.comma),this.afterTrailingComma(Rh.braceR))break;var n=this.startNode();n.local=this.parseIdent(!0),n.exported=this.eatContextual("as")?this.parseIdent(!0):n.local,this.checkExport(e,n.exported.name,n.exported.start),t.push(this.finishNode(n,"ExportSpecifier"));}return t},pd.parseImport=function(e){return this.next(),this.type===Rh.string?(e.specifiers=dd,e.source=this.parseExprAtom()):(e.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),e.source=this.type===Rh.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(e,"ImportDeclaration")},pd.parseImportSpecifiers=function(){var e=[],t=!0;if(this.type===Rh.name){var r=this.startNode();if(r.local=this.parseIdent(),this.checkLVal(r.local,2),e.push(this.finishNode(r,"ImportDefaultSpecifier")),!this.eat(Rh.comma))return e}if(this.type===Rh.star){var n=this.startNode();return this.next(),this.expectContextual("as"),n.local=this.parseIdent(),this.checkLVal(n.local,2),e.push(this.finishNode(n,"ImportNamespaceSpecifier")),e}for(this.expect(Rh.braceL);!this.eat(Rh.braceR);){if(t)t=!1;else if(this.expect(Rh.comma),this.afterTrailingComma(Rh.braceR))break;var i=this.startNode();i.imported=this.parseIdent(!0),this.eatContextual("as")?i.local=this.parseIdent():(this.checkUnreserved(i.imported),i.local=i.imported),this.checkLVal(i.local,2),e.push(this.finishNode(i,"ImportSpecifier"));}return e},pd.adaptDirectivePrologue=function(e){for(var t=0;t<e.length&&this.isDirectiveCandidate(e[t]);++t)e[t].directive=e[t].expression.raw.slice(1,-1);},pd.isDirectiveCandidate=function(e){return "ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value&&('"'===this.input[e.start]||"'"===this.input[e.start])};var yd=od.prototype;yd.toAssignable=function(e,t,r){if(this.options.ecmaVersion>=6&&e)switch(e.type){case"Identifier":this.inAsync&&"await"===e.name&&this.raise(e.start,"Cannot use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":e.type="ObjectPattern",r&&this.checkPatternErrors(r,!0);for(var n=0,i=e.properties;n<i.length;n+=1){var a=i[n];this.toAssignable(a,t),"RestElement"!==a.type||"ArrayPattern"!==a.argument.type&&"ObjectPattern"!==a.argument.type||this.raise(a.argument.start,"Unexpected token");}break;case"Property":"init"!==e.kind&&this.raise(e.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(e.value,t);break;case"ArrayExpression":e.type="ArrayPattern",r&&this.checkPatternErrors(r,!0),this.toAssignableList(e.elements,t);break;case"SpreadElement":e.type="RestElement",this.toAssignable(e.argument,t),"AssignmentPattern"===e.argument.type&&this.raise(e.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":"="!==e.operator&&this.raise(e.left.end,"Only '=' operator can be used for specifying default value."),e.type="AssignmentPattern",delete e.operator,this.toAssignable(e.left,t);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(e.expression,t,r);break;case"MemberExpression":if(!t)break;default:this.raise(e.start,"Assigning to rvalue");}else r&&this.checkPatternErrors(r,!0);return e},yd.toAssignableList=function(e,t){for(var r=e.length,n=0;n<r;n++){var i=e[n];i&&this.toAssignable(i,t);}if(r){var a=e[r-1];6===this.options.ecmaVersion&&t&&a&&"RestElement"===a.type&&"Identifier"!==a.argument.type&&this.unexpected(a.argument.start);}return e},yd.parseSpread=function(e){var t=this.startNode();return this.next(),t.argument=this.parseMaybeAssign(!1,e),this.finishNode(t,"SpreadElement")},yd.parseRestBinding=function(){var e=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==Rh.name&&this.unexpected(),e.argument=this.parseBindingAtom(),this.finishNode(e,"RestElement")},yd.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case Rh.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(Rh.bracketR,!0,!0),this.finishNode(e,"ArrayPattern");case Rh.braceL:return this.parseObj(!0)}return this.parseIdent()},yd.parseBindingList=function(e,t,r){for(var n=[],i=!0;!this.eat(e);)if(i?i=!1:this.expect(Rh.comma),t&&this.type===Rh.comma)n.push(null);else {if(r&&this.afterTrailingComma(e))break;if(this.type===Rh.ellipsis){var a=this.parseRestBinding();this.parseBindingListItem(a),n.push(a),this.type===Rh.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(e);break}var o=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(o),n.push(o);}return n},yd.parseBindingListItem=function(e){return e},yd.parseMaybeDefault=function(e,t,r){if(r=r||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(Rh.eq))return r;var n=this.startNodeAt(e,t);return n.left=r,n.right=this.parseMaybeAssign(),this.finishNode(n,"AssignmentPattern")},yd.checkLVal=function(e,t,r){switch(void 0===t&&(t=0),e.type){case"Identifier":2===t&&"let"===e.name&&this.raiseRecoverable(e.start,"let is disallowed as a lexically bound name"),this.strict&&this.reservedWordsStrictBind.test(e.name)&&this.raiseRecoverable(e.start,(t?"Binding ":"Assigning to ")+e.name+" in strict mode"),r&&(Hh(r,e.name)&&this.raiseRecoverable(e.start,"Argument name clash"),r[e.name]=!0),0!==t&&5!==t&&this.declareName(e.name,t,e.start);break;case"MemberExpression":t&&this.raiseRecoverable(e.start,"Binding member expression");break;case"ObjectPattern":for(var n=0,i=e.properties;n<i.length;n+=1){var a=i[n];this.checkLVal(a,t,r);}break;case"Property":this.checkLVal(e.value,t,r);break;case"ArrayPattern":for(var o=0,s=e.elements;o<s.length;o+=1){var u=s[o];u&&this.checkLVal(u,t,r);}break;case"AssignmentPattern":this.checkLVal(e.left,t,r);break;case"RestElement":this.checkLVal(e.argument,t,r);break;case"ParenthesizedExpression":this.checkLVal(e.expression,t,r);break;default:this.raise(e.start,(t?"Binding":"Assigning to")+" rvalue");}};var vd=od.prototype;vd.checkPropClash=function(e,t,r){if(!(this.options.ecmaVersion>=9&&"SpreadElement"===e.type||this.options.ecmaVersion>=6&&(e.computed||e.method||e.shorthand))){var n,i=e.key;switch(i.type){case"Identifier":n=i.name;break;case"Literal":n=String(i.value);break;default:return}var a=e.kind;if(this.options.ecmaVersion>=6)"__proto__"===n&&"init"===a&&(t.proto&&(r&&r.doubleProto<0?r.doubleProto=i.start:this.raiseRecoverable(i.start,"Redefinition of __proto__ property")),t.proto=!0);else {var o=t[n="$"+n];if(o)("init"===a?this.strict&&o.init||o.get||o.set:o.init||o[a])&&this.raiseRecoverable(i.start,"Redefinition of property");else o=t[n]={init:!1,get:!1,set:!1};o[a]=!0;}}},vd.parseExpression=function(e,t){var r=this.start,n=this.startLoc,i=this.parseMaybeAssign(e,t);if(this.type===Rh.comma){var a=this.startNodeAt(r,n);for(a.expressions=[i];this.eat(Rh.comma);)a.expressions.push(this.parseMaybeAssign(e,t));return this.finishNode(a,"SequenceExpression")}return i},vd.parseMaybeAssign=function(e,t,r){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(e);this.exprAllowed=!1;}var n=!1,i=-1,a=-1,o=-1;t?(i=t.parenthesizedAssign,a=t.trailingComma,o=t.shorthandAssign,t.parenthesizedAssign=t.trailingComma=t.shorthandAssign=-1):(t=new ld,n=!0);var s=this.start,u=this.startLoc;this.type!==Rh.parenL&&this.type!==Rh.name||(this.potentialArrowAt=this.start);var c=this.parseMaybeConditional(e,t);if(r&&(c=r.call(this,c,s,u)),this.type.isAssign){var l=this.startNodeAt(s,u);return l.operator=this.value,l.left=this.type===Rh.eq?this.toAssignable(c,!1,t):c,n||ld.call(t),t.shorthandAssign=-1,this.checkLVal(c),this.next(),l.right=this.parseMaybeAssign(e),this.finishNode(l,"AssignmentExpression")}return n&&this.checkExpressionErrors(t,!0),i>-1&&(t.parenthesizedAssign=i),a>-1&&(t.trailingComma=a),o>-1&&(t.shorthandAssign=o),c},vd.parseMaybeConditional=function(e,t){var r=this.start,n=this.startLoc,i=this.parseExprOps(e,t);if(this.checkExpressionErrors(t))return i;if(this.eat(Rh.question)){var a=this.startNodeAt(r,n);return a.test=i,a.consequent=this.parseMaybeAssign(),this.expect(Rh.colon),a.alternate=this.parseMaybeAssign(e),this.finishNode(a,"ConditionalExpression")}return i},vd.parseExprOps=function(e,t){var r=this.start,n=this.startLoc,i=this.parseMaybeUnary(t,!1);return this.checkExpressionErrors(t)?i:i.start===r&&"ArrowFunctionExpression"===i.type?i:this.parseExprOp(i,r,n,-1,e)},vd.parseExprOp=function(e,t,r,n,i){var a=this.type.binop;if(null!=a&&(!i||this.type!==Rh._in)&&a>n){var o=this.type===Rh.logicalOR||this.type===Rh.logicalAND,s=this.value;this.next();var u=this.start,c=this.startLoc,l=this.parseExprOp(this.parseMaybeUnary(null,!1),u,c,a,i),p=this.buildBinary(t,r,e,l,s,o);return this.parseExprOp(p,t,r,n,i)}return e},vd.buildBinary=function(e,t,r,n,i,a){var o=this.startNodeAt(e,t);return o.left=r,o.operator=i,o.right=n,this.finishNode(o,a?"LogicalExpression":"BinaryExpression")},vd.parseMaybeUnary=function(e,t){var r,n=this.start,i=this.startLoc;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction))r=this.parseAwait(),t=!0;else if(this.type.prefix){var a=this.startNode(),o=this.type===Rh.incDec;a.operator=this.value,a.prefix=!0,this.next(),a.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(e,!0),o?this.checkLVal(a.argument):this.strict&&"delete"===a.operator&&"Identifier"===a.argument.type?this.raiseRecoverable(a.start,"Deleting local variable in strict mode"):t=!0,r=this.finishNode(a,o?"UpdateExpression":"UnaryExpression");}else {if(r=this.parseExprSubscripts(e),this.checkExpressionErrors(e))return r;for(;this.type.postfix&&!this.canInsertSemicolon();){var s=this.startNodeAt(n,i);s.operator=this.value,s.prefix=!1,s.argument=r,this.checkLVal(r),this.next(),r=this.finishNode(s,"UpdateExpression");}}return !t&&this.eat(Rh.starstar)?this.buildBinary(n,i,r,this.parseMaybeUnary(null,!1),"**",!1):r},vd.parseExprSubscripts=function(e){var t=this.start,r=this.startLoc,n=this.parseExprAtom(e),i="ArrowFunctionExpression"===n.type&&")"!==this.input.slice(this.lastTokStart,this.lastTokEnd);if(this.checkExpressionErrors(e)||i)return n;var a=this.parseSubscripts(n,t,r);return e&&"MemberExpression"===a.type&&(e.parenthesizedAssign>=a.start&&(e.parenthesizedAssign=-1),e.parenthesizedBind>=a.start&&(e.parenthesizedBind=-1)),a},vd.parseSubscripts=function(e,t,r,n){for(var i=this.options.ecmaVersion>=8&&"Identifier"===e.type&&"async"===e.name&&this.lastTokEnd===e.end&&!this.canInsertSemicolon()&&"async"===this.input.slice(e.start,e.end);;){var a=this.parseSubscript(e,t,r,n,i);if(a===e||"ArrowFunctionExpression"===a.type)return a;e=a;}},vd.parseSubscript=function(e,t,r,n,i){var a=this.eat(Rh.bracketL);if(a||this.eat(Rh.dot)){var o=this.startNodeAt(t,r);o.object=e,o.property=a?this.parseExpression():this.parseIdent("never"!==this.options.allowReserved),o.computed=!!a,a&&this.expect(Rh.bracketR),e=this.finishNode(o,"MemberExpression");}else if(!n&&this.eat(Rh.parenL)){var s=new ld,u=this.yieldPos,c=this.awaitPos,l=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var p=this.parseExprList(Rh.parenR,this.options.ecmaVersion>=8&&"Import"!==e.type,!1,s);if(i&&!this.canInsertSemicolon()&&this.eat(Rh.arrow))return this.checkPatternErrors(s,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=u,this.awaitPos=c,this.awaitIdentPos=l,this.parseArrowExpression(this.startNodeAt(t,r),p,!0);this.checkExpressionErrors(s,!0),this.yieldPos=u||this.yieldPos,this.awaitPos=c||this.awaitPos,this.awaitIdentPos=l||this.awaitIdentPos;var f=this.startNodeAt(t,r);if(f.callee=e,f.arguments=p,"Import"===f.callee.type){1!==f.arguments.length&&this.raise(f.start,"import() requires exactly one argument");var h=f.arguments[0];h&&"SpreadElement"===h.type&&this.raise(h.start,"... is not allowed in import()");}e=this.finishNode(f,"CallExpression");}else if(this.type===Rh.backQuote){var d=this.startNodeAt(t,r);d.tag=e,d.quasi=this.parseTemplate({isTagged:!0}),e=this.finishNode(d,"TaggedTemplateExpression");}return e},vd.parseExprAtom=function(e){this.type===Rh.slash&&this.readRegexp();var t,r=this.potentialArrowAt===this.start;switch(this.type){case Rh._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),t=this.startNode(),this.next(),this.type!==Rh.parenL||this.allowDirectSuper||this.raise(t.start,"super() call outside constructor of a subclass"),this.type!==Rh.dot&&this.type!==Rh.bracketL&&this.type!==Rh.parenL&&this.unexpected(),this.finishNode(t,"Super");case Rh._this:return t=this.startNode(),this.next(),this.finishNode(t,"ThisExpression");case Rh.name:var n=this.start,i=this.startLoc,a=this.containsEsc,o=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!a&&"async"===o.name&&!this.canInsertSemicolon()&&this.eat(Rh._function))return this.parseFunction(this.startNodeAt(n,i),0,!1,!0);if(r&&!this.canInsertSemicolon()){if(this.eat(Rh.arrow))return this.parseArrowExpression(this.startNodeAt(n,i),[o],!1);if(this.options.ecmaVersion>=8&&"async"===o.name&&this.type===Rh.name&&!a)return o=this.parseIdent(!1),!this.canInsertSemicolon()&&this.eat(Rh.arrow)||this.unexpected(),this.parseArrowExpression(this.startNodeAt(n,i),[o],!0)}return o;case Rh.regexp:var s=this.value;return (t=this.parseLiteral(s.value)).regex={pattern:s.pattern,flags:s.flags},t;case Rh.num:case Rh.string:return this.parseLiteral(this.value);case Rh._null:case Rh._true:case Rh._false:return (t=this.startNode()).value=this.type===Rh._null?null:this.type===Rh._true,t.raw=this.type.keyword,this.next(),this.finishNode(t,"Literal");case Rh.parenL:var u=this.start,c=this.parseParenAndDistinguishExpression(r);return e&&(e.parenthesizedAssign<0&&!this.isSimpleAssignTarget(c)&&(e.parenthesizedAssign=u),e.parenthesizedBind<0&&(e.parenthesizedBind=u)),c;case Rh.bracketL:return t=this.startNode(),this.next(),t.elements=this.parseExprList(Rh.bracketR,!0,!0,e),this.finishNode(t,"ArrayExpression");case Rh.braceL:return this.parseObj(!1,e);case Rh._function:return t=this.startNode(),this.next(),this.parseFunction(t,0);case Rh._class:return this.parseClass(this.startNode(),!1);case Rh._new:return this.parseNew();case Rh.backQuote:return this.parseTemplate();case Rh._import:return this.options.ecmaVersion>10?this.parseDynamicImport():this.unexpected();default:this.unexpected();}},vd.parseDynamicImport=function(){var e=this.startNode();return this.next(),this.type!==Rh.parenL&&this.unexpected(),this.finishNode(e,"Import")},vd.parseLiteral=function(e){var t=this.startNode();return t.value=e,t.raw=this.input.slice(this.start,this.end),110===t.raw.charCodeAt(t.raw.length-1)&&(t.bigint=t.raw.slice(0,-1)),this.next(),this.finishNode(t,"Literal")},vd.parseParenExpression=function(){this.expect(Rh.parenL);var e=this.parseExpression();return this.expect(Rh.parenR),e},vd.parseParenAndDistinguishExpression=function(e){var t,r=this.start,n=this.startLoc,i=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var a,o=this.start,s=this.startLoc,u=[],c=!0,l=!1,p=new ld,f=this.yieldPos,h=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==Rh.parenR;){if(c?c=!1:this.expect(Rh.comma),i&&this.afterTrailingComma(Rh.parenR,!0)){l=!0;break}if(this.type===Rh.ellipsis){a=this.start,u.push(this.parseParenItem(this.parseRestBinding())),this.type===Rh.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}u.push(this.parseMaybeAssign(!1,p,this.parseParenItem));}var d=this.start,m=this.startLoc;if(this.expect(Rh.parenR),e&&!this.canInsertSemicolon()&&this.eat(Rh.arrow))return this.checkPatternErrors(p,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=f,this.awaitPos=h,this.parseParenArrowList(r,n,u);u.length&&!l||this.unexpected(this.lastTokStart),a&&this.unexpected(a),this.checkExpressionErrors(p,!0),this.yieldPos=f||this.yieldPos,this.awaitPos=h||this.awaitPos,u.length>1?((t=this.startNodeAt(o,s)).expressions=u,this.finishNodeAt(t,"SequenceExpression",d,m)):t=u[0];}else t=this.parseParenExpression();if(this.options.preserveParens){var g=this.startNodeAt(r,n);return g.expression=t,this.finishNode(g,"ParenthesizedExpression")}return t},vd.parseParenItem=function(e){return e},vd.parseParenArrowList=function(e,t,r){return this.parseArrowExpression(this.startNodeAt(e,t),r)};var xd=[];vd.parseNew=function(){var e=this.startNode(),t=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(Rh.dot)){e.meta=t;var r=this.containsEsc;return e.property=this.parseIdent(!0),("target"!==e.property.name||r)&&this.raiseRecoverable(e.property.start,"The only valid meta property for new is new.target"),this.inNonArrowFunction()||this.raiseRecoverable(e.start,"new.target can only be used in functions"),this.finishNode(e,"MetaProperty")}var n=this.start,i=this.startLoc;return e.callee=this.parseSubscripts(this.parseExprAtom(),n,i,!0),this.options.ecmaVersion>10&&"Import"===e.callee.type&&this.raise(e.callee.start,"Cannot use new with import(...)"),this.eat(Rh.parenL)?e.arguments=this.parseExprList(Rh.parenR,this.options.ecmaVersion>=8&&"Import"!==e.callee.type,!1):e.arguments=xd,this.finishNode(e,"NewExpression")},vd.parseTemplateElement=function(e){var t=e.isTagged,r=this.startNode();return this.type===Rh.invalidTemplate?(t||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),r.value={raw:this.value,cooked:null}):r.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,"\n"),cooked:this.value},this.next(),r.tail=this.type===Rh.backQuote,this.finishNode(r,"TemplateElement")},vd.parseTemplate=function(e){void 0===e&&(e={});var t=e.isTagged;void 0===t&&(t=!1);var r=this.startNode();this.next(),r.expressions=[];var n=this.parseTemplateElement({isTagged:t});for(r.quasis=[n];!n.tail;)this.type===Rh.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(Rh.dollarBraceL),r.expressions.push(this.parseExpression()),this.expect(Rh.braceR),r.quasis.push(n=this.parseTemplateElement({isTagged:t}));return this.next(),this.finishNode(r,"TemplateLiteral")},vd.isAsyncProp=function(e){return !e.computed&&"Identifier"===e.key.type&&"async"===e.key.name&&(this.type===Rh.name||this.type===Rh.num||this.type===Rh.string||this.type===Rh.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===Rh.star)&&!Mh.test(this.input.slice(this.lastTokEnd,this.start))},vd.parseObj=function(e,t){var r=this.startNode(),n=!0,i={};for(r.properties=[],this.next();!this.eat(Rh.braceR);){if(n)n=!1;else if(this.expect(Rh.comma),this.afterTrailingComma(Rh.braceR))break;var a=this.parseProperty(e,t);e||this.checkPropClash(a,i,t),r.properties.push(a);}return this.finishNode(r,e?"ObjectPattern":"ObjectExpression")},vd.parseProperty=function(e,t){var r,n,i,a,o=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(Rh.ellipsis))return e?(o.argument=this.parseIdent(!1),this.type===Rh.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(o,"RestElement")):(this.type===Rh.parenL&&t&&(t.parenthesizedAssign<0&&(t.parenthesizedAssign=this.start),t.parenthesizedBind<0&&(t.parenthesizedBind=this.start)),o.argument=this.parseMaybeAssign(!1,t),this.type===Rh.comma&&t&&t.trailingComma<0&&(t.trailingComma=this.start),this.finishNode(o,"SpreadElement"));this.options.ecmaVersion>=6&&(o.method=!1,o.shorthand=!1,(e||t)&&(i=this.start,a=this.startLoc),e||(r=this.eat(Rh.star)));var s=this.containsEsc;return this.parsePropertyName(o),!e&&!s&&this.options.ecmaVersion>=8&&!r&&this.isAsyncProp(o)?(n=!0,r=this.options.ecmaVersion>=9&&this.eat(Rh.star),this.parsePropertyName(o,t)):n=!1,this.parsePropertyValue(o,e,r,n,i,a,t,s),this.finishNode(o,"Property")},vd.parsePropertyValue=function(e,t,r,n,i,a,o,s){if((r||n)&&this.type===Rh.colon&&this.unexpected(),this.eat(Rh.colon))e.value=t?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,o),e.kind="init";else if(this.options.ecmaVersion>=6&&this.type===Rh.parenL)t&&this.unexpected(),e.kind="init",e.method=!0,e.value=this.parseMethod(r,n);else if(t||s||!(this.options.ecmaVersion>=5)||e.computed||"Identifier"!==e.key.type||"get"!==e.key.name&&"set"!==e.key.name||this.type===Rh.comma||this.type===Rh.braceR)this.options.ecmaVersion>=6&&!e.computed&&"Identifier"===e.key.type?((r||n)&&this.unexpected(),this.checkUnreserved(e.key),"await"!==e.key.name||this.awaitIdentPos||(this.awaitIdentPos=i),e.kind="init",t?e.value=this.parseMaybeDefault(i,a,e.key):this.type===Rh.eq&&o?(o.shorthandAssign<0&&(o.shorthandAssign=this.start),e.value=this.parseMaybeDefault(i,a,e.key)):e.value=e.key,e.shorthand=!0):this.unexpected();else {(r||n)&&this.unexpected(),e.kind=e.key.name,this.parsePropertyName(e),e.value=this.parseMethod(!1);var u="get"===e.kind?0:1;if(e.value.params.length!==u){var c=e.value.start;"get"===e.kind?this.raiseRecoverable(c,"getter should have no params"):this.raiseRecoverable(c,"setter should have exactly one param");}else "set"===e.kind&&"RestElement"===e.value.params[0].type&&this.raiseRecoverable(e.value.params[0].start,"Setter cannot use rest params");}},vd.parsePropertyName=function(e){if(this.options.ecmaVersion>=6){if(this.eat(Rh.bracketL))return e.computed=!0,e.key=this.parseMaybeAssign(),this.expect(Rh.bracketR),e.key;e.computed=!1;}return e.key=this.type===Rh.num||this.type===Rh.string?this.parseExprAtom():this.parseIdent("never"!==this.options.allowReserved)},vd.initFunction=function(e){e.id=null,this.options.ecmaVersion>=6&&(e.generator=e.expression=!1),this.options.ecmaVersion>=8&&(e.async=!1);},vd.parseMethod=function(e,t,r){var n=this.startNode(),i=this.yieldPos,a=this.awaitPos,o=this.awaitIdentPos;return this.initFunction(n),this.options.ecmaVersion>=6&&(n.generator=e),this.options.ecmaVersion>=8&&(n.async=!!t),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(64|ad(t,n.generator)|(r?128:0)),this.expect(Rh.parenL),n.params=this.parseBindingList(Rh.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(n,!1,!0),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=o,this.finishNode(n,"FunctionExpression")},vd.parseArrowExpression=function(e,t,r){var n=this.yieldPos,i=this.awaitPos,a=this.awaitIdentPos;return this.enterScope(16|ad(r,!1)),this.initFunction(e),this.options.ecmaVersion>=8&&(e.async=!!r),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,e.params=this.toAssignableList(t,!0),this.parseFunctionBody(e,!0,!1),this.yieldPos=n,this.awaitPos=i,this.awaitIdentPos=a,this.finishNode(e,"ArrowFunctionExpression")},vd.parseFunctionBody=function(e,t,r){var n=t&&this.type!==Rh.braceL,i=this.strict,a=!1;if(n)e.body=this.parseMaybeAssign(),e.expression=!0,this.checkParams(e,!1);else {var o=this.options.ecmaVersion>=7&&!this.isSimpleParamList(e.params);i&&!o||(a=this.strictDirective(this.end))&&o&&this.raiseRecoverable(e.start,"Illegal 'use strict' directive in function with non-simple parameter list");var s=this.labels;this.labels=[],a&&(this.strict=!0),this.checkParams(e,!i&&!a&&!t&&!r&&this.isSimpleParamList(e.params)),e.body=this.parseBlock(!1),e.expression=!1,this.adaptDirectivePrologue(e.body.body),this.labels=s;}this.exitScope(),this.strict&&e.id&&this.checkLVal(e.id,5),this.strict=i;},vd.isSimpleParamList=function(e){for(var t=0,r=e;t<r.length;t+=1){if("Identifier"!==r[t].type)return !1}return !0},vd.checkParams=function(e,t){for(var r={},n=0,i=e.params;n<i.length;n+=1){var a=i[n];this.checkLVal(a,1,t?null:r);}},vd.parseExprList=function(e,t,r,n){for(var i=[],a=!0;!this.eat(e);){if(a)a=!1;else if(this.expect(Rh.comma),t&&this.afterTrailingComma(e))break;var o=void 0;r&&this.type===Rh.comma?o=null:this.type===Rh.ellipsis?(o=this.parseSpread(n),n&&this.type===Rh.comma&&n.trailingComma<0&&(n.trailingComma=this.start)):o=this.parseMaybeAssign(!1,n),i.push(o);}return i},vd.checkUnreserved=function(e){var t=e.start,r=e.end,n=e.name;(this.inGenerator&&"yield"===n&&this.raiseRecoverable(t,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&"await"===n&&this.raiseRecoverable(t,"Cannot use 'await' as identifier inside an async function"),this.keywords.test(n)&&this.raise(t,"Unexpected keyword '"+n+"'"),this.options.ecmaVersion<6&&-1!==this.input.slice(t,r).indexOf("\\"))||(this.strict?this.reservedWordsStrict:this.reservedWords).test(n)&&(this.inAsync||"await"!==n||this.raiseRecoverable(t,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(t,"The keyword '"+n+"' is reserved"));},vd.parseIdent=function(e,t){var r=this.startNode();return this.type===Rh.name?r.name=this.value:this.type.keyword?(r.name=this.type.keyword,"class"!==r.name&&"function"!==r.name||this.lastTokEnd===this.lastTokStart+1&&46===this.input.charCodeAt(this.lastTokStart)||this.context.pop()):this.unexpected(),this.next(),this.finishNode(r,"Identifier"),e||(this.checkUnreserved(r),"await"!==r.name||this.awaitIdentPos||(this.awaitIdentPos=r.start)),r},vd.parseYield=function(e){this.yieldPos||(this.yieldPos=this.start);var t=this.startNode();return this.next(),this.type===Rh.semi||this.canInsertSemicolon()||this.type!==Rh.star&&!this.type.startsExpr?(t.delegate=!1,t.argument=null):(t.delegate=this.eat(Rh.star),t.argument=this.parseMaybeAssign(e)),this.finishNode(t,"YieldExpression")},vd.parseAwait=function(){this.awaitPos||(this.awaitPos=this.start);var e=this.startNode();return this.next(),e.argument=this.parseMaybeUnary(null,!0),this.finishNode(e,"AwaitExpression")};var bd=od.prototype;bd.raise=function(e,t){var r=Yh(this.input,e);t+=" ("+r.line+":"+r.column+")";var n=new SyntaxError(t);throw n.pos=e,n.loc=r,n.raisedAt=this.pos,n},bd.raiseRecoverable=bd.raise,bd.curPosition=function(){if(this.options.locations)return new Qh(this.curLine,this.pos-this.lineStart)};var Ed=od.prototype,Cd=function(e){this.flags=e,this.var=[],this.lexical=[],this.functions=[];};Ed.enterScope=function(e){this.scopeStack.push(new Cd(e));},Ed.exitScope=function(){this.scopeStack.pop();},Ed.treatFunctionsAsVarInScope=function(e){return e.flags&td||!this.inModule&&1&e.flags},Ed.declareName=function(e,t,r){var n=!1;if(2===t){var i=this.currentScope();n=i.lexical.indexOf(e)>-1||i.functions.indexOf(e)>-1||i.var.indexOf(e)>-1,i.lexical.push(e),this.inModule&&1&i.flags&&delete this.undefinedExports[e];}else if(4===t){this.currentScope().lexical.push(e);}else if(3===t){var a=this.currentScope();n=this.treatFunctionsAsVar?a.lexical.indexOf(e)>-1:a.lexical.indexOf(e)>-1||a.var.indexOf(e)>-1,a.functions.push(e);}else for(var o=this.scopeStack.length-1;o>=0;--o){var s=this.scopeStack[o];if(s.lexical.indexOf(e)>-1&&!(32&s.flags&&s.lexical[0]===e)||!this.treatFunctionsAsVarInScope(s)&&s.functions.indexOf(e)>-1){n=!0;break}if(s.var.push(e),this.inModule&&1&s.flags&&delete this.undefinedExports[e],s.flags&rd)break}n&&this.raiseRecoverable(r,"Identifier '"+e+"' has already been declared");},Ed.checkLocalExport=function(e){-1===this.scopeStack[0].lexical.indexOf(e.name)&&-1===this.scopeStack[0].var.indexOf(e.name)&&(this.undefinedExports[e.name]=e);},Ed.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},Ed.currentVarScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(t.flags&rd)return t}},Ed.currentThisScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(t.flags&rd&&!(16&t.flags))return t}};var Sd=function(e,t,r){this.type="",this.start=t,this.end=0,e.options.locations&&(this.loc=new Xh(e,r)),e.options.directSourceFile&&(this.sourceFile=e.options.directSourceFile),e.options.ranges&&(this.range=[t,0]);},kd=od.prototype;function Dd(e,t,r,n){return e.type=t,e.end=r,this.options.locations&&(e.loc.end=n),this.options.ranges&&(e.range[1]=r),e}kd.startNode=function(){return new Sd(this,this.start,this.startLoc)},kd.startNodeAt=function(e,t){return new Sd(this,e,t)},kd.finishNode=function(e,t){return Dd.call(this,e,t,this.lastTokEnd,this.lastTokEndLoc)},kd.finishNodeAt=function(e,t,r,n){return Dd.call(this,e,t,r,n)};var Fd=function(e,t,r,n,i){this.token=e,this.isExpr=!!t,this.preserveSpace=!!r,this.override=n,this.generator=!!i;},Ad={b_stat:new Fd("{",!1),b_expr:new Fd("{",!0),b_tmpl:new Fd("${",!1),p_stat:new Fd("(",!1),p_expr:new Fd("(",!0),q_tmpl:new Fd("`",!0,!0,(function(e){return e.tryReadTemplateToken()})),f_stat:new Fd("function",!1),f_expr:new Fd("function",!0),f_expr_gen:new Fd("function",!0,!1,null,!0),f_gen:new Fd("function",!1,!1,null,!0)},wd=od.prototype;wd.initialContext=function(){return [Ad.b_stat]},wd.braceIsBlock=function(e){var t=this.curContext();return t===Ad.f_expr||t===Ad.f_stat||(e!==Rh.colon||t!==Ad.b_stat&&t!==Ad.b_expr?e===Rh._return||e===Rh.name&&this.exprAllowed?Mh.test(this.input.slice(this.lastTokEnd,this.start)):e===Rh._else||e===Rh.semi||e===Rh.eof||e===Rh.parenR||e===Rh.arrow||(e===Rh.braceL?t===Ad.b_stat:e!==Rh._var&&e!==Rh._const&&e!==Rh.name&&!this.exprAllowed):!t.isExpr)},wd.inGeneratorContext=function(){for(var e=this.context.length-1;e>=1;e--){var t=this.context[e];if("function"===t.token)return t.generator}return !1},wd.updateContext=function(e){var t,r=this.type;r.keyword&&e===Rh.dot?this.exprAllowed=!1:(t=r.updateContext)?t.call(this,e):this.exprAllowed=r.beforeExpr;},Rh.parenR.updateContext=Rh.braceR.updateContext=function(){if(1!==this.context.length){var e=this.context.pop();e===Ad.b_stat&&"function"===this.curContext().token&&(e=this.context.pop()),this.exprAllowed=!e.isExpr;}else this.exprAllowed=!0;},Rh.braceL.updateContext=function(e){this.context.push(this.braceIsBlock(e)?Ad.b_stat:Ad.b_expr),this.exprAllowed=!0;},Rh.dollarBraceL.updateContext=function(){this.context.push(Ad.b_tmpl),this.exprAllowed=!0;},Rh.parenL.updateContext=function(e){var t=e===Rh._if||e===Rh._for||e===Rh._with||e===Rh._while;this.context.push(t?Ad.p_stat:Ad.p_expr),this.exprAllowed=!0;},Rh.incDec.updateContext=function(){},Rh._function.updateContext=Rh._class.updateContext=function(e){!e.beforeExpr||e===Rh.semi||e===Rh._else||e===Rh._return&&Mh.test(this.input.slice(this.lastTokEnd,this.start))||(e===Rh.colon||e===Rh.braceL)&&this.curContext()===Ad.b_stat?this.context.push(Ad.f_stat):this.context.push(Ad.f_expr),this.exprAllowed=!1;},Rh.backQuote.updateContext=function(){this.curContext()===Ad.q_tmpl?this.context.pop():this.context.push(Ad.q_tmpl),this.exprAllowed=!1;},Rh.star.updateContext=function(e){if(e===Rh._function){var t=this.context.length-1;this.context[t]===Ad.f_expr?this.context[t]=Ad.f_expr_gen:this.context[t]=Ad.f_gen;}this.exprAllowed=!0;},Rh.name.updateContext=function(e){var t=!1;this.options.ecmaVersion>=6&&e!==Rh.dot&&("of"===this.value&&!this.exprAllowed||"yield"===this.value&&this.inGeneratorContext())&&(t=!0),this.exprAllowed=t;};var _d="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",Td=_d+" Extended_Pictographic",Pd={9:_d,10:Td,11:"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS Extended_Pictographic"},Id="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",Bd="Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",Od=Bd+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",Ld={9:Bd,10:Od,11:"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho"},Nd={};function jd(e){var t=Nd[e]={binary:Jh(Pd[e]+" "+Id),nonBinary:{General_Category:Jh(Id),Script:Jh(Ld[e])}};t.nonBinary.Script_Extensions=t.nonBinary.Script,t.nonBinary.gc=t.nonBinary.General_Category,t.nonBinary.sc=t.nonBinary.Script,t.nonBinary.scx=t.nonBinary.Script_Extensions;}jd(9),jd(10),jd(11);var Rd=od.prototype,Md=function(e){this.parser=e,this.validFlags="gim"+(e.options.ecmaVersion>=6?"uy":"")+(e.options.ecmaVersion>=9?"s":""),this.unicodeProperties=Nd[e.options.ecmaVersion>=11?11:e.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[];};function Vd(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}function Ud(e){return 36===e||e>=40&&e<=43||46===e||63===e||e>=91&&e<=94||e>=123&&e<=125}function qd(e){return e>=65&&e<=90||e>=97&&e<=122}function Wd(e){return qd(e)||95===e}function $d(e){return Wd(e)||Gd(e)}function Gd(e){return e>=48&&e<=57}function zd(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function Hd(e){return e>=65&&e<=70?e-65+10:e>=97&&e<=102?e-97+10:e-48}function Kd(e){return e>=48&&e<=55}Md.prototype.reset=function(e,t,r){var n=-1!==r.indexOf("u");this.start=0|e,this.source=t+"",this.flags=r,this.switchU=n&&this.parser.options.ecmaVersion>=6,this.switchN=n&&this.parser.options.ecmaVersion>=9;},Md.prototype.raise=function(e){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+e);},Md.prototype.at=function(e){var t=this.source,r=t.length;if(e>=r)return -1;var n=t.charCodeAt(e);return !this.switchU||n<=55295||n>=57344||e+1>=r?n:(n<<10)+t.charCodeAt(e+1)-56613888},Md.prototype.nextIndex=function(e){var t=this.source,r=t.length;if(e>=r)return r;var n=t.charCodeAt(e);return !this.switchU||n<=55295||n>=57344||e+1>=r?e+1:e+2},Md.prototype.current=function(){return this.at(this.pos)},Md.prototype.lookahead=function(){return this.at(this.nextIndex(this.pos))},Md.prototype.advance=function(){this.pos=this.nextIndex(this.pos);},Md.prototype.eat=function(e){return this.current()===e&&(this.advance(),!0)},Rd.validateRegExpFlags=function(e){for(var t=e.validFlags,r=e.flags,n=0;n<r.length;n++){var i=r.charAt(n);-1===t.indexOf(i)&&this.raise(e.start,"Invalid regular expression flag"),r.indexOf(i,n+1)>-1&&this.raise(e.start,"Duplicate regular expression flag");}},Rd.validateRegExpPattern=function(e){this.regexp_pattern(e),!e.switchN&&this.options.ecmaVersion>=9&&e.groupNames.length>0&&(e.switchN=!0,this.regexp_pattern(e));},Rd.regexp_pattern=function(e){e.pos=0,e.lastIntValue=0,e.lastStringValue="",e.lastAssertionIsQuantifiable=!1,e.numCapturingParens=0,e.maxBackReference=0,e.groupNames.length=0,e.backReferenceNames.length=0,this.regexp_disjunction(e),e.pos!==e.source.length&&(e.eat(41)&&e.raise("Unmatched ')'"),(e.eat(93)||e.eat(125))&&e.raise("Lone quantifier brackets")),e.maxBackReference>e.numCapturingParens&&e.raise("Invalid escape");for(var t=0,r=e.backReferenceNames;t<r.length;t+=1){var n=r[t];-1===e.groupNames.indexOf(n)&&e.raise("Invalid named capture referenced");}},Rd.regexp_disjunction=function(e){for(this.regexp_alternative(e);e.eat(124);)this.regexp_alternative(e);this.regexp_eatQuantifier(e,!0)&&e.raise("Nothing to repeat"),e.eat(123)&&e.raise("Lone quantifier brackets");},Rd.regexp_alternative=function(e){for(;e.pos<e.source.length&&this.regexp_eatTerm(e););},Rd.regexp_eatTerm=function(e){return this.regexp_eatAssertion(e)?(e.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(e)&&e.switchU&&e.raise("Invalid quantifier"),!0):!(e.switchU?!this.regexp_eatAtom(e):!this.regexp_eatExtendedAtom(e))&&(this.regexp_eatQuantifier(e),!0)},Rd.regexp_eatAssertion=function(e){var t=e.pos;if(e.lastAssertionIsQuantifiable=!1,e.eat(94)||e.eat(36))return !0;if(e.eat(92)){if(e.eat(66)||e.eat(98))return !0;e.pos=t;}if(e.eat(40)&&e.eat(63)){var r=!1;if(this.options.ecmaVersion>=9&&(r=e.eat(60)),e.eat(61)||e.eat(33))return this.regexp_disjunction(e),e.eat(41)||e.raise("Unterminated group"),e.lastAssertionIsQuantifiable=!r,!0}return e.pos=t,!1},Rd.regexp_eatQuantifier=function(e,t){return void 0===t&&(t=!1),!!this.regexp_eatQuantifierPrefix(e,t)&&(e.eat(63),!0)},Rd.regexp_eatQuantifierPrefix=function(e,t){return e.eat(42)||e.eat(43)||e.eat(63)||this.regexp_eatBracedQuantifier(e,t)},Rd.regexp_eatBracedQuantifier=function(e,t){var r=e.pos;if(e.eat(123)){var n=0,i=-1;if(this.regexp_eatDecimalDigits(e)&&(n=e.lastIntValue,e.eat(44)&&this.regexp_eatDecimalDigits(e)&&(i=e.lastIntValue),e.eat(125)))return -1!==i&&i<n&&!t&&e.raise("numbers out of order in {} quantifier"),!0;e.switchU&&!t&&e.raise("Incomplete quantifier"),e.pos=r;}return !1},Rd.regexp_eatAtom=function(e){return this.regexp_eatPatternCharacters(e)||e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)},Rd.regexp_eatReverseSolidusAtomEscape=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatAtomEscape(e))return !0;e.pos=t;}return !1},Rd.regexp_eatUncapturingGroup=function(e){var t=e.pos;if(e.eat(40)){if(e.eat(63)&&e.eat(58)){if(this.regexp_disjunction(e),e.eat(41))return !0;e.raise("Unterminated group");}e.pos=t;}return !1},Rd.regexp_eatCapturingGroup=function(e){if(e.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(e):63===e.current()&&e.raise("Invalid group"),this.regexp_disjunction(e),e.eat(41))return e.numCapturingParens+=1,!0;e.raise("Unterminated group");}return !1},Rd.regexp_eatExtendedAtom=function(e){return e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)||this.regexp_eatInvalidBracedQuantifier(e)||this.regexp_eatExtendedPatternCharacter(e)},Rd.regexp_eatInvalidBracedQuantifier=function(e){return this.regexp_eatBracedQuantifier(e,!0)&&e.raise("Nothing to repeat"),!1},Rd.regexp_eatSyntaxCharacter=function(e){var t=e.current();return !!Ud(t)&&(e.lastIntValue=t,e.advance(),!0)},Rd.regexp_eatPatternCharacters=function(e){for(var t=e.pos,r=0;-1!==(r=e.current())&&!Ud(r);)e.advance();return e.pos!==t},Rd.regexp_eatExtendedPatternCharacter=function(e){var t=e.current();return !(-1===t||36===t||t>=40&&t<=43||46===t||63===t||91===t||94===t||124===t)&&(e.advance(),!0)},Rd.regexp_groupSpecifier=function(e){if(e.eat(63)){if(this.regexp_eatGroupName(e))return -1!==e.groupNames.indexOf(e.lastStringValue)&&e.raise("Duplicate capture group name"),void e.groupNames.push(e.lastStringValue);e.raise("Invalid group");}},Rd.regexp_eatGroupName=function(e){if(e.lastStringValue="",e.eat(60)){if(this.regexp_eatRegExpIdentifierName(e)&&e.eat(62))return !0;e.raise("Invalid capture group name");}return !1},Rd.regexp_eatRegExpIdentifierName=function(e){if(e.lastStringValue="",this.regexp_eatRegExpIdentifierStart(e)){for(e.lastStringValue+=Vd(e.lastIntValue);this.regexp_eatRegExpIdentifierPart(e);)e.lastStringValue+=Vd(e.lastIntValue);return !0}return !1},Rd.regexp_eatRegExpIdentifierStart=function(e){var t=e.pos,r=e.current();return e.advance(),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e)&&(r=e.lastIntValue),function(e){return Th(e,!0)||36===e||95===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},Rd.regexp_eatRegExpIdentifierPart=function(e){var t=e.pos,r=e.current();return e.advance(),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e)&&(r=e.lastIntValue),function(e){return Ph(e,!0)||36===e||95===e||8204===e||8205===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},Rd.regexp_eatAtomEscape=function(e){return !!(this.regexp_eatBackReference(e)||this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)||e.switchN&&this.regexp_eatKGroupName(e))||(e.switchU&&(99===e.current()&&e.raise("Invalid unicode escape"),e.raise("Invalid escape")),!1)},Rd.regexp_eatBackReference=function(e){var t=e.pos;if(this.regexp_eatDecimalEscape(e)){var r=e.lastIntValue;if(e.switchU)return r>e.maxBackReference&&(e.maxBackReference=r),!0;if(r<=e.numCapturingParens)return !0;e.pos=t;}return !1},Rd.regexp_eatKGroupName=function(e){if(e.eat(107)){if(this.regexp_eatGroupName(e))return e.backReferenceNames.push(e.lastStringValue),!0;e.raise("Invalid named reference");}return !1},Rd.regexp_eatCharacterEscape=function(e){return this.regexp_eatControlEscape(e)||this.regexp_eatCControlLetter(e)||this.regexp_eatZero(e)||this.regexp_eatHexEscapeSequence(e)||this.regexp_eatRegExpUnicodeEscapeSequence(e)||!e.switchU&&this.regexp_eatLegacyOctalEscapeSequence(e)||this.regexp_eatIdentityEscape(e)},Rd.regexp_eatCControlLetter=function(e){var t=e.pos;if(e.eat(99)){if(this.regexp_eatControlLetter(e))return !0;e.pos=t;}return !1},Rd.regexp_eatZero=function(e){return 48===e.current()&&!Gd(e.lookahead())&&(e.lastIntValue=0,e.advance(),!0)},Rd.regexp_eatControlEscape=function(e){var t=e.current();return 116===t?(e.lastIntValue=9,e.advance(),!0):110===t?(e.lastIntValue=10,e.advance(),!0):118===t?(e.lastIntValue=11,e.advance(),!0):102===t?(e.lastIntValue=12,e.advance(),!0):114===t&&(e.lastIntValue=13,e.advance(),!0)},Rd.regexp_eatControlLetter=function(e){var t=e.current();return !!qd(t)&&(e.lastIntValue=t%32,e.advance(),!0)},Rd.regexp_eatRegExpUnicodeEscapeSequence=function(e){var t,r=e.pos;if(e.eat(117)){if(this.regexp_eatFixedHexDigits(e,4)){var n=e.lastIntValue;if(e.switchU&&n>=55296&&n<=56319){var i=e.pos;if(e.eat(92)&&e.eat(117)&&this.regexp_eatFixedHexDigits(e,4)){var a=e.lastIntValue;if(a>=56320&&a<=57343)return e.lastIntValue=1024*(n-55296)+(a-56320)+65536,!0}e.pos=i,e.lastIntValue=n;}return !0}if(e.switchU&&e.eat(123)&&this.regexp_eatHexDigits(e)&&e.eat(125)&&((t=e.lastIntValue)>=0&&t<=1114111))return !0;e.switchU&&e.raise("Invalid unicode escape"),e.pos=r;}return !1},Rd.regexp_eatIdentityEscape=function(e){if(e.switchU)return !!this.regexp_eatSyntaxCharacter(e)||!!e.eat(47)&&(e.lastIntValue=47,!0);var t=e.current();return !(99===t||e.switchN&&107===t)&&(e.lastIntValue=t,e.advance(),!0)},Rd.regexp_eatDecimalEscape=function(e){e.lastIntValue=0;var t=e.current();if(t>=49&&t<=57){do{e.lastIntValue=10*e.lastIntValue+(t-48),e.advance();}while((t=e.current())>=48&&t<=57);return !0}return !1},Rd.regexp_eatCharacterClassEscape=function(e){var t=e.current();if(function(e){return 100===e||68===e||115===e||83===e||119===e||87===e}(t))return e.lastIntValue=-1,e.advance(),!0;if(e.switchU&&this.options.ecmaVersion>=9&&(80===t||112===t)){if(e.lastIntValue=-1,e.advance(),e.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(e)&&e.eat(125))return !0;e.raise("Invalid property name");}return !1},Rd.regexp_eatUnicodePropertyValueExpression=function(e){var t=e.pos;if(this.regexp_eatUnicodePropertyName(e)&&e.eat(61)){var r=e.lastStringValue;if(this.regexp_eatUnicodePropertyValue(e)){var n=e.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(e,r,n),!0}}if(e.pos=t,this.regexp_eatLoneUnicodePropertyNameOrValue(e)){var i=e.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(e,i),!0}return !1},Rd.regexp_validateUnicodePropertyNameAndValue=function(e,t,r){Hh(e.unicodeProperties.nonBinary,t)||e.raise("Invalid property name"),e.unicodeProperties.nonBinary[t].test(r)||e.raise("Invalid property value");},Rd.regexp_validateUnicodePropertyNameOrValue=function(e,t){e.unicodeProperties.binary.test(t)||e.raise("Invalid property name");},Rd.regexp_eatUnicodePropertyName=function(e){var t=0;for(e.lastStringValue="";Wd(t=e.current());)e.lastStringValue+=Vd(t),e.advance();return ""!==e.lastStringValue},Rd.regexp_eatUnicodePropertyValue=function(e){var t=0;for(e.lastStringValue="";$d(t=e.current());)e.lastStringValue+=Vd(t),e.advance();return ""!==e.lastStringValue},Rd.regexp_eatLoneUnicodePropertyNameOrValue=function(e){return this.regexp_eatUnicodePropertyValue(e)},Rd.regexp_eatCharacterClass=function(e){if(e.eat(91)){if(e.eat(94),this.regexp_classRanges(e),e.eat(93))return !0;e.raise("Unterminated character class");}return !1},Rd.regexp_classRanges=function(e){for(;this.regexp_eatClassAtom(e);){var t=e.lastIntValue;if(e.eat(45)&&this.regexp_eatClassAtom(e)){var r=e.lastIntValue;!e.switchU||-1!==t&&-1!==r||e.raise("Invalid character class"),-1!==t&&-1!==r&&t>r&&e.raise("Range out of order in character class");}}},Rd.regexp_eatClassAtom=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatClassEscape(e))return !0;if(e.switchU){var r=e.current();(99===r||Kd(r))&&e.raise("Invalid class escape"),e.raise("Invalid escape");}e.pos=t;}var n=e.current();return 93!==n&&(e.lastIntValue=n,e.advance(),!0)},Rd.regexp_eatClassEscape=function(e){var t=e.pos;if(e.eat(98))return e.lastIntValue=8,!0;if(e.switchU&&e.eat(45))return e.lastIntValue=45,!0;if(!e.switchU&&e.eat(99)){if(this.regexp_eatClassControlLetter(e))return !0;e.pos=t;}return this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)},Rd.regexp_eatClassControlLetter=function(e){var t=e.current();return !(!Gd(t)&&95!==t)&&(e.lastIntValue=t%32,e.advance(),!0)},Rd.regexp_eatHexEscapeSequence=function(e){var t=e.pos;if(e.eat(120)){if(this.regexp_eatFixedHexDigits(e,2))return !0;e.switchU&&e.raise("Invalid escape"),e.pos=t;}return !1},Rd.regexp_eatDecimalDigits=function(e){var t=e.pos,r=0;for(e.lastIntValue=0;Gd(r=e.current());)e.lastIntValue=10*e.lastIntValue+(r-48),e.advance();return e.pos!==t},Rd.regexp_eatHexDigits=function(e){var t=e.pos,r=0;for(e.lastIntValue=0;zd(r=e.current());)e.lastIntValue=16*e.lastIntValue+Hd(r),e.advance();return e.pos!==t},Rd.regexp_eatLegacyOctalEscapeSequence=function(e){if(this.regexp_eatOctalDigit(e)){var t=e.lastIntValue;if(this.regexp_eatOctalDigit(e)){var r=e.lastIntValue;t<=3&&this.regexp_eatOctalDigit(e)?e.lastIntValue=64*t+8*r+e.lastIntValue:e.lastIntValue=8*t+r;}else e.lastIntValue=t;return !0}return !1},Rd.regexp_eatOctalDigit=function(e){var t=e.current();return Kd(t)?(e.lastIntValue=t-48,e.advance(),!0):(e.lastIntValue=0,!1)},Rd.regexp_eatFixedHexDigits=function(e,t){var r=e.pos;e.lastIntValue=0;for(var n=0;n<t;++n){var i=e.current();if(!zd(i))return e.pos=r,!1;e.lastIntValue=16*e.lastIntValue+Hd(i),e.advance();}return !0};var Jd=function(e){this.type=e.type,this.value=e.value,this.start=e.start,this.end=e.end,e.options.locations&&(this.loc=new Xh(e,e.startLoc,e.endLoc)),e.options.ranges&&(this.range=[e.start,e.end]);},Qd=od.prototype;function Xd(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}Qd.next=function(){this.options.onToken&&this.options.onToken(new Jd(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken();},Qd.getToken=function(){return this.next(),new Jd(this)},"undefined"!=typeof Symbol&&(Qd[Symbol.iterator]=function(){var e=this;return {next:function(){var t=e.getToken();return {done:t.type===Rh.eof,value:t}}}}),Qd.curContext=function(){return this.context[this.context.length-1]},Qd.nextToken=function(){var e=this.curContext();return e&&e.preserveSpace||this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(Rh.eof):e.override?e.override(this):void this.readToken(this.fullCharCodeAtPos())},Qd.readToken=function(e){return Th(e,this.options.ecmaVersion>=6)||92===e?this.readWord():this.getTokenFromCode(e)},Qd.fullCharCodeAtPos=function(){var e=this.input.charCodeAt(this.pos);return e<=55295||e>=57344?e:(e<<10)+this.input.charCodeAt(this.pos+1)-56613888},Qd.skipBlockComment=function(){var e,t=this.options.onComment&&this.curPosition(),r=this.pos,n=this.input.indexOf("*/",this.pos+=2);if(-1===n&&this.raise(this.pos-2,"Unterminated comment"),this.pos=n+2,this.options.locations)for(Vh.lastIndex=r;(e=Vh.exec(this.input))&&e.index<this.pos;)++this.curLine,this.lineStart=e.index+e[0].length;this.options.onComment&&this.options.onComment(!0,this.input.slice(r+2,n),r,this.pos,t,this.curPosition());},Qd.skipLineComment=function(e){for(var t=this.pos,r=this.options.onComment&&this.curPosition(),n=this.input.charCodeAt(this.pos+=e);this.pos<this.input.length&&!Uh(n);)n=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(t+e,this.pos),t,this.pos,r,this.curPosition());},Qd.skipSpace=function(){e:for(;this.pos<this.input.length;){var e=this.input.charCodeAt(this.pos);switch(e){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(!(e>8&&e<14||e>=5760&&qh.test(String.fromCharCode(e))))break e;++this.pos;}}},Qd.finishToken=function(e,t){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var r=this.type;this.type=e,this.value=t,this.updateContext(r);},Qd.readToken_dot=function(){var e=this.input.charCodeAt(this.pos+1);if(e>=48&&e<=57)return this.readNumber(!0);var t=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===e&&46===t?(this.pos+=3,this.finishToken(Rh.ellipsis)):(++this.pos,this.finishToken(Rh.dot))},Qd.readToken_slash=function(){var e=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===e?this.finishOp(Rh.assign,2):this.finishOp(Rh.slash,1)},Qd.readToken_mult_modulo_exp=function(e){var t=this.input.charCodeAt(this.pos+1),r=1,n=42===e?Rh.star:Rh.modulo;return this.options.ecmaVersion>=7&&42===e&&42===t&&(++r,n=Rh.starstar,t=this.input.charCodeAt(this.pos+2)),61===t?this.finishOp(Rh.assign,r+1):this.finishOp(n,r)},Qd.readToken_pipe_amp=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?this.finishOp(124===e?Rh.logicalOR:Rh.logicalAND,2):61===t?this.finishOp(Rh.assign,2):this.finishOp(124===e?Rh.bitwiseOR:Rh.bitwiseAND,1)},Qd.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(Rh.assign,2):this.finishOp(Rh.bitwiseXOR,1)},Qd.readToken_plus_min=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?45!==t||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!Mh.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(Rh.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===t?this.finishOp(Rh.assign,2):this.finishOp(Rh.plusMin,1)},Qd.readToken_lt_gt=function(e){var t=this.input.charCodeAt(this.pos+1),r=1;return t===e?(r=62===e&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+r)?this.finishOp(Rh.assign,r+1):this.finishOp(Rh.bitShift,r)):33!==t||60!==e||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===t&&(r=2),this.finishOp(Rh.relational,r)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},Qd.readToken_eq_excl=function(e){var t=this.input.charCodeAt(this.pos+1);return 61===t?this.finishOp(Rh.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===e&&62===t&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(Rh.arrow)):this.finishOp(61===e?Rh.eq:Rh.prefix,1)},Qd.getTokenFromCode=function(e){switch(e){case 46:return this.readToken_dot();case 40:return ++this.pos,this.finishToken(Rh.parenL);case 41:return ++this.pos,this.finishToken(Rh.parenR);case 59:return ++this.pos,this.finishToken(Rh.semi);case 44:return ++this.pos,this.finishToken(Rh.comma);case 91:return ++this.pos,this.finishToken(Rh.bracketL);case 93:return ++this.pos,this.finishToken(Rh.bracketR);case 123:return ++this.pos,this.finishToken(Rh.braceL);case 125:return ++this.pos,this.finishToken(Rh.braceR);case 58:return ++this.pos,this.finishToken(Rh.colon);case 63:return ++this.pos,this.finishToken(Rh.question);case 96:if(this.options.ecmaVersion<6)break;return ++this.pos,this.finishToken(Rh.backQuote);case 48:var t=this.input.charCodeAt(this.pos+1);if(120===t||88===t)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===t||79===t)return this.readRadixNumber(8);if(98===t||66===t)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(e);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(e);case 124:case 38:return this.readToken_pipe_amp(e);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(e);case 60:case 62:return this.readToken_lt_gt(e);case 61:case 33:return this.readToken_eq_excl(e);case 126:return this.finishOp(Rh.prefix,1)}this.raise(this.pos,"Unexpected character '"+Xd(e)+"'");},Qd.finishOp=function(e,t){var r=this.input.slice(this.pos,this.pos+t);return this.pos+=t,this.finishToken(e,r)},Qd.readRegexp=function(){for(var e,t,r=this.pos;;){this.pos>=this.input.length&&this.raise(r,"Unterminated regular expression");var n=this.input.charAt(this.pos);if(Mh.test(n)&&this.raise(r,"Unterminated regular expression"),e)e=!1;else {if("["===n)t=!0;else if("]"===n&&t)t=!1;else if("/"===n&&!t)break;e="\\"===n;}++this.pos;}var i=this.input.slice(r,this.pos);++this.pos;var a=this.pos,o=this.readWord1();this.containsEsc&&this.unexpected(a);var s=this.regexpState||(this.regexpState=new Md(this));s.reset(r,i,o),this.validateRegExpFlags(s),this.validateRegExpPattern(s);var u=null;try{u=new RegExp(i,o);}catch(e){}return this.finishToken(Rh.regexp,{pattern:i,flags:o,value:u})},Qd.readInt=function(e,t){for(var r=this.pos,n=0,i=0,a=null==t?1/0:t;i<a;++i){var o=this.input.charCodeAt(this.pos),s=void 0;if((s=o>=97?o-97+10:o>=65?o-65+10:o>=48&&o<=57?o-48:1/0)>=e)break;++this.pos,n=n*e+s;}return this.pos===r||null!=t&&this.pos-r!==t?null:n},Qd.readRadixNumber=function(e){var t=this.pos;this.pos+=2;var r=this.readInt(e);return null==r&&this.raise(this.start+2,"Expected number in radix "+e),this.options.ecmaVersion>=11&&110===this.input.charCodeAt(this.pos)?(r="undefined"!=typeof BigInt?BigInt(this.input.slice(t,this.pos)):null,++this.pos):Th(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(Rh.num,r)},Qd.readNumber=function(e){var t=this.pos;e||null!==this.readInt(10)||this.raise(t,"Invalid number");var r=this.pos-t>=2&&48===this.input.charCodeAt(t);r&&this.strict&&this.raise(t,"Invalid number"),r&&/[89]/.test(this.input.slice(t,this.pos))&&(r=!1);var n=this.input.charCodeAt(this.pos);if(!r&&!e&&this.options.ecmaVersion>=11&&110===n){var i=this.input.slice(t,this.pos),a="undefined"!=typeof BigInt?BigInt(i):null;return ++this.pos,Th(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(Rh.num,a)}46!==n||r||(++this.pos,this.readInt(10),n=this.input.charCodeAt(this.pos)),69!==n&&101!==n||r||(43!==(n=this.input.charCodeAt(++this.pos))&&45!==n||++this.pos,null===this.readInt(10)&&this.raise(t,"Invalid number")),Th(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var o=this.input.slice(t,this.pos),s=r?parseInt(o,8):parseFloat(o);return this.finishToken(Rh.num,s)},Qd.readCodePoint=function(){var e;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var t=++this.pos;e=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,e>1114111&&this.invalidStringToken(t,"Code point out of bounds");}else e=this.readHexChar(4);return e},Qd.readString=function(e){for(var t="",r=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var n=this.input.charCodeAt(this.pos);if(n===e)break;92===n?(t+=this.input.slice(r,this.pos),t+=this.readEscapedChar(!1),r=this.pos):(Uh(n,this.options.ecmaVersion>=10)&&this.raise(this.start,"Unterminated string constant"),++this.pos);}return t+=this.input.slice(r,this.pos++),this.finishToken(Rh.string,t)};var Yd={};Qd.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken();}catch(e){if(e!==Yd)throw e;this.readInvalidTemplateToken();}this.inTemplateElement=!1;},Qd.invalidStringToken=function(e,t){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw Yd;this.raise(e,t);},Qd.readTmplToken=function(){for(var e="",t=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var r=this.input.charCodeAt(this.pos);if(96===r||36===r&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==Rh.template&&this.type!==Rh.invalidTemplate?(e+=this.input.slice(t,this.pos),this.finishToken(Rh.template,e)):36===r?(this.pos+=2,this.finishToken(Rh.dollarBraceL)):(++this.pos,this.finishToken(Rh.backQuote));if(92===r)e+=this.input.slice(t,this.pos),e+=this.readEscapedChar(!0),t=this.pos;else if(Uh(r)){switch(e+=this.input.slice(t,this.pos),++this.pos,r){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:e+="\n";break;default:e+=String.fromCharCode(r);}this.options.locations&&(++this.curLine,this.lineStart=this.pos),t=this.pos;}else ++this.pos;}},Qd.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\":++this.pos;break;case"$":if("{"!==this.input[this.pos+1])break;case"`":return this.finishToken(Rh.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template");},Qd.readEscapedChar=function(e){var t=this.input.charCodeAt(++this.pos);switch(++this.pos,t){case 110:return "\n";case 114:return "\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return Xd(this.readCodePoint());case 116:return "\t";case 98:return "\b";case 118:return "\v";case 102:return "\f";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";default:if(t>=48&&t<=55){var r=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],n=parseInt(r,8);return n>255&&(r=r.slice(0,-1),n=parseInt(r,8)),this.pos+=r.length-1,t=this.input.charCodeAt(this.pos),"0"===r&&56!==t&&57!==t||!this.strict&&!e||this.invalidStringToken(this.pos-1-r.length,e?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(n)}return Uh(t)?"":String.fromCharCode(t)}},Qd.readHexChar=function(e){var t=this.pos,r=this.readInt(16,e);return null===r&&this.invalidStringToken(t,"Bad character escape sequence"),r},Qd.readWord1=function(){this.containsEsc=!1;for(var e="",t=!0,r=this.pos,n=this.options.ecmaVersion>=6;this.pos<this.input.length;){var i=this.fullCharCodeAtPos();if(Ph(i,n))this.pos+=i<=65535?1:2;else {if(92!==i)break;this.containsEsc=!0,e+=this.input.slice(r,this.pos);var a=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var o=this.readCodePoint();(t?Th:Ph)(o,n)||this.invalidStringToken(a,"Invalid Unicode escape"),e+=Xd(o),r=this.pos;}t=!1;}return e+this.input.slice(r,this.pos)},Qd.readWord=function(){var e=this.readWord1(),t=Rh.name;return this.keywords.test(e)&&(this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+e),t=Nh[e]),this.finishToken(t,e)};od.acorn={Parser:od,version:"6.4.0",defaultOptions:Zh,Position:Qh,SourceLocation:Xh,getLineInfo:Yh,Node:Sd,TokenType:Ih,tokTypes:Rh,keywordTypes:Nh,TokContext:Fd,tokContexts:Ad,isIdentifierChar:Ph,isIdentifierStart:Th,Token:Jd,isNewLine:Uh,lineBreak:Mh,lineBreakG:Vh,nonASCIIwhitespace:qh};var Zd=n(Object.freeze({__proto__:null,Node:Sd,Parser:od,Position:Qh,SourceLocation:Xh,TokContext:Fd,Token:Jd,TokenType:Ih,defaultOptions:Zh,getLineInfo:Yh,isIdentifierChar:Ph,isIdentifierStart:Th,isNewLine:Uh,keywordTypes:Nh,lineBreak:Mh,lineBreakG:Vh,nonASCIIwhitespace:qh,parse:function(e,t){return od.parse(e,t)},parseExpressionAt:function(e,t,r){return od.parseExpressionAt(e,t,r)},tokContexts:Ad,tokTypes:Rh,tokenizer:function(e,t){return od.tokenizer(e,t)},version:"6.4.0"})),em=r((function(e){var t=/^[\da-fA-F]+$/,r=/^\d+$/,n=new WeakMap;function i(e){e=e.Parser.acorn||e;var t=n.get(e);if(!t){var r=e.tokTypes,i=e.TokContext,a=e.TokenType,o=new i("<tag",!1),s=new i("</tag",!1),u=new i("<tag>...</tag>",!0,!0),c={tc_oTag:o,tc_cTag:s,tc_expr:u},l={jsxName:new a("jsxName"),jsxText:new a("jsxText",{beforeExpr:!0}),jsxTagStart:new a("jsxTagStart"),jsxTagEnd:new a("jsxTagEnd")};l.jsxTagStart.updateContext=function(){this.context.push(u),this.context.push(o),this.exprAllowed=!1;},l.jsxTagEnd.updateContext=function(e){var t=this.context.pop();t===o&&e===r.slash||t===s?(this.context.pop(),this.exprAllowed=this.curContext()===u):this.exprAllowed=!0;},t={tokContexts:c,tokTypes:l},n.set(e,t);}return t}function o(e){return e?"JSXIdentifier"===e.type?e.name:"JSXNamespacedName"===e.type?e.namespace.name+":"+e.name.name:"JSXMemberExpression"===e.type?o(e.object)+"."+o(e.property):void 0:e}e.exports=function(e){return e=e||{},function(n){return function(e,n){var u=n.acorn||Zd,c=i(u),l=u.tokTypes,p=c.tokTypes,d=u.tokContexts,m=c.tokContexts.tc_oTag,g=c.tokContexts.tc_cTag,y=c.tokContexts.tc_expr,b=u.isNewLine,E=u.isIdentifierStart,C=u.isIdentifierChar;return function(n){function i(){return a(this,i),v(this,h(i).apply(this,arguments))}return f(i,n),s(i,[{key:"jsx_readToken",value:function(){for(var e="",t=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated JSX contents");var r=this.input.charCodeAt(this.pos);switch(r){case 60:case 123:return this.pos===this.start?60===r&&this.exprAllowed?(++this.pos,this.finishToken(p.jsxTagStart)):this.getTokenFromCode(r):(e+=this.input.slice(t,this.pos),this.finishToken(p.jsxText,e));case 38:e+=this.input.slice(t,this.pos),e+=this.jsx_readEntity(),t=this.pos;break;default:b(r)?(e+=this.input.slice(t,this.pos),e+=this.jsx_readNewLine(!0),t=this.pos):++this.pos;}}}},{key:"jsx_readNewLine",value:function(e){var t,r=this.input.charCodeAt(this.pos);return ++this.pos,13===r&&10===this.input.charCodeAt(this.pos)?(++this.pos,t=e?"\n":"\r\n"):t=String.fromCharCode(r),this.options.locations&&(++this.curLine,this.lineStart=this.pos),t}},{key:"jsx_readString",value:function(e){for(var t="",r=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var n=this.input.charCodeAt(this.pos);if(n===e)break;38===n?(t+=this.input.slice(r,this.pos),t+=this.jsx_readEntity(),r=this.pos):b(n)?(t+=this.input.slice(r,this.pos),t+=this.jsx_readNewLine(!1),r=this.pos):++this.pos;}return t+=this.input.slice(r,this.pos++),this.finishToken(l.string,t)}},{key:"jsx_readEntity",value:function(){var e,n="",i=0,a=this.input[this.pos];"&"!==a&&this.raise(this.pos,"Entity must start with an ampersand");for(var o=++this.pos;this.pos<this.input.length&&i++<10;){if(";"===(a=this.input[this.pos++])){"#"===n[0]?"x"===n[1]?(n=n.substr(2),t.test(n)&&(e=String.fromCharCode(parseInt(n,16)))):(n=n.substr(1),r.test(n)&&(e=String.fromCharCode(parseInt(n,10)))):e=vh[n];break}n+=a;}return e||(this.pos=o,"&")}},{key:"jsx_readWord",value:function(){var e,t=this.pos;do{e=this.input.charCodeAt(++this.pos);}while(C(e)||45===e);return this.finishToken(p.jsxName,this.input.slice(t,this.pos))}},{key:"jsx_parseIdentifier",value:function(){var e=this.startNode();return this.type===p.jsxName?e.name=this.value:this.type.keyword?e.name=this.type.keyword:this.unexpected(),this.next(),this.finishNode(e,"JSXIdentifier")}},{key:"jsx_parseNamespacedName",value:function(){var t=this.start,r=this.startLoc,n=this.jsx_parseIdentifier();if(!e.allowNamespaces||!this.eat(l.colon))return n;var i=this.startNodeAt(t,r);return i.namespace=n,i.name=this.jsx_parseIdentifier(),this.finishNode(i,"JSXNamespacedName")}},{key:"jsx_parseElementName",value:function(){if(this.type===p.jsxTagEnd)return "";var t=this.start,r=this.startLoc,n=this.jsx_parseNamespacedName();for(this.type!==l.dot||"JSXNamespacedName"!==n.type||e.allowNamespacedObjects||this.unexpected();this.eat(l.dot);){var i=this.startNodeAt(t,r);i.object=n,i.property=this.jsx_parseIdentifier(),n=this.finishNode(i,"JSXMemberExpression");}return n}},{key:"jsx_parseAttributeValue",value:function(){switch(this.type){case l.braceL:var e=this.jsx_parseExpressionContainer();return "JSXEmptyExpression"===e.expression.type&&this.raise(e.start,"JSX attributes must only be assigned a non-empty expression"),e;case p.jsxTagStart:case l.string:return this.parseExprAtom();default:this.raise(this.start,"JSX value should be either an expression or a quoted JSX text");}}},{key:"jsx_parseEmptyExpression",value:function(){var e=this.startNodeAt(this.lastTokEnd,this.lastTokEndLoc);return this.finishNodeAt(e,"JSXEmptyExpression",this.start,this.startLoc)}},{key:"jsx_parseExpressionContainer",value:function(){var e=this.startNode();return this.next(),e.expression=this.type===l.braceR?this.jsx_parseEmptyExpression():this.parseExpression(),this.expect(l.braceR),this.finishNode(e,"JSXExpressionContainer")}},{key:"jsx_parseAttribute",value:function(){var e=this.startNode();return this.eat(l.braceL)?(this.expect(l.ellipsis),e.argument=this.parseMaybeAssign(),this.expect(l.braceR),this.finishNode(e,"JSXSpreadAttribute")):(e.name=this.jsx_parseNamespacedName(),e.value=this.eat(l.eq)?this.jsx_parseAttributeValue():null,this.finishNode(e,"JSXAttribute"))}},{key:"jsx_parseOpeningElementAt",value:function(e,t){var r=this.startNodeAt(e,t);r.attributes=[];var n=this.jsx_parseElementName();for(n&&(r.name=n);this.type!==l.slash&&this.type!==p.jsxTagEnd;)r.attributes.push(this.jsx_parseAttribute());return r.selfClosing=this.eat(l.slash),this.expect(p.jsxTagEnd),this.finishNode(r,n?"JSXOpeningElement":"JSXOpeningFragment")}},{key:"jsx_parseClosingElementAt",value:function(e,t){var r=this.startNodeAt(e,t),n=this.jsx_parseElementName();return n&&(r.name=n),this.expect(p.jsxTagEnd),this.finishNode(r,n?"JSXClosingElement":"JSXClosingFragment")}},{key:"jsx_parseElementAt",value:function(e,t){var r=this.startNodeAt(e,t),n=[],i=this.jsx_parseOpeningElementAt(e,t),a=null;if(!i.selfClosing){e:for(;;)switch(this.type){case p.jsxTagStart:if(e=this.start,t=this.startLoc,this.next(),this.eat(l.slash)){a=this.jsx_parseClosingElementAt(e,t);break e}n.push(this.jsx_parseElementAt(e,t));break;case p.jsxText:n.push(this.parseExprAtom());break;case l.braceL:n.push(this.jsx_parseExpressionContainer());break;default:this.unexpected();}o(a.name)!==o(i.name)&&this.raise(a.start,"Expected corresponding JSX closing tag for <"+o(i.name)+">");}var s=i.name?"Element":"Fragment";return r["opening"+s]=i,r["closing"+s]=a,r.children=n,this.type===l.relational&&"<"===this.value&&this.raise(this.start,"Adjacent JSX elements must be wrapped in an enclosing tag"),this.finishNode(r,"JSX"+s)}},{key:"jsx_parseText",value:function(e){var t=this.parseLiteral(e);return t.type="JSXText",t}},{key:"jsx_parseElement",value:function(){var e=this.start,t=this.startLoc;return this.next(),this.jsx_parseElementAt(e,t)}},{key:"parseExprAtom",value:function(e){return this.type===p.jsxText?this.jsx_parseText(this.value):this.type===p.jsxTagStart?this.jsx_parseElement():x(h(i.prototype),"parseExprAtom",this).call(this,e)}},{key:"readToken",value:function(e){var t=this.curContext();if(t===y)return this.jsx_readToken();if(t===m||t===g){if(E(e))return this.jsx_readWord();if(62==e)return ++this.pos,this.finishToken(p.jsxTagEnd);if((34===e||39===e)&&t==m)return this.jsx_readString(e)}return 60===e&&this.exprAllowed&&33!==this.input.charCodeAt(this.pos+1)?(++this.pos,this.finishToken(p.jsxTagStart)):x(h(i.prototype),"readToken",this).call(this,e)}},{key:"updateContext",value:function(e){if(this.type==l.braceL){var t=this.curContext();t==m?this.context.push(d.b_expr):t==y?this.context.push(d.b_tmpl):x(h(i.prototype),"updateContext",this).call(this,e),this.exprAllowed=!0;}else {if(this.type!==l.slash||e!==p.jsxTagStart)return x(h(i.prototype),"updateContext",this).call(this,e);this.context.length-=2,this.context.push(g),this.exprAllowed=!1;}}}],[{key:"acornJsx",get:function(){return c}}]),i}(n)}({allowNamespaces:!1!==e.allowNamespaces,allowNamespacedObjects:!!e.allowNamespacedObjects},n)}},Object.defineProperty(e.exports,"tokTypes",{get:function(){return i(Zd).tokTypes},configurable:!0,enumerable:!0});})),tm={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression",JSXIdentifier:"JSXIdentifier",JSXNamespacedName:"JSXNamespacedName",JSXMemberExpression:"JSXMemberExpression",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXElement:"JSXElement",JSXClosingElement:"JSXClosingElement",JSXOpeningElement:"JSXOpeningElement",JSXAttribute:"JSXAttribute",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportAllDeclaration:"ExportAllDeclaration",ExportSpecifier:"ExportSpecifier",ImportDeclaration:"ImportDeclaration",ImportSpecifier:"ImportSpecifier",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier"},rm={Boolean:"Boolean",EOF:"<end>",Identifier:"Identifier",Keyword:"Keyword",Null:"Null",Numeric:"Numeric",Punctuator:"Punctuator",String:"String",RegularExpression:"RegularExpression",Template:"Template",JSXIdentifier:"JSXIdentifier",JSXText:"JSXText"};function nm(e,t){this._acornTokTypes=e,this._tokens=[],this._curlyBrace=null,this._code=t;}nm.prototype={constructor:nm,translate:function(e,t){var r=e.type,n=this._acornTokTypes;if(r===n.name)e.type=rm.Identifier,"static"===e.value&&(e.type=rm.Keyword),t.ecmaVersion>5&&("yield"===e.value||"let"===e.value)&&(e.type=rm.Keyword);else if(r===n.semi||r===n.comma||r===n.parenL||r===n.parenR||r===n.braceL||r===n.braceR||r===n.dot||r===n.bracketL||r===n.colon||r===n.question||r===n.bracketR||r===n.ellipsis||r===n.arrow||r===n.jsxTagStart||r===n.incDec||r===n.starstar||r===n.jsxTagEnd||r===n.prefix||r.binop&&!r.keyword||r.isAssign)e.type=rm.Punctuator,e.value=this._code.slice(e.start,e.end);else if(r===n.jsxName)e.type=rm.JSXIdentifier;else if("jsxText"===r.label||r===n.jsxAttrValueToken)e.type=rm.JSXText;else if(r.keyword)"true"===r.keyword||"false"===r.keyword?e.type=rm.Boolean:"null"===r.keyword?e.type=rm.Null:e.type=rm.Keyword;else if(r===n.num)e.type=rm.Numeric,e.value=this._code.slice(e.start,e.end);else if(r===n.string)t.jsxAttrValueToken?(t.jsxAttrValueToken=!1,e.type=rm.JSXText):e.type=rm.String,e.value=this._code.slice(e.start,e.end);else if(r===n.regexp){e.type=rm.RegularExpression;var i=e.value;e.regex={flags:i.flags,pattern:i.pattern},e.value="/".concat(i.pattern,"/").concat(i.flags);}return e},onToken:function(e,t){var r=this,n=this._acornTokTypes,i=t.tokens,a=this._tokens;function o(){i.push(function(e,t){var r=e[0],n=e[e.length-1],i={type:rm.Template,value:t.slice(r.start,n.end)};return r.loc&&(i.loc={start:r.loc.start,end:n.loc.end}),r.range&&(i.start=r.range[0],i.end=n.range[1],i.range=[i.start,i.end]),i}(r._tokens,r._code)),r._tokens=[];}if(e.type!==n.eof){if(e.type===n.backQuote)return this._curlyBrace&&(i.push(this.translate(this._curlyBrace,t)),this._curlyBrace=null),a.push(e),void(a.length>1&&o());if(e.type===n.dollarBraceL)return a.push(e),void o();if(e.type===n.braceR)return this._curlyBrace&&i.push(this.translate(this._curlyBrace,t)),void(this._curlyBrace=e);if(e.type===n.template||e.type===n.invalidTemplate)return this._curlyBrace&&(a.push(this._curlyBrace),this._curlyBrace=null),void a.push(e);this._curlyBrace&&(i.push(this.translate(this._curlyBrace,t)),this._curlyBrace=null),i.push(this.translate(e,t));}else this._curlyBrace&&i.push(this.translate(this._curlyBrace,t));}};var im=nm,am=5,om=Symbol("espree's internal state"),sm=Symbol("espree's esprimaFinishNode");function um(e){var t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:am;if("number"!=typeof e)throw new Error("ecmaVersion must be a number. Received value of type ".concat(i(e)," instead."));var t=e;switch(t>=2015&&(t-=2009),t){case 3:case 5:case 6:case 7:case 8:case 9:case 10:case 11:return t}throw new Error("Invalid ecmaVersion.")}(e.ecmaVersion),r=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"script";if("script"===e||"module"===e)return e;throw new Error("Invalid sourceType.")}(e.sourceType),n=!0===e.range,a=!0===e.loc;if("module"===r&&t<6)throw new Error("sourceType 'module' is not supported when ecmaVersion < 2015. Consider adding `{ ecmaVersion: 2015 }` to the parser options.");return Object.assign({},e,{ecmaVersion:t,sourceType:r,ranges:n,locations:a})}var cm=function(){return function(e){var t=Object.assign({},e.acorn.tokTypes);return e.acornJsx&&Object.assign(t,e.acornJsx.tokTypes),function(r){function n(e,r){var o;a(this,n),"object"===i(e)&&null!==e||(e={}),"string"==typeof r||r instanceof String||(r=String(r));var s=um(e),u=s.ecmaFeatures||{},c=!0===s.tokens?new im(t,r):null;return (o=v(this,h(n).call(this,{ecmaVersion:s.ecmaVersion,sourceType:s.sourceType,ranges:s.ranges,locations:s.locations,allowReturnOutsideFunction:Boolean(u.globalReturn),onToken:function(e){c&&c.onToken(e,o[om]),e.type!==t.eof&&(o[om].lastToken=e);},onComment:function(e,t,r,n,a,s){if(o[om].comments){var u=function(e,t,r,n,a,o){var s={type:e?"Block":"Line",value:t};return "number"==typeof r&&(s.start=r,s.end=n,s.range=[r,n]),"object"===i(a)&&(s.loc={start:a,end:o}),s}(e,t,r,n,a,s);o[om].comments.push(u);}}},r)))[om]={tokens:c?[]:null,comments:!0===s.comment?[]:null,impliedStrict:!0===u.impliedStrict&&o.options.ecmaVersion>=5,ecmaVersion:o.options.ecmaVersion,jsxAttrValueToken:!1,lastToken:null},o}return f(n,r),s(n,[{key:"tokenize",value:function(){do{this.next();}while(this.type!==t.eof);this.next();var e=this[om],r=e.tokens;return e.comments&&(r.comments=e.comments),r}},{key:"finishNode",value:function(){for(var e,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];var a=(e=x(h(n.prototype),"finishNode",this)).call.apply(e,[this].concat(r));return this[sm](a)}},{key:"finishNodeAt",value:function(){for(var e,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];var a=(e=x(h(n.prototype),"finishNodeAt",this)).call.apply(e,[this].concat(r));return this[sm](a)}},{key:"parse",value:function(){var e=this[om],t=x(h(n.prototype),"parse",this).call(this);return t.sourceType=this.options.sourceType,e.comments&&(t.comments=e.comments),e.tokens&&(t.tokens=e.tokens),t.range&&(t.range[0]=t.body.length?t.body[0].range[0]:t.range[0],t.range[1]=e.lastToken?e.lastToken.range[1]:t.range[1]),t.loc&&(t.loc.start=t.body.length?t.body[0].loc.start:t.loc.start,t.loc.end=e.lastToken?e.lastToken.loc.end:t.loc.end),t}},{key:"parseTopLevel",value:function(e){return this[om].impliedStrict&&(this.strict=!0),x(h(n.prototype),"parseTopLevel",this).call(this,e)}},{key:"raise",value:function(t,r){var n=e.acorn.getLineInfo(this.input,t),i=new SyntaxError(r);throw i.index=t,i.lineNumber=n.line,i.column=n.column+1,i}},{key:"raiseRecoverable",value:function(e,t){this.raise(e,t);}},{key:"unexpected",value:function(e){var t="Unexpected token";if(null!=e){if(this.pos=e,this.options.locations)for(;this.pos<this.lineStart;)this.lineStart=this.input.lastIndexOf("\n",this.lineStart-2)+1,--this.curLine;this.nextToken();}this.end>this.start&&(t+=" ".concat(this.input.slice(this.start,this.end))),this.raise(this.start,t);}},{key:"jsx_readString",value:function(e){var r=x(h(n.prototype),"jsx_readString",this).call(this,e);return this.type===t.string&&(this[om].jsxAttrValueToken=!0),r}},{key:sm,value:function(e){if("TemplateElement"===e.type){var t="${"===this.input.slice(e.end,e.end+2);e.range&&(e.range[0]--,e.range[1]+=t?2:1),e.loc&&(e.loc.start.column--,e.loc.end.column+=t?2:1);}return e.type.indexOf("Function")>-1&&!e.generator&&(e.generator=!1),e}}]),n}(e)}},lm="An Esprima-compatible JavaScript parser built on Acorn",pm="Nicholas C. Zakas <nicholas+npm@nczconsulting.com>",fm="https://github.com/eslint/espree",hm=["lib","espree.js"],dm={node:">=6.0.0"},mm={url:"http://github.com/eslint/espree.git"},gm={acorn:"^7.1.0","acorn-jsx":"^5.1.0","eslint-visitor-keys":"^1.1.0"},ym={browserify:"^16.5.0",chai:"^4.2.0",eslint:"^6.0.1","eslint-config-eslint":"^5.0.1","eslint-plugin-node":"^9.1.0","eslint-release":"^1.0.0",esprima:"latest","esprima-fb":"^8001.2001.0-dev-harmony-fb","json-diff":"^0.5.4",leche:"^2.3.0",mocha:"^6.2.0",nyc:"^14.1.1",regenerate:"^1.4.0",shelljs:"^0.3.0","shelljs-nodecli":"^0.1.1","unicode-6.3.0":"^0.7.5"},vm=["ast","ecmascript","javascript","parser","syntax","acorn"],xm={"generate-regex":"node tools/generate-identifier-regex.js",test:"npm run-script lint && node Makefile.js test",lint:"node Makefile.js lint",browserify:"node Makefile.js browserify","generate-release":"eslint-generate-release","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","publish-release":"eslint-publish-release"},bm={name:"espree",description:lm,author:pm,homepage:fm,main:"espree.js",version:"6.1.2",files:hm,engines:dm,repository:"eslint/espree",bugs:mm,license:"BSD-2-Clause",dependencies:gm,devDependencies:ym,keywords:vm,scripts:xm},Em=Object.freeze({__proto__:null,name:"espree",description:lm,author:pm,homepage:fm,main:"espree.js",version:"6.1.2",files:hm,engines:dm,repository:"eslint/espree",bugs:mm,license:"BSD-2-Clause",dependencies:gm,devDependencies:ym,keywords:vm,scripts:xm,default:bm}),Cm=n(yh),Sm=n(Em),km={_regular:null,_jsx:null,get regular(){return null===this._regular&&(this._regular=Cm.Parser.extend(cm())),this._regular},get jsx(){return null===this._jsx&&(this._jsx=Cm.Parser.extend(em(),cm())),this._jsx},get:function(e){return Boolean(e&&e.ecmaFeatures&&e.ecmaFeatures.jsx)?this.jsx:this.regular}};var Dm={version:Sm.version,tokenize:function(e,t){var r=km.get(t);return t&&!0===t.tokens||(t=Object.assign({},t,{tokens:!0})),new r(t,e).tokenize()},parse:function(e,t){return new(km.get(t))(t,e).parse()},Syntax:function(){var e,t={};for(e in "function"==typeof Object.create&&(t=Object.create(null)),tm)Object.hasOwnProperty.call(tm,e)&&(t[e]=tm[e]);return "function"==typeof Object.freeze&&Object.freeze(t),t}(),VisitorKeys:Lp.KEYS},Fm=r((function(t,r){(function(){var n,a=200,o="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",s="Expected a function",u="__lodash_hash_undefined__",c=500,l="__lodash_placeholder__",p=1,f=2,h=4,d=1,m=2,g=1,y=2,v=4,x=8,b=16,E=32,C=64,S=128,k=256,D=512,F=30,A="...",w=800,_=16,T=1,P=2,I=1/0,B=9007199254740991,O=17976931348623157e292,L=NaN,N=4294967295,j=N-1,R=N>>>1,M=[["ary",S],["bind",g],["bindKey",y],["curry",x],["curryRight",b],["flip",D],["partial",E],["partialRight",C],["rearg",k]],V="[object Arguments]",U="[object Array]",q="[object AsyncFunction]",W="[object Boolean]",$="[object Date]",G="[object DOMException]",z="[object Error]",H="[object Function]",K="[object GeneratorFunction]",J="[object Map]",Q="[object Number]",X="[object Null]",Y="[object Object]",Z="[object Proxy]",ee="[object RegExp]",te="[object Set]",re="[object String]",ne="[object Symbol]",ie="[object Undefined]",ae="[object WeakMap]",oe="[object WeakSet]",se="[object ArrayBuffer]",ue="[object DataView]",ce="[object Float32Array]",le="[object Float64Array]",pe="[object Int8Array]",fe="[object Int16Array]",he="[object Int32Array]",de="[object Uint8Array]",me="[object Uint8ClampedArray]",ge="[object Uint16Array]",ye="[object Uint32Array]",ve=/\b__p \+= '';/g,xe=/\b(__p \+=) '' \+/g,be=/(__e\(.*?\)|\b__t\)) \+\n'';/g,Ee=/&(?:amp|lt|gt|quot|#39);/g,Ce=/[&<>"']/g,Se=RegExp(Ee.source),ke=RegExp(Ce.source),De=/<%-([\s\S]+?)%>/g,Fe=/<%([\s\S]+?)%>/g,Ae=/<%=([\s\S]+?)%>/g,we=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,_e=/^\w*$/,Te=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Pe=/[\\^$.*+?()[\]{}|]/g,Ie=RegExp(Pe.source),Be=/^\s+|\s+$/g,Oe=/^\s+/,Le=/\s+$/,Ne=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,je=/\{\n\/\* \[wrapped with (.+)\] \*/,Re=/,? & /,Me=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Ve=/\\(\\)?/g,Ue=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,qe=/\w*$/,We=/^[-+]0x[0-9a-f]+$/i,$e=/^0b[01]+$/i,Ge=/^\[object .+?Constructor\]$/,ze=/^0o[0-7]+$/i,He=/^(?:0|[1-9]\d*)$/,Ke=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Je=/($^)/,Qe=/['\n\r\u2028\u2029\\]/g,Xe="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Ye="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Ze="[\\ud800-\\udfff]",et="["+Ye+"]",tt="["+Xe+"]",rt="\\d+",nt="[\\u2700-\\u27bf]",it="[a-z\\xdf-\\xf6\\xf8-\\xff]",at="[^\\ud800-\\udfff"+Ye+rt+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",ot="\\ud83c[\\udffb-\\udfff]",st="[^\\ud800-\\udfff]",ut="(?:\\ud83c[\\udde6-\\uddff]){2}",ct="[\\ud800-\\udbff][\\udc00-\\udfff]",lt="[A-Z\\xc0-\\xd6\\xd8-\\xde]",pt="(?:"+it+"|"+at+")",ft="(?:"+lt+"|"+at+")",ht="(?:"+tt+"|"+ot+")"+"?",dt="[\\ufe0e\\ufe0f]?"+ht+("(?:\\u200d(?:"+[st,ut,ct].join("|")+")[\\ufe0e\\ufe0f]?"+ht+")*"),mt="(?:"+[nt,ut,ct].join("|")+")"+dt,gt="(?:"+[st+tt+"?",tt,ut,ct,Ze].join("|")+")",yt=RegExp("['’]","g"),vt=RegExp(tt,"g"),xt=RegExp(ot+"(?="+ot+")|"+gt+dt,"g"),bt=RegExp([lt+"?"+it+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[et,lt,"$"].join("|")+")",ft+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[et,lt+pt,"$"].join("|")+")",lt+"?"+pt+"+(?:['’](?:d|ll|m|re|s|t|ve))?",lt+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",rt,mt].join("|"),"g"),Et=RegExp("[\\u200d\\ud800-\\udfff"+Xe+"\\ufe0e\\ufe0f]"),Ct=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,St=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],kt=-1,Dt={};Dt[ce]=Dt[le]=Dt[pe]=Dt[fe]=Dt[he]=Dt[de]=Dt[me]=Dt[ge]=Dt[ye]=!0,Dt[V]=Dt[U]=Dt[se]=Dt[W]=Dt[ue]=Dt[$]=Dt[z]=Dt[H]=Dt[J]=Dt[Q]=Dt[Y]=Dt[ee]=Dt[te]=Dt[re]=Dt[ae]=!1;var Ft={};Ft[V]=Ft[U]=Ft[se]=Ft[ue]=Ft[W]=Ft[$]=Ft[ce]=Ft[le]=Ft[pe]=Ft[fe]=Ft[he]=Ft[J]=Ft[Q]=Ft[Y]=Ft[ee]=Ft[te]=Ft[re]=Ft[ne]=Ft[de]=Ft[me]=Ft[ge]=Ft[ye]=!0,Ft[z]=Ft[H]=Ft[ae]=!1;var At={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},wt=parseFloat,_t=parseInt,Tt="object"==i(e)&&e&&e.Object===Object&&e,Pt="object"==("undefined"==typeof self?"undefined":i(self))&&self&&self.Object===Object&&self,It=Tt||Pt||Function("return this")(),Bt=r&&!r.nodeType&&r,Ot=Bt&&t&&!t.nodeType&&t,Lt=Ot&&Ot.exports===Bt,Nt=Lt&&Tt.process,jt=function(){try{var e=Ot&&Ot.require&&Ot.require("util").types;return e||Nt&&Nt.binding&&Nt.binding("util")}catch(e){}}(),Rt=jt&&jt.isArrayBuffer,Mt=jt&&jt.isDate,Vt=jt&&jt.isMap,Ut=jt&&jt.isRegExp,qt=jt&&jt.isSet,Wt=jt&&jt.isTypedArray;function $t(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}function Gt(e,t,r,n){for(var i=-1,a=null==e?0:e.length;++i<a;){var o=e[i];t(n,o,r(o),e);}return n}function zt(e,t){for(var r=-1,n=null==e?0:e.length;++r<n&&!1!==t(e[r],r,e););return e}function Ht(e,t){for(var r=null==e?0:e.length;r--&&!1!==t(e[r],r,e););return e}function Kt(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(!t(e[r],r,e))return !1;return !0}function Jt(e,t){for(var r=-1,n=null==e?0:e.length,i=0,a=[];++r<n;){var o=e[r];t(o,r,e)&&(a[i++]=o);}return a}function Qt(e,t){return !!(null==e?0:e.length)&&or(e,t,0)>-1}function Xt(e,t,r){for(var n=-1,i=null==e?0:e.length;++n<i;)if(r(t,e[n]))return !0;return !1}function Yt(e,t){for(var r=-1,n=null==e?0:e.length,i=Array(n);++r<n;)i[r]=t(e[r],r,e);return i}function Zt(e,t){for(var r=-1,n=t.length,i=e.length;++r<n;)e[i+r]=t[r];return e}function er(e,t,r,n){var i=-1,a=null==e?0:e.length;for(n&&a&&(r=e[++i]);++i<a;)r=t(r,e[i],i,e);return r}function tr(e,t,r,n){var i=null==e?0:e.length;for(n&&i&&(r=e[--i]);i--;)r=t(r,e[i],i,e);return r}function rr(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(t(e[r],r,e))return !0;return !1}var nr=lr("length");function ir(e,t,r){var n;return r(e,(function(e,r,i){if(t(e,r,i))return n=r,!1})),n}function ar(e,t,r,n){for(var i=e.length,a=r+(n?1:-1);n?a--:++a<i;)if(t(e[a],a,e))return a;return -1}function or(e,t,r){return t==t?function(e,t,r){var n=r-1,i=e.length;for(;++n<i;)if(e[n]===t)return n;return -1}(e,t,r):ar(e,ur,r)}function sr(e,t,r,n){for(var i=r-1,a=e.length;++i<a;)if(n(e[i],t))return i;return -1}function ur(e){return e!=e}function cr(e,t){var r=null==e?0:e.length;return r?hr(e,t)/r:L}function lr(e){return function(t){return null==t?n:t[e]}}function pr(e){return function(t){return null==e?n:e[t]}}function fr(e,t,r,n,i){return i(e,(function(e,i,a){r=n?(n=!1,e):t(r,e,i,a);})),r}function hr(e,t){for(var r,i=-1,a=e.length;++i<a;){var o=t(e[i]);o!==n&&(r=r===n?o:r+o);}return r}function dr(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}function mr(e){return function(t){return e(t)}}function gr(e,t){return Yt(t,(function(t){return e[t]}))}function yr(e,t){return e.has(t)}function vr(e,t){for(var r=-1,n=e.length;++r<n&&or(t,e[r],0)>-1;);return r}function xr(e,t){for(var r=e.length;r--&&or(t,e[r],0)>-1;);return r}var br=pr({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Er=pr({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Cr(e){return "\\"+At[e]}function Sr(e){return Et.test(e)}function kr(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e];})),r}function Dr(e,t){return function(r){return e(t(r))}}function Fr(e,t){for(var r=-1,n=e.length,i=0,a=[];++r<n;){var o=e[r];o!==t&&o!==l||(e[r]=l,a[i++]=r);}return a}function Ar(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e;})),r}function wr(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=[e,e];})),r}function _r(e){return Sr(e)?function(e){var t=xt.lastIndex=0;for(;xt.test(e);)++t;return t}(e):nr(e)}function Tr(e){return Sr(e)?function(e){return e.match(xt)||[]}(e):function(e){return e.split("")}(e)}var Pr=pr({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Ir=function e(t){var r,Xe=(t=null==t?It:Ir.defaults(It.Object(),t,Ir.pick(It,St))).Array,Ye=t.Date,Ze=t.Error,et=t.Function,tt=t.Math,rt=t.Object,nt=t.RegExp,it=t.String,at=t.TypeError,ot=Xe.prototype,st=et.prototype,ut=rt.prototype,ct=t["__core-js_shared__"],lt=st.toString,pt=ut.hasOwnProperty,ft=0,ht=(r=/[^.]+$/.exec(ct&&ct.keys&&ct.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"",dt=ut.toString,mt=lt.call(rt),gt=It._,xt=nt("^"+lt.call(pt).replace(Pe,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Et=Lt?t.Buffer:n,At=t.Symbol,Tt=t.Uint8Array,Pt=Et?Et.allocUnsafe:n,Bt=Dr(rt.getPrototypeOf,rt),Ot=rt.create,Nt=ut.propertyIsEnumerable,jt=ot.splice,nr=At?At.isConcatSpreadable:n,pr=At?At.iterator:n,Br=At?At.toStringTag:n,Or=function(){try{var e=Ma(rt,"defineProperty");return e({},"",{}),e}catch(e){}}(),Lr=t.clearTimeout!==It.clearTimeout&&t.clearTimeout,Nr=Ye&&Ye.now!==It.Date.now&&Ye.now,jr=t.setTimeout!==It.setTimeout&&t.setTimeout,Rr=tt.ceil,Mr=tt.floor,Vr=rt.getOwnPropertySymbols,Ur=Et?Et.isBuffer:n,qr=t.isFinite,Wr=ot.join,$r=Dr(rt.keys,rt),Gr=tt.max,zr=tt.min,Hr=Ye.now,Kr=t.parseInt,Jr=tt.random,Qr=ot.reverse,Xr=Ma(t,"DataView"),Yr=Ma(t,"Map"),Zr=Ma(t,"Promise"),en=Ma(t,"Set"),tn=Ma(t,"WeakMap"),rn=Ma(rt,"create"),nn=tn&&new tn,an={},on=po(Xr),sn=po(Yr),un=po(Zr),cn=po(en),ln=po(tn),pn=At?At.prototype:n,fn=pn?pn.valueOf:n,hn=pn?pn.toString:n;function dn(e){if(_s(e)&&!vs(e)&&!(e instanceof vn)){if(e instanceof yn)return e;if(pt.call(e,"__wrapped__"))return fo(e)}return new yn(e)}var mn=function(){function e(){}return function(t){if(!ws(t))return {};if(Ot)return Ot(t);e.prototype=t;var r=new e;return e.prototype=n,r}}();function gn(){}function yn(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=n;}function vn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=N,this.__views__=[];}function xn(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1]);}}function bn(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1]);}}function En(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1]);}}function Cn(e){var t=-1,r=null==e?0:e.length;for(this.__data__=new En;++t<r;)this.add(e[t]);}function Sn(e){var t=this.__data__=new bn(e);this.size=t.size;}function kn(e,t){var r=vs(e),n=!r&&ys(e),i=!r&&!n&&Cs(e),a=!r&&!n&&!i&&js(e),o=r||n||i||a,s=o?dr(e.length,it):[],u=s.length;for(var c in e)!t&&!pt.call(e,c)||o&&("length"==c||i&&("offset"==c||"parent"==c)||a&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||za(c,u))||s.push(c);return s}function Dn(e){var t=e.length;return t?e[Ci(0,t-1)]:n}function Fn(e,t){return uo(na(e),Ln(t,0,e.length))}function An(e){return uo(na(e))}function wn(e,t,r){(r===n||ds(e[t],r))&&(r!==n||t in e)||Bn(e,t,r);}function _n(e,t,r){var i=e[t];pt.call(e,t)&&ds(i,r)&&(r!==n||t in e)||Bn(e,t,r);}function Tn(e,t){for(var r=e.length;r--;)if(ds(e[r][0],t))return r;return -1}function Pn(e,t,r,n){return Vn(e,(function(e,i,a){t(n,e,r(e),a);})),n}function In(e,t){return e&&ia(t,au(t),e)}function Bn(e,t,r){"__proto__"==t&&Or?Or(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r;}function On(e,t){for(var r=-1,i=t.length,a=Xe(i),o=null==e;++r<i;)a[r]=o?n:eu(e,t[r]);return a}function Ln(e,t,r){return e==e&&(r!==n&&(e=e<=r?e:r),t!==n&&(e=e>=t?e:t)),e}function Nn(e,t,r,i,a,o){var s,u=t&p,c=t&f,l=t&h;if(r&&(s=a?r(e,i,a,o):r(e)),s!==n)return s;if(!ws(e))return e;var d=vs(e);if(d){if(s=function(e){var t=e.length,r=new e.constructor(t);t&&"string"==typeof e[0]&&pt.call(e,"index")&&(r.index=e.index,r.input=e.input);return r}(e),!u)return na(e,s)}else {var m=qa(e),g=m==H||m==K;if(Cs(e))return Xi(e,u);if(m==Y||m==V||g&&!a){if(s=c||g?{}:$a(e),!u)return c?function(e,t){return ia(e,Ua(e),t)}(e,function(e,t){return e&&ia(t,ou(t),e)}(s,e)):function(e,t){return ia(e,Va(e),t)}(e,In(s,e))}else {if(!Ft[m])return a?e:{};s=function(e,t,r){var n=e.constructor;switch(t){case se:return Yi(e);case W:case $:return new n(+e);case ue:return function(e,t){var r=t?Yi(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}(e,r);case ce:case le:case pe:case fe:case he:case de:case me:case ge:case ye:return Zi(e,r);case J:return new n;case Q:case re:return new n(e);case ee:return function(e){var t=new e.constructor(e.source,qe.exec(e));return t.lastIndex=e.lastIndex,t}(e);case te:return new n;case ne:return i=e,fn?rt(fn.call(i)):{}}var i;}(e,m,u);}}o||(o=new Sn);var y=o.get(e);if(y)return y;o.set(e,s),Os(e)?e.forEach((function(n){s.add(Nn(n,t,r,n,e,o));})):Ts(e)&&e.forEach((function(n,i){s.set(i,Nn(n,t,r,i,e,o));}));var v=d?n:(l?c?Ia:Pa:c?ou:au)(e);return zt(v||e,(function(n,i){v&&(n=e[i=n]),_n(s,i,Nn(n,t,r,i,e,o));})),s}function jn(e,t,r){var i=r.length;if(null==e)return !i;for(e=rt(e);i--;){var a=r[i],o=t[a],s=e[a];if(s===n&&!(a in e)||!o(s))return !1}return !0}function Rn(e,t,r){if("function"!=typeof e)throw new at(s);return io((function(){e.apply(n,r);}),t)}function Mn(e,t,r,n){var i=-1,o=Qt,s=!0,u=e.length,c=[],l=t.length;if(!u)return c;r&&(t=Yt(t,mr(r))),n?(o=Xt,s=!1):t.length>=a&&(o=yr,s=!1,t=new Cn(t));e:for(;++i<u;){var p=e[i],f=null==r?p:r(p);if(p=n||0!==p?p:0,s&&f==f){for(var h=l;h--;)if(t[h]===f)continue e;c.push(p);}else o(t,f,n)||c.push(p);}return c}dn.templateSettings={escape:De,evaluate:Fe,interpolate:Ae,variable:"",imports:{_:dn}},dn.prototype=gn.prototype,dn.prototype.constructor=dn,yn.prototype=mn(gn.prototype),yn.prototype.constructor=yn,vn.prototype=mn(gn.prototype),vn.prototype.constructor=vn,xn.prototype.clear=function(){this.__data__=rn?rn(null):{},this.size=0;},xn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},xn.prototype.get=function(e){var t=this.__data__;if(rn){var r=t[e];return r===u?n:r}return pt.call(t,e)?t[e]:n},xn.prototype.has=function(e){var t=this.__data__;return rn?t[e]!==n:pt.call(t,e)},xn.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=rn&&t===n?u:t,this},bn.prototype.clear=function(){this.__data__=[],this.size=0;},bn.prototype.delete=function(e){var t=this.__data__,r=Tn(t,e);return !(r<0)&&(r==t.length-1?t.pop():jt.call(t,r,1),--this.size,!0)},bn.prototype.get=function(e){var t=this.__data__,r=Tn(t,e);return r<0?n:t[r][1]},bn.prototype.has=function(e){return Tn(this.__data__,e)>-1},bn.prototype.set=function(e,t){var r=this.__data__,n=Tn(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this},En.prototype.clear=function(){this.size=0,this.__data__={hash:new xn,map:new(Yr||bn),string:new xn};},En.prototype.delete=function(e){var t=ja(this,e).delete(e);return this.size-=t?1:0,t},En.prototype.get=function(e){return ja(this,e).get(e)},En.prototype.has=function(e){return ja(this,e).has(e)},En.prototype.set=function(e,t){var r=ja(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this},Cn.prototype.add=Cn.prototype.push=function(e){return this.__data__.set(e,u),this},Cn.prototype.has=function(e){return this.__data__.has(e)},Sn.prototype.clear=function(){this.__data__=new bn,this.size=0;},Sn.prototype.delete=function(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r},Sn.prototype.get=function(e){return this.__data__.get(e)},Sn.prototype.has=function(e){return this.__data__.has(e)},Sn.prototype.set=function(e,t){var r=this.__data__;if(r instanceof bn){var n=r.__data__;if(!Yr||n.length<a-1)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new En(n);}return r.set(e,t),this.size=r.size,this};var Vn=sa(Kn),Un=sa(Jn,!0);function qn(e,t){var r=!0;return Vn(e,(function(e,n,i){return r=!!t(e,n,i)})),r}function Wn(e,t,r){for(var i=-1,a=e.length;++i<a;){var o=e[i],s=t(o);if(null!=s&&(u===n?s==s&&!Ns(s):r(s,u)))var u=s,c=o;}return c}function $n(e,t){var r=[];return Vn(e,(function(e,n,i){t(e,n,i)&&r.push(e);})),r}function Gn(e,t,r,n,i){var a=-1,o=e.length;for(r||(r=Ga),i||(i=[]);++a<o;){var s=e[a];t>0&&r(s)?t>1?Gn(s,t-1,r,n,i):Zt(i,s):n||(i[i.length]=s);}return i}var zn=ua(),Hn=ua(!0);function Kn(e,t){return e&&zn(e,t,au)}function Jn(e,t){return e&&Hn(e,t,au)}function Qn(e,t){return Jt(t,(function(t){return Ds(e[t])}))}function Xn(e,t){for(var r=0,i=(t=Hi(t,e)).length;null!=e&&r<i;)e=e[lo(t[r++])];return r&&r==i?e:n}function Yn(e,t,r){var n=t(e);return vs(e)?n:Zt(n,r(e))}function Zn(e){return null==e?e===n?ie:X:Br&&Br in rt(e)?function(e){var t=pt.call(e,Br),r=e[Br];try{e[Br]=n;var i=!0;}catch(e){}var a=dt.call(e);i&&(t?e[Br]=r:delete e[Br]);return a}(e):function(e){return dt.call(e)}(e)}function ei(e,t){return e>t}function ti(e,t){return null!=e&&pt.call(e,t)}function ri(e,t){return null!=e&&t in rt(e)}function ni(e,t,r){for(var i=r?Xt:Qt,a=e[0].length,o=e.length,s=o,u=Xe(o),c=1/0,l=[];s--;){var p=e[s];s&&t&&(p=Yt(p,mr(t))),c=zr(p.length,c),u[s]=!r&&(t||a>=120&&p.length>=120)?new Cn(s&&p):n;}p=e[0];var f=-1,h=u[0];e:for(;++f<a&&l.length<c;){var d=p[f],m=t?t(d):d;if(d=r||0!==d?d:0,!(h?yr(h,m):i(l,m,r))){for(s=o;--s;){var g=u[s];if(!(g?yr(g,m):i(e[s],m,r)))continue e}h&&h.push(m),l.push(d);}}return l}function ii(e,t,r){var i=null==(e=to(e,t=Hi(t,e)))?e:e[lo(ko(t))];return null==i?n:$t(i,e,r)}function ai(e){return _s(e)&&Zn(e)==V}function oi(e,t,r,i,a){return e===t||(null==e||null==t||!_s(e)&&!_s(t)?e!=e&&t!=t:function(e,t,r,i,a,o){var s=vs(e),u=vs(t),c=s?U:qa(e),l=u?U:qa(t),p=(c=c==V?Y:c)==Y,f=(l=l==V?Y:l)==Y,h=c==l;if(h&&Cs(e)){if(!Cs(t))return !1;s=!0,p=!1;}if(h&&!p)return o||(o=new Sn),s||js(e)?_a(e,t,r,i,a,o):function(e,t,r,n,i,a,o){switch(r){case ue:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return !1;e=e.buffer,t=t.buffer;case se:return !(e.byteLength!=t.byteLength||!a(new Tt(e),new Tt(t)));case W:case $:case Q:return ds(+e,+t);case z:return e.name==t.name&&e.message==t.message;case ee:case re:return e==t+"";case J:var s=kr;case te:var u=n&d;if(s||(s=Ar),e.size!=t.size&&!u)return !1;var c=o.get(e);if(c)return c==t;n|=m,o.set(e,t);var l=_a(s(e),s(t),n,i,a,o);return o.delete(e),l;case ne:if(fn)return fn.call(e)==fn.call(t)}return !1}(e,t,c,r,i,a,o);if(!(r&d)){var g=p&&pt.call(e,"__wrapped__"),y=f&&pt.call(t,"__wrapped__");if(g||y){var v=g?e.value():e,x=y?t.value():t;return o||(o=new Sn),a(v,x,r,i,o)}}if(!h)return !1;return o||(o=new Sn),function(e,t,r,i,a,o){var s=r&d,u=Pa(e),c=u.length,l=Pa(t).length;if(c!=l&&!s)return !1;var p=c;for(;p--;){var f=u[p];if(!(s?f in t:pt.call(t,f)))return !1}var h=o.get(e);if(h&&o.get(t))return h==t;var m=!0;o.set(e,t),o.set(t,e);var g=s;for(;++p<c;){f=u[p];var y=e[f],v=t[f];if(i)var x=s?i(v,y,f,t,e,o):i(y,v,f,e,t,o);if(!(x===n?y===v||a(y,v,r,i,o):x)){m=!1;break}g||(g="constructor"==f);}if(m&&!g){var b=e.constructor,E=t.constructor;b!=E&&"constructor"in e&&"constructor"in t&&!("function"==typeof b&&b instanceof b&&"function"==typeof E&&E instanceof E)&&(m=!1);}return o.delete(e),o.delete(t),m}(e,t,r,i,a,o)}(e,t,r,i,oi,a))}function si(e,t,r,i){var a=r.length,o=a,s=!i;if(null==e)return !o;for(e=rt(e);a--;){var u=r[a];if(s&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return !1}for(;++a<o;){var c=(u=r[a])[0],l=e[c],p=u[1];if(s&&u[2]){if(l===n&&!(c in e))return !1}else {var f=new Sn;if(i)var h=i(l,p,c,e,t,f);if(!(h===n?oi(p,l,d|m,i,f):h))return !1}}return !0}function ui(e){return !(!ws(e)||(t=e,ht&&ht in t))&&(Ds(e)?xt:Ge).test(po(e));var t;}function ci(e){return "function"==typeof e?e:null==e?Pu:"object"==i(e)?vs(e)?mi(e[0],e[1]):di(e):Vu(e)}function li(e){if(!Xa(e))return $r(e);var t=[];for(var r in rt(e))pt.call(e,r)&&"constructor"!=r&&t.push(r);return t}function pi(e){if(!ws(e))return function(e){var t=[];if(null!=e)for(var r in rt(e))t.push(r);return t}(e);var t=Xa(e),r=[];for(var n in e)("constructor"!=n||!t&&pt.call(e,n))&&r.push(n);return r}function fi(e,t){return e<t}function hi(e,t){var r=-1,n=bs(e)?Xe(e.length):[];return Vn(e,(function(e,i,a){n[++r]=t(e,i,a);})),n}function di(e){var t=Ra(e);return 1==t.length&&t[0][2]?Za(t[0][0],t[0][1]):function(r){return r===e||si(r,e,t)}}function mi(e,t){return Ka(e)&&Ya(t)?Za(lo(e),t):function(r){var i=eu(r,e);return i===n&&i===t?tu(r,e):oi(t,i,d|m)}}function gi(e,t,r,i,a){e!==t&&zn(t,(function(o,s){if(a||(a=new Sn),ws(o))!function(e,t,r,i,a,o,s){var u=ro(e,r),c=ro(t,r),l=s.get(c);if(l)return void wn(e,r,l);var p=o?o(u,c,r+"",e,t,s):n,f=p===n;if(f){var h=vs(c),d=!h&&Cs(c),m=!h&&!d&&js(c);p=c,h||d||m?vs(u)?p=u:Es(u)?p=na(u):d?(f=!1,p=Xi(c,!0)):m?(f=!1,p=Zi(c,!0)):p=[]:Is(c)||ys(c)?(p=u,ys(u)?p=Gs(u):ws(u)&&!Ds(u)||(p=$a(c))):f=!1;}f&&(s.set(c,p),a(p,c,i,o,s),s.delete(c));wn(e,r,p);}(e,t,s,r,gi,i,a);else {var u=i?i(ro(e,s),o,s+"",e,t,a):n;u===n&&(u=o),wn(e,s,u);}}),ou);}function yi(e,t){var r=e.length;if(r)return za(t+=t<0?r:0,r)?e[t]:n}function vi(e,t,r){var n=-1;return t=Yt(t.length?t:[Pu],mr(Na())),function(e,t){var r=e.length;for(e.sort(t);r--;)e[r]=e[r].value;return e}(hi(e,(function(e,r,i){return {criteria:Yt(t,(function(t){return t(e)})),index:++n,value:e}})),(function(e,t){return function(e,t,r){var n=-1,i=e.criteria,a=t.criteria,o=i.length,s=r.length;for(;++n<o;){var u=ea(i[n],a[n]);if(u){if(n>=s)return u;var c=r[n];return u*("desc"==c?-1:1)}}return e.index-t.index}(e,t,r)}))}function xi(e,t,r){for(var n=-1,i=t.length,a={};++n<i;){var o=t[n],s=Xn(e,o);r(s,o)&&Ai(a,Hi(o,e),s);}return a}function bi(e,t,r,n){var i=n?sr:or,a=-1,o=t.length,s=e;for(e===t&&(t=na(t)),r&&(s=Yt(e,mr(r)));++a<o;)for(var u=0,c=t[a],l=r?r(c):c;(u=i(s,l,u,n))>-1;)s!==e&&jt.call(s,u,1),jt.call(e,u,1);return e}function Ei(e,t){for(var r=e?t.length:0,n=r-1;r--;){var i=t[r];if(r==n||i!==a){var a=i;za(i)?jt.call(e,i,1):Mi(e,i);}}return e}function Ci(e,t){return e+Mr(Jr()*(t-e+1))}function Si(e,t){var r="";if(!e||t<1||t>B)return r;do{t%2&&(r+=e),(t=Mr(t/2))&&(e+=e);}while(t);return r}function ki(e,t){return ao(eo(e,t,Pu),e+"")}function Di(e){return Dn(du(e))}function Fi(e,t){var r=du(e);return uo(r,Ln(t,0,r.length))}function Ai(e,t,r,i){if(!ws(e))return e;for(var a=-1,o=(t=Hi(t,e)).length,s=o-1,u=e;null!=u&&++a<o;){var c=lo(t[a]),l=r;if(a!=s){var p=u[c];(l=i?i(p,c,u):n)===n&&(l=ws(p)?p:za(t[a+1])?[]:{});}_n(u,c,l),u=u[c];}return e}var wi=nn?function(e,t){return nn.set(e,t),e}:Pu,_i=Or?function(e,t){return Or(e,"toString",{configurable:!0,enumerable:!1,value:wu(t),writable:!0})}:Pu;function Ti(e){return uo(du(e))}function Pi(e,t,r){var n=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(r=r>i?i:r)<0&&(r+=i),i=t>r?0:r-t>>>0,t>>>=0;for(var a=Xe(i);++n<i;)a[n]=e[n+t];return a}function Ii(e,t){var r;return Vn(e,(function(e,n,i){return !(r=t(e,n,i))})),!!r}function Bi(e,t,r){var n=0,i=null==e?n:e.length;if("number"==typeof t&&t==t&&i<=R){for(;n<i;){var a=n+i>>>1,o=e[a];null!==o&&!Ns(o)&&(r?o<=t:o<t)?n=a+1:i=a;}return i}return Oi(e,t,Pu,r)}function Oi(e,t,r,i){t=r(t);for(var a=0,o=null==e?0:e.length,s=t!=t,u=null===t,c=Ns(t),l=t===n;a<o;){var p=Mr((a+o)/2),f=r(e[p]),h=f!==n,d=null===f,m=f==f,g=Ns(f);if(s)var y=i||m;else y=l?m&&(i||h):u?m&&h&&(i||!d):c?m&&h&&!d&&(i||!g):!d&&!g&&(i?f<=t:f<t);y?a=p+1:o=p;}return zr(o,j)}function Li(e,t){for(var r=-1,n=e.length,i=0,a=[];++r<n;){var o=e[r],s=t?t(o):o;if(!r||!ds(s,u)){var u=s;a[i++]=0===o?0:o;}}return a}function Ni(e){return "number"==typeof e?e:Ns(e)?L:+e}function ji(e){if("string"==typeof e)return e;if(vs(e))return Yt(e,ji)+"";if(Ns(e))return hn?hn.call(e):"";var t=e+"";return "0"==t&&1/e==-I?"-0":t}function Ri(e,t,r){var n=-1,i=Qt,o=e.length,s=!0,u=[],c=u;if(r)s=!1,i=Xt;else if(o>=a){var l=t?null:Sa(e);if(l)return Ar(l);s=!1,i=yr,c=new Cn;}else c=t?[]:u;e:for(;++n<o;){var p=e[n],f=t?t(p):p;if(p=r||0!==p?p:0,s&&f==f){for(var h=c.length;h--;)if(c[h]===f)continue e;t&&c.push(f),u.push(p);}else i(c,f,r)||(c!==u&&c.push(f),u.push(p));}return u}function Mi(e,t){return null==(e=to(e,t=Hi(t,e)))||delete e[lo(ko(t))]}function Vi(e,t,r,n){return Ai(e,t,r(Xn(e,t)),n)}function Ui(e,t,r,n){for(var i=e.length,a=n?i:-1;(n?a--:++a<i)&&t(e[a],a,e););return r?Pi(e,n?0:a,n?a+1:i):Pi(e,n?a+1:0,n?i:a)}function qi(e,t){var r=e;return r instanceof vn&&(r=r.value()),er(t,(function(e,t){return t.func.apply(t.thisArg,Zt([e],t.args))}),r)}function Wi(e,t,r){var n=e.length;if(n<2)return n?Ri(e[0]):[];for(var i=-1,a=Xe(n);++i<n;)for(var o=e[i],s=-1;++s<n;)s!=i&&(a[i]=Mn(a[i]||o,e[s],t,r));return Ri(Gn(a,1),t,r)}function $i(e,t,r){for(var i=-1,a=e.length,o=t.length,s={};++i<a;){var u=i<o?t[i]:n;r(s,e[i],u);}return s}function Gi(e){return Es(e)?e:[]}function zi(e){return "function"==typeof e?e:Pu}function Hi(e,t){return vs(e)?e:Ka(e,t)?[e]:co(zs(e))}var Ki=ki;function Ji(e,t,r){var i=e.length;return r=r===n?i:r,!t&&r>=i?e:Pi(e,t,r)}var Qi=Lr||function(e){return It.clearTimeout(e)};function Xi(e,t){if(t)return e.slice();var r=e.length,n=Pt?Pt(r):new e.constructor(r);return e.copy(n),n}function Yi(e){var t=new e.constructor(e.byteLength);return new Tt(t).set(new Tt(e)),t}function Zi(e,t){var r=t?Yi(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}function ea(e,t){if(e!==t){var r=e!==n,i=null===e,a=e==e,o=Ns(e),s=t!==n,u=null===t,c=t==t,l=Ns(t);if(!u&&!l&&!o&&e>t||o&&s&&c&&!u&&!l||i&&s&&c||!r&&c||!a)return 1;if(!i&&!o&&!l&&e<t||l&&r&&a&&!i&&!o||u&&r&&a||!s&&a||!c)return -1}return 0}function ta(e,t,r,n){for(var i=-1,a=e.length,o=r.length,s=-1,u=t.length,c=Gr(a-o,0),l=Xe(u+c),p=!n;++s<u;)l[s]=t[s];for(;++i<o;)(p||i<a)&&(l[r[i]]=e[i]);for(;c--;)l[s++]=e[i++];return l}function ra(e,t,r,n){for(var i=-1,a=e.length,o=-1,s=r.length,u=-1,c=t.length,l=Gr(a-s,0),p=Xe(l+c),f=!n;++i<l;)p[i]=e[i];for(var h=i;++u<c;)p[h+u]=t[u];for(;++o<s;)(f||i<a)&&(p[h+r[o]]=e[i++]);return p}function na(e,t){var r=-1,n=e.length;for(t||(t=Xe(n));++r<n;)t[r]=e[r];return t}function ia(e,t,r,i){var a=!r;r||(r={});for(var o=-1,s=t.length;++o<s;){var u=t[o],c=i?i(r[u],e[u],u,r,e):n;c===n&&(c=e[u]),a?Bn(r,u,c):_n(r,u,c);}return r}function aa(e,t){return function(r,n){var i=vs(r)?Gt:Pn,a=t?t():{};return i(r,e,Na(n,2),a)}}function oa(e){return ki((function(t,r){var i=-1,a=r.length,o=a>1?r[a-1]:n,s=a>2?r[2]:n;for(o=e.length>3&&"function"==typeof o?(a--,o):n,s&&Ha(r[0],r[1],s)&&(o=a<3?n:o,a=1),t=rt(t);++i<a;){var u=r[i];u&&e(t,u,i,o);}return t}))}function sa(e,t){return function(r,n){if(null==r)return r;if(!bs(r))return e(r,n);for(var i=r.length,a=t?i:-1,o=rt(r);(t?a--:++a<i)&&!1!==n(o[a],a,o););return r}}function ua(e){return function(t,r,n){for(var i=-1,a=rt(t),o=n(t),s=o.length;s--;){var u=o[e?s:++i];if(!1===r(a[u],u,a))break}return t}}function ca(e){return function(t){var r=Sr(t=zs(t))?Tr(t):n,i=r?r[0]:t.charAt(0),a=r?Ji(r,1).join(""):t.slice(1);return i[e]()+a}}function la(e){return function(t){return er(Du(yu(t).replace(yt,"")),e,"")}}function pa(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=mn(e.prototype),n=e.apply(r,t);return ws(n)?n:r}}function fa(e){return function(t,r,i){var a=rt(t);if(!bs(t)){var o=Na(r,3);t=au(t),r=function(e){return o(a[e],e,a)};}var s=e(t,r,i);return s>-1?a[o?t[s]:s]:n}}function ha(e){return Ta((function(t){var r=t.length,i=r,a=yn.prototype.thru;for(e&&t.reverse();i--;){var o=t[i];if("function"!=typeof o)throw new at(s);if(a&&!u&&"wrapper"==Oa(o))var u=new yn([],!0);}for(i=u?i:r;++i<r;){var c=Oa(o=t[i]),l="wrapper"==c?Ba(o):n;u=l&&Ja(l[0])&&l[1]==(S|x|E|k)&&!l[4].length&&1==l[9]?u[Oa(l[0])].apply(u,l[3]):1==o.length&&Ja(o)?u[c]():u.thru(o);}return function(){var e=arguments,n=e[0];if(u&&1==e.length&&vs(n))return u.plant(n).value();for(var i=0,a=r?t[i].apply(this,e):n;++i<r;)a=t[i].call(this,a);return a}}))}function da(e,t,r,i,a,o,s,u,c,l){var p=t&S,f=t&g,h=t&y,d=t&(x|b),m=t&D,v=h?n:pa(e);return function g(){for(var y=arguments.length,x=Xe(y),b=y;b--;)x[b]=arguments[b];if(d)var E=La(g),C=function(e,t){for(var r=e.length,n=0;r--;)e[r]===t&&++n;return n}(x,E);if(i&&(x=ta(x,i,a,d)),o&&(x=ra(x,o,s,d)),y-=C,d&&y<l){var S=Fr(x,E);return Ea(e,t,da,g.placeholder,r,x,S,u,c,l-y)}var k=f?r:this,D=h?k[e]:e;return y=x.length,u?x=function(e,t){var r=e.length,i=zr(t.length,r),a=na(e);for(;i--;){var o=t[i];e[i]=za(o,r)?a[o]:n;}return e}(x,u):m&&y>1&&x.reverse(),p&&c<y&&(x.length=c),this&&this!==It&&this instanceof g&&(D=v||pa(D)),D.apply(k,x)}}function ma(e,t){return function(r,n){return function(e,t,r,n){return Kn(e,(function(e,i,a){t(n,r(e),i,a);})),n}(r,e,t(n),{})}}function ga(e,t){return function(r,i){var a;if(r===n&&i===n)return t;if(r!==n&&(a=r),i!==n){if(a===n)return i;"string"==typeof r||"string"==typeof i?(r=ji(r),i=ji(i)):(r=Ni(r),i=Ni(i)),a=e(r,i);}return a}}function ya(e){return Ta((function(t){return t=Yt(t,mr(Na())),ki((function(r){var n=this;return e(t,(function(e){return $t(e,n,r)}))}))}))}function va(e,t){var r=(t=t===n?" ":ji(t)).length;if(r<2)return r?Si(t,e):t;var i=Si(t,Rr(e/_r(t)));return Sr(t)?Ji(Tr(i),0,e).join(""):i.slice(0,e)}function xa(e){return function(t,r,i){return i&&"number"!=typeof i&&Ha(t,r,i)&&(r=i=n),t=Us(t),r===n?(r=t,t=0):r=Us(r),function(e,t,r,n){for(var i=-1,a=Gr(Rr((t-e)/(r||1)),0),o=Xe(a);a--;)o[n?a:++i]=e,e+=r;return o}(t,r,i=i===n?t<r?1:-1:Us(i),e)}}function ba(e){return function(t,r){return "string"==typeof t&&"string"==typeof r||(t=$s(t),r=$s(r)),e(t,r)}}function Ea(e,t,r,i,a,o,s,u,c,l){var p=t&x;t|=p?E:C,(t&=~(p?C:E))&v||(t&=~(g|y));var f=[e,t,a,p?o:n,p?s:n,p?n:o,p?n:s,u,c,l],h=r.apply(n,f);return Ja(e)&&no(h,f),h.placeholder=i,oo(h,e,t)}function Ca(e){var t=tt[e];return function(e,r){if(e=$s(e),(r=null==r?0:zr(qs(r),292))&&qr(e)){var n=(zs(e)+"e").split("e");return +((n=(zs(t(n[0]+"e"+(+n[1]+r)))+"e").split("e"))[0]+"e"+(+n[1]-r))}return t(e)}}var Sa=en&&1/Ar(new en([,-0]))[1]==I?function(e){return new en(e)}:Nu;function ka(e){return function(t){var r=qa(t);return r==J?kr(t):r==te?wr(t):function(e,t){return Yt(t,(function(t){return [t,e[t]]}))}(t,e(t))}}function Da(e,t,r,i,a,o,u,c){var p=t&y;if(!p&&"function"!=typeof e)throw new at(s);var f=i?i.length:0;if(f||(t&=~(E|C),i=a=n),u=u===n?u:Gr(qs(u),0),c=c===n?c:qs(c),f-=a?a.length:0,t&C){var h=i,d=a;i=a=n;}var m=p?n:Ba(e),D=[e,t,r,i,a,h,d,o,u,c];if(m&&function(e,t){var r=e[1],n=t[1],i=r|n,a=i<(g|y|S),o=n==S&&r==x||n==S&&r==k&&e[7].length<=t[8]||n==(S|k)&&t[7].length<=t[8]&&r==x;if(!a&&!o)return e;n&g&&(e[2]=t[2],i|=r&g?0:v);var s=t[3];if(s){var u=e[3];e[3]=u?ta(u,s,t[4]):s,e[4]=u?Fr(e[3],l):t[4];}(s=t[5])&&(u=e[5],e[5]=u?ra(u,s,t[6]):s,e[6]=u?Fr(e[5],l):t[6]);(s=t[7])&&(e[7]=s);n&S&&(e[8]=null==e[8]?t[8]:zr(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=i;}(D,m),e=D[0],t=D[1],r=D[2],i=D[3],a=D[4],!(c=D[9]=D[9]===n?p?0:e.length:Gr(D[9]-f,0))&&t&(x|b)&&(t&=~(x|b)),t&&t!=g)F=t==x||t==b?function(e,t,r){var i=pa(e);return function a(){for(var o=arguments.length,s=Xe(o),u=o,c=La(a);u--;)s[u]=arguments[u];var l=o<3&&s[0]!==c&&s[o-1]!==c?[]:Fr(s,c);return (o-=l.length)<r?Ea(e,t,da,a.placeholder,n,s,l,n,n,r-o):$t(this&&this!==It&&this instanceof a?i:e,this,s)}}(e,t,c):t!=E&&t!=(g|E)||a.length?da.apply(n,D):function(e,t,r,n){var i=t&g,a=pa(e);return function t(){for(var o=-1,s=arguments.length,u=-1,c=n.length,l=Xe(c+s),p=this&&this!==It&&this instanceof t?a:e;++u<c;)l[u]=n[u];for(;s--;)l[u++]=arguments[++o];return $t(p,i?r:this,l)}}(e,t,r,i);else var F=function(e,t,r){var n=t&g,i=pa(e);return function t(){return (this&&this!==It&&this instanceof t?i:e).apply(n?r:this,arguments)}}(e,t,r);return oo((m?wi:no)(F,D),e,t)}function Fa(e,t,r,i){return e===n||ds(e,ut[r])&&!pt.call(i,r)?t:e}function Aa(e,t,r,i,a,o){return ws(e)&&ws(t)&&(o.set(t,e),gi(e,t,n,Aa,o),o.delete(t)),e}function wa(e){return Is(e)?n:e}function _a(e,t,r,i,a,o){var s=r&d,u=e.length,c=t.length;if(u!=c&&!(s&&c>u))return !1;var l=o.get(e);if(l&&o.get(t))return l==t;var p=-1,f=!0,h=r&m?new Cn:n;for(o.set(e,t),o.set(t,e);++p<u;){var g=e[p],y=t[p];if(i)var v=s?i(y,g,p,t,e,o):i(g,y,p,e,t,o);if(v!==n){if(v)continue;f=!1;break}if(h){if(!rr(t,(function(e,t){if(!yr(h,t)&&(g===e||a(g,e,r,i,o)))return h.push(t)}))){f=!1;break}}else if(g!==y&&!a(g,y,r,i,o)){f=!1;break}}return o.delete(e),o.delete(t),f}function Ta(e){return ao(eo(e,n,xo),e+"")}function Pa(e){return Yn(e,au,Va)}function Ia(e){return Yn(e,ou,Ua)}var Ba=nn?function(e){return nn.get(e)}:Nu;function Oa(e){for(var t=e.name+"",r=an[t],n=pt.call(an,t)?r.length:0;n--;){var i=r[n],a=i.func;if(null==a||a==e)return i.name}return t}function La(e){return (pt.call(dn,"placeholder")?dn:e).placeholder}function Na(){var e=dn.iteratee||Iu;return e=e===Iu?ci:e,arguments.length?e(arguments[0],arguments[1]):e}function ja(e,t){var r=e.__data__;return function(e){var t=i(e);return "string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}(t)?r["string"==typeof t?"string":"hash"]:r.map}function Ra(e){for(var t=au(e),r=t.length;r--;){var n=t[r],i=e[n];t[r]=[n,i,Ya(i)];}return t}function Ma(e,t){var r=function(e,t){return null==e?n:e[t]}(e,t);return ui(r)?r:n}var Va=Vr?function(e){return null==e?[]:(e=rt(e),Jt(Vr(e),(function(t){return Nt.call(e,t)})))}:Wu,Ua=Vr?function(e){for(var t=[];e;)Zt(t,Va(e)),e=Bt(e);return t}:Wu,qa=Zn;function Wa(e,t,r){for(var n=-1,i=(t=Hi(t,e)).length,a=!1;++n<i;){var o=lo(t[n]);if(!(a=null!=e&&r(e,o)))break;e=e[o];}return a||++n!=i?a:!!(i=null==e?0:e.length)&&As(i)&&za(o,i)&&(vs(e)||ys(e))}function $a(e){return "function"!=typeof e.constructor||Xa(e)?{}:mn(Bt(e))}function Ga(e){return vs(e)||ys(e)||!!(nr&&e&&e[nr])}function za(e,t){var r=i(e);return !!(t=null==t?B:t)&&("number"==r||"symbol"!=r&&He.test(e))&&e>-1&&e%1==0&&e<t}function Ha(e,t,r){if(!ws(r))return !1;var n=i(t);return !!("number"==n?bs(r)&&za(t,r.length):"string"==n&&t in r)&&ds(r[t],e)}function Ka(e,t){if(vs(e))return !1;var r=i(e);return !("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!Ns(e))||(_e.test(e)||!we.test(e)||null!=t&&e in rt(t))}function Ja(e){var t=Oa(e),r=dn[t];if("function"!=typeof r||!(t in vn.prototype))return !1;if(e===r)return !0;var n=Ba(r);return !!n&&e===n[0]}(Xr&&qa(new Xr(new ArrayBuffer(1)))!=ue||Yr&&qa(new Yr)!=J||Zr&&"[object Promise]"!=qa(Zr.resolve())||en&&qa(new en)!=te||tn&&qa(new tn)!=ae)&&(qa=function(e){var t=Zn(e),r=t==Y?e.constructor:n,i=r?po(r):"";if(i)switch(i){case on:return ue;case sn:return J;case un:return "[object Promise]";case cn:return te;case ln:return ae}return t});var Qa=ct?Ds:$u;function Xa(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||ut)}function Ya(e){return e==e&&!ws(e)}function Za(e,t){return function(r){return null!=r&&(r[e]===t&&(t!==n||e in rt(r)))}}function eo(e,t,r){return t=Gr(t===n?e.length-1:t,0),function(){for(var n=arguments,i=-1,a=Gr(n.length-t,0),o=Xe(a);++i<a;)o[i]=n[t+i];i=-1;for(var s=Xe(t+1);++i<t;)s[i]=n[i];return s[t]=r(o),$t(e,this,s)}}function to(e,t){return t.length<2?e:Xn(e,Pi(t,0,-1))}function ro(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var no=so(wi),io=jr||function(e,t){return It.setTimeout(e,t)},ao=so(_i);function oo(e,t,r){var n=t+"";return ao(e,function(e,t){var r=t.length;if(!r)return e;var n=r-1;return t[n]=(r>1?"& ":"")+t[n],t=t.join(r>2?", ":" "),e.replace(Ne,"{\n/* [wrapped with "+t+"] */\n")}(n,function(e,t){return zt(M,(function(r){var n="_."+r[0];t&r[1]&&!Qt(e,n)&&e.push(n);})),e.sort()}(function(e){var t=e.match(je);return t?t[1].split(Re):[]}(n),r)))}function so(e){var t=0,r=0;return function(){var i=Hr(),a=_-(i-r);if(r=i,a>0){if(++t>=w)return arguments[0]}else t=0;return e.apply(n,arguments)}}function uo(e,t){var r=-1,i=e.length,a=i-1;for(t=t===n?i:t;++r<t;){var o=Ci(r,a),s=e[o];e[o]=e[r],e[r]=s;}return e.length=t,e}var co=function(e){var t=us(e,(function(e){return r.size===c&&r.clear(),e})),r=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(Te,(function(e,r,n,i){t.push(n?i.replace(Ve,"$1"):r||e);})),t}));function lo(e){if("string"==typeof e||Ns(e))return e;var t=e+"";return "0"==t&&1/e==-I?"-0":t}function po(e){if(null!=e){try{return lt.call(e)}catch(e){}try{return e+""}catch(e){}}return ""}function fo(e){if(e instanceof vn)return e.clone();var t=new yn(e.__wrapped__,e.__chain__);return t.__actions__=na(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var ho=ki((function(e,t){return Es(e)?Mn(e,Gn(t,1,Es,!0)):[]})),mo=ki((function(e,t){var r=ko(t);return Es(r)&&(r=n),Es(e)?Mn(e,Gn(t,1,Es,!0),Na(r,2)):[]})),go=ki((function(e,t){var r=ko(t);return Es(r)&&(r=n),Es(e)?Mn(e,Gn(t,1,Es,!0),n,r):[]}));function yo(e,t,r){var n=null==e?0:e.length;if(!n)return -1;var i=null==r?0:qs(r);return i<0&&(i=Gr(n+i,0)),ar(e,Na(t,3),i)}function vo(e,t,r){var i=null==e?0:e.length;if(!i)return -1;var a=i-1;return r!==n&&(a=qs(r),a=r<0?Gr(i+a,0):zr(a,i-1)),ar(e,Na(t,3),a,!0)}function xo(e){return (null==e?0:e.length)?Gn(e,1):[]}function bo(e){return e&&e.length?e[0]:n}var Eo=ki((function(e){var t=Yt(e,Gi);return t.length&&t[0]===e[0]?ni(t):[]})),Co=ki((function(e){var t=ko(e),r=Yt(e,Gi);return t===ko(r)?t=n:r.pop(),r.length&&r[0]===e[0]?ni(r,Na(t,2)):[]})),So=ki((function(e){var t=ko(e),r=Yt(e,Gi);return (t="function"==typeof t?t:n)&&r.pop(),r.length&&r[0]===e[0]?ni(r,n,t):[]}));function ko(e){var t=null==e?0:e.length;return t?e[t-1]:n}var Do=ki(Fo);function Fo(e,t){return e&&e.length&&t&&t.length?bi(e,t):e}var Ao=Ta((function(e,t){var r=null==e?0:e.length,n=On(e,t);return Ei(e,Yt(t,(function(e){return za(e,r)?+e:e})).sort(ea)),n}));function wo(e){return null==e?e:Qr.call(e)}var _o=ki((function(e){return Ri(Gn(e,1,Es,!0))})),To=ki((function(e){var t=ko(e);return Es(t)&&(t=n),Ri(Gn(e,1,Es,!0),Na(t,2))})),Po=ki((function(e){var t=ko(e);return t="function"==typeof t?t:n,Ri(Gn(e,1,Es,!0),n,t)}));function Io(e){if(!e||!e.length)return [];var t=0;return e=Jt(e,(function(e){if(Es(e))return t=Gr(e.length,t),!0})),dr(t,(function(t){return Yt(e,lr(t))}))}function Bo(e,t){if(!e||!e.length)return [];var r=Io(e);return null==t?r:Yt(r,(function(e){return $t(t,n,e)}))}var Oo=ki((function(e,t){return Es(e)?Mn(e,t):[]})),Lo=ki((function(e){return Wi(Jt(e,Es))})),No=ki((function(e){var t=ko(e);return Es(t)&&(t=n),Wi(Jt(e,Es),Na(t,2))})),jo=ki((function(e){var t=ko(e);return t="function"==typeof t?t:n,Wi(Jt(e,Es),n,t)})),Ro=ki(Io);var Mo=ki((function(e){var t=e.length,r=t>1?e[t-1]:n;return r="function"==typeof r?(e.pop(),r):n,Bo(e,r)}));function Vo(e){var t=dn(e);return t.__chain__=!0,t}function Uo(e,t){return t(e)}var qo=Ta((function(e){var t=e.length,r=t?e[0]:0,i=this.__wrapped__,a=function(t){return On(t,e)};return !(t>1||this.__actions__.length)&&i instanceof vn&&za(r)?((i=i.slice(r,+r+(t?1:0))).__actions__.push({func:Uo,args:[a],thisArg:n}),new yn(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(n),e}))):this.thru(a)}));var Wo=aa((function(e,t,r){pt.call(e,r)?++e[r]:Bn(e,r,1);}));var $o=fa(yo),Go=fa(vo);function zo(e,t){return (vs(e)?zt:Vn)(e,Na(t,3))}function Ho(e,t){return (vs(e)?Ht:Un)(e,Na(t,3))}var Ko=aa((function(e,t,r){pt.call(e,r)?e[r].push(t):Bn(e,r,[t]);}));var Jo=ki((function(e,t,r){var n=-1,i="function"==typeof t,a=bs(e)?Xe(e.length):[];return Vn(e,(function(e){a[++n]=i?$t(t,e,r):ii(e,t,r);})),a})),Qo=aa((function(e,t,r){Bn(e,r,t);}));function Xo(e,t){return (vs(e)?Yt:hi)(e,Na(t,3))}var Yo=aa((function(e,t,r){e[r?0:1].push(t);}),(function(){return [[],[]]}));var Zo=ki((function(e,t){if(null==e)return [];var r=t.length;return r>1&&Ha(e,t[0],t[1])?t=[]:r>2&&Ha(t[0],t[1],t[2])&&(t=[t[0]]),vi(e,Gn(t,1),[])})),es=Nr||function(){return It.Date.now()};function ts(e,t,r){return t=r?n:t,t=e&&null==t?e.length:t,Da(e,S,n,n,n,n,t)}function rs(e,t){var r;if("function"!=typeof t)throw new at(s);return e=qs(e),function(){return --e>0&&(r=t.apply(this,arguments)),e<=1&&(t=n),r}}var ns=ki((function(e,t,r){var n=g;if(r.length){var i=Fr(r,La(ns));n|=E;}return Da(e,n,t,r,i)})),is=ki((function(e,t,r){var n=g|y;if(r.length){var i=Fr(r,La(is));n|=E;}return Da(t,n,e,r,i)}));function as(e,t,r){var i,a,o,u,c,l,p=0,f=!1,h=!1,d=!0;if("function"!=typeof e)throw new at(s);function m(t){var r=i,o=a;return i=a=n,p=t,u=e.apply(o,r)}function g(e){var r=e-l;return l===n||r>=t||r<0||h&&e-p>=o}function y(){var e=es();if(g(e))return v(e);c=io(y,function(e){var r=t-(e-l);return h?zr(r,o-(e-p)):r}(e));}function v(e){return c=n,d&&i?m(e):(i=a=n,u)}function x(){var e=es(),r=g(e);if(i=arguments,a=this,l=e,r){if(c===n)return function(e){return p=e,c=io(y,t),f?m(e):u}(l);if(h)return Qi(c),c=io(y,t),m(l)}return c===n&&(c=io(y,t)),u}return t=$s(t)||0,ws(r)&&(f=!!r.leading,o=(h="maxWait"in r)?Gr($s(r.maxWait)||0,t):o,d="trailing"in r?!!r.trailing:d),x.cancel=function(){c!==n&&Qi(c),p=0,i=l=a=c=n;},x.flush=function(){return c===n?u:v(es())},x}var os=ki((function(e,t){return Rn(e,1,t)})),ss=ki((function(e,t,r){return Rn(e,$s(t)||0,r)}));function us(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new at(s);var r=function r(){var n=arguments,i=t?t.apply(this,n):n[0],a=r.cache;if(a.has(i))return a.get(i);var o=e.apply(this,n);return r.cache=a.set(i,o)||a,o};return r.cache=new(us.Cache||En),r}function cs(e){if("function"!=typeof e)throw new at(s);return function(){var t=arguments;switch(t.length){case 0:return !e.call(this);case 1:return !e.call(this,t[0]);case 2:return !e.call(this,t[0],t[1]);case 3:return !e.call(this,t[0],t[1],t[2])}return !e.apply(this,t)}}us.Cache=En;var ls=Ki((function(e,t){var r=(t=1==t.length&&vs(t[0])?Yt(t[0],mr(Na())):Yt(Gn(t,1),mr(Na()))).length;return ki((function(n){for(var i=-1,a=zr(n.length,r);++i<a;)n[i]=t[i].call(this,n[i]);return $t(e,this,n)}))})),ps=ki((function(e,t){var r=Fr(t,La(ps));return Da(e,E,n,t,r)})),fs=ki((function(e,t){var r=Fr(t,La(fs));return Da(e,C,n,t,r)})),hs=Ta((function(e,t){return Da(e,k,n,n,n,t)}));function ds(e,t){return e===t||e!=e&&t!=t}var ms=ba(ei),gs=ba((function(e,t){return e>=t})),ys=ai(function(){return arguments}())?ai:function(e){return _s(e)&&pt.call(e,"callee")&&!Nt.call(e,"callee")},vs=Xe.isArray,xs=Rt?mr(Rt):function(e){return _s(e)&&Zn(e)==se};function bs(e){return null!=e&&As(e.length)&&!Ds(e)}function Es(e){return _s(e)&&bs(e)}var Cs=Ur||$u,Ss=Mt?mr(Mt):function(e){return _s(e)&&Zn(e)==$};function ks(e){if(!_s(e))return !1;var t=Zn(e);return t==z||t==G||"string"==typeof e.message&&"string"==typeof e.name&&!Is(e)}function Ds(e){if(!ws(e))return !1;var t=Zn(e);return t==H||t==K||t==q||t==Z}function Fs(e){return "number"==typeof e&&e==qs(e)}function As(e){return "number"==typeof e&&e>-1&&e%1==0&&e<=B}function ws(e){var t=i(e);return null!=e&&("object"==t||"function"==t)}function _s(e){return null!=e&&"object"==i(e)}var Ts=Vt?mr(Vt):function(e){return _s(e)&&qa(e)==J};function Ps(e){return "number"==typeof e||_s(e)&&Zn(e)==Q}function Is(e){if(!_s(e)||Zn(e)!=Y)return !1;var t=Bt(e);if(null===t)return !0;var r=pt.call(t,"constructor")&&t.constructor;return "function"==typeof r&&r instanceof r&&lt.call(r)==mt}var Bs=Ut?mr(Ut):function(e){return _s(e)&&Zn(e)==ee};var Os=qt?mr(qt):function(e){return _s(e)&&qa(e)==te};function Ls(e){return "string"==typeof e||!vs(e)&&_s(e)&&Zn(e)==re}function Ns(e){return "symbol"==i(e)||_s(e)&&Zn(e)==ne}var js=Wt?mr(Wt):function(e){return _s(e)&&As(e.length)&&!!Dt[Zn(e)]};var Rs=ba(fi),Ms=ba((function(e,t){return e<=t}));function Vs(e){if(!e)return [];if(bs(e))return Ls(e)?Tr(e):na(e);if(pr&&e[pr])return function(e){for(var t,r=[];!(t=e.next()).done;)r.push(t.value);return r}(e[pr]());var t=qa(e);return (t==J?kr:t==te?Ar:du)(e)}function Us(e){return e?(e=$s(e))===I||e===-I?(e<0?-1:1)*O:e==e?e:0:0===e?e:0}function qs(e){var t=Us(e),r=t%1;return t==t?r?t-r:t:0}function Ws(e){return e?Ln(qs(e),0,N):0}function $s(e){if("number"==typeof e)return e;if(Ns(e))return L;if(ws(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=ws(t)?t+"":t;}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(Be,"");var r=$e.test(e);return r||ze.test(e)?_t(e.slice(2),r?2:8):We.test(e)?L:+e}function Gs(e){return ia(e,ou(e))}function zs(e){return null==e?"":ji(e)}var Hs=oa((function(e,t){if(Xa(t)||bs(t))ia(t,au(t),e);else for(var r in t)pt.call(t,r)&&_n(e,r,t[r]);})),Ks=oa((function(e,t){ia(t,ou(t),e);})),Js=oa((function(e,t,r,n){ia(t,ou(t),e,n);})),Qs=oa((function(e,t,r,n){ia(t,au(t),e,n);})),Xs=Ta(On);var Ys=ki((function(e,t){e=rt(e);var r=-1,i=t.length,a=i>2?t[2]:n;for(a&&Ha(t[0],t[1],a)&&(i=1);++r<i;)for(var o=t[r],s=ou(o),u=-1,c=s.length;++u<c;){var l=s[u],p=e[l];(p===n||ds(p,ut[l])&&!pt.call(e,l))&&(e[l]=o[l]);}return e})),Zs=ki((function(e){return e.push(n,Aa),$t(uu,n,e)}));function eu(e,t,r){var i=null==e?n:Xn(e,t);return i===n?r:i}function tu(e,t){return null!=e&&Wa(e,t,ri)}var ru=ma((function(e,t,r){null!=t&&"function"!=typeof t.toString&&(t=dt.call(t)),e[t]=r;}),wu(Pu)),nu=ma((function(e,t,r){null!=t&&"function"!=typeof t.toString&&(t=dt.call(t)),pt.call(e,t)?e[t].push(r):e[t]=[r];}),Na),iu=ki(ii);function au(e){return bs(e)?kn(e):li(e)}function ou(e){return bs(e)?kn(e,!0):pi(e)}var su=oa((function(e,t,r){gi(e,t,r);})),uu=oa((function(e,t,r,n){gi(e,t,r,n);})),cu=Ta((function(e,t){var r={};if(null==e)return r;var n=!1;t=Yt(t,(function(t){return t=Hi(t,e),n||(n=t.length>1),t})),ia(e,Ia(e),r),n&&(r=Nn(r,p|f|h,wa));for(var i=t.length;i--;)Mi(r,t[i]);return r}));var lu=Ta((function(e,t){return null==e?{}:function(e,t){return xi(e,t,(function(t,r){return tu(e,r)}))}(e,t)}));function pu(e,t){if(null==e)return {};var r=Yt(Ia(e),(function(e){return [e]}));return t=Na(t),xi(e,r,(function(e,r){return t(e,r[0])}))}var fu=ka(au),hu=ka(ou);function du(e){return null==e?[]:gr(e,au(e))}var mu=la((function(e,t,r){return t=t.toLowerCase(),e+(r?gu(t):t)}));function gu(e){return ku(zs(e).toLowerCase())}function yu(e){return (e=zs(e))&&e.replace(Ke,br).replace(vt,"")}var vu=la((function(e,t,r){return e+(r?"-":"")+t.toLowerCase()})),xu=la((function(e,t,r){return e+(r?" ":"")+t.toLowerCase()})),bu=ca("toLowerCase");var Eu=la((function(e,t,r){return e+(r?"_":"")+t.toLowerCase()}));var Cu=la((function(e,t,r){return e+(r?" ":"")+ku(t)}));var Su=la((function(e,t,r){return e+(r?" ":"")+t.toUpperCase()})),ku=ca("toUpperCase");function Du(e,t,r){return e=zs(e),(t=r?n:t)===n?function(e){return Ct.test(e)}(e)?function(e){return e.match(bt)||[]}(e):function(e){return e.match(Me)||[]}(e):e.match(t)||[]}var Fu=ki((function(e,t){try{return $t(e,n,t)}catch(e){return ks(e)?e:new Ze(e)}})),Au=Ta((function(e,t){return zt(t,(function(t){t=lo(t),Bn(e,t,ns(e[t],e));})),e}));function wu(e){return function(){return e}}var _u=ha(),Tu=ha(!0);function Pu(e){return e}function Iu(e){return ci("function"==typeof e?e:Nn(e,p))}var Bu=ki((function(e,t){return function(r){return ii(r,e,t)}})),Ou=ki((function(e,t){return function(r){return ii(e,r,t)}}));function Lu(e,t,r){var n=au(t),i=Qn(t,n);null!=r||ws(t)&&(i.length||!n.length)||(r=t,t=e,e=this,i=Qn(t,au(t)));var a=!(ws(r)&&"chain"in r&&!r.chain),o=Ds(e);return zt(i,(function(r){var n=t[r];e[r]=n,o&&(e.prototype[r]=function(){var t=this.__chain__;if(a||t){var r=e(this.__wrapped__),i=r.__actions__=na(this.__actions__);return i.push({func:n,args:arguments,thisArg:e}),r.__chain__=t,r}return n.apply(e,Zt([this.value()],arguments))});})),e}function Nu(){}var ju=ya(Yt),Ru=ya(Kt),Mu=ya(rr);function Vu(e){return Ka(e)?lr(lo(e)):function(e){return function(t){return Xn(t,e)}}(e)}var Uu=xa(),qu=xa(!0);function Wu(){return []}function $u(){return !1}var Gu=ga((function(e,t){return e+t}),0),zu=Ca("ceil"),Hu=ga((function(e,t){return e/t}),1),Ku=Ca("floor");var Ju,Qu=ga((function(e,t){return e*t}),1),Xu=Ca("round"),Yu=ga((function(e,t){return e-t}),0);return dn.after=function(e,t){if("function"!=typeof t)throw new at(s);return e=qs(e),function(){if(--e<1)return t.apply(this,arguments)}},dn.ary=ts,dn.assign=Hs,dn.assignIn=Ks,dn.assignInWith=Js,dn.assignWith=Qs,dn.at=Xs,dn.before=rs,dn.bind=ns,dn.bindAll=Au,dn.bindKey=is,dn.castArray=function(){if(!arguments.length)return [];var e=arguments[0];return vs(e)?e:[e]},dn.chain=Vo,dn.chunk=function(e,t,r){t=(r?Ha(e,t,r):t===n)?1:Gr(qs(t),0);var i=null==e?0:e.length;if(!i||t<1)return [];for(var a=0,o=0,s=Xe(Rr(i/t));a<i;)s[o++]=Pi(e,a,a+=t);return s},dn.compact=function(e){for(var t=-1,r=null==e?0:e.length,n=0,i=[];++t<r;){var a=e[t];a&&(i[n++]=a);}return i},dn.concat=function(){var e=arguments.length;if(!e)return [];for(var t=Xe(e-1),r=arguments[0],n=e;n--;)t[n-1]=arguments[n];return Zt(vs(r)?na(r):[r],Gn(t,1))},dn.cond=function(e){var t=null==e?0:e.length,r=Na();return e=t?Yt(e,(function(e){if("function"!=typeof e[1])throw new at(s);return [r(e[0]),e[1]]})):[],ki((function(r){for(var n=-1;++n<t;){var i=e[n];if($t(i[0],this,r))return $t(i[1],this,r)}}))},dn.conforms=function(e){return function(e){var t=au(e);return function(r){return jn(r,e,t)}}(Nn(e,p))},dn.constant=wu,dn.countBy=Wo,dn.create=function(e,t){var r=mn(e);return null==t?r:In(r,t)},dn.curry=function e(t,r,i){var a=Da(t,x,n,n,n,n,n,r=i?n:r);return a.placeholder=e.placeholder,a},dn.curryRight=function e(t,r,i){var a=Da(t,b,n,n,n,n,n,r=i?n:r);return a.placeholder=e.placeholder,a},dn.debounce=as,dn.defaults=Ys,dn.defaultsDeep=Zs,dn.defer=os,dn.delay=ss,dn.difference=ho,dn.differenceBy=mo,dn.differenceWith=go,dn.drop=function(e,t,r){var i=null==e?0:e.length;return i?Pi(e,(t=r||t===n?1:qs(t))<0?0:t,i):[]},dn.dropRight=function(e,t,r){var i=null==e?0:e.length;return i?Pi(e,0,(t=i-(t=r||t===n?1:qs(t)))<0?0:t):[]},dn.dropRightWhile=function(e,t){return e&&e.length?Ui(e,Na(t,3),!0,!0):[]},dn.dropWhile=function(e,t){return e&&e.length?Ui(e,Na(t,3),!0):[]},dn.fill=function(e,t,r,i){var a=null==e?0:e.length;return a?(r&&"number"!=typeof r&&Ha(e,t,r)&&(r=0,i=a),function(e,t,r,i){var a=e.length;for((r=qs(r))<0&&(r=-r>a?0:a+r),(i=i===n||i>a?a:qs(i))<0&&(i+=a),i=r>i?0:Ws(i);r<i;)e[r++]=t;return e}(e,t,r,i)):[]},dn.filter=function(e,t){return (vs(e)?Jt:$n)(e,Na(t,3))},dn.flatMap=function(e,t){return Gn(Xo(e,t),1)},dn.flatMapDeep=function(e,t){return Gn(Xo(e,t),I)},dn.flatMapDepth=function(e,t,r){return r=r===n?1:qs(r),Gn(Xo(e,t),r)},dn.flatten=xo,dn.flattenDeep=function(e){return (null==e?0:e.length)?Gn(e,I):[]},dn.flattenDepth=function(e,t){return (null==e?0:e.length)?Gn(e,t=t===n?1:qs(t)):[]},dn.flip=function(e){return Da(e,D)},dn.flow=_u,dn.flowRight=Tu,dn.fromPairs=function(e){for(var t=-1,r=null==e?0:e.length,n={};++t<r;){var i=e[t];n[i[0]]=i[1];}return n},dn.functions=function(e){return null==e?[]:Qn(e,au(e))},dn.functionsIn=function(e){return null==e?[]:Qn(e,ou(e))},dn.groupBy=Ko,dn.initial=function(e){return (null==e?0:e.length)?Pi(e,0,-1):[]},dn.intersection=Eo,dn.intersectionBy=Co,dn.intersectionWith=So,dn.invert=ru,dn.invertBy=nu,dn.invokeMap=Jo,dn.iteratee=Iu,dn.keyBy=Qo,dn.keys=au,dn.keysIn=ou,dn.map=Xo,dn.mapKeys=function(e,t){var r={};return t=Na(t,3),Kn(e,(function(e,n,i){Bn(r,t(e,n,i),e);})),r},dn.mapValues=function(e,t){var r={};return t=Na(t,3),Kn(e,(function(e,n,i){Bn(r,n,t(e,n,i));})),r},dn.matches=function(e){return di(Nn(e,p))},dn.matchesProperty=function(e,t){return mi(e,Nn(t,p))},dn.memoize=us,dn.merge=su,dn.mergeWith=uu,dn.method=Bu,dn.methodOf=Ou,dn.mixin=Lu,dn.negate=cs,dn.nthArg=function(e){return e=qs(e),ki((function(t){return yi(t,e)}))},dn.omit=cu,dn.omitBy=function(e,t){return pu(e,cs(Na(t)))},dn.once=function(e){return rs(2,e)},dn.orderBy=function(e,t,r,i){return null==e?[]:(vs(t)||(t=null==t?[]:[t]),vs(r=i?n:r)||(r=null==r?[]:[r]),vi(e,t,r))},dn.over=ju,dn.overArgs=ls,dn.overEvery=Ru,dn.overSome=Mu,dn.partial=ps,dn.partialRight=fs,dn.partition=Yo,dn.pick=lu,dn.pickBy=pu,dn.property=Vu,dn.propertyOf=function(e){return function(t){return null==e?n:Xn(e,t)}},dn.pull=Do,dn.pullAll=Fo,dn.pullAllBy=function(e,t,r){return e&&e.length&&t&&t.length?bi(e,t,Na(r,2)):e},dn.pullAllWith=function(e,t,r){return e&&e.length&&t&&t.length?bi(e,t,n,r):e},dn.pullAt=Ao,dn.range=Uu,dn.rangeRight=qu,dn.rearg=hs,dn.reject=function(e,t){return (vs(e)?Jt:$n)(e,cs(Na(t,3)))},dn.remove=function(e,t){var r=[];if(!e||!e.length)return r;var n=-1,i=[],a=e.length;for(t=Na(t,3);++n<a;){var o=e[n];t(o,n,e)&&(r.push(o),i.push(n));}return Ei(e,i),r},dn.rest=function(e,t){if("function"!=typeof e)throw new at(s);return ki(e,t=t===n?t:qs(t))},dn.reverse=wo,dn.sampleSize=function(e,t,r){return t=(r?Ha(e,t,r):t===n)?1:qs(t),(vs(e)?Fn:Fi)(e,t)},dn.set=function(e,t,r){return null==e?e:Ai(e,t,r)},dn.setWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:Ai(e,t,r,i)},dn.shuffle=function(e){return (vs(e)?An:Ti)(e)},dn.slice=function(e,t,r){var i=null==e?0:e.length;return i?(r&&"number"!=typeof r&&Ha(e,t,r)?(t=0,r=i):(t=null==t?0:qs(t),r=r===n?i:qs(r)),Pi(e,t,r)):[]},dn.sortBy=Zo,dn.sortedUniq=function(e){return e&&e.length?Li(e):[]},dn.sortedUniqBy=function(e,t){return e&&e.length?Li(e,Na(t,2)):[]},dn.split=function(e,t,r){return r&&"number"!=typeof r&&Ha(e,t,r)&&(t=r=n),(r=r===n?N:r>>>0)?(e=zs(e))&&("string"==typeof t||null!=t&&!Bs(t))&&!(t=ji(t))&&Sr(e)?Ji(Tr(e),0,r):e.split(t,r):[]},dn.spread=function(e,t){if("function"!=typeof e)throw new at(s);return t=null==t?0:Gr(qs(t),0),ki((function(r){var n=r[t],i=Ji(r,0,t);return n&&Zt(i,n),$t(e,this,i)}))},dn.tail=function(e){var t=null==e?0:e.length;return t?Pi(e,1,t):[]},dn.take=function(e,t,r){return e&&e.length?Pi(e,0,(t=r||t===n?1:qs(t))<0?0:t):[]},dn.takeRight=function(e,t,r){var i=null==e?0:e.length;return i?Pi(e,(t=i-(t=r||t===n?1:qs(t)))<0?0:t,i):[]},dn.takeRightWhile=function(e,t){return e&&e.length?Ui(e,Na(t,3),!1,!0):[]},dn.takeWhile=function(e,t){return e&&e.length?Ui(e,Na(t,3)):[]},dn.tap=function(e,t){return t(e),e},dn.throttle=function(e,t,r){var n=!0,i=!0;if("function"!=typeof e)throw new at(s);return ws(r)&&(n="leading"in r?!!r.leading:n,i="trailing"in r?!!r.trailing:i),as(e,t,{leading:n,maxWait:t,trailing:i})},dn.thru=Uo,dn.toArray=Vs,dn.toPairs=fu,dn.toPairsIn=hu,dn.toPath=function(e){return vs(e)?Yt(e,lo):Ns(e)?[e]:na(co(zs(e)))},dn.toPlainObject=Gs,dn.transform=function(e,t,r){var n=vs(e),i=n||Cs(e)||js(e);if(t=Na(t,4),null==r){var a=e&&e.constructor;r=i?n?new a:[]:ws(e)&&Ds(a)?mn(Bt(e)):{};}return (i?zt:Kn)(e,(function(e,n,i){return t(r,e,n,i)})),r},dn.unary=function(e){return ts(e,1)},dn.union=_o,dn.unionBy=To,dn.unionWith=Po,dn.uniq=function(e){return e&&e.length?Ri(e):[]},dn.uniqBy=function(e,t){return e&&e.length?Ri(e,Na(t,2)):[]},dn.uniqWith=function(e,t){return t="function"==typeof t?t:n,e&&e.length?Ri(e,n,t):[]},dn.unset=function(e,t){return null==e||Mi(e,t)},dn.unzip=Io,dn.unzipWith=Bo,dn.update=function(e,t,r){return null==e?e:Vi(e,t,zi(r))},dn.updateWith=function(e,t,r,i){return i="function"==typeof i?i:n,null==e?e:Vi(e,t,zi(r),i)},dn.values=du,dn.valuesIn=function(e){return null==e?[]:gr(e,ou(e))},dn.without=Oo,dn.words=Du,dn.wrap=function(e,t){return ps(zi(t),e)},dn.xor=Lo,dn.xorBy=No,dn.xorWith=jo,dn.zip=Ro,dn.zipObject=function(e,t){return $i(e||[],t||[],_n)},dn.zipObjectDeep=function(e,t){return $i(e||[],t||[],Ai)},dn.zipWith=Mo,dn.entries=fu,dn.entriesIn=hu,dn.extend=Ks,dn.extendWith=Js,Lu(dn,dn),dn.add=Gu,dn.attempt=Fu,dn.camelCase=mu,dn.capitalize=gu,dn.ceil=zu,dn.clamp=function(e,t,r){return r===n&&(r=t,t=n),r!==n&&(r=(r=$s(r))==r?r:0),t!==n&&(t=(t=$s(t))==t?t:0),Ln($s(e),t,r)},dn.clone=function(e){return Nn(e,h)},dn.cloneDeep=function(e){return Nn(e,p|h)},dn.cloneDeepWith=function(e,t){return Nn(e,p|h,t="function"==typeof t?t:n)},dn.cloneWith=function(e,t){return Nn(e,h,t="function"==typeof t?t:n)},dn.conformsTo=function(e,t){return null==t||jn(e,t,au(t))},dn.deburr=yu,dn.defaultTo=function(e,t){return null==e||e!=e?t:e},dn.divide=Hu,dn.endsWith=function(e,t,r){e=zs(e),t=ji(t);var i=e.length,a=r=r===n?i:Ln(qs(r),0,i);return (r-=t.length)>=0&&e.slice(r,a)==t},dn.eq=ds,dn.escape=function(e){return (e=zs(e))&&ke.test(e)?e.replace(Ce,Er):e},dn.escapeRegExp=function(e){return (e=zs(e))&&Ie.test(e)?e.replace(Pe,"\\$&"):e},dn.every=function(e,t,r){var i=vs(e)?Kt:qn;return r&&Ha(e,t,r)&&(t=n),i(e,Na(t,3))},dn.find=$o,dn.findIndex=yo,dn.findKey=function(e,t){return ir(e,Na(t,3),Kn)},dn.findLast=Go,dn.findLastIndex=vo,dn.findLastKey=function(e,t){return ir(e,Na(t,3),Jn)},dn.floor=Ku,dn.forEach=zo,dn.forEachRight=Ho,dn.forIn=function(e,t){return null==e?e:zn(e,Na(t,3),ou)},dn.forInRight=function(e,t){return null==e?e:Hn(e,Na(t,3),ou)},dn.forOwn=function(e,t){return e&&Kn(e,Na(t,3))},dn.forOwnRight=function(e,t){return e&&Jn(e,Na(t,3))},dn.get=eu,dn.gt=ms,dn.gte=gs,dn.has=function(e,t){return null!=e&&Wa(e,t,ti)},dn.hasIn=tu,dn.head=bo,dn.identity=Pu,dn.includes=function(e,t,r,n){e=bs(e)?e:du(e),r=r&&!n?qs(r):0;var i=e.length;return r<0&&(r=Gr(i+r,0)),Ls(e)?r<=i&&e.indexOf(t,r)>-1:!!i&&or(e,t,r)>-1},dn.indexOf=function(e,t,r){var n=null==e?0:e.length;if(!n)return -1;var i=null==r?0:qs(r);return i<0&&(i=Gr(n+i,0)),or(e,t,i)},dn.inRange=function(e,t,r){return t=Us(t),r===n?(r=t,t=0):r=Us(r),function(e,t,r){return e>=zr(t,r)&&e<Gr(t,r)}(e=$s(e),t,r)},dn.invoke=iu,dn.isArguments=ys,dn.isArray=vs,dn.isArrayBuffer=xs,dn.isArrayLike=bs,dn.isArrayLikeObject=Es,dn.isBoolean=function(e){return !0===e||!1===e||_s(e)&&Zn(e)==W},dn.isBuffer=Cs,dn.isDate=Ss,dn.isElement=function(e){return _s(e)&&1===e.nodeType&&!Is(e)},dn.isEmpty=function(e){if(null==e)return !0;if(bs(e)&&(vs(e)||"string"==typeof e||"function"==typeof e.splice||Cs(e)||js(e)||ys(e)))return !e.length;var t=qa(e);if(t==J||t==te)return !e.size;if(Xa(e))return !li(e).length;for(var r in e)if(pt.call(e,r))return !1;return !0},dn.isEqual=function(e,t){return oi(e,t)},dn.isEqualWith=function(e,t,r){var i=(r="function"==typeof r?r:n)?r(e,t):n;return i===n?oi(e,t,n,r):!!i},dn.isError=ks,dn.isFinite=function(e){return "number"==typeof e&&qr(e)},dn.isFunction=Ds,dn.isInteger=Fs,dn.isLength=As,dn.isMap=Ts,dn.isMatch=function(e,t){return e===t||si(e,t,Ra(t))},dn.isMatchWith=function(e,t,r){return r="function"==typeof r?r:n,si(e,t,Ra(t),r)},dn.isNaN=function(e){return Ps(e)&&e!=+e},dn.isNative=function(e){if(Qa(e))throw new Ze(o);return ui(e)},dn.isNil=function(e){return null==e},dn.isNull=function(e){return null===e},dn.isNumber=Ps,dn.isObject=ws,dn.isObjectLike=_s,dn.isPlainObject=Is,dn.isRegExp=Bs,dn.isSafeInteger=function(e){return Fs(e)&&e>=-B&&e<=B},dn.isSet=Os,dn.isString=Ls,dn.isSymbol=Ns,dn.isTypedArray=js,dn.isUndefined=function(e){return e===n},dn.isWeakMap=function(e){return _s(e)&&qa(e)==ae},dn.isWeakSet=function(e){return _s(e)&&Zn(e)==oe},dn.join=function(e,t){return null==e?"":Wr.call(e,t)},dn.kebabCase=vu,dn.last=ko,dn.lastIndexOf=function(e,t,r){var i=null==e?0:e.length;if(!i)return -1;var a=i;return r!==n&&(a=(a=qs(r))<0?Gr(i+a,0):zr(a,i-1)),t==t?function(e,t,r){for(var n=r+1;n--;)if(e[n]===t)return n;return n}(e,t,a):ar(e,ur,a,!0)},dn.lowerCase=xu,dn.lowerFirst=bu,dn.lt=Rs,dn.lte=Ms,dn.max=function(e){return e&&e.length?Wn(e,Pu,ei):n},dn.maxBy=function(e,t){return e&&e.length?Wn(e,Na(t,2),ei):n},dn.mean=function(e){return cr(e,Pu)},dn.meanBy=function(e,t){return cr(e,Na(t,2))},dn.min=function(e){return e&&e.length?Wn(e,Pu,fi):n},dn.minBy=function(e,t){return e&&e.length?Wn(e,Na(t,2),fi):n},dn.stubArray=Wu,dn.stubFalse=$u,dn.stubObject=function(){return {}},dn.stubString=function(){return ""},dn.stubTrue=function(){return !0},dn.multiply=Qu,dn.nth=function(e,t){return e&&e.length?yi(e,qs(t)):n},dn.noConflict=function(){return It._===this&&(It._=gt),this},dn.noop=Nu,dn.now=es,dn.pad=function(e,t,r){e=zs(e);var n=(t=qs(t))?_r(e):0;if(!t||n>=t)return e;var i=(t-n)/2;return va(Mr(i),r)+e+va(Rr(i),r)},dn.padEnd=function(e,t,r){e=zs(e);var n=(t=qs(t))?_r(e):0;return t&&n<t?e+va(t-n,r):e},dn.padStart=function(e,t,r){e=zs(e);var n=(t=qs(t))?_r(e):0;return t&&n<t?va(t-n,r)+e:e},dn.parseInt=function(e,t,r){return r||null==t?t=0:t&&(t=+t),Kr(zs(e).replace(Oe,""),t||0)},dn.random=function(e,t,r){if(r&&"boolean"!=typeof r&&Ha(e,t,r)&&(t=r=n),r===n&&("boolean"==typeof t?(r=t,t=n):"boolean"==typeof e&&(r=e,e=n)),e===n&&t===n?(e=0,t=1):(e=Us(e),t===n?(t=e,e=0):t=Us(t)),e>t){var i=e;e=t,t=i;}if(r||e%1||t%1){var a=Jr();return zr(e+a*(t-e+wt("1e-"+((a+"").length-1))),t)}return Ci(e,t)},dn.reduce=function(e,t,r){var n=vs(e)?er:fr,i=arguments.length<3;return n(e,Na(t,4),r,i,Vn)},dn.reduceRight=function(e,t,r){var n=vs(e)?tr:fr,i=arguments.length<3;return n(e,Na(t,4),r,i,Un)},dn.repeat=function(e,t,r){return t=(r?Ha(e,t,r):t===n)?1:qs(t),Si(zs(e),t)},dn.replace=function(){var e=arguments,t=zs(e[0]);return e.length<3?t:t.replace(e[1],e[2])},dn.result=function(e,t,r){var i=-1,a=(t=Hi(t,e)).length;for(a||(a=1,e=n);++i<a;){var o=null==e?n:e[lo(t[i])];o===n&&(i=a,o=r),e=Ds(o)?o.call(e):o;}return e},dn.round=Xu,dn.runInContext=e,dn.sample=function(e){return (vs(e)?Dn:Di)(e)},dn.size=function(e){if(null==e)return 0;if(bs(e))return Ls(e)?_r(e):e.length;var t=qa(e);return t==J||t==te?e.size:li(e).length},dn.snakeCase=Eu,dn.some=function(e,t,r){var i=vs(e)?rr:Ii;return r&&Ha(e,t,r)&&(t=n),i(e,Na(t,3))},dn.sortedIndex=function(e,t){return Bi(e,t)},dn.sortedIndexBy=function(e,t,r){return Oi(e,t,Na(r,2))},dn.sortedIndexOf=function(e,t){var r=null==e?0:e.length;if(r){var n=Bi(e,t);if(n<r&&ds(e[n],t))return n}return -1},dn.sortedLastIndex=function(e,t){return Bi(e,t,!0)},dn.sortedLastIndexBy=function(e,t,r){return Oi(e,t,Na(r,2),!0)},dn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var r=Bi(e,t,!0)-1;if(ds(e[r],t))return r}return -1},dn.startCase=Cu,dn.startsWith=function(e,t,r){return e=zs(e),r=null==r?0:Ln(qs(r),0,e.length),t=ji(t),e.slice(r,r+t.length)==t},dn.subtract=Yu,dn.sum=function(e){return e&&e.length?hr(e,Pu):0},dn.sumBy=function(e,t){return e&&e.length?hr(e,Na(t,2)):0},dn.template=function(e,t,r){var i=dn.templateSettings;r&&Ha(e,t,r)&&(t=n),e=zs(e),t=Js({},t,i,Fa);var a,o,s=Js({},t.imports,i.imports,Fa),u=au(s),c=gr(s,u),l=0,p=t.interpolate||Je,f="__p += '",h=nt((t.escape||Je).source+"|"+p.source+"|"+(p===Ae?Ue:Je).source+"|"+(t.evaluate||Je).source+"|$","g"),d="//# sourceURL="+(pt.call(t,"sourceURL")?(t.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++kt+"]")+"\n";e.replace(h,(function(t,r,n,i,s,u){return n||(n=i),f+=e.slice(l,u).replace(Qe,Cr),r&&(a=!0,f+="' +\n__e("+r+") +\n'"),s&&(o=!0,f+="';\n"+s+";\n__p += '"),n&&(f+="' +\n((__t = ("+n+")) == null ? '' : __t) +\n'"),l=u+t.length,t})),f+="';\n";var m=pt.call(t,"variable")&&t.variable;m||(f="with (obj) {\n"+f+"\n}\n"),f=(o?f.replace(ve,""):f).replace(xe,"$1").replace(be,"$1;"),f="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var g=Fu((function(){return et(u,d+"return "+f).apply(n,c)}));if(g.source=f,ks(g))throw g;return g},dn.times=function(e,t){if((e=qs(e))<1||e>B)return [];var r=N,n=zr(e,N);t=Na(t),e-=N;for(var i=dr(n,t);++r<e;)t(r);return i},dn.toFinite=Us,dn.toInteger=qs,dn.toLength=Ws,dn.toLower=function(e){return zs(e).toLowerCase()},dn.toNumber=$s,dn.toSafeInteger=function(e){return e?Ln(qs(e),-B,B):0===e?e:0},dn.toString=zs,dn.toUpper=function(e){return zs(e).toUpperCase()},dn.trim=function(e,t,r){if((e=zs(e))&&(r||t===n))return e.replace(Be,"");if(!e||!(t=ji(t)))return e;var i=Tr(e),a=Tr(t);return Ji(i,vr(i,a),xr(i,a)+1).join("")},dn.trimEnd=function(e,t,r){if((e=zs(e))&&(r||t===n))return e.replace(Le,"");if(!e||!(t=ji(t)))return e;var i=Tr(e);return Ji(i,0,xr(i,Tr(t))+1).join("")},dn.trimStart=function(e,t,r){if((e=zs(e))&&(r||t===n))return e.replace(Oe,"");if(!e||!(t=ji(t)))return e;var i=Tr(e);return Ji(i,vr(i,Tr(t))).join("")},dn.truncate=function(e,t){var r=F,i=A;if(ws(t)){var a="separator"in t?t.separator:a;r="length"in t?qs(t.length):r,i="omission"in t?ji(t.omission):i;}var o=(e=zs(e)).length;if(Sr(e)){var s=Tr(e);o=s.length;}if(r>=o)return e;var u=r-_r(i);if(u<1)return i;var c=s?Ji(s,0,u).join(""):e.slice(0,u);if(a===n)return c+i;if(s&&(u+=c.length-u),Bs(a)){if(e.slice(u).search(a)){var l,p=c;for(a.global||(a=nt(a.source,zs(qe.exec(a))+"g")),a.lastIndex=0;l=a.exec(p);)var f=l.index;c=c.slice(0,f===n?u:f);}}else if(e.indexOf(ji(a),u)!=u){var h=c.lastIndexOf(a);h>-1&&(c=c.slice(0,h));}return c+i},dn.unescape=function(e){return (e=zs(e))&&Se.test(e)?e.replace(Ee,Pr):e},dn.uniqueId=function(e){var t=++ft;return zs(e)+t},dn.upperCase=Su,dn.upperFirst=ku,dn.each=zo,dn.eachRight=Ho,dn.first=bo,Lu(dn,(Ju={},Kn(dn,(function(e,t){pt.call(dn.prototype,t)||(Ju[t]=e);})),Ju),{chain:!1}),dn.VERSION="4.17.15",zt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){dn[e].placeholder=dn;})),zt(["drop","take"],(function(e,t){vn.prototype[e]=function(r){r=r===n?1:Gr(qs(r),0);var i=this.__filtered__&&!t?new vn(this):this.clone();return i.__filtered__?i.__takeCount__=zr(r,i.__takeCount__):i.__views__.push({size:zr(r,N),type:e+(i.__dir__<0?"Right":"")}),i},vn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()};})),zt(["filter","map","takeWhile"],(function(e,t){var r=t+1,n=r==T||3==r;vn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:Na(e,3),type:r}),t.__filtered__=t.__filtered__||n,t};})),zt(["head","last"],(function(e,t){var r="take"+(t?"Right":"");vn.prototype[e]=function(){return this[r](1).value()[0]};})),zt(["initial","tail"],(function(e,t){var r="drop"+(t?"":"Right");vn.prototype[e]=function(){return this.__filtered__?new vn(this):this[r](1)};})),vn.prototype.compact=function(){return this.filter(Pu)},vn.prototype.find=function(e){return this.filter(e).head()},vn.prototype.findLast=function(e){return this.reverse().find(e)},vn.prototype.invokeMap=ki((function(e,t){return "function"==typeof e?new vn(this):this.map((function(r){return ii(r,e,t)}))})),vn.prototype.reject=function(e){return this.filter(cs(Na(e)))},vn.prototype.slice=function(e,t){e=qs(e);var r=this;return r.__filtered__&&(e>0||t<0)?new vn(r):(e<0?r=r.takeRight(-e):e&&(r=r.drop(e)),t!==n&&(r=(t=qs(t))<0?r.dropRight(-t):r.take(t-e)),r)},vn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},vn.prototype.toArray=function(){return this.take(N)},Kn(vn.prototype,(function(e,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),a=dn[i?"take"+("last"==t?"Right":""):t],o=i||/^find/.test(t);a&&(dn.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,u=t instanceof vn,c=s[0],l=u||vs(t),p=function(e){var t=a.apply(dn,Zt([e],s));return i&&f?t[0]:t};l&&r&&"function"==typeof c&&1!=c.length&&(u=l=!1);var f=this.__chain__,h=!!this.__actions__.length,d=o&&!f,m=u&&!h;if(!o&&l){t=m?t:new vn(this);var g=e.apply(t,s);return g.__actions__.push({func:Uo,args:[p],thisArg:n}),new yn(g,f)}return d&&m?e.apply(this,s):(g=this.thru(p),d?i?g.value()[0]:g.value():g)});})),zt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=ot[e],r=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",n=/^(?:pop|shift)$/.test(e);dn.prototype[e]=function(){var e=arguments;if(n&&!this.__chain__){var i=this.value();return t.apply(vs(i)?i:[],e)}return this[r]((function(r){return t.apply(vs(r)?r:[],e)}))};})),Kn(vn.prototype,(function(e,t){var r=dn[t];if(r){var n=r.name+"";pt.call(an,n)||(an[n]=[]),an[n].push({name:t,func:r});}})),an[da(n,y).name]=[{name:"wrapper",func:n}],vn.prototype.clone=function(){var e=new vn(this.__wrapped__);return e.__actions__=na(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=na(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=na(this.__views__),e},vn.prototype.reverse=function(){if(this.__filtered__){var e=new vn(this);e.__dir__=-1,e.__filtered__=!0;}else (e=this.clone()).__dir__*=-1;return e},vn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,r=vs(e),n=t<0,i=r?e.length:0,a=function(e,t,r){var n=-1,i=r.length;for(;++n<i;){var a=r[n],o=a.size;switch(a.type){case"drop":e+=o;break;case"dropRight":t-=o;break;case"take":t=zr(t,e+o);break;case"takeRight":e=Gr(e,t-o);}}return {start:e,end:t}}(0,i,this.__views__),o=a.start,s=a.end,u=s-o,c=n?s:o-1,l=this.__iteratees__,p=l.length,f=0,h=zr(u,this.__takeCount__);if(!r||!n&&i==u&&h==u)return qi(e,this.__actions__);var d=[];e:for(;u--&&f<h;){for(var m=-1,g=e[c+=t];++m<p;){var y=l[m],v=y.iteratee,x=y.type,b=v(g);if(x==P)g=b;else if(!b){if(x==T)continue e;break e}}d[f++]=g;}return d},dn.prototype.at=qo,dn.prototype.chain=function(){return Vo(this)},dn.prototype.commit=function(){return new yn(this.value(),this.__chain__)},dn.prototype.next=function(){this.__values__===n&&(this.__values__=Vs(this.value()));var e=this.__index__>=this.__values__.length;return {done:e,value:e?n:this.__values__[this.__index__++]}},dn.prototype.plant=function(e){for(var t,r=this;r instanceof gn;){var i=fo(r);i.__index__=0,i.__values__=n,t?a.__wrapped__=i:t=i;var a=i;r=r.__wrapped__;}return a.__wrapped__=e,t},dn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof vn){var t=e;return this.__actions__.length&&(t=new vn(this)),(t=t.reverse()).__actions__.push({func:Uo,args:[wo],thisArg:n}),new yn(t,this.__chain__)}return this.thru(wo)},dn.prototype.toJSON=dn.prototype.valueOf=dn.prototype.value=function(){return qi(this.__wrapped__,this.__actions__)},dn.prototype.first=dn.prototype.head,pr&&(dn.prototype[pr]=function(){return this}),dn}();Ot?((Ot.exports=Ir)._=Ir,Bt._=Ir):It._=Ir;}).call(e);})),Am={Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},wm={Array:!1,Boolean:!1,constructor:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,propertyIsEnumerable:!1,RangeError:!1,ReferenceError:!1,RegExp:!1,String:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1},_m={Array:!1,ArrayBuffer:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},Tm={Array:!1,ArrayBuffer:!1,Atomics:!1,Boolean:!1,constructor:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,Float32Array:!1,Float64Array:!1,Function:!1,hasOwnProperty:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,isFinite:!1,isNaN:!1,isPrototypeOf:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,propertyIsEnumerable:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,toLocaleString:!1,toString:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,valueOf:!1,WeakMap:!1,WeakSet:!1},Pm={AbortController:!1,AbortSignal:!1,addEventListener:!1,alert:!1,AnalyserNode:!1,Animation:!1,AnimationEffectReadOnly:!1,AnimationEffectTiming:!1,AnimationEffectTimingReadOnly:!1,AnimationEvent:!1,AnimationPlaybackEvent:!1,AnimationTimeline:!1,applicationCache:!1,ApplicationCache:!1,ApplicationCacheErrorEvent:!1,atob:!1,Attr:!1,Audio:!1,AudioBuffer:!1,AudioBufferSourceNode:!1,AudioContext:!1,AudioDestinationNode:!1,AudioListener:!1,AudioNode:!1,AudioParam:!1,AudioProcessingEvent:!1,AudioScheduledSourceNode:!1,"AudioWorkletGlobalScope ":!1,AudioWorkletNode:!1,AudioWorkletProcessor:!1,BarProp:!1,BaseAudioContext:!1,BatteryManager:!1,BeforeUnloadEvent:!1,BiquadFilterNode:!1,Blob:!1,BlobEvent:!1,blur:!1,BroadcastChannel:!1,btoa:!1,BudgetService:!1,ByteLengthQueuingStrategy:!1,Cache:!1,caches:!1,CacheStorage:!1,cancelAnimationFrame:!1,cancelIdleCallback:!1,CanvasCaptureMediaStreamTrack:!1,CanvasGradient:!1,CanvasPattern:!1,CanvasRenderingContext2D:!1,ChannelMergerNode:!1,ChannelSplitterNode:!1,CharacterData:!1,clearInterval:!1,clearTimeout:!1,clientInformation:!1,ClipboardEvent:!1,close:!1,closed:!1,CloseEvent:!1,Comment:!1,CompositionEvent:!1,confirm:!1,console:!1,ConstantSourceNode:!1,ConvolverNode:!1,CountQueuingStrategy:!1,createImageBitmap:!1,Credential:!1,CredentialsContainer:!1,crypto:!1,Crypto:!1,CryptoKey:!1,CSS:!1,CSSConditionRule:!1,CSSFontFaceRule:!1,CSSGroupingRule:!1,CSSImportRule:!1,CSSKeyframeRule:!1,CSSKeyframesRule:!1,CSSMediaRule:!1,CSSNamespaceRule:!1,CSSPageRule:!1,CSSRule:!1,CSSRuleList:!1,CSSStyleDeclaration:!1,CSSStyleRule:!1,CSSStyleSheet:!1,CSSSupportsRule:!1,CustomElementRegistry:!1,customElements:!1,CustomEvent:!1,DataTransfer:!1,DataTransferItem:!1,DataTransferItemList:!1,defaultstatus:!1,defaultStatus:!1,DelayNode:!1,DeviceMotionEvent:!1,DeviceOrientationEvent:!1,devicePixelRatio:!1,dispatchEvent:!1,document:!1,Document:!1,DocumentFragment:!1,DocumentType:!1,DOMError:!1,DOMException:!1,DOMImplementation:!1,DOMMatrix:!1,DOMMatrixReadOnly:!1,DOMParser:!1,DOMPoint:!1,DOMPointReadOnly:!1,DOMQuad:!1,DOMRect:!1,DOMRectReadOnly:!1,DOMStringList:!1,DOMStringMap:!1,DOMTokenList:!1,DragEvent:!1,DynamicsCompressorNode:!1,Element:!1,ErrorEvent:!1,event:!1,Event:!1,EventSource:!1,EventTarget:!1,external:!1,fetch:!1,File:!1,FileList:!1,FileReader:!1,find:!1,focus:!1,FocusEvent:!1,FontFace:!1,FontFaceSetLoadEvent:!1,FormData:!1,frameElement:!1,frames:!1,GainNode:!1,Gamepad:!1,GamepadButton:!1,GamepadEvent:!1,getComputedStyle:!1,getSelection:!1,HashChangeEvent:!1,Headers:!1,history:!1,History:!1,HTMLAllCollection:!1,HTMLAnchorElement:!1,HTMLAreaElement:!1,HTMLAudioElement:!1,HTMLBaseElement:!1,HTMLBodyElement:!1,HTMLBRElement:!1,HTMLButtonElement:!1,HTMLCanvasElement:!1,HTMLCollection:!1,HTMLContentElement:!1,HTMLDataElement:!1,HTMLDataListElement:!1,HTMLDetailsElement:!1,HTMLDialogElement:!1,HTMLDirectoryElement:!1,HTMLDivElement:!1,HTMLDListElement:!1,HTMLDocument:!1,HTMLElement:!1,HTMLEmbedElement:!1,HTMLFieldSetElement:!1,HTMLFontElement:!1,HTMLFormControlsCollection:!1,HTMLFormElement:!1,HTMLFrameElement:!1,HTMLFrameSetElement:!1,HTMLHeadElement:!1,HTMLHeadingElement:!1,HTMLHRElement:!1,HTMLHtmlElement:!1,HTMLIFrameElement:!1,HTMLImageElement:!1,HTMLInputElement:!1,HTMLLabelElement:!1,HTMLLegendElement:!1,HTMLLIElement:!1,HTMLLinkElement:!1,HTMLMapElement:!1,HTMLMarqueeElement:!1,HTMLMediaElement:!1,HTMLMenuElement:!1,HTMLMetaElement:!1,HTMLMeterElement:!1,HTMLModElement:!1,HTMLObjectElement:!1,HTMLOListElement:!1,HTMLOptGroupElement:!1,HTMLOptionElement:!1,HTMLOptionsCollection:!1,HTMLOutputElement:!1,HTMLParagraphElement:!1,HTMLParamElement:!1,HTMLPictureElement:!1,HTMLPreElement:!1,HTMLProgressElement:!1,HTMLQuoteElement:!1,HTMLScriptElement:!1,HTMLSelectElement:!1,HTMLShadowElement:!1,HTMLSlotElement:!1,HTMLSourceElement:!1,HTMLSpanElement:!1,HTMLStyleElement:!1,HTMLTableCaptionElement:!1,HTMLTableCellElement:!1,HTMLTableColElement:!1,HTMLTableElement:!1,HTMLTableRowElement:!1,HTMLTableSectionElement:!1,HTMLTemplateElement:!1,HTMLTextAreaElement:!1,HTMLTimeElement:!1,HTMLTitleElement:!1,HTMLTrackElement:!1,HTMLUListElement:!1,HTMLUnknownElement:!1,HTMLVideoElement:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,IdleDeadline:!1,IIRFilterNode:!1,Image:!1,ImageBitmap:!1,ImageBitmapRenderingContext:!1,ImageCapture:!1,ImageData:!1,indexedDB:!1,innerHeight:!1,innerWidth:!1,InputEvent:!1,IntersectionObserver:!1,IntersectionObserverEntry:!1,Intl:!1,isSecureContext:!1,KeyboardEvent:!1,KeyframeEffect:!1,KeyframeEffectReadOnly:!1,length:!1,localStorage:!1,location:!0,Location:!1,locationbar:!1,matchMedia:!1,MediaDeviceInfo:!1,MediaDevices:!1,MediaElementAudioSourceNode:!1,MediaEncryptedEvent:!1,MediaError:!1,MediaKeyMessageEvent:!1,MediaKeySession:!1,MediaKeyStatusMap:!1,MediaKeySystemAccess:!1,MediaList:!1,MediaQueryList:!1,MediaQueryListEvent:!1,MediaRecorder:!1,MediaSettingsRange:!1,MediaSource:!1,MediaStream:!1,MediaStreamAudioDestinationNode:!1,MediaStreamAudioSourceNode:!1,MediaStreamEvent:!1,MediaStreamTrack:!1,MediaStreamTrackEvent:!1,menubar:!1,MessageChannel:!1,MessageEvent:!1,MessagePort:!1,MIDIAccess:!1,MIDIConnectionEvent:!1,MIDIInput:!1,MIDIInputMap:!1,MIDIMessageEvent:!1,MIDIOutput:!1,MIDIOutputMap:!1,MIDIPort:!1,MimeType:!1,MimeTypeArray:!1,MouseEvent:!1,moveBy:!1,moveTo:!1,MutationEvent:!1,MutationObserver:!1,MutationRecord:!1,name:!1,NamedNodeMap:!1,NavigationPreloadManager:!1,navigator:!1,Navigator:!1,NetworkInformation:!1,Node:!1,NodeFilter:!1,NodeIterator:!1,NodeList:!1,Notification:!1,OfflineAudioCompletionEvent:!1,OfflineAudioContext:!1,offscreenBuffering:!1,OffscreenCanvas:!0,onabort:!0,onafterprint:!0,onanimationend:!0,onanimationiteration:!0,onanimationstart:!0,onappinstalled:!0,onauxclick:!0,onbeforeinstallprompt:!0,onbeforeprint:!0,onbeforeunload:!0,onblur:!0,oncancel:!0,oncanplay:!0,oncanplaythrough:!0,onchange:!0,onclick:!0,onclose:!0,oncontextmenu:!0,oncuechange:!0,ondblclick:!0,ondevicemotion:!0,ondeviceorientation:!0,ondeviceorientationabsolute:!0,ondrag:!0,ondragend:!0,ondragenter:!0,ondragleave:!0,ondragover:!0,ondragstart:!0,ondrop:!0,ondurationchange:!0,onemptied:!0,onended:!0,onerror:!0,onfocus:!0,ongotpointercapture:!0,onhashchange:!0,oninput:!0,oninvalid:!0,onkeydown:!0,onkeypress:!0,onkeyup:!0,onlanguagechange:!0,onload:!0,onloadeddata:!0,onloadedmetadata:!0,onloadstart:!0,onlostpointercapture:!0,onmessage:!0,onmessageerror:!0,onmousedown:!0,onmouseenter:!0,onmouseleave:!0,onmousemove:!0,onmouseout:!0,onmouseover:!0,onmouseup:!0,onmousewheel:!0,onoffline:!0,ononline:!0,onpagehide:!0,onpageshow:!0,onpause:!0,onplay:!0,onplaying:!0,onpointercancel:!0,onpointerdown:!0,onpointerenter:!0,onpointerleave:!0,onpointermove:!0,onpointerout:!0,onpointerover:!0,onpointerup:!0,onpopstate:!0,onprogress:!0,onratechange:!0,onrejectionhandled:!0,onreset:!0,onresize:!0,onscroll:!0,onsearch:!0,onseeked:!0,onseeking:!0,onselect:!0,onstalled:!0,onstorage:!0,onsubmit:!0,onsuspend:!0,ontimeupdate:!0,ontoggle:!0,ontransitionend:!0,onunhandledrejection:!0,onunload:!0,onvolumechange:!0,onwaiting:!0,onwheel:!0,open:!1,openDatabase:!1,opener:!1,Option:!1,origin:!1,OscillatorNode:!1,outerHeight:!1,outerWidth:!1,PageTransitionEvent:!1,pageXOffset:!1,pageYOffset:!1,PannerNode:!1,parent:!1,Path2D:!1,PaymentAddress:!1,PaymentRequest:!1,PaymentRequestUpdateEvent:!1,PaymentResponse:!1,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceLongTaskTiming:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceNavigationTiming:!1,PerformanceObserver:!1,PerformanceObserverEntryList:!1,PerformancePaintTiming:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,PeriodicWave:!1,Permissions:!1,PermissionStatus:!1,personalbar:!1,PhotoCapabilities:!1,Plugin:!1,PluginArray:!1,PointerEvent:!1,PopStateEvent:!1,postMessage:!1,Presentation:!1,PresentationAvailability:!1,PresentationConnection:!1,PresentationConnectionAvailableEvent:!1,PresentationConnectionCloseEvent:!1,PresentationConnectionList:!1,PresentationReceiver:!1,PresentationRequest:!1,print:!1,ProcessingInstruction:!1,ProgressEvent:!1,PromiseRejectionEvent:!1,prompt:!1,PushManager:!1,PushSubscription:!1,PushSubscriptionOptions:!1,queueMicrotask:!1,RadioNodeList:!1,Range:!1,ReadableStream:!1,registerProcessor:!1,RemotePlayback:!1,removeEventListener:!1,Request:!1,requestAnimationFrame:!1,requestIdleCallback:!1,resizeBy:!1,ResizeObserver:!1,ResizeObserverEntry:!1,resizeTo:!1,Response:!1,RTCCertificate:!1,RTCDataChannel:!1,RTCDataChannelEvent:!1,RTCDtlsTransport:!1,RTCIceCandidate:!1,RTCIceGatherer:!1,RTCIceTransport:!1,RTCPeerConnection:!1,RTCPeerConnectionIceEvent:!1,RTCRtpContributingSource:!1,RTCRtpReceiver:!1,RTCRtpSender:!1,RTCSctpTransport:!1,RTCSessionDescription:!1,RTCStatsReport:!1,RTCTrackEvent:!1,screen:!1,Screen:!1,screenLeft:!1,ScreenOrientation:!1,screenTop:!1,screenX:!1,screenY:!1,ScriptProcessorNode:!1,scroll:!1,scrollbars:!1,scrollBy:!1,scrollTo:!1,scrollX:!1,scrollY:!1,SecurityPolicyViolationEvent:!1,Selection:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerRegistration:!1,sessionStorage:!1,setInterval:!1,setTimeout:!1,ShadowRoot:!1,SharedWorker:!1,SourceBuffer:!1,SourceBufferList:!1,speechSynthesis:!1,SpeechSynthesisEvent:!1,SpeechSynthesisUtterance:!1,StaticRange:!1,status:!1,statusbar:!1,StereoPannerNode:!1,stop:!1,Storage:!1,StorageEvent:!1,StorageManager:!1,styleMedia:!1,StyleSheet:!1,StyleSheetList:!1,SubtleCrypto:!1,SVGAElement:!1,SVGAngle:!1,SVGAnimatedAngle:!1,SVGAnimatedBoolean:!1,SVGAnimatedEnumeration:!1,SVGAnimatedInteger:!1,SVGAnimatedLength:!1,SVGAnimatedLengthList:!1,SVGAnimatedNumber:!1,SVGAnimatedNumberList:!1,SVGAnimatedPreserveAspectRatio:!1,SVGAnimatedRect:!1,SVGAnimatedString:!1,SVGAnimatedTransformList:!1,SVGAnimateElement:!1,SVGAnimateMotionElement:!1,SVGAnimateTransformElement:!1,SVGAnimationElement:!1,SVGCircleElement:!1,SVGClipPathElement:!1,SVGComponentTransferFunctionElement:!1,SVGDefsElement:!1,SVGDescElement:!1,SVGDiscardElement:!1,SVGElement:!1,SVGEllipseElement:!1,SVGFEBlendElement:!1,SVGFEColorMatrixElement:!1,SVGFEComponentTransferElement:!1,SVGFECompositeElement:!1,SVGFEConvolveMatrixElement:!1,SVGFEDiffuseLightingElement:!1,SVGFEDisplacementMapElement:!1,SVGFEDistantLightElement:!1,SVGFEDropShadowElement:!1,SVGFEFloodElement:!1,SVGFEFuncAElement:!1,SVGFEFuncBElement:!1,SVGFEFuncGElement:!1,SVGFEFuncRElement:!1,SVGFEGaussianBlurElement:!1,SVGFEImageElement:!1,SVGFEMergeElement:!1,SVGFEMergeNodeElement:!1,SVGFEMorphologyElement:!1,SVGFEOffsetElement:!1,SVGFEPointLightElement:!1,SVGFESpecularLightingElement:!1,SVGFESpotLightElement:!1,SVGFETileElement:!1,SVGFETurbulenceElement:!1,SVGFilterElement:!1,SVGForeignObjectElement:!1,SVGGElement:!1,SVGGeometryElement:!1,SVGGradientElement:!1,SVGGraphicsElement:!1,SVGImageElement:!1,SVGLength:!1,SVGLengthList:!1,SVGLinearGradientElement:!1,SVGLineElement:!1,SVGMarkerElement:!1,SVGMaskElement:!1,SVGMatrix:!1,SVGMetadataElement:!1,SVGMPathElement:!1,SVGNumber:!1,SVGNumberList:!1,SVGPathElement:!1,SVGPatternElement:!1,SVGPoint:!1,SVGPointList:!1,SVGPolygonElement:!1,SVGPolylineElement:!1,SVGPreserveAspectRatio:!1,SVGRadialGradientElement:!1,SVGRect:!1,SVGRectElement:!1,SVGScriptElement:!1,SVGSetElement:!1,SVGStopElement:!1,SVGStringList:!1,SVGStyleElement:!1,SVGSVGElement:!1,SVGSwitchElement:!1,SVGSymbolElement:!1,SVGTextContentElement:!1,SVGTextElement:!1,SVGTextPathElement:!1,SVGTextPositioningElement:!1,SVGTitleElement:!1,SVGTransform:!1,SVGTransformList:!1,SVGTSpanElement:!1,SVGUnitTypes:!1,SVGUseElement:!1,SVGViewElement:!1,TaskAttributionTiming:!1,Text:!1,TextDecoder:!1,TextEncoder:!1,TextEvent:!1,TextMetrics:!1,TextTrack:!1,TextTrackCue:!1,TextTrackCueList:!1,TextTrackList:!1,TimeRanges:!1,toolbar:!1,top:!1,Touch:!1,TouchEvent:!1,TouchList:!1,TrackEvent:!1,TransitionEvent:!1,TreeWalker:!1,UIEvent:!1,URL:!1,URLSearchParams:!1,ValidityState:!1,visualViewport:!1,VisualViewport:!1,VTTCue:!1,WaveShaperNode:!1,WebAssembly:!1,WebGL2RenderingContext:!1,WebGLActiveInfo:!1,WebGLBuffer:!1,WebGLContextEvent:!1,WebGLFramebuffer:!1,WebGLProgram:!1,WebGLQuery:!1,WebGLRenderbuffer:!1,WebGLRenderingContext:!1,WebGLSampler:!1,WebGLShader:!1,WebGLShaderPrecisionFormat:!1,WebGLSync:!1,WebGLTexture:!1,WebGLTransformFeedback:!1,WebGLUniformLocation:!1,WebGLVertexArrayObject:!1,WebSocket:!1,WheelEvent:!1,window:!1,Window:!1,Worker:!1,WritableStream:!1,XMLDocument:!1,XMLHttpRequest:!1,XMLHttpRequestEventTarget:!1,XMLHttpRequestUpload:!1,XMLSerializer:!1,XPathEvaluator:!1,XPathExpression:!1,XPathResult:!1,XSLTProcessor:!1},Im={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,clearInterval:!1,clearTimeout:!1,close:!0,console:!1,fetch:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!0,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onlanguagechange:!0,onmessage:!0,onoffline:!0,ononline:!0,onrejectionhandled:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,removeEventListener:!1,Request:!1,Response:!1,self:!0,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},Bm={__dirname:!1,__filename:!1,Buffer:!1,clearImmediate:!1,clearInterval:!1,clearTimeout:!1,console:!1,exports:!0,global:!1,Intl:!1,module:!1,process:!1,queueMicrotask:!1,require:!1,setImmediate:!1,setInterval:!1,setTimeout:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1},Om={exports:!0,global:!1,module:!1,require:!1},Lm={define:!1,require:!1},Nm={after:!1,afterEach:!1,before:!1,beforeEach:!1,context:!1,describe:!1,it:!1,mocha:!1,run:!1,setup:!1,specify:!1,suite:!1,suiteSetup:!1,suiteTeardown:!1,teardown:!1,test:!1,xcontext:!1,xdescribe:!1,xit:!1,xspecify:!1},jm={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,expectAsync:!1,fail:!1,fdescribe:!1,fit:!1,it:!1,jasmine:!1,pending:!1,runs:!1,spyOn:!1,spyOnAllFunctions:!1,spyOnProperty:!1,waits:!1,waitsFor:!1,xdescribe:!1,xit:!1},Rm={afterAll:!1,afterEach:!1,beforeAll:!1,beforeEach:!1,describe:!1,expect:!1,fdescribe:!1,fit:!1,it:!1,jest:!1,pit:!1,require:!1,test:!1,xdescribe:!1,xit:!1,xtest:!1},Mm={asyncTest:!1,deepEqual:!1,equal:!1,expect:!1,module:!1,notDeepEqual:!1,notEqual:!1,notOk:!1,notPropEqual:!1,notStrictEqual:!1,ok:!1,propEqual:!1,QUnit:!1,raises:!1,start:!1,stop:!1,strictEqual:!1,test:!1,throws:!1},Vm={console:!0,exports:!0,phantom:!0,require:!0,WebPage:!0},Um={emit:!1,exports:!1,getRow:!1,log:!1,module:!1,provides:!1,require:!1,respond:!1,send:!1,start:!1,sum:!1},qm={defineClass:!1,deserialize:!1,gc:!1,help:!1,importClass:!1,importPackage:!1,java:!1,load:!1,loadClass:!1,Packages:!1,print:!1,quit:!1,readFile:!1,readUrl:!1,runCommand:!1,seal:!1,serialize:!1,spawn:!1,sync:!1,toint32:!1,version:!1},Wm={__DIR__:!1,__FILE__:!1,__LINE__:!1,com:!1,edu:!1,exit:!1,java:!1,Java:!1,javafx:!1,JavaImporter:!1,javax:!1,JSAdapter:!1,load:!1,loadWithNewGlobal:!1,org:!1,Packages:!1,print:!1,quit:!1},$m={ActiveXObject:!0,CollectGarbage:!0,Debug:!0,Enumerator:!0,GetObject:!0,RuntimeObject:!0,ScriptEngine:!0,ScriptEngineBuildVersion:!0,ScriptEngineMajorVersion:!0,ScriptEngineMinorVersion:!0,VBArray:!0,WScript:!0,WSH:!0,XDomainRequest:!0},Gm={$:!1,jQuery:!1},zm={YAHOO:!1,YAHOO_config:!1,YUI:!1,YUI_config:!1},Hm={cat:!1,cd:!1,chmod:!1,config:!1,cp:!1,dirs:!1,echo:!1,env:!1,error:!1,exec:!1,exit:!1,find:!1,grep:!1,ln:!1,ls:!1,mkdir:!1,mv:!1,popd:!1,pushd:!1,pwd:!1,rm:!1,sed:!1,set:!1,target:!1,tempdir:!1,test:!1,touch:!1,which:!1},Km={$:!1,$$:!1,$A:!1,$break:!1,$continue:!1,$F:!1,$H:!1,$R:!1,$w:!1,Abstract:!1,Ajax:!1,Autocompleter:!1,Builder:!1,Class:!1,Control:!1,Draggable:!1,Draggables:!1,Droppables:!1,Effect:!1,Element:!1,Enumerable:!1,Event:!1,Field:!1,Form:!1,Hash:!1,Insertion:!1,ObjectRange:!1,PeriodicalExecuter:!1,Position:!1,Prototype:!1,Scriptaculous:!1,Selector:!1,Sortable:!1,SortableObserver:!1,Sound:!1,Template:!1,Toggle:!1,Try:!1},Jm={_:!1,$:!1,Accounts:!1,AccountsClient:!1,AccountsCommon:!1,AccountsServer:!1,App:!1,Assets:!1,Blaze:!1,check:!1,Cordova:!1,DDP:!1,DDPRateLimiter:!1,DDPServer:!1,Deps:!1,EJSON:!1,Email:!1,HTTP:!1,Log:!1,Match:!1,Meteor:!1,Mongo:!1,MongoInternals:!1,Npm:!1,Package:!1,Plugin:!1,process:!1,Random:!1,ReactiveDict:!1,ReactiveVar:!1,Router:!1,ServiceConfiguration:!1,Session:!1,share:!1,Spacebars:!1,Template:!1,Tinytest:!1,Tracker:!1,UI:!1,Utils:!1,WebApp:!1,WebAppInternals:!1},Qm={_isWindows:!1,_rand:!1,BulkWriteResult:!1,cat:!1,cd:!1,connect:!1,db:!1,getHostName:!1,getMemInfo:!1,hostname:!1,ISODate:!1,listFiles:!1,load:!1,ls:!1,md5sumFile:!1,mkdir:!1,Mongo:!1,NumberInt:!1,NumberLong:!1,ObjectId:!1,PlanCache:!1,print:!1,printjson:!1,pwd:!1,quit:!1,removeFile:!1,rs:!1,sh:!1,UUID:!1,version:!1,WriteResult:!1},Xm={$:!1,Application:!1,Automation:!1,console:!1,delay:!1,Library:!1,ObjC:!1,ObjectSpecifier:!1,Path:!1,Progress:!1,Ref:!1},Ym={addEventListener:!1,applicationCache:!1,atob:!1,Blob:!1,BroadcastChannel:!1,btoa:!1,Cache:!1,caches:!1,CacheStorage:!1,clearInterval:!1,clearTimeout:!1,Client:!1,clients:!1,Clients:!1,close:!0,console:!1,ExtendableEvent:!1,ExtendableMessageEvent:!1,fetch:!1,FetchEvent:!1,FileReaderSync:!1,FormData:!1,Headers:!1,IDBCursor:!1,IDBCursorWithValue:!1,IDBDatabase:!1,IDBFactory:!1,IDBIndex:!1,IDBKeyRange:!1,IDBObjectStore:!1,IDBOpenDBRequest:!1,IDBRequest:!1,IDBTransaction:!1,IDBVersionChangeEvent:!1,ImageData:!1,importScripts:!1,indexedDB:!1,location:!1,MessageChannel:!1,MessagePort:!1,name:!1,navigator:!1,Notification:!1,onclose:!0,onconnect:!0,onerror:!0,onfetch:!0,oninstall:!0,onlanguagechange:!0,onmessage:!0,onmessageerror:!0,onnotificationclick:!0,onnotificationclose:!0,onoffline:!0,ononline:!0,onpush:!0,onpushsubscriptionchange:!0,onrejectionhandled:!0,onsync:!0,onunhandledrejection:!0,performance:!1,Performance:!1,PerformanceEntry:!1,PerformanceMark:!1,PerformanceMeasure:!1,PerformanceNavigation:!1,PerformanceResourceTiming:!1,PerformanceTiming:!1,postMessage:!0,Promise:!1,queueMicrotask:!1,registration:!1,removeEventListener:!1,Request:!1,Response:!1,self:!1,ServiceWorker:!1,ServiceWorkerContainer:!1,ServiceWorkerGlobalScope:!1,ServiceWorkerMessageEvent:!1,ServiceWorkerRegistration:!1,setInterval:!1,setTimeout:!1,skipWaiting:!1,TextDecoder:!1,TextEncoder:!1,URL:!1,URLSearchParams:!1,WebSocket:!1,WindowClient:!1,Worker:!1,WorkerGlobalScope:!1,XMLHttpRequest:!1},Zm={advanceClock:!1,fakeClearInterval:!1,fakeClearTimeout:!1,fakeSetInterval:!1,fakeSetTimeout:!1,resetTimeouts:!1,waitsForPromise:!1},eg={andThen:!1,click:!1,currentPath:!1,currentRouteName:!1,currentURL:!1,fillIn:!1,find:!1,findAll:!1,findWithAssert:!1,keyEvent:!1,pauseTest:!1,resumeTest:!1,triggerEvent:!1,visit:!1,wait:!1},tg={$:!1,$$:!1,browser:!1,by:!1,By:!1,DartObject:!1,element:!1,protractor:!1},rg={browser:!1,chrome:!1,opr:!1},ng={cloneInto:!1,createObjectIn:!1,exportFunction:!1,GM:!1,GM_addStyle:!1,GM_deleteValue:!1,GM_getResourceText:!1,GM_getResourceURL:!1,GM_getValue:!1,GM_info:!1,GM_listValues:!1,GM_log:!1,GM_openInTab:!1,GM_registerMenuCommand:!1,GM_setClipboard:!1,GM_setValue:!1,GM_xmlhttpRequest:!1,unsafeWindow:!1},ig={$:!1,$_:!1,$$:!1,$0:!1,$1:!1,$2:!1,$3:!1,$4:!1,$x:!1,chrome:!1,clear:!1,copy:!1,debug:!1,dir:!1,dirxml:!1,getEventListeners:!1,inspect:!1,keys:!1,monitor:!1,monitorEvents:!1,profile:!1,profileEnd:!1,queryObjects:!1,table:!1,undebug:!1,unmonitor:!1,unmonitorEvents:!1,values:!1},ag={builtin:Am,es5:wm,es2015:_m,es2017:Tm,browser:Pm,worker:Im,node:Bm,commonjs:Om,amd:Lm,mocha:Nm,jasmine:jm,jest:Rm,qunit:Mm,phantomjs:Vm,couch:Um,rhino:qm,nashorn:Wm,wsh:$m,jquery:Gm,yui:zm,shelljs:Hm,prototypejs:Km,meteor:Jm,mongo:Qm,applescript:Xm,serviceworker:Ym,atomtest:Zm,embertest:eg,protractor:tg,"shared-node-browser":{clearInterval:!1,clearTimeout:!1,console:!1,setInterval:!1,setTimeout:!1,URL:!1,URLSearchParams:!1},webextensions:rg,greasemonkey:ng,devtools:ig},og=n(Object.freeze({__proto__:null,builtin:Am,es5:wm,es2015:_m,es2017:Tm,browser:Pm,worker:Im,node:Bm,commonjs:Om,amd:Lm,mocha:Nm,jasmine:jm,jest:Rm,qunit:Mm,phantomjs:Vm,couch:Um,rhino:qm,nashorn:Wm,wsh:$m,jquery:Gm,yui:zm,shelljs:Hm,prototypejs:Km,meteor:Jm,mongo:Qm,applescript:Xm,serviceworker:Ym,atomtest:Zm,embertest:eg,protractor:tg,webextensions:rg,greasemonkey:ng,devtools:ig,default:ag})),sg=1e3,ug=60*sg,cg=60*ug,lg=24*cg,pg=7*lg,fg=365.25*lg,hg=function(e,t){t=t||{};var r=i(e);if("string"===r&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*fg;case"weeks":case"week":case"w":return r*pg;case"days":case"day":case"d":return r*lg;case"hours":case"hour":case"hrs":case"hr":case"h":return r*cg;case"minutes":case"minute":case"mins":case"min":case"m":return r*ug;case"seconds":case"second":case"secs":case"sec":case"s":return r*sg;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}(e);if("number"===r&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=lg)return dg(e,t,lg,"day");if(t>=cg)return dg(e,t,cg,"hour");if(t>=ug)return dg(e,t,ug,"minute");if(t>=sg)return dg(e,t,sg,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=lg)return Math.round(e/lg)+"d";if(t>=cg)return Math.round(e/cg)+"h";if(t>=ug)return Math.round(e/ug)+"m";if(t>=sg)return Math.round(e/sg)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function dg(e,t,r,n){var i=t>=1.5*r;return Math.round(e/r)+" "+n+(i?"s":"")}var mg=function(e){function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var a;function o(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];if(o.enabled){var i=o,s=Number(new Date),u=s-(a||s);i.diff=u,i.prev=a,i.curr=s,a=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var c=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){if("%%"===e)return e;c++;var a=r.formatters[n];if("function"==typeof a){var o=t[c];e=a.call(i,o),t.splice(c,1),c--;}return e})),r.formatArgs.call(i,t),(i.log||r.log).apply(i,t);}}return o.namespace=e,o.enabled=r.enabled(e),o.useColors=r.useColors(),o.color=t(e),o.destroy=n,o.extend=i,"function"==typeof r.init&&r.init(o),r.instances.push(o),o}function n(){var e=r.instances.indexOf(this);return -1!==e&&(r.instances.splice(e,1),!0)}function i(e,t){var n=r(this.namespace+(void 0===t?":":t)+e);return n.log=this.log,n}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return r.debug=r,r.default=r,r.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},r.disable=function(){var e=[].concat(E(r.names.map(a)),E(r.skips.map(a).map((function(e){return "-"+e})))).join(",");return r.enable(""),e},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),i=n.length;for(t=0;t<i;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var a=r.instances[t];a.enabled=r.enabled(a.namespace);}},r.enabled=function(e){if("*"===e[e.length-1])return !0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return !1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return !0;return !1},r.humanize=hg,Object.keys(e).forEach((function(t){r[t]=e[t];})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=t,r.enable(r.load()),r},gg=r((function(e,t){t.log=function(){var e;return "object"===("undefined"==typeof console?"undefined":i(console))&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;var r="color: "+this.color;t.splice(1,0,r,"color: inherit");var n=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(n++,"%c"===e&&(i=n));})),t.splice(i,0,r);},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug");}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug");}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return !0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return !1;return "undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=mg(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return "[UnexpectedJSONParseError]: "+e.message}};}));gg.log,gg.formatArgs,gg.save,gg.load,gg.useColors,gg.storage,gg.colors;function yg(e,t){var r=t.range[0],n=e,i=!1;do{i=!1;var a=!0,o=!1,s=void 0;try{for(var u,c=n.childScopes[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var l=u.value,p=l.block.range;if(p[0]<=r&&r<p[1]){n=l,i=!0;break}}}catch(e){o=!0,s=e;}finally{try{a||null==c.return||c.return();}finally{if(o)throw s}}}while(i);return n}function vg(e,t){var r="",n=e;for("string"==typeof t?r=t:(r=t.name,n=yg(n,t));null!=n;){var i=n.set.get(r);if(null!=i)return i;n=n.upper;}return null}function xg(e){return !this(e)}function bg(e){return xg.bind(e)}function Eg(e){return "=>"===e.value&&"Punctuator"===e.type}function Cg(e){return ","===e.value&&"Punctuator"===e.type}function Sg(e){return ";"===e.value&&"Punctuator"===e.type}function kg(e){return ":"===e.value&&"Punctuator"===e.type}function Dg(e){return "("===e.value&&"Punctuator"===e.type}function Fg(e){return ")"===e.value&&"Punctuator"===e.type}function Ag(e){return "["===e.value&&"Punctuator"===e.type}function wg(e){return "]"===e.value&&"Punctuator"===e.type}function _g(e){return "{"===e.value&&"Punctuator"===e.type}function Tg(e){return "}"===e.value&&"Punctuator"===e.type}function Pg(e){return "Line"===e.type||"Block"===e.type||"Shebang"===e.type}var Ig=bg(Eg),Bg=bg(Cg),Og=bg(Sg),Lg=bg(kg),Ng=bg(Dg),jg=bg(Fg),Rg=bg(Ag),Mg=bg(wg),Vg=bg(_g),Ug=bg(Tg),qg=bg(Pg);function Wg(e,t){return e.id?t.getTokenAfter(e.id,Dg):t.getFirstToken(e,Dg)}function $g(e,t){var r=e.parent,n=null,i=null;if("ArrowFunctionExpression"===e.type){var a=t.getTokenBefore(e.body,Eg);n=a.loc.start,i=a.loc.end;}else "Property"===r.type||"MethodDefinition"===r.type?(n=r.loc.start,i=Wg(e,t).loc.start):(n=e.loc.start,i=Wg(e,t).loc.start);return {start:Object.assign({},n),end:Object.assign({},i)}}var Gg="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},zg=Object.freeze(new Set(["Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","isFinite","isNaN","isPrototypeOf","JSON","Map","Math","NaN","Number","Object","parseFloat","parseInt","Promise","Proxy","Reflect","RegExp","Set","String","Symbol","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","undefined","unescape","WeakMap","WeakSet"])),Hg=new Set([Array.isArray,"function"==typeof BigInt?BigInt:void 0,Boolean,Date,Date.parse,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,escape,isFinite,isNaN,isPrototypeOf].concat(E(Object.getOwnPropertyNames(Math).map((function(e){return Math[e]})).filter((function(e){return "function"==typeof e}))),[Number,Number.isFinite,Number.isNaN,Number.parseFloat,Number.parseInt,Object,Object.entries,Object.is,Object.isExtensible,Object.isFrozen,Object.isSealed,Object.keys,Object.values,parseFloat,parseInt,RegExp,String,String.fromCharCode,String.fromCodePoint,String.raw,Symbol,Symbol.for,Symbol.keyFor,unescape]).filter((function(e){return "function"==typeof e}))),Kg=new Set([Object.freeze,Object.preventExtensions,Object.seal]);function Jg(e,t){var r=function(e,t){for(var r=e;("object"===i(r)||"function"==typeof r)&&null!==r;){var n=Object.getOwnPropertyDescriptor(r,t);if(n)return n;r=Object.getPrototypeOf(r);}return null}(e,t);return null!=r&&null!=r.get}function Qg(e,t){for(var r=[],n=0;n<e.length;++n){var i=e[n];if(null==i)r.length=n+1;else if("SpreadElement"===i.type){var a=Yg(i.argument,t);if(null==a)return null;r.push.apply(r,E(a.value));}else {var o=Yg(i,t);if(null==o)return null;r.push(o.value);}}return r}var Xg=Object.freeze({ArrayExpression:function(e,t){var r=Qg(e.elements,t);return null!=r?{value:r}:null},AssignmentExpression:function(e,t){return "="===e.operator?Yg(e.right,t):null},BinaryExpression:function(e,t){if("in"===e.operator||"instanceof"===e.operator)return null;var r=Yg(e.left,t),n=Yg(e.right,t);if(null!=r&&null!=n)switch(e.operator){case"==":return {value:r.value==n.value};case"!=":return {value:r.value!=n.value};case"===":return {value:r.value===n.value};case"!==":return {value:r.value!==n.value};case"<":return {value:r.value<n.value};case"<=":return {value:r.value<=n.value};case">":return {value:r.value>n.value};case">=":return {value:r.value>=n.value};case"<<":return {value:r.value<<n.value};case">>":return {value:r.value>>n.value};case">>>":return {value:r.value>>>n.value};case"+":return {value:r.value+n.value};case"-":return {value:r.value-n.value};case"*":return {value:r.value*n.value};case"/":return {value:r.value/n.value};case"%":return {value:r.value%n.value};case"**":return {value:Math.pow(r.value,n.value)};case"|":return {value:r.value|n.value};case"^":return {value:r.value^n.value};case"&":return {value:r.value&n.value}}return null},CallExpression:function(e,t){var r=e.callee,n=Qg(e.arguments,t);if(null!=n)if("MemberExpression"===r.type){var i=Yg(r.object,t),a=r.computed?Yg(r.property,t):{value:r.property.name};if(null!=i&&null!=a){var o=i.value,s=a.value;if(Hg.has(o[s]))return {value:o[s].apply(o,E(n))};if(Kg.has(o[s]))return {value:n[0]}}}else {var u=Yg(r,t);if(null!=u){var c=u.value;if(Hg.has(c))return {value:c.apply(void 0,E(n))};if(Kg.has(c))return {value:n[0]}}}return null},ConditionalExpression:function(e,t){var r=Yg(e.test,t);return null!=r?r.value?Yg(e.consequent,t):Yg(e.alternate,t):null},ExpressionStatement:function(e,t){return Yg(e.expression,t)},Identifier:function(e,t){if(null!=t){var r=vg(t,e);if(null!=r&&0===r.defs.length&&zg.has(r.name)&&r.name in Gg)return {value:Gg[r.name]};if(null!=r&&1===r.defs.length){var n=r.defs[0];if(n.parent&&"const"===n.parent.kind&&"Identifier"===n.node.id.type)return Yg(n.node.init,t)}}return null},Literal:function(e){return null==e.regex&&null==e.bigint||null!=e.value?{value:e.value}:null},LogicalExpression:function(e,t){var r=Yg(e.left,t);if(null!=r){if("||"===e.operator&&!0===Boolean(r.value)||"&&"===e.operator&&!1===Boolean(r.value))return r;var n=Yg(e.right,t);if(null!=n)return n}return null},MemberExpression:function(e,t){var r=Yg(e.object,t),n=e.computed?Yg(e.property,t):{value:e.property.name};return null==r||null==n||Jg(r.value,n.value)?null:{value:r.value[n.value]}},NewExpression:function(e,t){var r=Yg(e.callee,t),n=Qg(e.arguments,t);if(null!=r&&null!=n){var i=r.value;if(Hg.has(i))return {value:m(i,E(n))}}return null},ObjectExpression:function(e,t){var r={},n=!0,i=!1,a=void 0;try{for(var o,s=e.properties[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value;if("Property"===u.type){if("init"!==u.kind)return null;var c=u.computed?Yg(u.key,t):{value:u.key.name},l=Yg(u.value,t);if(null==c||null==l)return null;r[c.value]=l.value;}else {if("SpreadElement"!==u.type&&"ExperimentalSpreadProperty"!==u.type)return null;var p=Yg(u.argument,t);if(null==p)return null;Object.assign(r,p.value);}}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}return {value:r}},SequenceExpression:function(e,t){return Yg(e.expressions[e.expressions.length-1],t)},TaggedTemplateExpression:function(e,t){var r=Yg(e.tag,t),n=Qg(e.quasi.expressions,t);if(null!=r&&null!=n){var i=r.value,a=e.quasi.quasis.map((function(e){return e.value.cooked}));if(a.raw=e.quasi.quasis.map((function(e){return e.value.raw})),i===String.raw)return {value:i.apply(void 0,[a].concat(E(n)))}}return null},TemplateLiteral:function(e,t){var r=Qg(e.expressions,t);if(null!=r){for(var n=e.quasis[0].value.cooked,i=0;i<r.length;++i)n+=r[i],n+=e.quasis[i+1].value.cooked;return {value:n}}return null},UnaryExpression:function(e,t){if("delete"===e.operator)return null;if("void"===e.operator)return {value:void 0};var r=Yg(e.argument,t);if(null!=r)switch(e.operator){case"-":return {value:-r.value};case"+":return {value:+r.value};case"!":return {value:!r.value};case"~":return {value:~r.value};case"typeof":return {value:i(r.value)}}return null}});function Yg(e,t){return null!=e&&Object.hasOwnProperty.call(Xg,e.type)?Xg[e.type](e,t):null}function Zg(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{return Yg(e,t)}catch(e){return null}}function ey(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(e&&"Literal"===e.type&&null===e.value){if(e.regex)return "/".concat(e.regex.pattern,"/").concat(e.regex.flags);if(e.bigint)return e.bigint}var r=Zg(e,t);return r&&String(r.value)}function ty(e,t){switch(e.type){case"MemberExpression":return e.computed?ey(e.property,t):e.property.name;case"Property":case"MethodDefinition":return e.computed?ey(e.key,t):"Literal"===e.key.type?String(e.key.value):e.key.name}return null}function ry(e){var t=e.parent,r=[];if("MethodDefinition"===t.type&&t.static&&r.push("static"),e.async&&r.push("async"),e.generator&&r.push("generator"),"ArrowFunctionExpression"===e.type)r.push("arrow","function");else if("Property"===t.type||"MethodDefinition"===t.type){if("constructor"===t.kind)return "constructor";"get"===t.kind?r.push("getter"):"set"===t.kind?r.push("setter"):r.push("method");}else r.push("function");if(e.id)r.push("'".concat(e.id.name,"'"));else {var n=ty(t);n&&r.push("'".concat(n,"'"));}return r.join(" ")}var ny=Object.freeze(new Set(["==","!=","<","<=",">",">=","<<",">>",">>>","+","-","*","/","%","|","^","&","in"])),iy=Object.freeze(new Set(["-","+","!","~"])),ay=Object.freeze(Object.assign(Object.create(null),{$visit:function(e,t,r){var n=e.type;return "function"==typeof this[n]?this[n](e,t,r):this.$visitChildren(e,t,r)},$visitChildren:function(e,t,r){var n=e.type,i=!0,a=!1,o=void 0;try{for(var s,u=(r[n]||Lp.getKeys(e))[Symbol.iterator]();!(i=(s=u.next()).done);i=!0){var c=e[s.value];if(Array.isArray(c)){var l=!0,p=!1,f=void 0;try{for(var h,d=c[Symbol.iterator]();!(l=(h=d.next()).done);l=!0){var m=h.value;if(m&&this.$visit(m,t,r))return !0}}catch(e){p=!0,f=e;}finally{try{l||null==d.return||d.return();}finally{if(p)throw f}}}else if(c&&this.$visit(c,t,r))return !0}}catch(e){a=!0,o=e;}finally{try{i||null==u.return||u.return();}finally{if(a)throw o}}return !1},ArrowFunctionExpression:function(){return !1},AssignmentExpression:function(){return !0},AwaitExpression:function(){return !0},BinaryExpression:function(e,t,r){return !(!t.considerImplicitTypeConversion||!ny.has(e.operator)||"Literal"===e.left.type&&"Literal"===e.right.type)||this.$visitChildren(e,t,r)},CallExpression:function(){return !0},FunctionExpression:function(){return !1},ImportExpression:function(){return !0},MemberExpression:function(e,t,r){return !!t.considerGetters||(!(!t.considerImplicitTypeConversion||!e.computed||"Literal"===e.property.type)||this.$visitChildren(e,t,r))},MethodDefinition:function(e,t,r){return !(!t.considerImplicitTypeConversion||!e.computed||"Literal"===e.key.type)||this.$visitChildren(e,t,r)},NewExpression:function(){return !0},Property:function(e,t,r){return !(!t.considerImplicitTypeConversion||!e.computed||"Literal"===e.key.type)||this.$visitChildren(e,t,r)},UnaryExpression:function(e,t,r){return "delete"===e.operator||(!(!t.considerImplicitTypeConversion||!iy.has(e.operator)||"Literal"===e.argument.type)||this.$visitChildren(e,t,r))},UpdateExpression:function(){return !0},YieldExpression:function(){return !0}}));function oy(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=r.considerGetters,i=void 0!==n&&n,a=r.considerImplicitTypeConversion,o=void 0!==a&&a;return ay.$visit(e,{considerGetters:i,considerImplicitTypeConversion:o},t.visitorKeys||Lp.KEYS)}function sy(e,t){var r=e.parent;switch(r.type){case"CallExpression":case"NewExpression":return 1===r.arguments.length&&r.arguments[0]===e?t.getTokenAfter(r.callee,Dg):null;case"DoWhileStatement":return r.test===e?t.getTokenAfter(r.body,Dg):null;case"IfStatement":case"WhileStatement":return r.test===e?t.getFirstToken(r,1):null;case"ImportExpression":return r.source===e?t.getFirstToken(r,1):null;case"SwitchStatement":return r.discriminant===e?t.getFirstToken(r,1):null;case"WithStatement":return r.object===e?t.getFirstToken(r,1):null;default:return null}}function uy(e,t,r){var n,i,a,o,s;if("number"==typeof e){if(i=t,a=r,!((n=0|e)>=1))throw new TypeError("'times' should be a positive integer.")}else n=1,i=e,a=t;if(null==i)return !1;o=s=i;do{o=a.getTokenBefore(o),s=a.getTokenAfter(s);}while(null!=o&&null!=s&&Dg(o)&&Fg(s)&&o!==sy(i,a)&&--n>0);return 0===n}var cy=/\$(?:[\$&'`]|[1-9][0-9]?)/g,ly=new WeakMap;function py(e,t){for(var r=!1,n=t-1;n>=0&&92===e.charCodeAt(n);--n)r=!r;return r}var fy=function(){function e(t){var r=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).escaped,n=void 0!==r&&r;if(a(this,e),!(t instanceof RegExp))throw new TypeError("'pattern' should be a RegExp instance.");if(!t.flags.includes("g"))throw new Error("'pattern' should contains 'g' flag.");ly.set(this,{pattern:new RegExp(t.source,t.flags),escaped:Boolean(n)});}return s(e,[{key:"execAll",value:regeneratorRuntime.mark((function e(t){var r,n,i,a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=ly.get(this),n=r.pattern,i=r.escaped,a=null,o=0,n.lastIndex=0;case 4:if(null==(a=n.exec(t))){e.next=12;break}if(!i&&py(t,a.index)){e.next=10;break}return o=n.lastIndex,e.next=9,a;case 9:n.lastIndex=o;case 10:e.next=4;break;case 12:case"end":return e.stop()}}),e,this)}))},{key:"test",value:function(e){return !this.execAll(e).next().done}},{key:Symbol.replace,value:function(e,t){return "function"==typeof t?function(e,t,r){var n=[],i=0,a=!0,o=!1,s=void 0;try{for(var u,c=e.execAll(t)[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var l=u.value;n.push(t.slice(i,l.index)),n.push(String(r.apply(void 0,E(l).concat([l.index,l.input])))),i=l.index+l[0].length;}}catch(e){o=!0,s=e;}finally{try{a||null==c.return||c.return();}finally{if(o)throw s}}return n.push(t.slice(i)),n.join("")}(this,String(e),t):function(e,t,r){var n=[],i=0,a=null;function o(e){switch(e){case"$$":return "$";case"$&":return a[0];case"$`":return t.slice(0,a.index);case"$'":return t.slice(a.index+a[0].length);default:var r=e.slice(1);return r in a?a[r]:e}}var s=!0,u=!1,c=void 0;try{for(var l,p=e.execAll(t)[Symbol.iterator]();!(s=(l=p.next()).done);s=!0)a=l.value,n.push(t.slice(i,a.index)),n.push(r.replace(cy,o)),i=a.index+a[0].length;}catch(e){u=!0,c=e;}finally{try{s||null==p.return||p.return();}finally{if(u)throw c}}return n.push(t.slice(i)),n.join("")}(this,String(e),String(t))}}]),e}(),hy=/^(?:Import|Export(?:All|Default|Named))Declaration$/,dy=Function.call.bind(Object.hasOwnProperty),my=Symbol("read"),gy=Symbol("call"),yy=Symbol("construct"),vy=Symbol("esm"),xy={require:u({},gy,!0)};function by(e){return null==e||0!==e.defs.length||e.references.some((function(e){return e.isWrite()}))}function Ey(e){var t=e.parent;switch(t&&t.type){case"ConditionalExpression":return t.consequent===e||t.alternate===e;case"LogicalExpression":return !0;case"SequenceExpression":return t.expressions[t.expressions.length-1]===e;default:return !1}}var Cy=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=r.mode,i=void 0===n?"strict":n,o=r.globalObjectNames,s=void 0===o?["global","self","window"]:o;a(this,e),this.variableStack=[],this.globalScope=t,this.mode=i,this.globalObjectNames=s.slice(0);}return s(e,[{key:"iterateGlobalReferences",value:regeneratorRuntime.mark((function e(t){var r,n,i,a,o,s,u,c,l,p,f,h,d,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=0,n=Object.keys(t);case 1:if(!(r<n.length)){e.next=12;break}if(i=n[r],a=t[i],o=[i],!by(s=this.globalScope.set.get(i))){e.next=8;break}return e.abrupt("continue",9);case 8:return e.delegateYield(this._iterateVariableReferences(s,o,a,!0),"t0",9);case 9:r++,e.next=1;break;case 12:u=!0,c=!1,l=void 0,e.prev=15,p=this.globalObjectNames[Symbol.iterator]();case 17:if(u=(f=p.next()).done){e.next=27;break}if(h=f.value,d=[],!by(m=this.globalScope.set.get(h))){e.next=23;break}return e.abrupt("continue",24);case 23:return e.delegateYield(this._iterateVariableReferences(m,d,t,!1),"t1",24);case 24:u=!0,e.next=17;break;case 27:e.next=33;break;case 29:e.prev=29,e.t2=e.catch(15),c=!0,l=e.t2;case 33:e.prev=33,e.prev=34,u||null==p.return||p.return();case 36:if(e.prev=36,!c){e.next=39;break}throw l;case 39:return e.finish(36);case 40:return e.finish(33);case 41:case"end":return e.stop()}}),e,this,[[15,29,33,41],[34,,36,40]])}))},{key:"iterateCjsReferences",value:regeneratorRuntime.mark((function e(t){var r,n,i,a,o,s,u,c,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=!0,n=!1,i=void 0,e.prev=3,a=this.iterateGlobalReferences(xy)[Symbol.iterator]();case 5:if(r=(o=a.next()).done){e.next=19;break}if(s=o.value.node,null!=(u=ey(s.arguments[0]))&&dy(t,u)){e.next=10;break}return e.abrupt("continue",16);case 10:if(c=t[u],l=[u],!c[my]){e.next=15;break}return e.next=15,{node:s,path:l,type:my,info:c[my]};case 15:return e.delegateYield(this._iteratePropertyReferences(s,l,c),"t0",16);case 16:r=!0,e.next=5;break;case 19:e.next=25;break;case 21:e.prev=21,e.t1=e.catch(3),n=!0,i=e.t1;case 25:e.prev=25,e.prev=26,r||null==a.return||a.return();case 28:if(e.prev=28,!n){e.next=31;break}throw i;case 31:return e.finish(28);case 32:return e.finish(25);case 33:case"end":return e.stop()}}),e,this,[[3,21,25,33],[26,,28,32]])}))},{key:"iterateEsmReferences",value:regeneratorRuntime.mark((function e(t){var r,n,i,a,o,s,u,c,l,p,f,h,d,m,g,y,v,x,b,E,C,S,k,D,F,A,w,_;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=this.globalScope.block,n=!0,i=!1,a=void 0,e.prev=4,o=r.body[Symbol.iterator]();case 6:if(n=(s=o.next()).done){e.next=92;break}if(u=s.value,hy.test(u.type)&&null!=u.source){e.next=10;break}return e.abrupt("continue",89);case 10:if(c=u.source.value,dy(t,c)){e.next=13;break}return e.abrupt("continue",89);case 13:if(l=t[c],p=[c],!l[my]){e.next=18;break}return e.next=18,{node:u,path:p,type:my,info:l[my]};case 18:if("ExportAllDeclaration"!==u.type){e.next=31;break}f=0,h=Object.keys(l);case 20:if(!(f<h.length)){e.next=29;break}if(d=h[f],!(m=l[d])[my]){e.next=26;break}return e.next=26,{node:u,path:p.concat(d),type:my,info:m[my]};case 26:f++,e.next=20;break;case 29:e.next=89;break;case 31:g=!0,y=!1,v=void 0,e.prev=34,x=u.specifiers[Symbol.iterator]();case 36:if(g=(b=x.next()).done){e.next=75;break}if(E=b.value,C=dy(l,vy),S=this._iterateImportReferences(E,p,C?l:"legacy"===this.mode?Object.assign({default:l},l):{default:l}),!C){e.next=44;break}return e.delegateYield(S,"t0",42);case 42:e.next=72;break;case 44:k=!0,D=!1,F=void 0,e.prev=47,A=S[Symbol.iterator]();case 49:if(k=(w=A.next()).done){e.next=58;break}if((_=w.value).path=_.path.filter(Sy),!(_.path.length>=2||_.type!==my)){e.next=55;break}return e.next=55,_;case 55:k=!0,e.next=49;break;case 58:e.next=64;break;case 60:e.prev=60,e.t1=e.catch(47),D=!0,F=e.t1;case 64:e.prev=64,e.prev=65,k||null==A.return||A.return();case 67:if(e.prev=67,!D){e.next=70;break}throw F;case 70:return e.finish(67);case 71:return e.finish(64);case 72:g=!0,e.next=36;break;case 75:e.next=81;break;case 77:e.prev=77,e.t2=e.catch(34),y=!0,v=e.t2;case 81:e.prev=81,e.prev=82,g||null==x.return||x.return();case 84:if(e.prev=84,!y){e.next=87;break}throw v;case 87:return e.finish(84);case 88:return e.finish(81);case 89:n=!0,e.next=6;break;case 92:e.next=98;break;case 94:e.prev=94,e.t3=e.catch(4),i=!0,a=e.t3;case 98:e.prev=98,e.prev=99,n||null==o.return||o.return();case 101:if(e.prev=101,!i){e.next=104;break}throw a;case 104:return e.finish(101);case 105:return e.finish(98);case 106:case"end":return e.stop()}}),e,this,[[4,94,98,106],[34,77,81,89],[47,60,64,72],[65,,67,71],[82,,84,88],[99,,101,105]])}))},{key:"_iterateVariableReferences",value:regeneratorRuntime.mark((function e(t,r,n,i){var a,o,s,u,c,l,p;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.variableStack.includes(t)){e.next=2;break}return e.abrupt("return");case 2:this.variableStack.push(t),e.prev=3,a=!0,o=!1,s=void 0,e.prev=7,u=t.references[Symbol.iterator]();case 9:if(a=(c=u.next()).done){e.next=21;break}if((l=c.value).isRead()){e.next=13;break}return e.abrupt("continue",18);case 13:if(p=l.identifier,!i||!n[my]){e.next=17;break}return e.next=17,{node:p,path:r,type:my,info:n[my]};case 17:return e.delegateYield(this._iteratePropertyReferences(p,r,n),"t0",18);case 18:a=!0,e.next=9;break;case 21:e.next=27;break;case 23:e.prev=23,e.t1=e.catch(7),o=!0,s=e.t1;case 27:e.prev=27,e.prev=28,a||null==u.return||u.return();case 30:if(e.prev=30,!o){e.next=33;break}throw s;case 33:return e.finish(30);case 34:return e.finish(27);case 35:return e.prev=35,this.variableStack.pop(),e.finish(35);case 38:case"end":return e.stop()}}),e,this,[[3,,35,38],[7,23,27,35],[28,,30,34]])}))},{key:"_iteratePropertyReferences",value:regeneratorRuntime.mark((function e(t,r,n){var i,a,o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(i=t;Ey(i);)i=i.parent;if("MemberExpression"!==(a=i.parent).type){e.next=15;break}if(a.object!==i){e.next=14;break}if(null!=(o=ty(a))&&dy(n,o)){e.next=8;break}return e.abrupt("return");case 8:if(r=r.concat(o),!(s=n[o])[my]){e.next=13;break}return e.next=13,{node:a,path:r,type:my,info:s[my]};case 13:return e.delegateYield(this._iteratePropertyReferences(a,r,s),"t0",14);case 14:return e.abrupt("return");case 15:if("CallExpression"!==a.type){e.next=20;break}if(a.callee!==i||!n[gy]){e.next=19;break}return e.next=19,{node:a,path:r,type:gy,info:n[gy]};case 19:return e.abrupt("return");case 20:if("NewExpression"!==a.type){e.next=25;break}if(a.callee!==i||!n[yy]){e.next=24;break}return e.next=24,{node:a,path:r,type:yy,info:n[yy]};case 24:return e.abrupt("return");case 25:if("AssignmentExpression"!==a.type){e.next=30;break}if(a.right!==i){e.next=29;break}return e.delegateYield(this._iterateLhsReferences(a.left,r,n),"t1",28);case 28:return e.delegateYield(this._iteratePropertyReferences(a,r,n),"t2",29);case 29:return e.abrupt("return");case 30:if("AssignmentPattern"!==a.type){e.next=34;break}if(a.right!==i){e.next=33;break}return e.delegateYield(this._iterateLhsReferences(a.left,r,n),"t3",33);case 33:return e.abrupt("return");case 34:if("VariableDeclarator"!==a.type){e.next=37;break}if(a.init!==i){e.next=37;break}return e.delegateYield(this._iterateLhsReferences(a.id,r,n),"t4",37);case 37:case"end":return e.stop()}}),e,this)}))},{key:"_iterateLhsReferences",value:regeneratorRuntime.mark((function e(t,r,n){var i,a,o,s,u,c,l,p,f,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("Identifier"!==t.type){e.next=5;break}if(null==(i=vg(this.globalScope,t))){e.next=4;break}return e.delegateYield(this._iterateVariableReferences(i,r,n,!1),"t0",4);case 4:return e.abrupt("return");case 5:if("ObjectPattern"!==t.type){e.next=40;break}a=!0,o=!1,s=void 0,e.prev=9,u=t.properties[Symbol.iterator]();case 11:if(a=(c=u.next()).done){e.next=25;break}if(l=c.value,null!=(p=ty(l))&&dy(n,p)){e.next=16;break}return e.abrupt("continue",22);case 16:if(f=r.concat(p),!(h=n[p])[my]){e.next=21;break}return e.next=21,{node:l,path:f,type:my,info:h[my]};case 21:return e.delegateYield(this._iterateLhsReferences(l.value,f,h),"t1",22);case 22:a=!0,e.next=11;break;case 25:e.next=31;break;case 27:e.prev=27,e.t2=e.catch(9),o=!0,s=e.t2;case 31:e.prev=31,e.prev=32,a||null==u.return||u.return();case 34:if(e.prev=34,!o){e.next=37;break}throw s;case 37:return e.finish(34);case 38:return e.finish(31);case 39:return e.abrupt("return");case 40:if("AssignmentPattern"!==t.type){e.next=42;break}return e.delegateYield(this._iterateLhsReferences(t.left,r,n),"t3",42);case 42:case"end":return e.stop()}}),e,this,[[9,27,31,39],[32,,34,38]])}))},{key:"_iterateImportReferences",value:regeneratorRuntime.mark((function e(t,r,n){var i,a,o,s,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("ImportSpecifier"!==(i=t.type)&&"ImportDefaultSpecifier"!==i){e.next=12;break}if(a="ImportDefaultSpecifier"===i?"default":t.imported.name,dy(n,a)){e.next=5;break}return e.abrupt("return");case 5:if(r=r.concat(a),!(o=n[a])[my]){e.next=10;break}return e.next=10,{node:t,path:r,type:my,info:o[my]};case 10:return e.delegateYield(this._iterateVariableReferences(vg(this.globalScope,t.local),r,o,!1),"t0",11);case 11:return e.abrupt("return");case 12:if("ImportNamespaceSpecifier"!==i){e.next=15;break}return e.delegateYield(this._iterateVariableReferences(vg(this.globalScope,t.local),r,n,!1),"t1",14);case 14:return e.abrupt("return");case 15:if("ExportSpecifier"!==i){e.next=24;break}if(s=t.local.name,dy(n,s)){e.next=19;break}return e.abrupt("return");case 19:if(r=r.concat(s),!(u=n[s])[my]){e.next=24;break}return e.next=24,{node:t,path:r,type:my,info:u[my]};case 24:case"end":return e.stop()}}),e,this)}))}]),e}();function Sy(e,t){return !(1===t&&"default"===e)}Cy.READ=my,Cy.CALL=gy,Cy.CONSTRUCT=yy,Cy.ESM=vy;var ky={CALL:gy,CONSTRUCT:yy,ESM:vy,findVariable:vg,getFunctionHeadLocation:$g,getFunctionNameWithKind:ry,getInnermostScope:yg,getPropertyName:ty,getStaticValue:Zg,getStringIfConstant:ey,hasSideEffect:oy,isArrowToken:Eg,isClosingBraceToken:Tg,isClosingBracketToken:wg,isClosingParenToken:Fg,isColonToken:kg,isCommaToken:Cg,isCommentToken:Pg,isNotArrowToken:Ig,isNotClosingBraceToken:Ug,isNotClosingBracketToken:Mg,isNotClosingParenToken:jg,isNotColonToken:Lg,isNotCommaToken:Bg,isNotCommentToken:qg,isNotOpeningBraceToken:Vg,isNotOpeningBracketToken:Rg,isNotOpeningParenToken:Ng,isNotSemicolonToken:Og,isOpeningBraceToken:_g,isOpeningBracketToken:Ag,isOpeningParenToken:Dg,isParenthesized:uy,isSemicolonToken:Sg,PatternMatcher:fy,READ:my,ReferenceTracker:Cy},Dy=n(Object.freeze({__proto__:null,default:ky,CALL:gy,CONSTRUCT:yy,ESM:vy,PatternMatcher:fy,READ:my,ReferenceTracker:Cy,findVariable:vg,getFunctionHeadLocation:$g,getFunctionNameWithKind:ry,getInnermostScope:yg,getPropertyName:ty,getStaticValue:Zg,getStringIfConstant:ey,hasSideEffect:oy,isArrowToken:Eg,isClosingBraceToken:Tg,isClosingBracketToken:wg,isClosingParenToken:Fg,isColonToken:kg,isCommaToken:Cg,isCommentToken:Pg,isNotArrowToken:Ig,isNotClosingBraceToken:Ug,isNotClosingBracketToken:Mg,isNotClosingParenToken:jg,isNotColonToken:Lg,isNotCommaToken:Bg,isNotCommentToken:qg,isNotOpeningBraceToken:Vg,isNotOpeningBracketToken:Rg,isNotOpeningParenToken:Ng,isNotSemicolonToken:Og,isOpeningBraceToken:_g,isOpeningBracketToken:Ag,isOpeningParenToken:Dg,isParenthesized:uy,isSemicolonToken:Sg})),Fy=r((function(e,t){function r(e){return e&&"object"==i(e)&&"default"in e?e.default:e}var n=r(Lp),o=r(Dm),u=r(Fm),c=r(og),l=r(gg),p=r(Dy),f=/\r\n|[\n\r\u2028\u2029]/;var h={breakableTypePattern:/^(?:(?:Do)?While|For(?:In|Of)?|Switch)Statement$/,lineBreakPattern:f,createGlobalLinebreakMatcher:function(){return new RegExp(f.source,"gu")},shebangPattern:/^#!((?:[\0-\t\x0B\f\x0E-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)/};var d=l("eslint:traverser");function m(){}var g=function(){function e(){a(this,e),this._current=null,this._parents=[],this._skipped=!1,this._broken=!1,this._visitorKeys=null,this._enter=null,this._leave=null;}return s(e,[{key:"current",value:function(){return this._current}},{key:"parents",value:function(){return this._parents.slice(0)}},{key:"break",value:function(){this._broken=!0;}},{key:"skip",value:function(){this._skipped=!0;}},{key:"traverse",value:function(e,t){this._current=null,this._parents=[],this._skipped=!1,this._broken=!1,this._visitorKeys=t.visitorKeys||n.KEYS,this._enter=t.enter||m,this._leave=t.leave||m,this._traverse(e,null);}},{key:"_traverse",value:function(e,t){if(function(e){return null!==e&&"object"==i(e)&&"string"==typeof e.type}(e)){if(this._current=e,this._skipped=!1,this._enter(e,t),!this._skipped&&!this._broken){var r=function(e,t){var r=e[t.type];return r||(r=n.getKeys(t),d('Unknown node type "%s": Estimated visitor keys %j',t.type,r)),r}(this._visitorKeys,e);if(1<=r.length){this._parents.push(e);for(var a=0;a<r.length&&!this._broken;++a){var o=e[r[a]];if(Array.isArray(o))for(var s=0;s<o.length&&!this._broken;++s)this._traverse(o[s],e);else this._traverse(o,e);}this._parents.pop();}}this._broken||this._leave(e,t),this._current=t;}}}],[{key:"getKeys",value:function(e){return n.getKeys(e)}},{key:"traverse",value:function(t,r){(new e).traverse(t,r);}},{key:"DEFAULT_VISITOR_KEYS",get:function(){return n.KEYS}}]),e}();t.Traverser=g,t.createCommonjsModule=function(e,t){return e(t={exports:{}},t.exports),t.exports},t.espree=o,t.evk=n,t.getCjsExportFromNamespace=function(e){return e&&e.default||e},t.globals=c,t.lodash=u,t.require$$0=p,t.require$$0$1=h,t.require$$1=l;})),Ay=(Fy.Traverser,Fy.createCommonjsModule,Fy.espree,Fy.evk,Fy.getCjsExportFromNamespace,Fy.globals,Fy.lodash,Fy.require$$0,Fy.require$$0$1,Fy.require$$1,r((function(e,t){
   /** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
   !function(e){function t(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];if(t.length>1){t[0]=t[0].slice(0,-1);for(var n=t.length-1,i=1;i<n;++i)t[i]=t[i].slice(1,-1);return t[n]=t[n].slice(1),t.join("")}return t[0]}function r(e){return "(?:"+e+")"}function n(e){return void 0===e?"undefined":null===e?"null":Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase()}function i(e){return e.toUpperCase()}function a(e){var n=t("[0-9]","[A-Fa-f]"),i=r(r("%[EFef]"+n+"%"+n+n+"%"+n+n)+"|"+r("%[89A-Fa-f]"+n+"%"+n+n)+"|"+r("%"+n+n)),a="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",o=t("[\\:\\/\\?\\#\\[\\]\\@]",a),s=e?"[\\uE000-\\uF8FF]":"[]",u=t("[A-Za-z]","[0-9]","[\\-\\.\\_\\~]",e?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]"),c=(r("[A-Za-z]"+t("[A-Za-z]","[0-9]","[\\+\\-\\.]")+"*"),r(r(i+"|"+t(u,a,"[\\:]"))+"*"),r(r("25[0-5]")+"|"+r("2[0-4][0-9]")+"|"+r("1[0-9][0-9]")+"|"+r("0?[1-9][0-9]")+"|0?0?[0-9]")),l=r(c+"\\."+c+"\\."+c+"\\."+c),p=r(n+"{1,4}"),f=r(r(p+"\\:"+p)+"|"+l),h=r(r(p+"\\:")+"{6}"+f),d=r("\\:\\:"+r(p+"\\:")+"{5}"+f),m=r(r(p)+"?\\:\\:"+r(p+"\\:")+"{4}"+f),g=r(r(r(p+"\\:")+"{0,1}"+p)+"?\\:\\:"+r(p+"\\:")+"{3}"+f),y=r(r(r(p+"\\:")+"{0,2}"+p)+"?\\:\\:"+r(p+"\\:")+"{2}"+f),v=r(r(r(p+"\\:")+"{0,3}"+p)+"?\\:\\:"+p+"\\:"+f),x=r(r(r(p+"\\:")+"{0,4}"+p)+"?\\:\\:"+f),b=r(r(r(p+"\\:")+"{0,5}"+p)+"?\\:\\:"+p),E=r(r(r(p+"\\:")+"{0,6}"+p)+"?\\:\\:"),C=r([h,d,m,g,y,v,x,b,E].join("|")),S=r(r(u+"|"+i)+"+"),k=(r("[vV]"+n+"+\\."+t(u,a,"[\\:]")+"+"),r(r(i+"|"+t(u,a))+"*"),r(i+"|"+t(u,a,"[\\:\\@]")));return r(r(i+"|"+t(u,a,"[\\@]"))+"+"),r(r(k+"|"+t("[\\/\\?]",s))+"*"),{NOT_SCHEME:new RegExp(t("[^]","[A-Za-z]","[0-9]","[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(t("[^\\%\\:]",u,a),"g"),NOT_HOST:new RegExp(t("[^\\%\\[\\]\\:]",u,a),"g"),NOT_PATH:new RegExp(t("[^\\%\\/\\:\\@]",u,a),"g"),NOT_PATH_NOSCHEME:new RegExp(t("[^\\%\\/\\@]",u,a),"g"),NOT_QUERY:new RegExp(t("[^\\%]",u,a,"[\\:\\@\\/\\?]",s),"g"),NOT_FRAGMENT:new RegExp(t("[^\\%]",u,a,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(t("[^]",u,a),"g"),UNRESERVED:new RegExp(u,"g"),OTHER_CHARS:new RegExp(t("[^\\%]",u,o),"g"),PCT_ENCODED:new RegExp(i,"g"),IPV4ADDRESS:new RegExp("^("+l+")$"),IPV6ADDRESS:new RegExp("^\\[?("+C+")"+r(r("\\%25|\\%(?!"+n+"{2})")+"("+S+")")+"?\\]?$")}}var o=a(!1),s=a(!0),u=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(n=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){i=!0,a=e;}finally{try{!n&&s.return&&s.return();}finally{if(i)throw a}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},c=2147483647,l=/^xn--/,p=/[^\0-\x7E]/,f=/[\x2E\u3002\uFF0E\uFF61]/g,h={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},d=Math.floor,m=String.fromCharCode;function g(e){throw new RangeError(h[e])}function y(e,t){var r=e.split("@"),n="";r.length>1&&(n=r[0]+"@",e=r[1]);var i=function(e,t){for(var r=[],n=e.length;n--;)r[n]=t(e[n]);return r}((e=e.replace(f,".")).split("."),t).join(".");return n+i}function v(e){for(var t=[],r=0,n=e.length;r<n;){var i=e.charCodeAt(r++);if(i>=55296&&i<=56319&&r<n){var a=e.charCodeAt(r++);56320==(64512&a)?t.push(((1023&i)<<10)+(1023&a)+65536):(t.push(i),r--);}else t.push(i);}return t}var x=function(e,t){return e+22+75*(e<26)-((0!=t)<<5)},b=function(e,t,r){var n=0;for(e=r?d(e/700):e>>1,e+=d(e/t);e>455;n+=36)e=d(e/35);return d(n+36*e/(e+38))},E=function(e){var t,r=[],n=e.length,i=0,a=128,o=72,s=e.lastIndexOf("-");s<0&&(s=0);for(var u=0;u<s;++u)e.charCodeAt(u)>=128&&g("not-basic"),r.push(e.charCodeAt(u));for(var l=s>0?s+1:0;l<n;){for(var p=i,f=1,h=36;;h+=36){l>=n&&g("invalid-input");var m=(t=e.charCodeAt(l++))-48<10?t-22:t-65<26?t-65:t-97<26?t-97:36;(m>=36||m>d((c-i)/f))&&g("overflow"),i+=m*f;var y=h<=o?1:h>=o+26?26:h-o;if(m<y)break;var v=36-y;f>d(c/v)&&g("overflow"),f*=v;}var x=r.length+1;o=b(i-p,x,0==p),d(i/x)>c-a&&g("overflow"),a+=d(i/x),i%=x,r.splice(i++,0,a);}return String.fromCodePoint.apply(String,r)},C=function(e){var t=[],r=(e=v(e)).length,n=128,i=0,a=72,o=!0,s=!1,u=void 0;try{for(var l,p=e[Symbol.iterator]();!(o=(l=p.next()).done);o=!0){var f=l.value;f<128&&t.push(m(f));}}catch(e){s=!0,u=e;}finally{try{!o&&p.return&&p.return();}finally{if(s)throw u}}var h=t.length,y=h;for(h&&t.push("-");y<r;){var E=c,C=!0,S=!1,k=void 0;try{for(var D,F=e[Symbol.iterator]();!(C=(D=F.next()).done);C=!0){var A=D.value;A>=n&&A<E&&(E=A);}}catch(e){S=!0,k=e;}finally{try{!C&&F.return&&F.return();}finally{if(S)throw k}}var w=y+1;E-n>d((c-i)/w)&&g("overflow"),i+=(E-n)*w,n=E;var _=!0,T=!1,P=void 0;try{for(var I,B=e[Symbol.iterator]();!(_=(I=B.next()).done);_=!0){var O=I.value;if(O<n&&++i>c&&g("overflow"),O==n){for(var L=i,N=36;;N+=36){var j=N<=a?1:N>=a+26?26:N-a;if(L<j)break;var R=L-j,M=36-j;t.push(m(x(j+R%M,0))),L=d(R/M);}t.push(m(x(L,0))),a=b(i,w,y==h),i=0,++y;}}}catch(e){T=!0,P=e;}finally{try{!_&&B.return&&B.return();}finally{if(T)throw P}}++i,++n;}return t.join("")},S={version:"2.1.0",ucs2:{decode:v,encode:function(e){return String.fromCodePoint.apply(String,function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}(e))}},decode:E,encode:C,toASCII:function(e){return y(e,(function(e){return p.test(e)?"xn--"+C(e):e}))},toUnicode:function(e){return y(e,(function(e){return l.test(e)?E(e.slice(4).toLowerCase()):e}))}},k={};function D(e){var t=e.charCodeAt(0);return t<16?"%0"+t.toString(16).toUpperCase():t<128?"%"+t.toString(16).toUpperCase():t<2048?"%"+(t>>6|192).toString(16).toUpperCase()+"%"+(63&t|128).toString(16).toUpperCase():"%"+(t>>12|224).toString(16).toUpperCase()+"%"+(t>>6&63|128).toString(16).toUpperCase()+"%"+(63&t|128).toString(16).toUpperCase()}function F(e){for(var t="",r=0,n=e.length;r<n;){var i=parseInt(e.substr(r+1,2),16);if(i<128)t+=String.fromCharCode(i),r+=3;else if(i>=194&&i<224){if(n-r>=6){var a=parseInt(e.substr(r+4,2),16);t+=String.fromCharCode((31&i)<<6|63&a);}else t+=e.substr(r,6);r+=6;}else if(i>=224){if(n-r>=9){var o=parseInt(e.substr(r+4,2),16),s=parseInt(e.substr(r+7,2),16);t+=String.fromCharCode((15&i)<<12|(63&o)<<6|63&s);}else t+=e.substr(r,9);r+=9;}else t+=e.substr(r,3),r+=3;}return t}function A(e,t){function r(e){var r=F(e);return r.match(t.UNRESERVED)?r:e}return e.scheme&&(e.scheme=String(e.scheme).replace(t.PCT_ENCODED,r).toLowerCase().replace(t.NOT_SCHEME,"")),void 0!==e.userinfo&&(e.userinfo=String(e.userinfo).replace(t.PCT_ENCODED,r).replace(t.NOT_USERINFO,D).replace(t.PCT_ENCODED,i)),void 0!==e.host&&(e.host=String(e.host).replace(t.PCT_ENCODED,r).toLowerCase().replace(t.NOT_HOST,D).replace(t.PCT_ENCODED,i)),void 0!==e.path&&(e.path=String(e.path).replace(t.PCT_ENCODED,r).replace(e.scheme?t.NOT_PATH:t.NOT_PATH_NOSCHEME,D).replace(t.PCT_ENCODED,i)),void 0!==e.query&&(e.query=String(e.query).replace(t.PCT_ENCODED,r).replace(t.NOT_QUERY,D).replace(t.PCT_ENCODED,i)),void 0!==e.fragment&&(e.fragment=String(e.fragment).replace(t.PCT_ENCODED,r).replace(t.NOT_FRAGMENT,D).replace(t.PCT_ENCODED,i)),e}function w(e){return e.replace(/^0*(.*)/,"$1")||"0"}function _(e,t){var r=e.match(t.IPV4ADDRESS)||[],n=u(r,2)[1];return n?n.split(".").map(w).join("."):e}function T(e,t){var r=e.match(t.IPV6ADDRESS)||[],n=u(r,3),i=n[1],a=n[2];if(i){for(var o=i.toLowerCase().split("::").reverse(),s=u(o,2),c=s[0],l=s[1],p=l?l.split(":").map(w):[],f=c.split(":").map(w),h=t.IPV4ADDRESS.test(f[f.length-1]),d=h?7:8,m=f.length-d,g=Array(d),y=0;y<d;++y)g[y]=p[y]||f[m+y]||"";h&&(g[d-1]=_(g[d-1],t));var v=g.reduce((function(e,t,r){if(!t||"0"===t){var n=e[e.length-1];n&&n.index+n.length===r?n.length++:e.push({index:r,length:1});}return e}),[]).sort((function(e,t){return t.length-e.length}))[0],x=void 0;if(v&&v.length>1){var b=g.slice(0,v.index),E=g.slice(v.index+v.length);x=b.join(":")+"::"+E.join(":");}else x=g.join(":");return a&&(x+="%"+a),x}return e}var P=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,I=void 0==="".match(/(){0}/)[1];function B(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r={},n=!1!==t.iri?s:o;"suffix"===t.reference&&(e=(t.scheme?t.scheme+":":"")+"//"+e);var i=e.match(P);if(i){I?(r.scheme=i[1],r.userinfo=i[3],r.host=i[4],r.port=parseInt(i[5],10),r.path=i[6]||"",r.query=i[7],r.fragment=i[8],isNaN(r.port)&&(r.port=i[5])):(r.scheme=i[1]||void 0,r.userinfo=-1!==e.indexOf("@")?i[3]:void 0,r.host=-1!==e.indexOf("//")?i[4]:void 0,r.port=parseInt(i[5],10),r.path=i[6]||"",r.query=-1!==e.indexOf("?")?i[7]:void 0,r.fragment=-1!==e.indexOf("#")?i[8]:void 0,isNaN(r.port)&&(r.port=e.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?i[4]:void 0)),r.host&&(r.host=T(_(r.host,n),n)),void 0!==r.scheme||void 0!==r.userinfo||void 0!==r.host||void 0!==r.port||r.path||void 0!==r.query?void 0===r.scheme?r.reference="relative":void 0===r.fragment?r.reference="absolute":r.reference="uri":r.reference="same-document",t.reference&&"suffix"!==t.reference&&t.reference!==r.reference&&(r.error=r.error||"URI is not a "+t.reference+" reference.");var a=k[(t.scheme||r.scheme||"").toLowerCase()];if(t.unicodeSupport||a&&a.unicodeSupport)A(r,n);else {if(r.host&&(t.domainHost||a&&a.domainHost))try{r.host=S.toASCII(r.host.replace(n.PCT_ENCODED,F).toLowerCase());}catch(e){r.error=r.error||"Host's domain name can not be converted to ASCII via punycode: "+e;}A(r,o);}a&&a.parse&&a.parse(r,t);}else r.error=r.error||"URI can not be parsed.";return r}var O=/^\.\.?\//,L=/^\/\.(\/|$)/,N=/^\/\.\.(\/|$)/,j=/^\/?(?:.|\n)*?(?=\/|$)/;function R(e){for(var t=[];e.length;)if(e.match(O))e=e.replace(O,"");else if(e.match(L))e=e.replace(L,"/");else if(e.match(N))e=e.replace(N,"/"),t.pop();else if("."===e||".."===e)e="";else {var r=e.match(j);if(!r)throw new Error("Unexpected dot segment condition");var n=r[0];e=e.slice(n.length),t.push(n);}return t.join("")}function M(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.iri?s:o,n=[],i=k[(t.scheme||e.scheme||"").toLowerCase()];if(i&&i.serialize&&i.serialize(e,t),e.host)if(r.IPV6ADDRESS.test(e.host));else if(t.domainHost||i&&i.domainHost)try{e.host=t.iri?S.toUnicode(e.host):S.toASCII(e.host.replace(r.PCT_ENCODED,F).toLowerCase());}catch(r){e.error=e.error||"Host's domain name can not be converted to "+(t.iri?"Unicode":"ASCII")+" via punycode: "+r;}A(e,r),"suffix"!==t.reference&&e.scheme&&(n.push(e.scheme),n.push(":"));var a=function(e,t){var r=!1!==t.iri?s:o,n=[];return void 0!==e.userinfo&&(n.push(e.userinfo),n.push("@")),void 0!==e.host&&n.push(T(_(String(e.host),r),r).replace(r.IPV6ADDRESS,(function(e,t,r){return "["+t+(r?"%25"+r:"")+"]"}))),"number"==typeof e.port&&(n.push(":"),n.push(e.port.toString(10))),n.length?n.join(""):void 0}(e,t);if(void 0!==a&&("suffix"!==t.reference&&n.push("//"),n.push(a),e.path&&"/"!==e.path.charAt(0)&&n.push("/")),void 0!==e.path){var u=e.path;t.absolutePath||i&&i.absolutePath||(u=R(u)),void 0===a&&(u=u.replace(/^\/\//,"/%2F")),n.push(u);}return void 0!==e.query&&(n.push("?"),n.push(e.query)),void 0!==e.fragment&&(n.push("#"),n.push(e.fragment)),n.join("")}function V(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n={};return arguments[3]||(e=B(M(e,r),r),t=B(M(t,r),r)),!(r=r||{}).tolerant&&t.scheme?(n.scheme=t.scheme,n.userinfo=t.userinfo,n.host=t.host,n.port=t.port,n.path=R(t.path||""),n.query=t.query):(void 0!==t.userinfo||void 0!==t.host||void 0!==t.port?(n.userinfo=t.userinfo,n.host=t.host,n.port=t.port,n.path=R(t.path||""),n.query=t.query):(t.path?("/"===t.path.charAt(0)?n.path=R(t.path):(void 0===e.userinfo&&void 0===e.host&&void 0===e.port||e.path?e.path?n.path=e.path.slice(0,e.path.lastIndexOf("/")+1)+t.path:n.path=t.path:n.path="/"+t.path,n.path=R(n.path)),n.query=t.query):(n.path=e.path,void 0!==t.query?n.query=t.query:n.query=e.query),n.userinfo=e.userinfo,n.host=e.host,n.port=e.port),n.scheme=e.scheme),n.fragment=t.fragment,n}function U(e,t){return e&&e.toString().replace(t&&t.iri?s.PCT_ENCODED:o.PCT_ENCODED,F)}var q={scheme:"http",domainHost:!0,parse:function(e,t){return e.host||(e.error=e.error||"HTTP URIs must have a host."),e},serialize:function(e,t){return e.port!==("https"!==String(e.scheme).toLowerCase()?80:443)&&""!==e.port||(e.port=void 0),e.path||(e.path="/"),e}},W={scheme:"https",domainHost:q.domainHost,parse:q.parse,serialize:q.serialize},$={},G="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",z="[0-9A-Fa-f]",H=r(r("%[EFef][0-9A-Fa-f]%"+z+z+"%"+z+z)+"|"+r("%[89A-Fa-f][0-9A-Fa-f]%"+z+z)+"|"+r("%"+z+z)),K=t("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),J=new RegExp(G,"g"),Q=new RegExp(H,"g"),X=new RegExp(t("[^]","[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]","[\\.]",'[\\"]',K),"g"),Y=new RegExp(t("[^]",G,"[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]"),"g"),Z=Y;function ee(e){var t=F(e);return t.match(J)?t:e}var te={scheme:"mailto",parse:function(e,t){var r=e,n=r.to=r.path?r.path.split(","):[];if(r.path=void 0,r.query){for(var i=!1,a={},o=r.query.split("&"),s=0,u=o.length;s<u;++s){var c=o[s].split("=");switch(c[0]){case"to":for(var l=c[1].split(","),p=0,f=l.length;p<f;++p)n.push(l[p]);break;case"subject":r.subject=U(c[1],t);break;case"body":r.body=U(c[1],t);break;default:i=!0,a[U(c[0],t)]=U(c[1],t);}}i&&(r.headers=a);}r.query=void 0;for(var h=0,d=n.length;h<d;++h){var m=n[h].split("@");if(m[0]=U(m[0]),t.unicodeSupport)m[1]=U(m[1],t).toLowerCase();else try{m[1]=S.toASCII(U(m[1],t).toLowerCase());}catch(e){r.error=r.error||"Email address's domain name can not be converted to ASCII via punycode: "+e;}n[h]=m.join("@");}return r},serialize:function(e,t){var r,n=e,a=null!=(r=e.to)?r instanceof Array?r:"number"!=typeof r.length||r.split||r.setInterval||r.call?[r]:Array.prototype.slice.call(r):[];if(a){for(var o=0,s=a.length;o<s;++o){var u=String(a[o]),c=u.lastIndexOf("@"),l=u.slice(0,c).replace(Q,ee).replace(Q,i).replace(X,D),p=u.slice(c+1);try{p=t.iri?S.toUnicode(p):S.toASCII(U(p,t).toLowerCase());}catch(e){n.error=n.error||"Email address's domain name can not be converted to "+(t.iri?"Unicode":"ASCII")+" via punycode: "+e;}a[o]=l+"@"+p;}n.path=a.join(",");}var f=e.headers=e.headers||{};e.subject&&(f.subject=e.subject),e.body&&(f.body=e.body);var h=[];for(var d in f)f[d]!==$[d]&&h.push(d.replace(Q,ee).replace(Q,i).replace(Y,D)+"="+f[d].replace(Q,ee).replace(Q,i).replace(Z,D));return h.length&&(n.query=h.join("&")),n}},re=/^([^\:]+)\:(.*)/,ne={scheme:"urn",parse:function(e,t){var r=e.path&&e.path.match(re),n=e;if(r){var i=t.scheme||n.scheme||"urn",a=r[1].toLowerCase(),o=r[2],s=i+":"+(t.nid||a),u=k[s];n.nid=a,n.nss=o,n.path=void 0,u&&(n=u.parse(n,t));}else n.error=n.error||"URN can not be parsed.";return n},serialize:function(e,t){var r=t.scheme||e.scheme||"urn",n=e.nid,i=r+":"+(t.nid||n),a=k[i];a&&(e=a.serialize(e,t));var o=e,s=e.nss;return o.path=(n||t.nid)+":"+s,o}},ie=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,ae={scheme:"urn:uuid",parse:function(e,t){var r=e;return r.uuid=r.nss,r.nss=void 0,t.tolerant||r.uuid&&r.uuid.match(ie)||(r.error=r.error||"UUID is not valid."),r},serialize:function(e,t){var r=e;return r.nss=(e.uuid||"").toLowerCase(),r}};k[q.scheme]=q,k[W.scheme]=W,k[te.scheme]=te,k[ne.scheme]=ne,k[ae.scheme]=ae,e.SCHEMES=k,e.pctEncChar=D,e.pctDecChars=F,e.parse=B,e.removeDotSegments=R,e.serialize=M,e.resolveComponents=V,e.resolve=function(e,t,r){var n=function(e,t){var r=e;if(t)for(var n in t)r[n]=t[n];return r}({scheme:"null"},r);return M(V(B(e,n),B(t,n),n,!0),n)},e.normalize=function(e,t){return "string"==typeof e?e=M(B(e,t),t):"object"===n(e)&&(e=B(M(e,t),t)),e},e.equal=function(e,t,r){return "string"==typeof e?e=M(B(e,r),r):"object"===n(e)&&(e=M(e,r)),"string"==typeof t?t=M(B(t,r),r):"object"===n(t)&&(t=M(t,r)),e===t},e.escapeComponent=function(e,t){return e&&e.toString().replace(t&&t.iri?s.ESCAPE:o.ESCAPE,D)},e.unescapeComponent=U,Object.defineProperty(e,"__esModule",{value:!0});}(t);})));t(Ay);var wy=Array.isArray,_y=Object.keys,Ty=Object.prototype.hasOwnProperty,Py=function e(t,r){if(t===r)return !0;if(t&&r&&"object"==i(t)&&"object"==i(r)){var n,a,o,s=wy(t),u=wy(r);if(s&&u){if((a=t.length)!=r.length)return !1;for(n=a;0!=n--;)if(!e(t[n],r[n]))return !1;return !0}if(s!=u)return !1;var c=t instanceof Date,l=r instanceof Date;if(c!=l)return !1;if(c&&l)return t.getTime()==r.getTime();var p=t instanceof RegExp,f=r instanceof RegExp;if(p!=f)return !1;if(p&&f)return t.toString()==r.toString();var h=_y(t);if((a=h.length)!==_y(r).length)return !1;for(n=a;0!=n--;)if(!Ty.call(r,h[n]))return !1;for(n=a;0!=n--;)if(!e(t[o=h[n]],r[o]))return !1;return !0}return t!=t&&r!=r},Iy={copy:function(e,t){for(var r in t=t||{},e)t[r]=e[r];return t},checkDataType:By,checkDataTypes:function(e,t){switch(e.length){case 1:return By(e[0],t,!0);default:var r="",n=Ly(e);for(var i in n.array&&n.object&&(r=n.null?"(":"(!"+t+" || ",r+="typeof "+t+' !== "object")',delete n.null,delete n.array,delete n.object),n.number&&delete n.integer,n)r+=(r?" && ":"")+By(i,t,!0);return r}},coerceToTypes:function(e,t){if(Array.isArray(t)){for(var r=[],n=0;n<t.length;n++){var i=t[n];Oy[i]?r[r.length]=i:"array"===e&&"array"===i&&(r[r.length]=i);}if(r.length)return r}else {if(Oy[t])return [t];if("array"===e&&"array"===t)return ["array"]}},toHash:Ly,getProperty:Ry,escapeQuotes:My,equal:Py,ucs2length:function(e){for(var t,r=0,n=e.length,i=0;i<n;)r++,(t=e.charCodeAt(i++))>=55296&&t<=56319&&i<n&&56320==(64512&(t=e.charCodeAt(i)))&&i++;return r},varOccurences:function(e,t){t+="[^0-9]";var r=e.match(new RegExp(t,"g"));return r?r.length:0},varReplace:function(e,t,r){return t+="([^0-9])",r=r.replace(/\$/g,"$$$$"),e.replace(new RegExp(t,"g"),r+"$1")},cleanUpCode:function(e){return e.replace(Vy,"").replace(Uy,"").replace(qy,"if (!($1))")},finalCleanUpCode:function(e,t){var r=e.match(Wy);r&&2==r.length&&(e=t?e.replace(Gy,"").replace(Ky,Jy):e.replace($y,"").replace(zy,Hy));return (r=e.match(Qy))&&3===r.length?e.replace(Xy,""):e},schemaHasRules:function(e,t){if("boolean"==typeof e)return !e;for(var r in e)if(t[r])return !0},schemaHasRulesExcept:function(e,t,r){if("boolean"==typeof e)return !e&&"not"!=r;for(var n in e)if(n!=r&&t[n])return !0},schemaUnknownRules:function(e,t){if("boolean"==typeof e)return;for(var r in e)if(!t[r])return r},toQuotedString:Yy,getPathExpr:function(e,t,r,n){return tv(e,r?"'/' + "+t+(n?"":".replace(/~/g, '~0').replace(/\\//g, '~1')"):n?"'[' + "+t+" + ']'":"'[\\'' + "+t+" + '\\']'")},getPath:function(e,t,r){var n=Yy(r?"/"+rv(t):Ry(t));return tv(e,n)},getData:function(e,t,r){var n,i,a,o;if(""===e)return "rootData";if("/"==e[0]){if(!Zy.test(e))throw new Error("Invalid JSON-pointer: "+e);i=e,a="rootData";}else {if(!(o=e.match(ev)))throw new Error("Invalid JSON-pointer: "+e);if(n=+o[1],"#"==(i=o[2])){if(n>=t)throw new Error("Cannot access property/index "+n+" levels up, current level is "+t);return r[t-n]}if(n>t)throw new Error("Cannot access data "+n+" levels up, current level is "+t);if(a="data"+(t-n||""),!i)return a}for(var s=a,u=i.split("/"),c=0;c<u.length;c++){var l=u[c];l&&(a+=Ry(nv(l)),s+=" && "+a);}return s},unescapeFragment:function(e){return nv(decodeURIComponent(e))},unescapeJsonPointer:nv,escapeFragment:function(e){return encodeURIComponent(rv(e))},escapeJsonPointer:rv};function By(e,t,r){var n=r?" !== ":" === ",i=r?" || ":" && ",a=r?"!":"",o=r?"":"!";switch(e){case"null":return t+n+"null";case"array":return a+"Array.isArray("+t+")";case"object":return "("+a+t+i+"typeof "+t+n+'"object"'+i+o+"Array.isArray("+t+"))";case"integer":return "(typeof "+t+n+'"number"'+i+o+"("+t+" % 1)"+i+t+n+t+")";default:return "typeof "+t+n+'"'+e+'"'}}var Oy=Ly(["string","number","integer","boolean","null"]);function Ly(e){for(var t={},r=0;r<e.length;r++)t[e[r]]=!0;return t}var Ny=/^[a-z$_][a-z$_0-9]*$/i,jy=/'|\\/g;function Ry(e){return "number"==typeof e?"["+e+"]":Ny.test(e)?"."+e:"['"+My(e)+"']"}function My(e){return e.replace(jy,"\\$&").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\f/g,"\\f").replace(/\t/g,"\\t")}var Vy=/else\s*{\s*}/g,Uy=/if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g,qy=/if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;var Wy=/[^v.]errors/g,$y=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,Gy=/var errors = 0;|var vErrors = null;/g,zy="return errors === 0;",Hy="validate.errors = null; return true;",Ky=/if \(errors === 0\) return data;\s*else throw new ValidationError\(vErrors\);/,Jy="return data;",Qy=/[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g,Xy=/if \(rootData === undefined\) rootData = data;/;function Yy(e){return "'"+My(e)+"'"}var Zy=/^\/(?:[^~]|~0|~1)*$/,ev=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function tv(e,t){return '""'==e?t:(e+" + "+t).replace(/' \+ '/g,"")}function rv(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}function nv(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}var iv=function(e){Iy.copy(e,this);};var av=r((function(e){var t=e.exports=function(e,r,n){"function"==typeof r&&(n=r,r={}),function e(r,n,a,o,s,u,c,l,p,f){if(o&&"object"==i(o)&&!Array.isArray(o)){for(var h in n(o,s,u,c,l,p,f),o){var d=o[h];if(Array.isArray(d)){if(h in t.arrayKeywords)for(var m=0;m<d.length;m++)e(r,n,a,d[m],s+"/"+h+"/"+m,u,s,h,o,m);}else if(h in t.propsKeywords){if(d&&"object"==i(d))for(var g in d)e(r,n,a,d[g],s+"/"+h+"/"+g.replace(/~/g,"~0").replace(/\//g,"~1"),u,s,h,o,g);}else (h in t.keywords||r.allKeys&&!(h in t.skipKeywords))&&e(r,n,a,d,s+"/"+h,u,s,h,o);}a(o,s,u,c,l,p,f);}}(r,"function"==typeof(n=r.cb||n)?n:n.pre||function(){},n.post||function(){},e,"",e);};t.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0},t.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},t.propsKeywords={definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},t.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0};})),ov=sv;function sv(e,t,r){var n=this._refs[r];if("string"==typeof n){if(!this._refs[n])return sv.call(this,e,t,n);n=this._refs[n];}if((n=n||this._schemas[r])instanceof iv)return hv(n.schema,this._opts.inlineRefs)?n.schema:n.validate||this._compile(n);var i,a,o,s=uv.call(this,t,r);return s&&(i=s.schema,t=s.root,o=s.baseId),i instanceof iv?a=i.validate||e.call(this,i.schema,t,void 0,o):void 0!==i&&(a=hv(i,this._opts.inlineRefs)?i:e.call(this,i,t,void 0,o)),a}function uv(e,t){var r=Ay.parse(t),n=mv(r),i=dv(this._getId(e.schema));if(0===Object.keys(e.schema).length||n!==i){var a=yv(n),o=this._refs[a];if("string"==typeof o)return cv.call(this,e,o,r);if(o instanceof iv)o.validate||this._compile(o),e=o;else {if(!((o=this._schemas[a])instanceof iv))return;if(o.validate||this._compile(o),a==yv(t))return {schema:o,root:e,baseId:i};e=o;}if(!e.schema)return;i=dv(this._getId(e.schema));}return pv.call(this,r,i,e.schema,e)}function cv(e,t,r){var n=uv.call(this,e,t);if(n){var i=n.schema,a=n.baseId;e=n.root;var o=this._getId(i);return o&&(a=vv(a,o)),pv.call(this,r,a,i,e)}}sv.normalizeId=yv,sv.fullPath=dv,sv.url=vv,sv.ids=function(e){var t=yv(this._getId(e)),r={"":t},n={"":dv(t,!1)},i={},a=this;return av(e,{allKeys:!0},(function(e,t,o,s,u,c,l){if(""!==t){var p=a._getId(e),f=r[s],h=n[s]+"/"+u;if(void 0!==l&&(h+="/"+("number"==typeof l?l:Iy.escapeFragment(l))),"string"==typeof p){p=f=yv(f?Ay.resolve(f,p):p);var d=a._refs[p];if("string"==typeof d&&(d=a._refs[d]),d&&d.schema){if(!Py(e,d.schema))throw new Error('id "'+p+'" resolves to more than one schema')}else if(p!=yv(h))if("#"==p[0]){if(i[p]&&!Py(e,i[p]))throw new Error('id "'+p+'" resolves to more than one schema');i[p]=e;}else a._refs[p]=h;}r[t]=f,n[t]=h;}})),i},sv.inlineRef=hv,sv.schema=uv;var lv=Iy.toHash(["properties","patternProperties","enum","dependencies","definitions"]);function pv(e,t,r,n){if(e.fragment=e.fragment||"","/"==e.fragment.slice(0,1)){for(var i=e.fragment.split("/"),a=1;a<i.length;a++){var o=i[a];if(o){if(void 0===(r=r[o=Iy.unescapeFragment(o)]))break;var s;if(!lv[o]&&((s=this._getId(r))&&(t=vv(t,s)),r.$ref)){var u=vv(t,r.$ref),c=uv.call(this,n,u);c&&(r=c.schema,n=c.root,t=c.baseId);}}}return void 0!==r&&r!==n.schema?{schema:r,root:n,baseId:t}:void 0}}var fv=Iy.toHash(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum"]);function hv(e,t){return !1!==t&&(void 0===t||!0===t?function e(t){var r;if(Array.isArray(t)){for(var n=0;n<t.length;n++)if("object"==i(r=t[n])&&!e(r))return !1}else for(var a in t){if("$ref"==a)return !1;if("object"==i(r=t[a])&&!e(r))return !1}return !0}(e):t?function e(t){var r,n=0;if(Array.isArray(t)){for(var a=0;a<t.length;a++)if("object"==i(r=t[a])&&(n+=e(r)),n==1/0)return 1/0}else for(var o in t){if("$ref"==o)return 1/0;if(fv[o])n++;else if("object"==i(r=t[o])&&(n+=e(r)+1),n==1/0)return 1/0}return n}(e)<=t:void 0)}function dv(e,t){return !1!==t&&(e=yv(e)),mv(Ay.parse(e))}function mv(e){return Ay.serialize(e).split("#")[0]+"#"}var gv=/#\/?$/;function yv(e){return e?e.replace(gv,""):""}function vv(e,t){return t=yv(t),Ay.resolve(e,t)}var xv={Validation:Ev((function(e){this.message="validation failed",this.errors=e,this.ajv=this.validation=!0;})),MissingRef:Ev(bv)};function bv(e,t,r){this.message=r||bv.message(e,t),this.missingRef=ov.url(e,t),this.missingSchema=ov.normalizeId(ov.fullPath(this.missingRef));}function Ev(e){return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}bv.message=function(e,t){return "can't resolve reference "+t+" from id "+e};var Cv=function(e,t){t||(t={}),"function"==typeof t&&(t={cmp:t});var r="boolean"==typeof t.cycles&&t.cycles,n=t.cmp&&function(e){return function(t){return function(r,n){var i={key:r,value:t[r]},a={key:n,value:t[n]};return e(i,a)}}}(t.cmp),a=[];return function e(t){if(t&&t.toJSON&&"function"==typeof t.toJSON&&(t=t.toJSON()),void 0!==t){if("number"==typeof t)return isFinite(t)?""+t:"null";if("object"!==i(t))return JSON.stringify(t);var o,s;if(Array.isArray(t)){for(s="[",o=0;o<t.length;o++)o&&(s+=","),s+=e(t[o])||"null";return s+"]"}if(null===t)return "null";if(-1!==a.indexOf(t)){if(r)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var u=a.push(t)-1,c=Object.keys(t).sort(n&&n(t));for(s="",o=0;o<c.length;o++){var l=c[o],p=e(t[l]);p&&(s&&(s+=","),s+=JSON.stringify(l)+":"+p);}return a.splice(u,1),"{"+s+"}"}}(e)},Sv=function(e,t,r){var n="",i=!0===e.schema.$async,a=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,"$ref"),o=e.self._getId(e.schema);if(e.opts.strictKeywords){var s=e.util.schemaUnknownRules(e.schema,e.RULES.keywords);if(s){var u="unknown keyword: "+s;if("log"!==e.opts.strictKeywords)throw new Error(u);e.logger.warn(u);}}if(e.isTop&&(n+=" var validate = ",i&&(e.async=!0,n+="async "),n+="function(data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; ",o&&(e.opts.sourceCode||e.opts.processCode)&&(n+=" /*# sourceURL="+o+" */ ")),"boolean"==typeof e.schema||!a&&!e.schema.$ref){var c=e.level,l=e.dataLevel,p=e.schema["false schema"],f=e.schemaPath+e.util.getProperty("false schema"),h=e.errSchemaPath+"/false schema",d=!e.opts.allErrors,m="data"+(l||""),g="valid"+c;if(!1===e.schema){e.isTop?d=!0:n+=" var "+g+" = false; ",(X=X||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'false schema' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: {} ",!1!==e.opts.messages&&(n+=" , message: 'boolean schema is false' "),e.opts.verbose&&(n+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),n+=" } "):n+=" {} ";var y=n;n=X.pop(),!e.compositeRule&&d?e.async?n+=" throw new ValidationError(["+y+"]); ":n+=" validate.errors = ["+y+"]; return false; ":n+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";}else e.isTop?n+=i?" return data; ":" validate.errors = null; return true; ":n+=" var "+g+" = true; ";return e.isTop&&(n+=" }; return validate; "),n}if(e.isTop){var v=e.isTop;c=e.level=0,l=e.dataLevel=0,m="data";if(e.rootId=e.resolve.fullPath(e.self._getId(e.root.schema)),e.baseId=e.baseId||e.rootId,delete e.isTop,e.dataPathArr=[void 0],void 0!==e.schema.default&&e.opts.useDefaults&&e.opts.strictDefaults){var x="default is ignored in the schema root";if("log"!==e.opts.strictDefaults)throw new Error(x);e.logger.warn(x);}n+=" var vErrors = null; ",n+=" var errors = 0;     ",n+=" if (rootData === undefined) rootData = data; ";}else {c=e.level,m="data"+((l=e.dataLevel)||"");if(o&&(e.baseId=e.resolve.url(e.baseId,o)),i&&!e.async)throw new Error("async schema in sync schema");n+=" var errs_"+c+" = errors;";}g="valid"+c,d=!e.opts.allErrors;var b="",E="",C=e.schema.type,S=Array.isArray(C);if(C&&e.opts.nullable&&!0===e.schema.nullable&&(S?-1==C.indexOf("null")&&(C=C.concat("null")):"null"!=C&&(C=[C,"null"],S=!0)),S&&1==C.length&&(C=C[0],S=!1),e.schema.$ref&&a){if("fail"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path "'+e.errSchemaPath+'" (see option extendRefs)');!0!==e.opts.extendRefs&&(a=!1,e.logger.warn('$ref: keywords ignored in schema at path "'+e.errSchemaPath+'"'));}if(e.schema.$comment&&e.opts.$comment&&(n+=" "+e.RULES.all.$comment.code(e,"$comment")),C){if(e.opts.coerceTypes)var k=e.util.coerceToTypes(e.opts.coerceTypes,C);var D=e.RULES.types[C];if(k||S||!0===D||D&&!Y(D)){f=e.schemaPath+".type",h=e.errSchemaPath+"/type",f=e.schemaPath+".type",h=e.errSchemaPath+"/type";var F=S?"checkDataTypes":"checkDataType";if(n+=" if ("+e.util[F](C,m,!0)+") { ",k){var A="dataType"+c,w="coerced"+c;n+=" var "+A+" = typeof "+m+"; ","array"==e.opts.coerceTypes&&(n+=" if ("+A+" == 'object' && Array.isArray("+m+")) "+A+" = 'array'; "),n+=" var "+w+" = undefined; ";var _="",T=k;if(T)for(var P,I=-1,B=T.length-1;I<B;)P=T[I+=1],I&&(n+=" if ("+w+" === undefined) { ",_+="}"),"array"==e.opts.coerceTypes&&"array"!=P&&(n+=" if ("+A+" == 'array' && "+m+".length == 1) { "+w+" = "+m+" = "+m+"[0]; "+A+" = typeof "+m+";  } "),"string"==P?n+=" if ("+A+" == 'number' || "+A+" == 'boolean') "+w+" = '' + "+m+"; else if ("+m+" === null) "+w+" = ''; ":"number"==P||"integer"==P?(n+=" if ("+A+" == 'boolean' || "+m+" === null || ("+A+" == 'string' && "+m+" && "+m+" == +"+m+" ","integer"==P&&(n+=" && !("+m+" % 1)"),n+=")) "+w+" = +"+m+"; "):"boolean"==P?n+=" if ("+m+" === 'false' || "+m+" === 0 || "+m+" === null) "+w+" = false; else if ("+m+" === 'true' || "+m+" === 1) "+w+" = true; ":"null"==P?n+=" if ("+m+" === '' || "+m+" === 0 || "+m+" === false) "+w+" = null; ":"array"==e.opts.coerceTypes&&"array"==P&&(n+=" if ("+A+" == 'string' || "+A+" == 'number' || "+A+" == 'boolean' || "+m+" == null) "+w+" = ["+m+"]; ");n+=" "+_+" if ("+w+" === undefined) {   ",(X=X||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",n+=S?""+C.join(","):""+C,n+="' } ",!1!==e.opts.messages&&(n+=" , message: 'should be ",n+=S?""+C.join(","):""+C,n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),n+=" } "):n+=" {} ";y=n;n=X.pop(),!e.compositeRule&&d?e.async?n+=" throw new ValidationError(["+y+"]); ":n+=" validate.errors = ["+y+"]; return false; ":n+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } else {  ";var O=l?"data"+(l-1||""):"parentData";n+=" "+m+" = "+w+"; ",l||(n+="if ("+O+" !== undefined)"),n+=" "+O+"["+(l?e.dataPathArr[l]:"parentDataProperty")+"] = "+w+"; } ";}else {(X=X||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",n+=S?""+C.join(","):""+C,n+="' } ",!1!==e.opts.messages&&(n+=" , message: 'should be ",n+=S?""+C.join(","):""+C,n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),n+=" } "):n+=" {} ";y=n;n=X.pop(),!e.compositeRule&&d?e.async?n+=" throw new ValidationError(["+y+"]); ":n+=" validate.errors = ["+y+"]; return false; ":n+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";}n+=" } ";}}if(e.schema.$ref&&!a)n+=" "+e.RULES.all.$ref.code(e,"$ref")+" ",d&&(n+=" } if (errors === ",n+=v?"0":"errs_"+c,n+=") { ",E+="}");else {var L=e.RULES;if(L)for(var N=-1,j=L.length-1;N<j;)if(Y(D=L[N+=1])){if(D.type&&(n+=" if ("+e.util.checkDataType(D.type,m)+") { "),e.opts.useDefaults)if("object"==D.type&&e.schema.properties){p=e.schema.properties;var R=Object.keys(p);if(R)for(var M,V=-1,U=R.length-1;V<U;){if(void 0!==($=p[M=R[V+=1]]).default){var q=m+e.util.getProperty(M);if(e.compositeRule){if(e.opts.strictDefaults){x="default is ignored for: "+q;if("log"!==e.opts.strictDefaults)throw new Error(x);e.logger.warn(x);}}else n+=" if ("+q+" === undefined ","empty"==e.opts.useDefaults&&(n+=" || "+q+" === null || "+q+" === '' "),n+=" ) "+q+" = ","shared"==e.opts.useDefaults?n+=" "+e.useDefault($.default)+" ":n+=" "+JSON.stringify($.default)+" ",n+="; ";}}}else if("array"==D.type&&Array.isArray(e.schema.items)){var W=e.schema.items;if(W){I=-1;for(var $,G=W.length-1;I<G;)if(void 0!==($=W[I+=1]).default){q=m+"["+I+"]";if(e.compositeRule){if(e.opts.strictDefaults){x="default is ignored for: "+q;if("log"!==e.opts.strictDefaults)throw new Error(x);e.logger.warn(x);}}else n+=" if ("+q+" === undefined ","empty"==e.opts.useDefaults&&(n+=" || "+q+" === null || "+q+" === '' "),n+=" ) "+q+" = ","shared"==e.opts.useDefaults?n+=" "+e.useDefault($.default)+" ":n+=" "+JSON.stringify($.default)+" ",n+="; ";}}}var z=D.rules;if(z)for(var H,K=-1,J=z.length-1;K<J;)if(Z(H=z[K+=1])){var Q=H.code(e,H.keyword,D.type);Q&&(n+=" "+Q+" ",d&&(b+="}"));}if(d&&(n+=" "+b+" ",b=""),D.type&&(n+=" } ",C&&C===D.type&&!k)){n+=" else { ";var X;f=e.schemaPath+".type",h=e.errSchemaPath+"/type";(X=X||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'type' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",n+=S?""+C.join(","):""+C,n+="' } ",!1!==e.opts.messages&&(n+=" , message: 'should be ",n+=S?""+C.join(","):""+C,n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),n+=" } "):n+=" {} ";y=n;n=X.pop(),!e.compositeRule&&d?e.async?n+=" throw new ValidationError(["+y+"]); ":n+=" validate.errors = ["+y+"]; return false; ":n+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } ";}d&&(n+=" if (errors === ",n+=v?"0":"errs_"+c,n+=") { ",E+="}");}}function Y(e){for(var t=e.rules,r=0;r<t.length;r++)if(Z(t[r]))return !0}function Z(t){return void 0!==e.schema[t.keyword]||t.implements&&function(t){for(var r=t.implements,n=0;n<r.length;n++)if(void 0!==e.schema[r[n]])return !0}(t)}return d&&(n+=" "+E+" "),v?(i?(n+=" if (errors === 0) return data;           ",n+=" else throw new ValidationError(vErrors); "):(n+=" validate.errors = vErrors; ",n+=" return errors === 0;       "),n+=" }; return validate;"):n+=" var "+g+" = errors === errs_"+c+";",n=e.util.cleanUpCode(n),v&&(n=e.util.finalCleanUpCode(n,i)),n},kv=Iy.ucs2length,Dv=xv.Validation,Fv=function e(t,r,n,a){var o=this,s=this._opts,u=[void 0],c={},l=[],p={},f=[],h={},d=[];r=r||{schema:t,refVal:u,refs:c};var m=Av.call(this,t,r,a),g=this._compilations[m.index];if(m.compiling)return g.callValidate=function e(){var t=g.validate,r=t.apply(this,arguments);return e.errors=t.errors,r};var y=this._formats,v=this.RULES;try{var x=E(t,r,n,a);g.validate=x;var b=g.callValidate;return b&&(b.schema=x.schema,b.errors=null,b.refs=x.refs,b.refVal=x.refVal,b.root=x.root,b.$async=x.$async,s.sourceCode&&(b.source=x.source)),x}finally{wv.call(this,t,r,a);}function E(t,n,i,a){var p=!n||n&&n.schema==t;if(n.schema!=r.schema)return e.call(o,t,n,i,a);var h,m=!0===t.$async,g=Sv({isTop:!0,schema:t,isRoot:p,baseId:a,root:n,schemaPath:"",errSchemaPath:"#",errorPath:'""',MissingRefError:xv.MissingRef,RULES:v,validate:Sv,util:Iy,resolve:ov,resolveRef:C,usePattern:D,useDefault:F,useCustomRule:A,opts:s,formats:y,logger:o.logger,self:o});g=Ov(u,Iv)+Ov(l,Tv)+Ov(f,Pv)+Ov(d,Bv)+g,s.processCode&&(g=s.processCode(g));try{h=new Function("self","RULES","formats","root","refVal","defaults","customRules","equal","ucs2length","ValidationError",g)(o,v,y,r,u,f,d,Py,kv,Dv),u[0]=h;}catch(e){throw o.logger.error("Error compiling schema, function code:",g),e}return h.schema=t,h.errors=null,h.refs=c,h.refVal=u,h.root=p?h:n,m&&(h.$async=!0),!0===s.sourceCode&&(h.source={code:g,patterns:l,defaults:f}),h}function C(t,i,a){i=ov.url(t,i);var l,p,f=c[i];if(void 0!==f)return k(l=u[f],p="refVal["+f+"]");if(!a&&r.refs){var h=r.refs[i];if(void 0!==h)return k(l=r.refVal[h],p=S(i,l))}p=S(i);var d=ov.call(o,E,r,i);if(void 0===d){var m=n&&n[i];m&&(d=ov.inlineRef(m,s.inlineRefs)?m:e.call(o,m,r,n,t));}if(void 0!==d)return function(e,t){var r=c[e];u[r]=t;}(i,d),k(d,p);!function(e){delete c[e];}(i);}function S(e,t){var r=u.length;return u[r]=t,c[e]=r,"refVal"+r}function k(e,t){return "object"==i(e)||"boolean"==typeof e?{code:t,schema:e,inline:!0}:{code:t,$async:e&&!!e.$async}}function D(e){var t=p[e];return void 0===t&&(t=p[e]=l.length,l[t]=e),"pattern"+t}function F(e){switch(i(e)){case"boolean":case"number":return ""+e;case"string":return Iy.toQuotedString(e);case"object":if(null===e)return "null";var t=Cv(e),r=h[t];return void 0===r&&(r=h[t]=f.length,f[r]=e),"default"+r}}function A(e,t,r,n){if(!1!==o._opts.validateSchema){var i=e.definition.dependencies;if(i&&!i.every((function(e){return Object.prototype.hasOwnProperty.call(r,e)})))throw new Error("parent schema must have all required keywords: "+i.join(","));var a=e.definition.validateSchema;if(a)if(!a(t)){var u="keyword schema is invalid: "+o.errorsText(a.errors);if("log"!=o._opts.validateSchema)throw new Error(u);o.logger.error(u);}}var c,l=e.definition.compile,p=e.definition.inline,f=e.definition.macro;if(l)c=l.call(o,t,r,n);else if(f)c=f.call(o,t,r,n),!1!==s.validateSchema&&o.validateSchema(c,!0);else if(p)c=p.call(o,n,e.keyword,t,r);else if(!(c=e.definition.validate))return;if(void 0===c)throw new Error('custom keyword "'+e.keyword+'"failed to compile');var h=d.length;return d[h]=c,{code:"customRule"+h,validate:c}}};function Av(e,t,r){var n=_v.call(this,e,t,r);return n>=0?{index:n,compiling:!0}:(n=this._compilations.length,this._compilations[n]={schema:e,root:t,baseId:r},{index:n,compiling:!1})}function wv(e,t,r){var n=_v.call(this,e,t,r);n>=0&&this._compilations.splice(n,1);}function _v(e,t,r){for(var n=0;n<this._compilations.length;n++){var i=this._compilations[n];if(i.schema==e&&i.root==t&&i.baseId==r)return n}return -1}function Tv(e,t){return "var pattern"+e+" = new RegExp("+Iy.toQuotedString(t[e])+");"}function Pv(e){return "var default"+e+" = defaults["+e+"];"}function Iv(e,t){return void 0===t[e]?"":"var refVal"+e+" = refVal["+e+"];"}function Bv(e){return "var customRule"+e+" = customRules["+e+"];"}function Ov(e,t){if(!e.length)return "";for(var r="",n=0;n<e.length;n++)r+=t(n,e);return r}var Lv=r((function(e){var t=e.exports=function(){this._cache={};};t.prototype.put=function(e,t){this._cache[e]=t;},t.prototype.get=function(e){return this._cache[e]},t.prototype.del=function(e){delete this._cache[e];},t.prototype.clear=function(){this._cache={};};})),Nv=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,jv=[0,31,28,31,30,31,30,31,31,30,31,30,31],Rv=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d:\d\d)?$/i,Mv=/^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,Vv=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,Uv=/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,qv=/^(?:(?:http[s\u017F]?|ftp):\/\/)(?:(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+(?::(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?@)?(?:(?!10(?:\.[0-9]{1,3}){3})(?!127(?:\.[0-9]{1,3}){3})(?!169\.254(?:\.[0-9]{1,3}){2})(?!192\.168(?:\.[0-9]{1,3}){2})(?!172\.(?:1[6-9]|2[0-9]|3[01])(?:\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)(?:\.(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)*(?:\.(?:(?:[KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?$/i,Wv=/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,$v=/^(?:\/(?:[^~/]|~0|~1)*)*$/,Gv=/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,zv=/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,Hv=Kv;function Kv(e){return e="full"==e?"full":"fast",Iy.copy(Kv[e])}function Jv(e){var t=e.match(Nv);if(!t)return !1;var r=+t[1],n=+t[2],i=+t[3];return n>=1&&n<=12&&i>=1&&i<=(2==n&&function(e){return e%4==0&&(e%100!=0||e%400==0)}(r)?29:jv[n])}function Qv(e,t){var r=e.match(Rv);if(!r)return !1;var n=r[1],i=r[2],a=r[3],o=r[5];return (n<=23&&i<=59&&a<=59||23==n&&59==i&&60==a)&&(!t||o)}Kv.fast={date:/^\d\d\d\d-[0-1]\d-[0-3]\d$/,time:/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)?$/i,"date-time":/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i,uri:/^(?:[a-z][a-z0-9+-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,"uri-template":Uv,url:qv,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:Mv,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:ex,uuid:Wv,"json-pointer":$v,"json-pointer-uri-fragment":Gv,"relative-json-pointer":zv},Kv.full={date:Jv,time:Qv,"date-time":function(e){var t=e.split(Xv);return 2==t.length&&Jv(t[0])&&Qv(t[1],!0)},uri:function(e){return Yv.test(e)&&Vv.test(e)},"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":Uv,url:qv,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:function(e){return e.length<=255&&Mv.test(e)},ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:ex,uuid:Wv,"json-pointer":$v,"json-pointer-uri-fragment":Gv,"relative-json-pointer":zv};var Xv=/t|\s/i;var Yv=/\/|:/;var Zv=/[^\\]\\Z/;function ex(e){if(Zv.test(e))return !1;try{return new RegExp(e),!0}catch(e){return !1}}var tx=function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s;var h="maximum"==t,d=h?"exclusiveMaximum":"exclusiveMinimum",m=e.schema[d],g=e.opts.$data&&m&&m.$data,y=h?"<":">",v=h?">":"<",x=void 0;if(g){var b=e.util.getData(m.$data,o,e.dataPathArr),E="exclusive"+a,C="exclType"+a,S="exclIsNumber"+a,k="' + "+(A="op"+a)+" + '";i+=" var schemaExcl"+a+" = "+b+"; ",i+=" var "+E+"; var "+C+" = typeof "+(b="schemaExcl"+a)+"; if ("+C+" != 'boolean' && "+C+" != 'undefined' && "+C+" != 'number') { ";var D;x=d;(D=D||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(x||"_exclusiveLimit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: '"+d+" should be boolean' "),e.opts.verbose&&(i+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var F=i;i=D.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+F+"]); ":i+=" validate.errors = ["+F+"]; return false; ":i+=" var err = "+F+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),i+=" "+C+" == 'number' ? ( ("+E+" = "+n+" === undefined || "+b+" "+y+"= "+n+") ? "+p+" "+v+"= "+b+" : "+p+" "+v+" "+n+" ) : ( ("+E+" = "+b+" === true) ? "+p+" "+v+"= "+n+" : "+p+" "+v+" "+n+" ) || "+p+" !== "+p+") { var op"+a+" = "+E+" ? '"+y+"' : '"+y+"='; ",void 0===s&&(x=d,c=e.errSchemaPath+"/"+d,n=b,f=g);}else {k=y;if((S="number"==typeof m)&&f){var A="'"+k+"'";i+=" if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),i+=" ( "+n+" === undefined || "+m+" "+y+"= "+n+" ? "+p+" "+v+"= "+m+" : "+p+" "+v+" "+n+" ) || "+p+" !== "+p+") { ";}else {S&&void 0===s?(E=!0,x=d,c=e.errSchemaPath+"/"+d,n=m,v+="="):(S&&(n=Math[h?"min":"max"](m,s)),m===(!S||n)?(E=!0,x=d,c=e.errSchemaPath+"/"+d,v+="="):(E=!1,k+="="));A="'"+k+"'";i+=" if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),i+=" "+p+" "+v+" "+n+" || "+p+" !== "+p+") { ";}}x=x||t,(D=D||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(x||"_limit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { comparison: "+A+", limit: "+n+", exclusive: "+E+" } ",!1!==e.opts.messages&&(i+=" , message: 'should be "+k+" ",i+=f?"' + "+n:n+"'"),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";F=i;return i=D.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+F+"]); ":i+=" validate.errors = ["+F+"]; return false; ":i+=" var err = "+F+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } ",l&&(i+=" else { "),i},rx=function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s,i+="if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),i+=" "+p+".length "+("maxItems"==t?">":"<")+" "+n+") { ";var h=t,d=d||[];d.push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(h||"_limitItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+n+" } ",!1!==e.opts.messages&&(i+=" , message: 'should NOT have ",i+="maxItems"==t?"more":"fewer",i+=" than ",i+=f?"' + "+n+" + '":""+s,i+=" items' "),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var m=i;return i=d.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+m+"]); ":i+=" validate.errors = ["+m+"]; return false; ":i+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+="} ",l&&(i+=" else { "),i},nx=function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s;var h="maxLength"==t?">":"<";i+="if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),!1===e.opts.unicode?i+=" "+p+".length ":i+=" ucs2length("+p+") ",i+=" "+h+" "+n+") { ";var d=t,m=m||[];m.push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(d||"_limitLength")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+n+" } ",!1!==e.opts.messages&&(i+=" , message: 'should NOT be ",i+="maxLength"==t?"longer":"shorter",i+=" than ",i+=f?"' + "+n+" + '":""+s,i+=" characters' "),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var g=i;return i=m.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+g+"]); ":i+=" validate.errors = ["+g+"]; return false; ":i+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+="} ",l&&(i+=" else { "),i},ix=function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s,i+="if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'number') || "),i+=" Object.keys("+p+").length "+("maxProperties"==t?">":"<")+" "+n+") { ";var h=t,d=d||[];d.push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(h||"_limitProperties")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+n+" } ",!1!==e.opts.messages&&(i+=" , message: 'should NOT have ",i+="maxProperties"==t?"more":"fewer",i+=" than ",i+=f?"' + "+n+" + '":""+s,i+=" properties' "),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var m=i;return i=d.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+m+"]); ":i+=" validate.errors = ["+m+"]; return false; ":i+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+="} ",l&&(i+=" else { "),i},ax={$ref:function(e,t,r){var n,i,a=" ",o=e.level,s=e.dataLevel,u=e.schema[t],c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(s||""),f="valid"+o;if("#"==u||"#/"==u)e.isRoot?(n=e.async,i="validate"):(n=!0===e.root.schema.$async,i="root.refVal[0]");else {var h=e.resolveRef(e.baseId,u,e.isRoot);if(void 0===h){var d=e.MissingRefError.message(e.baseId,u);if("fail"==e.opts.missingRefs){e.logger.error(d),(v=v||[]).push(a),a="",!1!==e.createErrors?(a+=" { keyword: '$ref' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { ref: '"+e.util.escapeQuotes(u)+"' } ",!1!==e.opts.messages&&(a+=" , message: 'can\\'t resolve reference "+e.util.escapeQuotes(u)+"' "),e.opts.verbose&&(a+=" , schema: "+e.util.toQuotedString(u)+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),a+=" } "):a+=" {} ";var m=a;a=v.pop(),!e.compositeRule&&l?e.async?a+=" throw new ValidationError(["+m+"]); ":a+=" validate.errors = ["+m+"]; return false; ":a+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l&&(a+=" if (false) { ");}else {if("ignore"!=e.opts.missingRefs)throw new e.MissingRefError(e.baseId,u,d);e.logger.warn(d),l&&(a+=" if (true) { ");}}else if(h.inline){var g=e.util.copy(e);g.level++;var y="valid"+g.level;g.schema=h.schema,g.schemaPath="",g.errSchemaPath=u,a+=" "+e.validate(g).replace(/validate\.schema/g,h.code)+" ",l&&(a+=" if ("+y+") { ");}else n=!0===h.$async||e.async&&!1!==h.$async,i=h.code;}if(i){var v;(v=v||[]).push(a),a="",e.opts.passContext?a+=" "+i+".call(this, ":a+=" "+i+"( ",a+=" "+p+", (dataPath || '')",'""'!=e.errorPath&&(a+=" + "+e.errorPath);var x=a+=" , "+(s?"data"+(s-1||""):"parentData")+" , "+(s?e.dataPathArr[s]:"parentDataProperty")+", rootData)  ";if(a=v.pop(),n){if(!e.async)throw new Error("async schema referenced by sync schema");l&&(a+=" var "+f+"; "),a+=" try { await "+x+"; ",l&&(a+=" "+f+" = true; "),a+=" } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ",l&&(a+=" "+f+" = false; "),a+=" } ",l&&(a+=" if ("+f+") { ");}else a+=" if (!"+x+") { if (vErrors === null) vErrors = "+i+".errors; else vErrors = vErrors.concat("+i+".errors); errors = vErrors.length; } ",l&&(a+=" else { ");}return a},allOf:function(e,t,r){var n=" ",a=e.schema[t],o=e.schemaPath+e.util.getProperty(t),s=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c=e.util.copy(e),l="";c.level++;var p="valid"+c.level,f=c.baseId,h=!0,d=a;if(d)for(var m,g=-1,y=d.length-1;g<y;)m=d[g+=1],(e.opts.strictKeywords?"object"==i(m)&&Object.keys(m).length>0:e.util.schemaHasRules(m,e.RULES.all))&&(h=!1,c.schema=m,c.schemaPath=o+"["+g+"]",c.errSchemaPath=s+"/"+g,n+="  "+e.validate(c)+" ",c.baseId=f,u&&(n+=" if ("+p+") { ",l+="}"));return u&&(n+=h?" if (true) { ":" "+l.slice(0,-1)+" "),n=e.util.cleanUpCode(n)},anyOf:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h="errs__"+a,d=e.util.copy(e),m="";d.level++;var g="valid"+d.level;if(s.every((function(t){return e.opts.strictKeywords?"object"==i(t)&&Object.keys(t).length>0:e.util.schemaHasRules(t,e.RULES.all)}))){var y=d.baseId;n+=" var "+h+" = errors; var "+f+" = false;  ";var v=e.compositeRule;e.compositeRule=d.compositeRule=!0;var x=s;if(x)for(var b,E=-1,C=x.length-1;E<C;)b=x[E+=1],d.schema=b,d.schemaPath=u+"["+E+"]",d.errSchemaPath=c+"/"+E,n+="  "+e.validate(d)+" ",d.baseId=y,n+=" "+f+" = "+f+" || "+g+"; if (!"+f+") { ",m+="}";e.compositeRule=d.compositeRule=v,n+=" "+m+" if (!"+f+") {   var err =   ",!1!==e.createErrors?(n+=" { keyword: 'anyOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(n+=" , message: 'should match some schema in anyOf' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&l&&(e.async?n+=" throw new ValidationError(vErrors); ":n+=" validate.errors = vErrors; return false; "),n+=" } else {  errors = "+h+"; if (vErrors !== null) { if ("+h+") vErrors.length = "+h+"; else vErrors = null; } ",e.opts.allErrors&&(n+=" } "),n=e.util.cleanUpCode(n);}else l&&(n+=" if (true) { ");return n},$comment:function(e,t,r){var n=" ",i=e.schema[t],a=e.errSchemaPath+"/"+t,o=(e.opts.allErrors,e.util.toQuotedString(i));return !0===e.opts.$comment?n+=" console.log("+o+");":"function"==typeof e.opts.$comment&&(n+=" self._opts.$comment("+o+", "+e.util.toQuotedString(a)+", validate.root.schema);"),n},const:function(e,t,r){var n=" ",i=e.level,a=e.dataLevel,o=e.schema[t],s=e.schemaPath+e.util.getProperty(t),u=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,l="data"+(a||""),p="valid"+i,f=e.opts.$data&&o&&o.$data;f&&(n+=" var schema"+i+" = "+e.util.getData(o.$data,a,e.dataPathArr)+"; "),f||(n+=" var schema"+i+" = validate.schema"+s+";"),n+="var "+p+" = equal("+l+", schema"+i+"); if (!"+p+") {   ";var h=h||[];h.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'const' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(u)+" , params: { allowedValue: schema"+i+" } ",!1!==e.opts.messages&&(n+=" , message: 'should be equal to constant' "),e.opts.verbose&&(n+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+l+" "),n+=" } "):n+=" {} ";var d=n;return n=h.pop(),!e.compositeRule&&c?e.async?n+=" throw new ValidationError(["+d+"]); ":n+=" validate.errors = ["+d+"]; return false; ":n+=" var err = "+d+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" }",c&&(n+=" else { "),n},contains:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h="errs__"+a,d=e.util.copy(e);d.level++;var m="valid"+d.level,g="i"+a,y=d.dataLevel=e.dataLevel+1,v="data"+y,x=e.baseId,b=e.opts.strictKeywords?"object"==i(s)&&Object.keys(s).length>0:e.util.schemaHasRules(s,e.RULES.all);if(n+="var "+h+" = errors;var "+f+";",b){var E=e.compositeRule;e.compositeRule=d.compositeRule=!0,d.schema=s,d.schemaPath=u,d.errSchemaPath=c,n+=" var "+m+" = false; for (var "+g+" = 0; "+g+" < "+p+".length; "+g+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers,!0);var C=p+"["+g+"]";d.dataPathArr[y]=g;var S=e.validate(d);d.baseId=x,e.util.varOccurences(S,v)<2?n+=" "+e.util.varReplace(S,v,C)+" ":n+=" var "+v+" = "+C+"; "+S+" ",n+=" if ("+m+") break; }  ",e.compositeRule=d.compositeRule=E,n+="  if (!"+m+") {";}else n+=" if ("+p+".length == 0) {";var k=k||[];k.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'contains' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(n+=" , message: 'should contain a valid item' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var D=n;return n=k.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+D+"]); ":n+=" validate.errors = ["+D+"]; return false; ":n+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } else { ",b&&(n+="  errors = "+h+"; if (vErrors !== null) { if ("+h+") vErrors.length = "+h+"; else vErrors = null; } "),e.opts.allErrors&&(n+=" } "),n=e.util.cleanUpCode(n)},dependencies:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="errs__"+a,h=e.util.copy(e),d="";h.level++;var m="valid"+h.level,g={},y={},v=e.opts.ownProperties;for(C in s){var x=s[C],b=Array.isArray(x)?y:g;b[C]=x;}n+="var "+f+" = errors;";var E=e.errorPath;for(var C in n+="var missing"+a+";",y)if((b=y[C]).length){if(n+=" if ( "+p+e.util.getProperty(C)+" !== undefined ",v&&(n+=" && Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(C)+"') "),l){n+=" && ( ";var S=b;if(S)for(var k=-1,D=S.length-1;k<D;){P=S[k+=1],k&&(n+=" || "),n+=" ( ( "+(L=p+(O=e.util.getProperty(P)))+" === undefined ",v&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(P)+"') "),n+=") && (missing"+a+" = "+e.util.toQuotedString(e.opts.jsonPointers?P:O)+") ) ";}n+=")) {  ";var F="missing"+a,A="' + "+F+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(E,F,!0):E+" + "+F);var w=w||[];w.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { property: '"+e.util.escapeQuotes(C)+"', missingProperty: '"+A+"', depsCount: "+b.length+", deps: '"+e.util.escapeQuotes(1==b.length?b[0]:b.join(", "))+"' } ",!1!==e.opts.messages&&(n+=" , message: 'should have ",1==b.length?n+="property "+e.util.escapeQuotes(b[0]):n+="properties "+e.util.escapeQuotes(b.join(", ")),n+=" when property "+e.util.escapeQuotes(C)+" is present' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var _=n;n=w.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+_+"]); ":n+=" validate.errors = ["+_+"]; return false; ":n+=" var err = "+_+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";}else {n+=" ) { ";var T=b;if(T)for(var P,I=-1,B=T.length-1;I<B;){P=T[I+=1];var O=e.util.getProperty(P),L=(A=e.util.escapeQuotes(P),p+O);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(E,P,e.opts.jsonPointers)),n+=" if ( "+L+" === undefined ",v&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(P)+"') "),n+=") {  var err =   ",!1!==e.createErrors?(n+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { property: '"+e.util.escapeQuotes(C)+"', missingProperty: '"+A+"', depsCount: "+b.length+", deps: '"+e.util.escapeQuotes(1==b.length?b[0]:b.join(", "))+"' } ",!1!==e.opts.messages&&(n+=" , message: 'should have ",1==b.length?n+="property "+e.util.escapeQuotes(b[0]):n+="properties "+e.util.escapeQuotes(b.join(", ")),n+=" when property "+e.util.escapeQuotes(C)+" is present' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ";}}n+=" }   ",l&&(d+="}",n+=" else { ");}e.errorPath=E;var N=h.baseId;for(var C in g){x=g[C];(e.opts.strictKeywords?"object"==i(x)&&Object.keys(x).length>0:e.util.schemaHasRules(x,e.RULES.all))&&(n+=" "+m+" = true; if ( "+p+e.util.getProperty(C)+" !== undefined ",v&&(n+=" && Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(C)+"') "),n+=") { ",h.schema=x,h.schemaPath=u+e.util.getProperty(C),h.errSchemaPath=c+"/"+e.util.escapeFragment(C),n+="  "+e.validate(h)+" ",h.baseId=N,n+=" }  ",l&&(n+=" if ("+m+") { ",d+="}"));}return l&&(n+="   "+d+" if ("+f+" == errors) {"),n=e.util.cleanUpCode(n)},enum:function(e,t,r){var n=" ",i=e.level,a=e.dataLevel,o=e.schema[t],s=e.schemaPath+e.util.getProperty(t),u=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,l="data"+(a||""),p="valid"+i,f=e.opts.$data&&o&&o.$data;f&&(n+=" var schema"+i+" = "+e.util.getData(o.$data,a,e.dataPathArr)+"; ");var h="i"+i,d="schema"+i;f||(n+=" var "+d+" = validate.schema"+s+";"),n+="var "+p+";",f&&(n+=" if (schema"+i+" === undefined) "+p+" = true; else if (!Array.isArray(schema"+i+")) "+p+" = false; else {"),n+=p+" = false;for (var "+h+"=0; "+h+"<"+d+".length; "+h+"++) if (equal("+l+", "+d+"["+h+"])) { "+p+" = true; break; }",f&&(n+="  }  "),n+=" if (!"+p+") {   ";var m=m||[];m.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'enum' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(u)+" , params: { allowedValues: schema"+i+" } ",!1!==e.opts.messages&&(n+=" , message: 'should be equal to one of the allowed values' "),e.opts.verbose&&(n+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+l+" "),n+=" } "):n+=" {} ";var g=n;return n=m.pop(),!e.compositeRule&&c?e.async?n+=" throw new ValidationError(["+g+"]); ":n+=" validate.errors = ["+g+"]; return false; ":n+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" }",c&&(n+=" else { "),n},format:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||"");if(!1===e.opts.format)return l&&(n+=" if (true) { "),n;var f,h=e.opts.$data&&s&&s.$data;h?(n+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",f="schema"+a):f=s;var d=e.opts.unknownFormats,m=Array.isArray(d);if(h){n+=" var "+(g="format"+a)+" = formats["+f+"]; var "+(y="isObject"+a)+" = typeof "+g+" == 'object' && !("+g+" instanceof RegExp) && "+g+".validate; var "+(v="formatType"+a)+" = "+y+" && "+g+".type || 'string'; if ("+y+") { ",e.async&&(n+=" var async"+a+" = "+g+".async; "),n+=" "+g+" = "+g+".validate; } if (  ",h&&(n+=" ("+f+" !== undefined && typeof "+f+" != 'string') || "),n+=" (","ignore"!=d&&(n+=" ("+f+" && !"+g+" ",m&&(n+=" && self._opts.unknownFormats.indexOf("+f+") == -1 "),n+=") || "),n+=" ("+g+" && "+v+" == '"+r+"' && !(typeof "+g+" == 'function' ? ",e.async?n+=" (async"+a+" ? await "+g+"("+p+") : "+g+"("+p+")) ":n+=" "+g+"("+p+") ",n+=" : "+g+".test("+p+"))))) {";}else {var g;if(!(g=e.formats[s])){if("ignore"==d)return e.logger.warn('unknown format "'+s+'" ignored in schema at path "'+e.errSchemaPath+'"'),l&&(n+=" if (true) { "),n;if(m&&d.indexOf(s)>=0)return l&&(n+=" if (true) { "),n;throw new Error('unknown format "'+s+'" is used in schema at path "'+e.errSchemaPath+'"')}var y,v=(y="object"==i(g)&&!(g instanceof RegExp)&&g.validate)&&g.type||"string";if(y){var x=!0===g.async;g=g.validate;}if(v!=r)return l&&(n+=" if (true) { "),n;if(x){if(!e.async)throw new Error("async format in sync schema");n+=" if (!(await "+(b="formats"+e.util.getProperty(s)+".validate")+"("+p+"))) { ";}else {n+=" if (! ";var b="formats"+e.util.getProperty(s);y&&(b+=".validate"),n+="function"==typeof g?" "+b+"("+p+") ":" "+b+".test("+p+") ",n+=") { ";}}var E=E||[];E.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'format' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { format:  ",n+=h?""+f:""+e.util.toQuotedString(s),n+="  } ",!1!==e.opts.messages&&(n+=" , message: 'should match format \"",n+=h?"' + "+f+" + '":""+e.util.escapeQuotes(s),n+="\"' "),e.opts.verbose&&(n+=" , schema:  ",n+=h?"validate.schema"+u:""+e.util.toQuotedString(s),n+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var C=n;return n=E.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+C+"]); ":n+=" validate.errors = ["+C+"]; return false; ":n+=" var err = "+C+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } ",l&&(n+=" else { "),n},if:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h="errs__"+a,d=e.util.copy(e);d.level++;var m="valid"+d.level,g=e.schema.then,y=e.schema.else,v=void 0!==g&&(e.opts.strictKeywords?"object"==i(g)&&Object.keys(g).length>0:e.util.schemaHasRules(g,e.RULES.all)),x=void 0!==y&&(e.opts.strictKeywords?"object"==i(y)&&Object.keys(y).length>0:e.util.schemaHasRules(y,e.RULES.all)),b=d.baseId;if(v||x){var E;d.createErrors=!1,d.schema=s,d.schemaPath=u,d.errSchemaPath=c,n+=" var "+h+" = errors; var "+f+" = true;  ";var C=e.compositeRule;e.compositeRule=d.compositeRule=!0,n+="  "+e.validate(d)+" ",d.baseId=b,d.createErrors=!0,n+="  errors = "+h+"; if (vErrors !== null) { if ("+h+") vErrors.length = "+h+"; else vErrors = null; }  ",e.compositeRule=d.compositeRule=C,v?(n+=" if ("+m+") {  ",d.schema=e.schema.then,d.schemaPath=e.schemaPath+".then",d.errSchemaPath=e.errSchemaPath+"/then",n+="  "+e.validate(d)+" ",d.baseId=b,n+=" "+f+" = "+m+"; ",v&&x?n+=" var "+(E="ifClause"+a)+" = 'then'; ":E="'then'",n+=" } ",x&&(n+=" else { ")):n+=" if (!"+m+") { ",x&&(d.schema=e.schema.else,d.schemaPath=e.schemaPath+".else",d.errSchemaPath=e.errSchemaPath+"/else",n+="  "+e.validate(d)+" ",d.baseId=b,n+=" "+f+" = "+m+"; ",v&&x?n+=" var "+(E="ifClause"+a)+" = 'else'; ":E="'else'",n+=" } "),n+=" if (!"+f+") {   var err =   ",!1!==e.createErrors?(n+=" { keyword: 'if' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { failingKeyword: "+E+" } ",!1!==e.opts.messages&&(n+=" , message: 'should match \"' + "+E+" + '\" schema' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&l&&(e.async?n+=" throw new ValidationError(vErrors); ":n+=" validate.errors = vErrors; return false; "),n+=" }   ",l&&(n+=" else { "),n=e.util.cleanUpCode(n);}else l&&(n+=" if (true) { ");return n},items:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h="errs__"+a,d=e.util.copy(e),m="";d.level++;var g="valid"+d.level,y="i"+a,v=d.dataLevel=e.dataLevel+1,x="data"+v,b=e.baseId;if(n+="var "+h+" = errors;var "+f+";",Array.isArray(s)){var E=e.schema.additionalItems;if(!1===E){n+=" "+f+" = "+p+".length <= "+s.length+"; ";var C=c;c=e.errSchemaPath+"/additionalItems",n+="  if (!"+f+") {   ";var S=S||[];S.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'additionalItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+s.length+" } ",!1!==e.opts.messages&&(n+=" , message: 'should NOT have more than "+s.length+" items' "),e.opts.verbose&&(n+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var k=n;n=S.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+k+"]); ":n+=" validate.errors = ["+k+"]; return false; ":n+=" var err = "+k+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } ",c=C,l&&(m+="}",n+=" else { ");}var D=s;if(D)for(var F,A=-1,w=D.length-1;A<w;)if(F=D[A+=1],e.opts.strictKeywords?"object"==i(F)&&Object.keys(F).length>0:e.util.schemaHasRules(F,e.RULES.all)){n+=" "+g+" = true; if ("+p+".length > "+A+") { ";var _=p+"["+A+"]";d.schema=F,d.schemaPath=u+"["+A+"]",d.errSchemaPath=c+"/"+A,d.errorPath=e.util.getPathExpr(e.errorPath,A,e.opts.jsonPointers,!0),d.dataPathArr[v]=A;var T=e.validate(d);d.baseId=b,e.util.varOccurences(T,x)<2?n+=" "+e.util.varReplace(T,x,_)+" ":n+=" var "+x+" = "+_+"; "+T+" ",n+=" }  ",l&&(n+=" if ("+g+") { ",m+="}");}if("object"==i(E)&&(e.opts.strictKeywords?"object"==i(E)&&Object.keys(E).length>0:e.util.schemaHasRules(E,e.RULES.all))){d.schema=E,d.schemaPath=e.schemaPath+".additionalItems",d.errSchemaPath=e.errSchemaPath+"/additionalItems",n+=" "+g+" = true; if ("+p+".length > "+s.length+") {  for (var "+y+" = "+s.length+"; "+y+" < "+p+".length; "+y+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers,!0);_=p+"["+y+"]";d.dataPathArr[v]=y;T=e.validate(d);d.baseId=b,e.util.varOccurences(T,x)<2?n+=" "+e.util.varReplace(T,x,_)+" ":n+=" var "+x+" = "+_+"; "+T+" ",l&&(n+=" if (!"+g+") break; "),n+=" } }  ",l&&(n+=" if ("+g+") { ",m+="}");}}else if(e.opts.strictKeywords?"object"==i(s)&&Object.keys(s).length>0:e.util.schemaHasRules(s,e.RULES.all)){d.schema=s,d.schemaPath=u,d.errSchemaPath=c,n+="  for (var "+y+" = 0; "+y+" < "+p+".length; "+y+"++) { ",d.errorPath=e.util.getPathExpr(e.errorPath,y,e.opts.jsonPointers,!0);_=p+"["+y+"]";d.dataPathArr[v]=y;T=e.validate(d);d.baseId=b,e.util.varOccurences(T,x)<2?n+=" "+e.util.varReplace(T,x,_)+" ":n+=" var "+x+" = "+_+"; "+T+" ",l&&(n+=" if (!"+g+") break; "),n+=" }";}return l&&(n+=" "+m+" if ("+h+" == errors) {"),n=e.util.cleanUpCode(n)},maximum:tx,minimum:tx,maxItems:rx,minItems:rx,maxLength:nx,minLength:nx,maxProperties:ix,minProperties:ix,multipleOf:function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s,i+="var division"+a+";if (",f&&(i+=" "+n+" !== undefined && ( typeof "+n+" != 'number' || "),i+=" (division"+a+" = "+p+" / "+n+", ",e.opts.multipleOfPrecision?i+=" Math.abs(Math.round(division"+a+") - division"+a+") > 1e-"+e.opts.multipleOfPrecision+" ":i+=" division"+a+" !== parseInt(division"+a+") ",i+=" ) ",f&&(i+="  )  "),i+=" ) {   ";var h=h||[];h.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'multipleOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { multipleOf: "+n+" } ",!1!==e.opts.messages&&(i+=" , message: 'should be multiple of ",i+=f?"' + "+n:n+"'"),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var d=i;return i=h.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+d+"]); ":i+=" validate.errors = ["+d+"]; return false; ":i+=" var err = "+d+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+="} ",l&&(i+=" else { "),i},not:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="errs__"+a,h=e.util.copy(e);h.level++;var d="valid"+h.level;if(e.opts.strictKeywords?"object"==i(s)&&Object.keys(s).length>0:e.util.schemaHasRules(s,e.RULES.all)){h.schema=s,h.schemaPath=u,h.errSchemaPath=c,n+=" var "+f+" = errors;  ";var m,g=e.compositeRule;e.compositeRule=h.compositeRule=!0,h.createErrors=!1,h.opts.allErrors&&(m=h.opts.allErrors,h.opts.allErrors=!1),n+=" "+e.validate(h)+" ",h.createErrors=!0,m&&(h.opts.allErrors=m),e.compositeRule=h.compositeRule=g,n+=" if ("+d+") {   ";var y=y||[];y.push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(n+=" , message: 'should NOT be valid' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var v=n;n=y.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+v+"]); ":n+=" validate.errors = ["+v+"]; return false; ":n+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } ",e.opts.allErrors&&(n+=" } ");}else n+="  var err =   ",!1!==e.createErrors?(n+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(n+=" , message: 'should NOT be valid' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l&&(n+=" if (false) { ");return n},oneOf:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h="errs__"+a,d=e.util.copy(e),m="";d.level++;var g="valid"+d.level,y=d.baseId,v="prevValid"+a,x="passingSchemas"+a;n+="var "+h+" = errors , "+v+" = false , "+f+" = false , "+x+" = null; ";var b=e.compositeRule;e.compositeRule=d.compositeRule=!0;var E=s;if(E)for(var C,S=-1,k=E.length-1;S<k;)C=E[S+=1],(e.opts.strictKeywords?"object"==i(C)&&Object.keys(C).length>0:e.util.schemaHasRules(C,e.RULES.all))?(d.schema=C,d.schemaPath=u+"["+S+"]",d.errSchemaPath=c+"/"+S,n+="  "+e.validate(d)+" ",d.baseId=y):n+=" var "+g+" = true; ",S&&(n+=" if ("+g+" && "+v+") { "+f+" = false; "+x+" = ["+x+", "+S+"]; } else { ",m+="}"),n+=" if ("+g+") { "+f+" = "+v+" = true; "+x+" = "+S+"; }";return e.compositeRule=d.compositeRule=b,n+=m+"if (!"+f+") {   var err =   ",!1!==e.createErrors?(n+=" { keyword: 'oneOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { passingSchemas: "+x+" } ",!1!==e.opts.messages&&(n+=" , message: 'should match exactly one schema in oneOf' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&l&&(e.async?n+=" throw new ValidationError(vErrors); ":n+=" validate.errors = vErrors; return false; "),n+="} else {  errors = "+h+"; if (vErrors !== null) { if ("+h+") vErrors.length = "+h+"; else vErrors = null; }",e.opts.allErrors&&(n+=" } "),n},pattern:function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f=e.opts.$data&&s&&s.$data;f?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s,i+="if ( ",f&&(i+=" ("+n+" !== undefined && typeof "+n+" != 'string') || "),i+=" !"+(f?"(new RegExp("+n+"))":e.usePattern(s))+".test("+p+") ) {   ";var h=h||[];h.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'pattern' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { pattern:  ",i+=f?""+n:""+e.util.toQuotedString(s),i+="  } ",!1!==e.opts.messages&&(i+=" , message: 'should match pattern \"",i+=f?"' + "+n+" + '":""+e.util.escapeQuotes(s),i+="\"' "),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+u:""+e.util.toQuotedString(s),i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var d=i;return i=h.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+d+"]); ":i+=" validate.errors = ["+d+"]; return false; ":i+=" var err = "+d+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+="} ",l&&(i+=" else { "),i},properties:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="errs__"+a,h=e.util.copy(e),d="";h.level++;var m="valid"+h.level,g="key"+a,y="idx"+a,v=h.dataLevel=e.dataLevel+1,x="data"+v,b="dataProperties"+a,E=Object.keys(s||{}),C=e.schema.patternProperties||{},S=Object.keys(C),k=e.schema.additionalProperties,D=E.length||S.length,F=!1===k,A="object"==i(k)&&Object.keys(k).length,w=e.opts.removeAdditional,_=F||A||w,T=e.opts.ownProperties,P=e.baseId,I=e.schema.required;if(I&&(!e.opts.$data||!I.$data)&&I.length<e.opts.loopRequired)var B=e.util.toHash(I);if(n+="var "+f+" = errors;var "+m+" = true;",T&&(n+=" var "+b+" = undefined;"),_){if(n+=T?" "+b+" = "+b+" || Object.keys("+p+"); for (var "+y+"=0; "+y+"<"+b+".length; "+y+"++) { var "+g+" = "+b+"["+y+"]; ":" for (var "+g+" in "+p+") { ",D){if(n+=" var isAdditional"+a+" = !(false ",E.length)if(E.length>8)n+=" || validate.schema"+u+".hasOwnProperty("+g+") ";else {var O=E;if(O)for(var L=-1,N=O.length-1;L<N;)J=O[L+=1],n+=" || "+g+" == "+e.util.toQuotedString(J)+" ";}if(S.length){var j=S;if(j)for(var R=-1,M=j.length-1;R<M;)ae=j[R+=1],n+=" || "+e.usePattern(ae)+".test("+g+") ";}n+=" ); if (isAdditional"+a+") { ";}if("all"==w)n+=" delete "+p+"["+g+"]; ";else {var V=e.errorPath,U="' + "+g+" + '";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers)),F)if(w)n+=" delete "+p+"["+g+"]; ";else {n+=" "+m+" = false; ";var q=c;c=e.errSchemaPath+"/additionalProperties",(re=re||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'additionalProperties' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { additionalProperty: '"+U+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is an invalid additional property":n+="should NOT have additional properties",n+="' "),e.opts.verbose&&(n+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var W=n;n=re.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+W+"]); ":n+=" validate.errors = ["+W+"]; return false; ":n+=" var err = "+W+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",c=q,l&&(n+=" break; ");}else if(A)if("failing"==w){n+=" var "+f+" = errors;  ";var $=e.compositeRule;e.compositeRule=h.compositeRule=!0,h.schema=k,h.schemaPath=e.schemaPath+".additionalProperties",h.errSchemaPath=e.errSchemaPath+"/additionalProperties",h.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers);var G=p+"["+g+"]";h.dataPathArr[v]=g;var z=e.validate(h);h.baseId=P,e.util.varOccurences(z,x)<2?n+=" "+e.util.varReplace(z,x,G)+" ":n+=" var "+x+" = "+G+"; "+z+" ",n+=" if (!"+m+") { errors = "+f+"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete "+p+"["+g+"]; }  ",e.compositeRule=h.compositeRule=$;}else {h.schema=k,h.schemaPath=e.schemaPath+".additionalProperties",h.errSchemaPath=e.errSchemaPath+"/additionalProperties",h.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers);G=p+"["+g+"]";h.dataPathArr[v]=g;z=e.validate(h);h.baseId=P,e.util.varOccurences(z,x)<2?n+=" "+e.util.varReplace(z,x,G)+" ":n+=" var "+x+" = "+G+"; "+z+" ",l&&(n+=" if (!"+m+") break; ");}e.errorPath=V;}D&&(n+=" } "),n+=" }  ",l&&(n+=" if ("+m+") { ",d+="}");}var H=e.opts.useDefaults&&!e.compositeRule;if(E.length){var K=E;if(K)for(var J,Q=-1,X=K.length-1;Q<X;){var Y=s[J=K[Q+=1]];if(e.opts.strictKeywords?"object"==i(Y)&&Object.keys(Y).length>0:e.util.schemaHasRules(Y,e.RULES.all)){var Z=e.util.getProperty(J),ee=(G=p+Z,H&&void 0!==Y.default);h.schema=Y,h.schemaPath=u+Z,h.errSchemaPath=c+"/"+e.util.escapeFragment(J),h.errorPath=e.util.getPath(e.errorPath,J,e.opts.jsonPointers),h.dataPathArr[v]=e.util.toQuotedString(J);z=e.validate(h);if(h.baseId=P,e.util.varOccurences(z,x)<2){z=e.util.varReplace(z,x,G);var te=G;}else {te=x;n+=" var "+x+" = "+G+"; ";}if(ee)n+=" "+z+" ";else {if(B&&B[J]){n+=" if ( "+te+" === undefined ",T&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(J)+"') "),n+=") { "+m+" = false; ";V=e.errorPath,q=c;var re,ne=e.util.escapeQuotes(J);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(V,J,e.opts.jsonPointers)),c=e.errSchemaPath+"/required",(re=re||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+ne+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+ne+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";W=n;n=re.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+W+"]); ":n+=" validate.errors = ["+W+"]; return false; ":n+=" var err = "+W+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",c=q,e.errorPath=V,n+=" } else { ";}else l?(n+=" if ( "+te+" === undefined ",T&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(J)+"') "),n+=") { "+m+" = true; } else { "):(n+=" if ("+te+" !== undefined ",T&&(n+=" &&   Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(J)+"') "),n+=" ) { ");n+=" "+z+" } ";}}l&&(n+=" if ("+m+") { ",d+="}");}}if(S.length){var ie=S;if(ie)for(var ae,oe=-1,se=ie.length-1;oe<se;){Y=C[ae=ie[oe+=1]];if(e.opts.strictKeywords?"object"==i(Y)&&Object.keys(Y).length>0:e.util.schemaHasRules(Y,e.RULES.all)){h.schema=Y,h.schemaPath=e.schemaPath+".patternProperties"+e.util.getProperty(ae),h.errSchemaPath=e.errSchemaPath+"/patternProperties/"+e.util.escapeFragment(ae),n+=T?" "+b+" = "+b+" || Object.keys("+p+"); for (var "+y+"=0; "+y+"<"+b+".length; "+y+"++) { var "+g+" = "+b+"["+y+"]; ":" for (var "+g+" in "+p+") { ",n+=" if ("+e.usePattern(ae)+".test("+g+")) { ",h.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers);G=p+"["+g+"]";h.dataPathArr[v]=g;z=e.validate(h);h.baseId=P,e.util.varOccurences(z,x)<2?n+=" "+e.util.varReplace(z,x,G)+" ":n+=" var "+x+" = "+G+"; "+z+" ",l&&(n+=" if (!"+m+") break; "),n+=" } ",l&&(n+=" else "+m+" = true; "),n+=" }  ",l&&(n+=" if ("+m+") { ",d+="}");}}}return l&&(n+=" "+d+" if ("+f+" == errors) {"),n=e.util.cleanUpCode(n)},propertyNames:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="errs__"+a,h=e.util.copy(e);h.level++;var d="valid"+h.level;if(n+="var "+f+" = errors;",e.opts.strictKeywords?"object"==i(s)&&Object.keys(s).length>0:e.util.schemaHasRules(s,e.RULES.all)){h.schema=s,h.schemaPath=u,h.errSchemaPath=c;var m="key"+a,g="idx"+a,y="i"+a,v="' + "+m+" + '",x="data"+(h.dataLevel=e.dataLevel+1),b="dataProperties"+a,E=e.opts.ownProperties,C=e.baseId;E&&(n+=" var "+b+" = undefined; "),n+=E?" "+b+" = "+b+" || Object.keys("+p+"); for (var "+g+"=0; "+g+"<"+b+".length; "+g+"++) { var "+m+" = "+b+"["+g+"]; ":" for (var "+m+" in "+p+") { ",n+=" var startErrs"+a+" = errors; ";var S=m,k=e.compositeRule;e.compositeRule=h.compositeRule=!0;var D=e.validate(h);h.baseId=C,e.util.varOccurences(D,x)<2?n+=" "+e.util.varReplace(D,x,S)+" ":n+=" var "+x+" = "+S+"; "+D+" ",e.compositeRule=h.compositeRule=k,n+=" if (!"+d+") { for (var "+y+"=startErrs"+a+"; "+y+"<errors; "+y+"++) { vErrors["+y+"].propertyName = "+m+"; }   var err =   ",!1!==e.createErrors?(n+=" { keyword: 'propertyNames' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { propertyName: '"+v+"' } ",!1!==e.opts.messages&&(n+=" , message: 'property name \\'"+v+"\\' is invalid' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&l&&(e.async?n+=" throw new ValidationError(vErrors); ":n+=" validate.errors = vErrors; return false; "),l&&(n+=" break; "),n+=" } }";}return l&&(n+="  if ("+f+" == errors) {"),n=e.util.cleanUpCode(n)},required:function(e,t,r){var n=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h=e.opts.$data&&s&&s.$data;h&&(n+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ");var d="schema"+a;if(!h)if(s.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var m=[],g=s;if(g)for(var y,v=-1,x=g.length-1;v<x;){y=g[v+=1];var b=e.schema.properties[y];b&&(e.opts.strictKeywords?"object"==i(b)&&Object.keys(b).length>0:e.util.schemaHasRules(b,e.RULES.all))||(m[m.length]=y);}}else m=s;if(h||m.length){var E=e.errorPath,C=h||m.length>=e.opts.loopRequired,S=e.opts.ownProperties;if(l)if(n+=" var missing"+a+"; ",C){h||(n+=" var "+d+" = validate.schema"+u+"; ");var k="' + "+(T="schema"+a+"["+(A="i"+a)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,T,e.opts.jsonPointers)),n+=" var "+f+" = true; ",h&&(n+=" if (schema"+a+" === undefined) "+f+" = true; else if (!Array.isArray(schema"+a+")) "+f+" = false; else {"),n+=" for (var "+A+" = 0; "+A+" < "+d+".length; "+A+"++) { "+f+" = "+p+"["+d+"["+A+"]] !== undefined ",S&&(n+=" &&   Object.prototype.hasOwnProperty.call("+p+", "+d+"["+A+"]) "),n+="; if (!"+f+") break; } ",h&&(n+="  }  "),n+="  if (!"+f+") {   ",(_=_||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+k+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+k+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";var D=n;n=_.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+D+"]); ":n+=" validate.errors = ["+D+"]; return false; ":n+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } else { ";}else {n+=" if ( ";var F=m;if(F)for(var A=-1,w=F.length-1;A<w;){I=F[A+=1],A&&(n+=" || "),n+=" ( ( "+(N=p+(L=e.util.getProperty(I)))+" === undefined ",S&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(I)+"') "),n+=") && (missing"+a+" = "+e.util.toQuotedString(e.opts.jsonPointers?I:L)+") ) ";}n+=") {  ";var _;k="' + "+(T="missing"+a)+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(E,T,!0):E+" + "+T),(_=_||[]).push(n),n="",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+k+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+k+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ";D=n;n=_.pop(),!e.compositeRule&&l?e.async?n+=" throw new ValidationError(["+D+"]); ":n+=" validate.errors = ["+D+"]; return false; ":n+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",n+=" } else { ";}else if(C){h||(n+=" var "+d+" = validate.schema"+u+"; ");var T;k="' + "+(T="schema"+a+"["+(A="i"+a)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(E,T,e.opts.jsonPointers)),h&&(n+=" if ("+d+" && !Array.isArray("+d+")) {  var err =   ",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+k+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+k+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+d+" !== undefined) { "),n+=" for (var "+A+" = 0; "+A+" < "+d+".length; "+A+"++) { if ("+p+"["+d+"["+A+"]] === undefined ",S&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", "+d+"["+A+"]) "),n+=") {  var err =   ",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+k+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+k+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ",h&&(n+="  }  ");}else {var P=m;if(P)for(var I,B=-1,O=P.length-1;B<O;){I=P[B+=1];var L=e.util.getProperty(I),N=(k=e.util.escapeQuotes(I),p+L);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(E,I,e.opts.jsonPointers)),n+=" if ( "+N+" === undefined ",S&&(n+=" || ! Object.prototype.hasOwnProperty.call("+p+", '"+e.util.escapeQuotes(I)+"') "),n+=") {  var err =   ",!1!==e.createErrors?(n+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { missingProperty: '"+k+"' } ",!1!==e.opts.messages&&(n+=" , message: '",e.opts._errorDataPathProperty?n+="is a required property":n+="should have required property \\'"+k+"\\'",n+="' "),e.opts.verbose&&(n+=" , schema: validate.schema"+u+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),n+=" } "):n+=" {} ",n+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ";}}e.errorPath=E;}else l&&(n+=" if (true) {");return n},uniqueItems:function(e,t,r){var n,i=" ",a=e.level,o=e.dataLevel,s=e.schema[t],u=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,l=!e.opts.allErrors,p="data"+(o||""),f="valid"+a,h=e.opts.$data&&s&&s.$data;if(h?(i+=" var schema"+a+" = "+e.util.getData(s.$data,o,e.dataPathArr)+"; ",n="schema"+a):n=s,(s||h)&&!1!==e.opts.uniqueItems){h&&(i+=" var "+f+"; if ("+n+" === false || "+n+" === undefined) "+f+" = true; else if (typeof "+n+" != 'boolean') "+f+" = false; else { "),i+=" var i = "+p+".length , "+f+" = true , j; if (i > 1) { ";var d=e.schema.items&&e.schema.items.type,m=Array.isArray(d);if(!d||"object"==d||"array"==d||m&&(d.indexOf("object")>=0||d.indexOf("array")>=0))i+=" outer: for (;i--;) { for (j = i; j--;) { if (equal("+p+"[i], "+p+"[j])) { "+f+" = false; break outer; } } } ";else {i+=" var itemIndices = {}, item; for (;i--;) { var item = "+p+"[i]; ";var g="checkDataType"+(m?"s":"");i+=" if ("+e.util[g](d,"item",!0)+") continue; ",m&&(i+=" if (typeof item == 'string') item = '\"' + item; "),i+=" if (typeof itemIndices[item] == 'number') { "+f+" = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ";}i+=" } ",h&&(i+="  }  "),i+=" if (!"+f+") {   ";var y=y||[];y.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'uniqueItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { i: i, j: j } ",!1!==e.opts.messages&&(i+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),e.opts.verbose&&(i+=" , schema:  ",i+=h?"validate.schema"+u:""+s,i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+p+" "),i+=" } "):i+=" {} ";var v=i;i=y.pop(),!e.compositeRule&&l?e.async?i+=" throw new ValidationError(["+v+"]); ":i+=" validate.errors = ["+v+"]; return false; ":i+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } ",l&&(i+=" else { ");}else l&&(i+=" if (true) { ");return i},validate:Sv},ox=Iy.toHash,sx=function(){var e=[{type:"number",rules:[{maximum:["exclusiveMaximum"]},{minimum:["exclusiveMinimum"]},"multipleOf","format"]},{type:"string",rules:["maxLength","minLength","pattern","format"]},{type:"array",rules:["maxItems","minItems","items","contains","uniqueItems"]},{type:"object",rules:["maxProperties","minProperties","required","dependencies","propertyNames",{properties:["additionalProperties","patternProperties"]}]},{rules:["$ref","const","enum","not","anyOf","oneOf","allOf","if"]}],t=["type","$comment"];return e.all=ox(t),e.types=ox(["number","integer","string","array","object","boolean","null"]),e.forEach((function(r){r.rules=r.rules.map((function(r){var n;if("object"==i(r)){var a=Object.keys(r)[0];n=r[a],r=a,n.forEach((function(r){t.push(r),e.all[r]=!0;}));}return t.push(r),e.all[r]={keyword:r,code:ax[r],implements:n}})),e.all.$comment={keyword:"$comment",code:ax.$comment},r.type&&(e.types[r.type]=r);})),e.keywords=ox(t.concat(["$schema","$id","id","$data","$async","title","description","default","definitions","examples","readOnly","writeOnly","contentMediaType","contentEncoding","additionalItems","then","else"])),e.custom={},e},ux=["multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","additionalItems","maxItems","minItems","uniqueItems","maxProperties","minProperties","required","additionalProperties","enum","format","const"],cx=function(e,t){for(var r=0;r<t.length;r++){e=JSON.parse(JSON.stringify(e));var n,i=t[r].split("/"),a=e;for(n=1;n<i.length;n++)a=a[i[n]];for(n=0;n<ux.length;n++){var o=ux[n],s=a[o];s&&(a[o]={anyOf:[s,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]});}}return e},lx=xv.MissingRef,px=function e(t,r,n){var i=this;if("function"!=typeof this._opts.loadSchema)throw new Error("options.loadSchema should be a function");"function"==typeof r&&(n=r,r=void 0);var a=o(t).then((function(){var e=i._addSchema(t,void 0,r);return e.validate||function e(t){try{return i._compile(t)}catch(n){if(n instanceof lx)return function(n){var a=n.missingSchema;if(c(a))throw new Error("Schema "+a+" is loaded but "+n.missingRef+" cannot be resolved");var s=i._loadingSchemas[a];s||(s=i._loadingSchemas[a]=i._opts.loadSchema(a)).then(u,u);return s.then((function(e){if(!c(a))return o(e).then((function(){c(a)||i.addSchema(e,a,void 0,r);}))})).then((function(){return e(t)}));function u(){delete i._loadingSchemas[a];}function c(e){return i._refs[e]||i._schemas[e]}}(n);throw n}}(e)}));n&&a.then((function(e){n(null,e);}),n);return a;function o(t){var r=t.$schema;return r&&!i.getSchema(r)?e.call(i,{$ref:r},!0):Promise.resolve()}};var fx=function(e,t,r){var n,i,a=" ",o=e.level,s=e.dataLevel,u=e.schema[t],c=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,p=!e.opts.allErrors,f="data"+(s||""),h="valid"+o,d="errs__"+o,m=e.opts.$data&&u&&u.$data;m?(a+=" var schema"+o+" = "+e.util.getData(u.$data,s,e.dataPathArr)+"; ",i="schema"+o):i=u;var g,y,v,x,b,E="definition"+o,C=this.definition,S="";if(m&&C.$data){b="keywordValidate"+o;var k=C.validateSchema;a+=" var "+E+" = RULES.custom['"+t+"'].definition; var "+b+" = "+E+".validate;";}else {if(!(x=e.useCustomRule(this,u,e.schema,e)))return;i="validate.schema"+c,b=x.code,g=C.compile,y=C.inline,v=C.macro;}var D=b+".errors",F="i"+o,A="ruleErr"+o,w=C.async;if(w&&!e.async)throw new Error("async keyword in sync schema");if(y||v||(a+=D+" = null;"),a+="var "+d+" = errors;var "+h+";",m&&C.$data&&(S+="}",a+=" if ("+i+" === undefined) { "+h+" = true; } else { ",k&&(S+="}",a+=" "+h+" = "+E+".validateSchema("+i+"); if ("+h+") { ")),y)C.statements?a+=" "+x.validate+" ":a+=" "+h+" = "+x.validate+"; ";else if(v){var _=e.util.copy(e);S="";_.level++;var T="valid"+_.level;_.schema=x.validate,_.schemaPath="";var P=e.compositeRule;e.compositeRule=_.compositeRule=!0;var I=e.validate(_).replace(/validate\.schema/g,b);e.compositeRule=_.compositeRule=P,a+=" "+I;}else {(N=N||[]).push(a),a="",a+="  "+b+".call( ",e.opts.passContext?a+="this":a+="self",g||!1===C.schema?a+=" , "+f+" ":a+=" , "+i+" , "+f+" , validate.schema"+e.schemaPath+" ",a+=" , (dataPath || '')",'""'!=e.errorPath&&(a+=" + "+e.errorPath);var B=s?"data"+(s-1||""):"parentData",O=s?e.dataPathArr[s]:"parentDataProperty",L=a+=" , "+B+" , "+O+" , rootData )  ";a=N.pop(),!1===C.errors?(a+=" "+h+" = ",w&&(a+="await "),a+=L+"; "):a+=w?" var "+(D="customErrors"+o)+" = null; try { "+h+" = await "+L+"; } catch (e) { "+h+" = false; if (e instanceof ValidationError) "+D+" = e.errors; else throw e; } ":" "+D+" = null; "+h+" = "+L+"; ";}if(C.modifying&&(a+=" if ("+B+") "+f+" = "+B+"["+O+"];"),a+=""+S,C.valid)p&&(a+=" if (true) { ");else {var N;a+=" if ( ",void 0===C.valid?(a+=" !",a+=v?""+T:""+h):a+=" "+!C.valid+" ",a+=") { ",n=this.keyword,(N=N||[]).push(a),a="",(N=N||[]).push(a),a="",!1!==e.createErrors?(a+=" { keyword: '"+(n||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { keyword: '"+this.keyword+"' } ",!1!==e.opts.messages&&(a+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),e.opts.verbose&&(a+=" , schema: validate.schema"+c+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),a+=" } "):a+=" {} ";var j=a;a=N.pop(),!e.compositeRule&&p?e.async?a+=" throw new ValidationError(["+j+"]); ":a+=" validate.errors = ["+j+"]; return false; ":a+=" var err = "+j+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";var R=a;a=N.pop(),y?C.errors?"full"!=C.errors&&(a+="  for (var "+F+"="+d+"; "+F+"<errors; "+F+"++) { var "+A+" = vErrors["+F+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+l+'"; } ',e.opts.verbose&&(a+=" "+A+".schema = "+i+"; "+A+".data = "+f+"; "),a+=" } "):!1===C.errors?a+=" "+R+" ":(a+=" if ("+d+" == errors) { "+R+" } else {  for (var "+F+"="+d+"; "+F+"<errors; "+F+"++) { var "+A+" = vErrors["+F+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+l+'"; } ',e.opts.verbose&&(a+=" "+A+".schema = "+i+"; "+A+".data = "+f+"; "),a+=" } } "):v?(a+="   var err =   ",!1!==e.createErrors?(a+=" { keyword: '"+(n||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { keyword: '"+this.keyword+"' } ",!1!==e.opts.messages&&(a+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),e.opts.verbose&&(a+=" , schema: validate.schema"+c+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),a+=" } "):a+=" {} ",a+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&p&&(e.async?a+=" throw new ValidationError(vErrors); ":a+=" validate.errors = vErrors; return false; ")):!1===C.errors?a+=" "+R+" ":(a+=" if (Array.isArray("+D+")) { if (vErrors === null) vErrors = "+D+"; else vErrors = vErrors.concat("+D+"); errors = vErrors.length;  for (var "+F+"="+d+"; "+F+"<errors; "+F+"++) { var "+A+" = vErrors["+F+"]; if ("+A+".dataPath === undefined) "+A+".dataPath = (dataPath || '') + "+e.errorPath+";  "+A+'.schemaPath = "'+l+'";  ',e.opts.verbose&&(a+=" "+A+".schema = "+i+"; "+A+".data = "+f+"; "),a+=" } } else { "+R+" } "),a+=" } ",p&&(a+=" else { ");}return a},hx="http://json-schema.org/draft-07/schema#",dx="http://json-schema.org/draft-07/schema#",mx="Core schema meta-schema",gx={schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},yx=["object","boolean"],vx={$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},$comment:{type:"string"},title:{type:"string"},description:{type:"string"},default:!0,readOnly:{type:"boolean",default:!1},examples:{type:"array",items:!0},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:!0},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},propertyNames:{format:"regex"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:!0,enum:{type:"array",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},contentMediaType:{type:"string"},contentEncoding:{type:"string"},if:{$ref:"#"},then:{$ref:"#"},else:{$ref:"#"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},xx={$schema:hx,$id:dx,title:mx,definitions:gx,type:yx,properties:vx,default:!0},bx=n(Object.freeze({__proto__:null,$schema:hx,$id:dx,title:mx,definitions:gx,type:yx,properties:vx,default:xx})),Ex={$id:"https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js",definitions:{simpleTypes:bx.definitions.simpleTypes},type:"object",dependencies:{schema:["validate"],$data:["validate"],statements:["inline"],valid:{not:{required:["macro"]}}},properties:{type:bx.properties.type,schema:{type:"boolean"},statements:{type:"boolean"},dependencies:{type:"array",items:{type:"string"}},metaSchema:{type:"object"},modifying:{type:"boolean"},valid:{type:"boolean"},$data:{type:"boolean"},async:{type:"boolean"},errors:{anyOf:[{type:"boolean"},{const:"full"}]}}},Cx=/^[a-z_$][a-z0-9_$-]*$/i,Sx=function(e,t){var r=this.RULES;if(r.keywords[e])throw new Error("Keyword "+e+" is already defined");if(!Cx.test(e))throw new Error("Keyword "+e+" is not a valid identifier");if(t){this.validateKeyword(t,!0);var n=t.type;if(Array.isArray(n))for(var i=0;i<n.length;i++)o(e,n[i],t);else o(e,n,t);var a=t.metaSchema;a&&(t.$data&&this._opts.$data&&(a={anyOf:[a,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]}),t.validateSchema=this.compile(a,!0));}function o(e,t,n){for(var i,a=0;a<r.length;a++){var o=r[a];if(o.type==t){i=o;break}}i||(i={type:t,rules:[]},r.push(i));var s={keyword:e,definition:n,custom:!0,code:fx,implements:n.implements};i.rules.push(s),r.custom[e]=s;}return r.keywords[e]=r.all[e]=!0,this},kx=function(e){var t=this.RULES.custom[e];return t?t.definition:this.RULES.keywords[e]||!1},Dx=function(e){var t=this.RULES;delete t.keywords[e],delete t.all[e],delete t.custom[e];for(var r=0;r<t.length;r++)for(var n=t[r].rules,i=0;i<n.length;i++)if(n[i].keyword==e){n.splice(i,1);break}return this},Fx=function e(t,r){e.errors=null;var n=this._validateKeyword=this._validateKeyword||this.compile(Ex,!0);if(n(t))return !0;if(e.errors=n.errors,r)throw new Error("custom keyword definition is invalid: "+this.errorsText(n.errors));return !1};var Ax="http://json-schema.org/draft-07/schema#",wx="https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#",_x="Meta-schema for $data reference (JSON Schema extension proposal)",Tx=["$data"],Px={$data:{type:"string",anyOf:[{format:"relative-json-pointer"},{format:"json-pointer"}]}},Ix={$schema:Ax,$id:wx,description:_x,type:"object",required:Tx,properties:Px,additionalProperties:!1},Bx=n(Object.freeze({__proto__:null,$schema:Ax,$id:wx,description:_x,type:"object",required:Tx,properties:Px,additionalProperties:!1,default:Ix})),Ox=Rx;Rx.prototype.validate=function(e,t){var r;if("string"==typeof e){if(!(r=this.getSchema(e)))throw new Error('no schema with key or ref "'+e+'"')}else {var n=this._addSchema(e);r=n.validate||this._compile(n);}var i=r(t);!0!==r.$async&&(this.errors=r.errors);return i},Rx.prototype.compile=function(e,t){var r=this._addSchema(e,void 0,t);return r.validate||this._compile(r)},Rx.prototype.addSchema=function(e,t,r,n){if(Array.isArray(e)){for(var i=0;i<e.length;i++)this.addSchema(e[i],void 0,r,n);return this}var a=this._getId(e);if(void 0!==a&&"string"!=typeof a)throw new Error("schema id must be string");return $x(this,t=ov.normalizeId(t||a)),this._schemas[t]=this._addSchema(e,r,n,!0),this},Rx.prototype.addMetaSchema=function(e,t,r){return this.addSchema(e,t,r,!0),this},Rx.prototype.validateSchema=function(e,t){var r=e.$schema;if(void 0!==r&&"string"!=typeof r)throw new Error("$schema must be a string");if(!(r=r||this._opts.defaultMeta||function(e){var t=e._opts.meta;return e._opts.defaultMeta="object"==i(t)?e._getId(t)||t:e.getSchema(Lx)?Lx:void 0,e._opts.defaultMeta}(this)))return this.logger.warn("meta-schema not available"),this.errors=null,!0;var n=this.validate(r,e);if(!n&&t){var a="schema is invalid: "+this.errorsText();if("log"!=this._opts.validateSchema)throw new Error(a);this.logger.error(a);}return n},Rx.prototype.getSchema=function(e){var t=Mx(this,e);switch(i(t)){case"object":return t.validate||this._compile(t);case"string":return this.getSchema(t);case"undefined":return function(e,t){var r=ov.schema.call(e,{schema:{}},t);if(r){var n=r.schema,i=r.root,a=r.baseId,o=Fv.call(e,n,i,void 0,a);return e._fragments[t]=new iv({ref:t,fragment:!0,schema:n,root:i,baseId:a,validate:o}),o}}(this,e)}},Rx.prototype.removeSchema=function(e){if(e instanceof RegExp)return Vx(this,this._schemas,e),Vx(this,this._refs,e),this;switch(i(e)){case"undefined":return Vx(this,this._schemas),Vx(this,this._refs),this._cache.clear(),this;case"string":var t=Mx(this,e);return t&&this._cache.del(t.cacheKey),delete this._schemas[e],delete this._refs[e],this;case"object":var r=this._opts.serialize,n=r?r(e):e;this._cache.del(n);var a=this._getId(e);a&&(a=ov.normalizeId(a),delete this._schemas[a],delete this._refs[a]);}return this},Rx.prototype.addFormat=function(e,t){"string"==typeof t&&(t=new RegExp(t));return this._formats[e]=t,this},Rx.prototype.errorsText=function(e,t){if(!(e=e||this.errors))return "No errors";for(var r=void 0===(t=t||{}).separator?", ":t.separator,n=void 0===t.dataVar?"data":t.dataVar,i="",a=0;a<e.length;a++){var o=e[a];o&&(i+=n+o.dataPath+" "+o.message+r);}return i.slice(0,-r.length)},Rx.prototype._addSchema=function(e,t,r,n){if("object"!=i(e)&&"boolean"!=typeof e)throw new Error("schema should be object or boolean");var a=this._opts.serialize,o=a?a(e):e,s=this._cache.get(o);if(s)return s;n=n||!1!==this._opts.addUsedSchema;var u=ov.normalizeId(this._getId(e));u&&n&&$x(this,u);var c,l=!1!==this._opts.validateSchema&&!t;l&&!(c=u&&u==ov.normalizeId(e.$schema))&&this.validateSchema(e,!0);var p=ov.ids.call(this,e),f=new iv({id:u,schema:e,localRefs:p,cacheKey:o,meta:r});"#"!=u[0]&&n&&(this._refs[u]=f);this._cache.put(o,f),l&&c&&this.validateSchema(e,!0);return f},Rx.prototype._compile=function(e,t){if(e.compiling)return e.validate=i,i.schema=e.schema,i.errors=null,i.root=t||i,!0===e.schema.$async&&(i.$async=!0),i;var r,n;e.compiling=!0,e.meta&&(r=this._opts,this._opts=this._metaOpts);try{n=Fv.call(this,e.schema,t,e.localRefs);}catch(t){throw delete e.validate,t}finally{e.compiling=!1,e.meta&&(this._opts=r);}return e.validate=n,e.refs=n.refs,e.refVal=n.refVal,e.root=n.root,n;function i(){var t=e.validate,r=t.apply(this,arguments);return i.errors=t.errors,r}},Rx.prototype.compileAsync=px,Rx.prototype.addKeyword=Sx,Rx.prototype.getKeyword=kx,Rx.prototype.removeKeyword=Dx,Rx.prototype.validateKeyword=Fx,Rx.ValidationError=xv.Validation,Rx.MissingRefError=xv.MissingRef,Rx.$dataMetaSchema=cx;var Lx="http://json-schema.org/draft-07/schema",Nx=["removeAdditional","useDefaults","coerceTypes","strictDefaults"],jx=["/properties"];function Rx(e){if(!(this instanceof Rx))return new Rx(e);e=this._opts=Iy.copy(e)||{},function(e){var t=e._opts.logger;if(!1===t)e.logger={log:Gx,warn:Gx,error:Gx};else {if(void 0===t&&(t=console),!("object"==i(t)&&t.log&&t.warn&&t.error))throw new Error("logger must implement log, warn and error methods");e.logger=t;}}(this),this._schemas={},this._refs={},this._fragments={},this._formats=Hv(e.format),this._cache=e.cache||new Lv,this._loadingSchemas={},this._compilations=[],this.RULES=sx(),this._getId=function(e){switch(e.schemaId){case"auto":return Wx;case"id":return Ux;default:return qx}}(e),e.loopRequired=e.loopRequired||1/0,"property"==e.errorDataPath&&(e._errorDataPathProperty=!0),void 0===e.serialize&&(e.serialize=Cv),this._metaOpts=function(e){for(var t=Iy.copy(e._opts),r=0;r<Nx.length;r++)delete t[Nx[r]];return t}(this),e.formats&&function(e){for(var t in e._opts.formats){var r=e._opts.formats[t];e.addFormat(t,r);}}(this),function(e){var t;e._opts.$data&&(t=Bx,e.addMetaSchema(t,t.$id,!0));if(!1===e._opts.meta)return;var r=bx;e._opts.$data&&(r=cx(r,jx));e.addMetaSchema(r,Lx,!0),e._refs["http://json-schema.org/schema"]=Lx;}(this),"object"==i(e.meta)&&this.addMetaSchema(e.meta),e.nullable&&this.addKeyword("nullable",{metaSchema:{type:"boolean"}}),function(e){var t=e._opts.schemas;if(!t)return;if(Array.isArray(t))e.addSchema(t);else for(var r in t)e.addSchema(t[r],r);}(this);}function Mx(e,t){return t=ov.normalizeId(t),e._schemas[t]||e._refs[t]||e._fragments[t]}function Vx(e,t,r){for(var n in t){var i=t[n];i.meta||r&&!r.test(n)||(e._cache.del(i.cacheKey),delete t[n]);}}function Ux(e){return e.$id&&this.logger.warn("schema $id ignored",e.$id),e.id}function qx(e){return e.id&&this.logger.warn("schema id ignored",e.id),e.$id}function Wx(e){if(e.$id&&e.id&&e.$id!=e.id)throw new Error("schema $id is different from id");return e.$id||e.id}function $x(e,t){if(e._schemas[t]||e._refs[t])throw new Error('schema with key or id "'+t+'" already exists')}function Gx(){}var zx,Hx="http://json-schema.org/draft-04/schema#",Kx="http://json-schema.org/draft-04/schema#",Jx={schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},positiveInteger:{type:"integer",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:"#/definitions/positiveInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},minItems:1,uniqueItems:!0}},Qx={id:{type:"string"},$schema:{type:"string"},title:{type:"string"},description:{type:"string"},default:{},multipleOf:{type:"number",minimum:0,exclusiveMinimum:!0},maximum:{type:"number"},exclusiveMaximum:{type:"boolean",default:!1},minimum:{type:"number"},exclusiveMinimum:{type:"boolean",default:!1},maxLength:{$ref:"#/definitions/positiveInteger"},minLength:{$ref:"#/definitions/positiveIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{anyOf:[{type:"boolean"},{$ref:"#"}],default:{}},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:{}},maxItems:{$ref:"#/definitions/positiveInteger"},minItems:{$ref:"#/definitions/positiveIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},maxProperties:{$ref:"#/definitions/positiveInteger"},minProperties:{$ref:"#/definitions/positiveIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{anyOf:[{type:"boolean"},{$ref:"#"}],default:{}},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},enum:{type:"array",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},Xx={exclusiveMaximum:["maximum"],exclusiveMinimum:["minimum"]},Yx={id:Hx,$schema:Kx,description:"Core schema meta-schema",definitions:Jx,type:"object",properties:Qx,dependencies:Xx,default:{}},Zx=Object.freeze({__proto__:null,id:Hx,$schema:Kx,description:"Core schema meta-schema",definitions:Jx,type:"object",properties:Qx,dependencies:Xx,default:Yx}),eb=[].slice,tb={}.toString;zx=nb((function(e,t){return e.apply(null,t)}));var rb={curry:function(e){return nb(e)},flip:nb((function(e,t,r){return e(r,t)})),fix:function(e){return function(t){return function(){return e(t(t)).apply(null,arguments)}}((function(t){return function(){return e(t(t)).apply(null,arguments)}}))},apply:zx,over:nb((function(e,t,r,n){return e(t(r),t(n))})),memoize:function(e){var t;return t={},function(){var r,n,i;return r=eb.call(arguments),n=function(){var e,t,n,a=[];for(e=0,n=(t=r).length;e<n;++e)i=t[e],a.push(i+tb.call(i).slice(8,-1));return a}().join(""),t[n]=n in t?t[n]:e.apply(null,r)}}};function nb(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}var ib,ab,ob,sb,ub,cb,lb,pb,fb,hb,db,mb,gb,yb,vb,xb,bb,Eb,Cb,Sb,kb,Db,Fb,Ab,wb,_b,Tb,Pb,Ib,Bb,Ob,Lb,Nb,jb,Rb,Mb,Vb,Ub,qb,Wb,$b,Gb,zb,Hb,Kb,Jb,Qb,Xb,Yb,Zb,eE,tE,rE,nE,iE,aE,oE,sE,uE,cE,lE,pE,fE,hE,dE,mE,gE,yE,vE,xE={}.toString,bE=[].slice;ib=SE((function(e,t){var r,n;for(r=0,n=t.length;r<n;++r)e(t[r]);return t})),ab=SE((function(e,t){var r,n,i,a=[];for(r=0,n=t.length;r<n;++r)i=t[r],a.push(e(i));return a})),ob=function(e){var t,r,n,i=[];for(t=0,r=e.length;t<r;++t)(n=e[t])&&i.push(n);return i},sb=SE((function(e,t){var r,n,i,a=[];for(r=0,n=t.length;r<n;++r)e(i=t[r])&&a.push(i);return a})),ub=SE((function(e,t){var r,n,i,a=[];for(r=0,n=t.length;r<n;++r)e(i=t[r])||a.push(i);return a})),cb=SE((function(e,t){var r,n,i,a,o;for(r=[],n=[],i=0,a=t.length;i<a;++i)(e(o=t[i])?r:n).push(o);return [r,n]})),lb=SE((function(e,t){var r,n,i;for(r=0,n=t.length;r<n;++r)if(e(i=t[r]))return i})),pb=fb=function(e){return e[0]},hb=function(e){if(e.length)return e.slice(1)},db=function(e){return e[e.length-1]},mb=function(e){if(e.length)return e.slice(0,-1)},gb=function(e){return !e.length},yb=function(e){return e.concat().reverse()},vb=function(e){var t,r,n,i;for(t=[],r=0,n=e.length;r<n;++r)kE(i=e[r],t)||t.push(i);return t},xb=SE((function(e,t){var r,n,i,a,o,s=[];for(r=[],n=0,i=t.length;n<i;++n)kE(o=e(a=t[n]),r)||(r.push(o),s.push(a));return s})),bb=Eb=SE((function(e,t,r){var n,i;for(n=0,i=r.length;n<i;++n)t=e(t,r[n]);return t})),Cb=Sb=SE((function(e,t){return bb(e,t[0],t.slice(1))})),kb=SE((function(e,t,r){var n;for(n=r.length-1;n>=0;--n)t=e(r[n],t);return t})),Db=SE((function(e,t){return kb(e,t[t.length-1],t.slice(0,-1))})),Fb=SE((function(e,t){var r,n,i;for(r=[],n=t;null!=(i=e(n));)r.push(i[0]),n=i[1];return r})),Ab=function(e){return [].concat.apply([],e)},wb=SE((function(e,t){var r;return [].concat.apply([],function(){var n,i,a,o=[];for(n=0,a=(i=t).length;n<a;++n)r=i[n],o.push(e(r));return o}())})),_b=function(e){var t;return [].concat.apply([],function(){var r,n,i,a=[];for(r=0,i=(n=e).length;r<i;++r)t=n[r],"Array"===xE.call(t).slice(8,-1)?a.push(_b(t)):a.push(t);return a}())},Tb=function(e){var t,r,n,i,a,o,s;t=bE.call(arguments,1),r=[];e:for(n=0,i=e.length;n<i;++n){for(a=e[n],o=0,s=t.length;o<s;++o)if(kE(a,t[o]))continue e;r.push(a);}return r},Pb=function(e){var t,r,n,i,a,o,s;t=bE.call(arguments,1),r=[];e:for(n=0,i=e.length;n<i;++n){for(a=e[n],o=0,s=t.length;o<s;++o)if(!kE(a,t[o]))continue e;r.push(a);}return r},Ib=function(){var e,t,r,n,i,a,o,s;for(t=[],r=0,n=(e=bE.call(arguments)).length;r<n;++r)for(a=0,o=(i=e[r]).length;a<o;++a)kE(s=i[a],t)||t.push(s);return t},Bb=SE((function(e,t){var r,n,i,a;for(r={},n=0,i=t.length;n<i;++n)(a=e(t[n]))in r?r[a]+=1:r[a]=1;return r})),Ob=SE((function(e,t){var r,n,i,a,o;for(r={},n=0,i=t.length;n<i;++n)(o=e(a=t[n]))in r?r[o].push(a):r[o]=[a];return r})),Lb=function(e){var t,r;for(t=0,r=e.length;t<r;++t)if(!e[t])return !1;return !0},Nb=function(e){var t,r;for(t=0,r=e.length;t<r;++t)if(e[t])return !0;return !1},jb=SE((function(e,t){var r,n;for(r=0,n=t.length;r<n;++r)if(e(t[r]))return !0;return !1})),Rb=SE((function(e,t){var r,n;for(r=0,n=t.length;r<n;++r)if(!e(t[r]))return !1;return !0})),Mb=function(e){return e.concat().sort((function(e,t){return e>t?1:e<t?-1:0}))},Vb=SE((function(e,t){return t.concat().sort(e)})),Ub=SE((function(e,t){return t.concat().sort((function(t,r){return e(t)>e(r)?1:e(t)<e(r)?-1:0}))})),qb=function(e){var t,r,n;for(t=0,r=0,n=e.length;r<n;++r)t+=e[r];return t},Wb=function(e){var t,r,n;for(t=1,r=0,n=e.length;r<n;++r)t*=e[r];return t},$b=Gb=function(e){var t,r,n;for(t=0,r=0,n=e.length;r<n;++r)t+=e[r];return t/e.length},zb=function(e){var t,r,n,i,a;for(t=e[0],r=0,i=(n=e.slice(1)).length;r<i;++r)(a=n[r])>t&&(t=a);return t},Hb=function(e){var t,r,n,i,a;for(t=e[0],r=0,i=(n=e.slice(1)).length;r<i;++r)(a=n[r])<t&&(t=a);return t},Kb=SE((function(e,t){var r,n,i,a,o;for(r=t[0],n=0,a=(i=t.slice(1)).length;n<a;++n)e(o=i[n])>e(r)&&(r=o);return r})),Jb=SE((function(e,t){var r,n,i,a,o;for(r=t[0],n=0,a=(i=t.slice(1)).length;n<a;++n)e(o=i[n])<e(r)&&(r=o);return r})),Qb=Xb=SE((function(e,t,r){var n,i;return n=t,[t].concat(function(){var t,a,o,s=[];for(t=0,o=(a=r).length;t<o;++t)i=a[t],s.push(n=e(n,i));return s}())})),Yb=Zb=SE((function(e,t){if(t.length)return Qb(e,t[0],t.slice(1))})),eE=SE((function(e,t,r){return r=r.concat().reverse(),Qb(e,t,r).reverse()})),tE=SE((function(e,t){if(t.length)return t=t.concat().reverse(),Qb(e,t[0],t.slice(1)).reverse()})),rE=SE((function(e,t,r){return r.slice(e,t)})),nE=SE((function(e,t){return e<=0?t.slice(0,0):t.slice(0,e)})),iE=SE((function(e,t){return e<=0?t:t.slice(e)})),aE=SE((function(e,t){return [nE(e,t),iE(e,t)]})),oE=SE((function(e,t){var r,n;if(!(r=t.length))return t;for(n=0;n<r&&e(t[n]);)n+=1;return t.slice(0,n)})),sE=SE((function(e,t){var r,n;if(!(r=t.length))return t;for(n=0;n<r&&e(t[n]);)n+=1;return t.slice(n)})),uE=SE((function(e,t){return [oE(e,t),sE(e,t)]})),cE=SE((function(e,t){return uE(function(){var e=arguments;return function(){var t,r;for(r=e[0].apply(this,arguments),t=1;t<e.length;++t)r=e[t](r);return r}}(e,DE),t)})),lE=SE((function(e,t){var r,n,i,a,o,s;for(r=[],n=t.length,i=0,a=e.length;i<a&&(o=i,s=e[i],o!==n);++i)r.push([s,t[o]]);return r})),pE=SE((function(e,t,r){var n,i,a,o,s,u;for(n=[],i=r.length,a=0,o=t.length;a<o&&(s=a,u=t[a],s!==i);++a)n.push(e(u,r[s]));return n})),fE=function(){var e,t,r,n,i,a,o,s,u,c=[];for(t=void 0,r=0,n=(e=bE.call(arguments)).length;r<n;++r)t<=(a=(i=e[r]).length)||(t=a);for(r=0;r<t;++r){for(o=r,s=[],u=0,n=e.length;u<n;++u)i=e[u],s.push(i[o]);c.push(s);}return c},hE=function(e){var t,r,n,i,a,o,s,u=[];for(r=void 0,n=0,i=(t=bE.call(arguments,1)).length;n<i;++n)r<=(o=(a=t[n]).length)||(r=o);for(n=0;n<r;++n)s=n,u.push(e.apply(null,c()));return u;function c(){var e,r,n,i=[];for(e=0,n=(r=t).length;e<n;++e)a=r[e],i.push(a[s]);return i}},dE=SE((function(e,t){return e<0?t[t.length+e]:t[e]})),mE=SE((function(e,t){var r,n,i;for(r=0,n=t.length;r<n;++r)if(i=r,t[r]===e)return i})),gE=SE((function(e,t){var r,n,i,a=[];for(r=0,n=t.length;r<n;++r)i=r,t[r]===e&&a.push(i);return a})),yE=SE((function(e,t){var r,n,i;for(r=0,n=t.length;r<n;++r)if(i=r,e(t[r]))return i})),vE=SE((function(e,t){var r,n,i,a=[];for(r=0,n=t.length;r<n;++r)i=r,e(t[r])&&a.push(i);return a}));var EE,CE={each:ib,map:ab,filter:sb,compact:ob,reject:ub,partition:cb,find:lb,head:pb,first:fb,tail:hb,last:db,initial:mb,empty:gb,reverse:yb,difference:Tb,intersection:Pb,union:Ib,countBy:Bb,groupBy:Ob,fold:bb,fold1:Cb,foldl:Eb,foldl1:Sb,foldr:kb,foldr1:Db,unfoldr:Fb,andList:Lb,orList:Nb,any:jb,all:Rb,unique:vb,uniqueBy:xb,sort:Mb,sortWith:Vb,sortBy:Ub,sum:qb,product:Wb,mean:$b,average:Gb,concat:Ab,concatMap:wb,flatten:_b,maximum:zb,minimum:Hb,maximumBy:Kb,minimumBy:Jb,scan:Qb,scan1:Yb,scanl:Xb,scanl1:Zb,scanr:eE,scanr1:tE,slice:rE,take:nE,drop:iE,splitAt:aE,takeWhile:oE,dropWhile:sE,span:uE,breakList:cE,zip:lE,zipWith:pE,zipAll:fE,zipAllWith:hE,at:dE,elemIndex:mE,elemIndices:gE,findIndex:yE,findIndices:vE};function SE(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}function kE(e,t){for(var r=-1,n=t.length>>>0;++r<n;)if(e===t[r])return !0;return !1}function DE(e){return !e}EE=function(e){var t,r,n={};for(t in e)(r=e[t])&&(n[t]=r);return n};var FE={values:function(e){var t,r,n=[];for(t in e)r=e[t],n.push(r);return n},keys:function(e){var t,r=[];for(t in e)r.push(t);return r},pairsToObj:function(e){var t,r,n,i={};for(t=0,r=e.length;t<r;++t)i[(n=e[t])[0]]=n[1];return i},objToPairs:function(e){var t,r,n=[];for(t in e)r=e[t],n.push([t,r]);return n},listsToObj:AE((function(e,t){var r,n,i,a={};for(r=0,n=e.length;r<n;++r)i=r,a[e[r]]=t[i];return a})),objToLists:function(e){var t,r,n,i;for(n in t=[],r=[],e)i=e[n],t.push(n),r.push(i);return [t,r]},empty:function(e){var t;for(t in e)return !1;return !0},each:AE((function(e,t){var r;for(r in t)e(t[r]);return t})),map:AE((function(e,t){var r,n,i={};for(r in t)n=t[r],i[r]=e(n);return i})),filter:AE((function(e,t){var r,n,i={};for(r in t)e(n=t[r])&&(i[r]=n);return i})),compact:EE,reject:AE((function(e,t){var r,n,i={};for(r in t)e(n=t[r])||(i[r]=n);return i})),partition:AE((function(e,t){var r,n,i,a;for(i in r={},n={},t)(e(a=t[i])?r:n)[i]=a;return [r,n]})),find:AE((function(e,t){var r,n;for(r in t)if(e(n=t[r]))return n}))};function AE(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}var wE,_E,TE,PE,IE,BE,OE,LE,NE,jE,RE,ME,VE,UE,qE,WE,$E,GE,zE,HE,KE,JE,QE,XE,YE,ZE,eC,tC,rC,nC,iC,aC,oC={split:sC((function(e,t){return t.split(e)})),join:sC((function(e,t){return t.join(e)})),lines:function(e){return e.length?e.split("\n"):[]},unlines:function(e){return e.join("\n")},words:function(e){return e.length?e.split(/[ ]+/):[]},unwords:function(e){return e.join(" ")},chars:function(e){return e.split("")},unchars:function(e){return e.join("")},reverse:function(e){return e.split("").reverse().join("")},repeat:sC((function(e,t){var r,n;for(r="",n=0;n<e;++n)r+=t;return r})),capitalize:function(e){return e.charAt(0).toUpperCase()+e.slice(1)},camelize:function(e){return e.replace(/[-_]+(.)?/g,(function(e,t){return (null!=t?t:"").toUpperCase()}))},dasherize:function(e){return e.replace(/([^-A-Z])([A-Z]+)/g,(function(e,t,r){return t+"-"+(r.length>1?r:r.toLowerCase())})).replace(/^([A-Z]+)/,(function(e,t){return t.length>1?t+"-":t.toLowerCase()}))}};function sC(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}function uC(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}wE=uC((function(e,t){return e>t?e:t})),_E=uC((function(e,t){return e<t?e:t})),TE=function(e){return -e},PE=Math.abs,IE=function(e){return e<0?-1:e>0?1:0},BE=uC((function(e,t){return ~~(e/t)})),OE=uC((function(e,t){return e%t})),LE=uC((function(e,t){return Math.floor(e/t)})),NE=uC((function(e,t){var r;return (e%(r=t)+r)%r})),jE=function(e){return 1/e},ME=2*(RE=Math.PI),VE=Math.exp,UE=Math.sqrt,qE=Math.log,WE=uC((function(e,t){return Math.pow(e,t)})),$E=Math.sin,GE=Math.tan,zE=Math.cos,HE=Math.asin,KE=Math.acos,JE=Math.atan,QE=uC((function(e,t){return Math.atan2(e,t)})),XE=function(e){return ~~e},YE=Math.round,ZE=Math.ceil,eC=Math.floor,tC=function(e){return e!=e},rC=function(e){return e%2==0},nC=function(e){return e%2!=0},iC=uC((function(e,t){var r;for(e=Math.abs(e),t=Math.abs(t);0!==t;)r=e%t,e=t,t=r;return e})),aC=uC((function(e,t){return Math.abs(Math.floor(e/iC(e,t)*t))}));var cC,lC,pC,fC,hC,dC,mC,gC,yC,vC={}.toString;cC=rb,lC=CE,pC=FE,fC=oC,hC={max:wE,min:_E,negate:TE,abs:PE,signum:IE,quot:BE,rem:OE,div:LE,mod:NE,recip:jE,pi:RE,tau:ME,exp:VE,sqrt:UE,ln:qE,pow:WE,sin:$E,tan:GE,cos:zE,acos:KE,asin:HE,atan:JE,atan2:QE,truncate:XE,round:YE,ceiling:ZE,floor:eC,isItNaN:tC,even:rC,odd:nC,gcd:iC,lcm:aC},dC=function(e){return e},mC=bC((function(e,t){return vC.call(t).slice(8,-1)===e})),gC=bC((function(e,t){var r,n=[];for(r=0;r<e;++r)n.push(t);return n})),fC.empty=lC.empty,fC.slice=lC.slice,fC.take=lC.take,fC.drop=lC.drop,fC.splitAt=lC.splitAt,fC.takeWhile=lC.takeWhile,fC.dropWhile=lC.dropWhile,fC.span=lC.span,fC.breakStr=lC.breakList,(yC={Func:cC,List:lC,Obj:pC,Str:fC,Num:hC,id:dC,isType:mC,replicate:gC}).each=lC.each,yC.map=lC.map,yC.filter=lC.filter,yC.compact=lC.compact,yC.reject=lC.reject,yC.partition=lC.partition,yC.find=lC.find,yC.head=lC.head,yC.first=lC.first,yC.tail=lC.tail,yC.last=lC.last,yC.initial=lC.initial,yC.empty=lC.empty,yC.reverse=lC.reverse,yC.difference=lC.difference,yC.intersection=lC.intersection,yC.union=lC.union,yC.countBy=lC.countBy,yC.groupBy=lC.groupBy,yC.fold=lC.fold,yC.foldl=lC.foldl,yC.fold1=lC.fold1,yC.foldl1=lC.foldl1,yC.foldr=lC.foldr,yC.foldr1=lC.foldr1,yC.unfoldr=lC.unfoldr,yC.andList=lC.andList,yC.orList=lC.orList,yC.any=lC.any,yC.all=lC.all,yC.unique=lC.unique,yC.uniqueBy=lC.uniqueBy,yC.sort=lC.sort,yC.sortWith=lC.sortWith,yC.sortBy=lC.sortBy,yC.sum=lC.sum,yC.product=lC.product,yC.mean=lC.mean,yC.average=lC.average,yC.concat=lC.concat,yC.concatMap=lC.concatMap,yC.flatten=lC.flatten,yC.maximum=lC.maximum,yC.minimum=lC.minimum,yC.maximumBy=lC.maximumBy,yC.minimumBy=lC.minimumBy,yC.scan=lC.scan,yC.scanl=lC.scanl,yC.scan1=lC.scan1,yC.scanl1=lC.scanl1,yC.scanr=lC.scanr,yC.scanr1=lC.scanr1,yC.slice=lC.slice,yC.take=lC.take,yC.drop=lC.drop,yC.splitAt=lC.splitAt,yC.takeWhile=lC.takeWhile,yC.dropWhile=lC.dropWhile,yC.span=lC.span,yC.breakList=lC.breakList,yC.zip=lC.zip,yC.zipWith=lC.zipWith,yC.zipAll=lC.zipAll,yC.zipAllWith=lC.zipAllWith,yC.at=lC.at,yC.elemIndex=lC.elemIndex,yC.elemIndices=lC.elemIndices,yC.findIndex=lC.findIndex,yC.findIndices=lC.findIndices,yC.apply=cC.apply,yC.curry=cC.curry,yC.flip=cC.flip,yC.fix=cC.fix,yC.over=cC.over,yC.split=fC.split,yC.join=fC.join,yC.lines=fC.lines,yC.unlines=fC.unlines,yC.words=fC.words,yC.unwords=fC.unwords,yC.chars=fC.chars,yC.unchars=fC.unchars,yC.repeat=fC.repeat,yC.capitalize=fC.capitalize,yC.camelize=fC.camelize,yC.dasherize=fC.dasherize,yC.values=pC.values,yC.keys=pC.keys,yC.pairsToObj=pC.pairsToObj,yC.objToPairs=pC.objToPairs,yC.listsToObj=pC.listsToObj,yC.objToLists=pC.objToLists,yC.max=hC.max,yC.min=hC.min,yC.negate=hC.negate,yC.abs=hC.abs,yC.signum=hC.signum,yC.quot=hC.quot,yC.rem=hC.rem,yC.div=hC.div,yC.mod=hC.mod,yC.recip=hC.recip,yC.pi=hC.pi,yC.tau=hC.tau,yC.exp=hC.exp,yC.sqrt=hC.sqrt,yC.ln=hC.ln,yC.pow=hC.pow,yC.sin=hC.sin,yC.tan=hC.tan,yC.cos=hC.cos,yC.acos=hC.acos,yC.asin=hC.asin,yC.atan=hC.atan,yC.atan2=hC.atan2,yC.truncate=hC.truncate,yC.round=hC.round,yC.ceiling=hC.ceiling,yC.floor=hC.floor,yC.isItNaN=hC.isItNaN,yC.even=hC.even,yC.odd=hC.odd,yC.gcd=hC.gcd,yC.lcm=hC.lcm,yC.VERSION="1.1.2";var xC=yC;function bC(e,t){var r;return function n(i){return e.length>1?function(){var a=i?i.concat():[];return r=t&&r||this,a.push.apply(a,arguments)<e.length&&arguments.length?n.call(r,a):e.apply(r,a)}:e}()}var EC=r((function(t){(function(){var e,r,n;function i(e,t){if(e[0]===t)return e.shift();throw new Error("Expected '"+t+"', but got '"+e[0]+"' instead in "+JSON.stringify(e)+".")}function a(e,t){if(e[0]===t)return e.shift()}function o(e,t,r){var n,o,s,u;for(n=t[0],o=t[1],r&&i(e,n),s=[],u=","+(r?o:"");e.length&&r&&e[0]!==o;)s.push(p(e,u)),a(e,",");return r&&i(e,o),s}function s(e,t){return o(e,["[","]"],t)}function u(e,t){return o(e,["(",")"],t)}function c(e,t){var r,n,o;for(t&&i(e,"{"),r={},n=","+(t?"}":"");e.length&&(!t||"}"!==e[0]);)o=l(e,":"),i(e,":"),r[o]=p(e,n),a(e,",");return t&&i(e,"}"),r}function l(e,t){var r;for(null==t&&(t=""),r="";e.length&&-1===t.indexOf(e[0]);)r+=e.shift();return r}function p(e,t){switch(e[0]){case"[":return s(e,!0);case"(":return u(e,!0);case"{":return c(e,!0);default:return l(e,t)}}function f(e){return !e}e=xC.reject,r=/\[\]\(\)}{:,/.source,n=RegExp("(\"(?:\\\\\"|[^\"])*\")|('(?:\\\\'|[^'])*')|(/(?:\\\\/|[^/])*/[a-zA-Z]*)|(#.*#)|(["+r+"])|([^\\s"+r+"](?:\\s*[^\\s"+r+"]+)*)|\\s*"),t.exports=function(t,r,i){var a;if(null==i&&(i={}),!i.explicit&&1===t.length&&"String"===t[0].type)return "'"+r.replace(/\\'/g,"\\\\'")+"'";if(!(a=function(e,t,r){var n,i,a,o,l,f,h,d;return i=(n=t[0]).type,a=n.structure,o=e.concat(),r.explicit||1!==t.length||(i||!a)&&"Array"!==i&&"Object"!==i?f=p(e):(l="array"===a||"Array"===i?s(e,"["===e[0]):"tuple"===a?u(e,"("===e[0]):c(e,"{"===e[0]),f=e.length?p("array"===a||"Array"===i?((h=o).unshift("["),h.push("]"),h):((d=o).unshift("("),d.push(")"),d)):l),f}(e(f,r.split(n)),t,i)))throw new Error("Error parsing '"+r+"'.");return a};}).call(e);})),CC=r((function(t){(function(){var e,r;function n(e){var t;if(null==(t=e[0]))throw new Error("Unexpected end of input.");return t}function i(t){var r;if(r=n(t),!e.test(r))throw new Error("Expected text, got '"+r+"' instead.");return t.shift()}function a(e,t){var r;if((r=n(e))!==t)throw new Error("Expected '"+t+"', got '"+r+"' instead.");return e.shift()}function o(e,t){return e[0]===t?e.shift():null}function s(e){var t;return t=i(e),a(e,":"),[t,l(e)]}function u(e){switch(e[0]){case"[":return function(e){var t;if(a(e,"["),"]"===n(e))throw new Error("Must specify type of Array - eg. [Type], got [] instead.");return t=l(e),a(e,"]"),{structure:"array",of:t}}(e);case"(":return function(e){var t;if(t=[],a(e,"("),")"===n(e))throw new Error("Tuple must be of at least length 1 - eg. (Type), got () instead.");for(;t.push(l(e)),o(e,","),")"!==n(e););return a(e,")"),{structure:"tuple",of:t}}(e);case"{":return function(e){var t,r,i,u,c;for(t={},a(e,"{"),r=!1;;){if(o(e,"...")){r=!0;break}if(u=(i=s(e))[0],c=i[1],t[u]=c,o(e,","),"}"===n(e))break}return a(e,"}"),{structure:"fields",of:t,subset:r}}(e)}}function c(t){var r,o,s,c;if((o="*"===(r=n(t)))||e.test(r))return s=o?a(t,"*"):i(t),(c=u(t))?(c.type=s,c):{type:s};if(!(c=u(t)))throw new Error("Unexpected character: "+r);return c}function l(e){var t,r,i,a,s;if("::"===n(e))throw new Error("No comment before comment separator '::' found.");for(null!=(t=e[1])&&"::"===t&&(e.shift(),e.shift()),r=[],i={},"Maybe"===n(e)&&(e.shift(),r=[{type:"Undefined"},{type:"Null"}],i={Undefined:!0,Null:!0});i[s=(a=c(e)).type]||r.push(a),i[s]=!0,o(e,"|"););return r}e=/[\$\w]+/,r=RegExp("\\.\\.\\.|::|->|"+e.source+"|\\S","g"),t.exports=function(e){var t;if(!e.length)throw new Error("No type specified.");if(function(e,t){var r=-1,n=t.length>>>0;for(;++r<n;)if(e===t[r])return !0;return !1}("->",t=e.match(r)||[]))throw new Error("Function types are not supported. To validate that something is a function, you may use 'Function'.");try{return l(t)}catch(r){throw new Error(r.message+" - Remaining tokens: "+JSON.stringify(t)+" - Initial input: '"+e+"'")}};}).call(e);})),SC=r((function(t){(function(){var e,r,n,i,a,o,s,u={}.toString;function c(e,t){if(!(e instanceof Object))return !1;switch(t.structure){case"fields":return function(e,t){var r,n,i,a,o,s,u;for(i in r={},n=0,e)r[i]=!0,n++;for(o in a=0,s=t.of){if(u=s[o],!p(e[o],u))return !1;r[o]&&a++;}return t.subset||n===a}(e,t);case"array":return function(e,t){return n((function(e){return p(e,t.of)}),e)}(e,t);case"tuple":return function(e,t){var r,n,i,a,o;for(r=0,n=0,a=(i=t.of).length;n<a;++n){if(o=i[n],!p(e[r],o))return !1;r++;}return e.length<=r}(e,t)}}function l(e,t){var r,n,i,l;if(r=t.type,n=t.structure,r)return "*"===r||((i=s[r]||a[r])?i.typeOf===u.call(e).slice(8,-1)&&i.validate(e):r===u.call(e).slice(8,-1)&&(!n||c(e,t)));if(n)return (!(l=o[n])||l===u.call(e).slice(8,-1))&&c(e,t);throw new Error("No type defined. Input: "+e+".")}function p(e,t){if("Array"!==u.call(t).slice(8,-1))throw new Error("Types must be in an array. Input: "+e+".");return r((function(t){return l(e,t)}),t)}r=(e=xC).any,n=e.all,i=e.isItNaN,a={Number:{typeOf:"Number",validate:function(e){return !i(e)}},NaN:{typeOf:"Number",validate:i},Int:{typeOf:"Number",validate:function(e){return !i(e)&&e%1==0}},Float:{typeOf:"Number",validate:function(e){return !i(e)}},Date:{typeOf:"Date",validate:function(e){return !i(e.getTime())}}},o={array:"Array",tuple:"Array"},t.exports=function(e,t,r){return null==r&&(r={}),s=r.customTypes||{},p(t,e)};}).call(e);})),kC=r((function(t){(function(){var e,r,n;e=CC,r=SC,n=function(t,n,i){return r(e(t),n,i)},t.exports={VERSION:"0.3.2",typeCheck:n,parsedTypeCheck:r,parseType:e};}).call(e);})),DC=(kC.VERSION,kC.typeCheck,kC.parsedTypeCheck,kC.parseType,r((function(t){(function(){var e,r,n={}.toString;function i(e,t,r){var i,a;return "Array"!==n.call(e).slice(8,-1)?{type:"Nothing"}:(i=t.of,{type:"Just",value:function(){var t,n,o,u=[];for(t=0,o=(n=e).length;t<o;++t)a=n[t],u.push(s(a,i,r));return u}()})}function a(e,t,r){var i,a,o;return "Object"!==n.call(e).slice(8,-1)?{type:"Nothing"}:(i=t.of,{type:"Just",value:function(){var t,n={};for(a in t=e)o=t[a],n[s(a,[{type:"String"}],r)]=s(o,i[a]||[{type:"*"}],r);return n}()})}function o(e,t,o){var u,c,l,p;if(u=t.type,c=t.structure,u){if(!(l=(null!=(p=o.customTypes[u])?p.cast:void 0)||r[u]))throw new Error("Type not defined: "+u+".");return l(e,o,s)}switch(c){case"array":return i(e,t,o);case"tuple":return function(e,t,r){var i,a,o,u,c,l,p;if("Array"!==n.call(e).slice(8,-1))return {type:"Nothing"};for(i=[],a=0,o=0,c=(u=t.of).length;o<c;++o)l=u[o],p=s(e[a],l,r),"Undefined"!==n.call(p).slice(8,-1)&&i.push(p),a++;return e.length<=a?{type:"Just",value:i}:{type:"Nothing"}}(e,t,o);case"fields":return a(e,t,o)}}function s(t,r,n){var i,a,s,u,c,l;for(i=0,a=r.length;i<a;++i)if(c=(u=o(t,s=r[i],n)).type,l=u.value,"Nothing"!==c&&e([s],l,{customTypes:n.customTypes}))return l;throw new Error("Value "+JSON.stringify(t)+" does not type check against "+JSON.stringify(r)+".")}e=kC.parsedTypeCheck,r={"*":function(e,t){switch(n.call(e).slice(8,-1)){case"Array":return o(e,{type:"Array"},t);case"Object":return o(e,{type:"Object"},t);default:return {type:"Just",value:s(e,[{type:"Undefined"},{type:"Null"},{type:"NaN"},{type:"Boolean"},{type:"Number"},{type:"Date"},{type:"RegExp"},{type:"Array"},{type:"Object"},{type:"String"}],(t.explicit=!0,t))}}},Undefined:function(e){return "undefined"===e||void 0===e?{type:"Just",value:void 0}:{type:"Nothing"}},Null:function(e){return "null"===e?{type:"Just",value:null}:{type:"Nothing"}},NaN:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){return "NaN"===e?{type:"Just",value:NaN}:{type:"Nothing"}})),Boolean:function(e){return "true"===e?{type:"Just",value:!0}:"false"===e?{type:"Just",value:!1}:{type:"Nothing"}},Number:function(e){return {type:"Just",value:+e}},Int:function(e){return {type:"Just",value:+e}},Float:function(e){return {type:"Just",value:+e}},Date:function(e){function t(t,r){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e,t){var r;return (r=/^\#([\s\S]*)\#$/.exec(e))?{type:"Just",value:new Date(+r[1]||r[1])}:t.explicit?{type:"Nothing"}:{type:"Just",value:new Date(+e||e)}})),RegExp:function(e){function t(t,r){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e,t){var r;return (r=/^\/([\s\S]*)\/([gimy]*)$/.exec(e))?{type:"Just",value:new RegExp(r[1],r[2])}:t.explicit?{type:"Nothing"}:{type:"Just",value:new RegExp(e)}})),Array:function(e,t){return i(e,{of:[{type:"*"}]},t)},Object:function(e,t){return a(e,{of:{}},t)},String:function(e){var t;return "String"!==n.call(e).slice(8,-1)?{type:"Nothing"}:(t=e.match(/^'([\s\S]*)'$/))?{type:"Just",value:t[1].replace(/\\'/g,"'")}:(t=e.match(/^"([\s\S]*)"$/))?{type:"Just",value:t[1].replace(/\\"/g,'"')}:{type:"Just",value:e}}},t.exports=s;}).call(e);}))),FC=r((function(t){(function(){var e,r,n,i,a;e=EC,r=DC,n=kC.parseType,i=function(t,n,i){return null==i&&(i={}),null==i.explicit&&(i.explicit=!1),null==i.customTypes&&(i.customTypes={}),r(e(t,n,i),t,i)},a=function(e,t,r){return i(n(e),t,r)},t.exports={VERSION:"0.3.0",parse:a,parsedTypeParse:i};}).call(e);})),AC=(FC.VERSION,FC.parse,FC.parsedTypeParse,r((function(t){var r=function(){function e(e){return '"'+e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g,escape)+'"'}var t={parse:function(t,r){var n={start:function(){var e,t,r,n,a,o="start@"+i,u=s[o];if(u)return i=u.nextPos,u.result;n=i,a=i,null!==(e=c())&&null!==(t=f())&&null!==(r=c())?e=[e,t,r]:(e=null,i=a);null!==e&&(l=e[1],e=1===l.length?l[0]:{type:"matches",selectors:l});var l;null===e&&(i=n);null===e&&(n=i,null!==(e=c())&&(e=void 0),null===e&&(i=n));return s[o]={nextPos:i,result:e},e},_:c,identifierName:l,binaryOp:p,selectors:f,selector:h,sequence:d,atom:m,wildcard:g,identifier:y,attr:v,attrOps:x,attrEqOps:b,attrName:E,attrValue:C,string:S,number:k,path:D,type:F,regex:A,field:w,negation:_,matches:T,has:P,firstChild:I,lastChild:B,nthChild:O,nthLastChild:L,class:N};if(void 0!==r){if(void 0===n[r])throw new Error("Invalid rule name: "+e(r)+".")}else r="start";var i=0,a=0,o=[],s={};function u(e){i<a||(i>a&&(a=i,o=[]),o.push(e));}function c(){var e,r,n="_@"+i,a=s[n];if(a)return i=a.nextPos,a.result;for(e=[],32===t.charCodeAt(i)?(r=" ",i++):(r=null,u('" "'));null!==r;)e.push(r),32===t.charCodeAt(i)?(r=" ",i++):(r=null,u('" "'));return s[n]={nextPos:i,result:e},e}function l(){var e,r,n,a="identifierName@"+i,o=s[a];if(o)return i=o.nextPos,o.result;if(n=i,/^[^ [\],():#!=><~+.]/.test(t.charAt(i))?(r=t.charAt(i),i++):(r=null,u("[^ [\\],():#!=><~+.]")),null!==r)for(e=[];null!==r;)e.push(r),/^[^ [\],():#!=><~+.]/.test(t.charAt(i))?(r=t.charAt(i),i++):(r=null,u("[^ [\\],():#!=><~+.]"));else e=null;return null!==e&&(e=function(e,t){return t.join("")}(0,e)),null===e&&(i=n),s[a]={nextPos:i,result:e},e}function p(){var e,r,n,a,o,l="binaryOp@"+i,p=s[l];return p?(i=p.nextPos,p.result):(a=i,o=i,null!==(e=c())?(62===t.charCodeAt(i)?(r=">",i++):(r=null,u('">"')),null!==r&&null!==(n=c())?e=[e,r,n]:(e=null,i=o)):(e=null,i=o),null!==e&&(e="child"),null===e&&(i=a),null===e&&(a=i,o=i,null!==(e=c())?(126===t.charCodeAt(i)?(r="~",i++):(r=null,u('"~"')),null!==r&&null!==(n=c())?e=[e,r,n]:(e=null,i=o)):(e=null,i=o),null!==e&&(e="sibling"),null===e&&(i=a),null===e&&(a=i,o=i,null!==(e=c())?(43===t.charCodeAt(i)?(r="+",i++):(r=null,u('"+"')),null!==r&&null!==(n=c())?e=[e,r,n]:(e=null,i=o)):(e=null,i=o),null!==e&&(e="adjacent"),null===e&&(i=a),null===e&&(a=i,o=i,32===t.charCodeAt(i)?(e=" ",i++):(e=null,u('" "')),null!==e&&null!==(r=c())?e=[e,r]:(e=null,i=o),null!==e&&(e="descendant"),null===e&&(i=a)))),s[l]={nextPos:i,result:e},e)}function f(){var e,r,n,a,o,l,p,f,d,m="selectors@"+i,g=s[m];if(g)return i=g.nextPos,g.result;if(p=i,f=i,null!==(e=h())){for(r=[],d=i,null!==(n=c())?(44===t.charCodeAt(i)?(a=",",i++):(a=null,u('","')),null!==a&&null!==(o=c())&&null!==(l=h())?n=[n,a,o,l]:(n=null,i=d)):(n=null,i=d);null!==n;)r.push(n),d=i,null!==(n=c())?(44===t.charCodeAt(i)?(a=",",i++):(a=null,u('","')),null!==a&&null!==(o=c())&&null!==(l=h())?n=[n,a,o,l]:(n=null,i=d)):(n=null,i=d);null!==r?e=[e,r]:(e=null,i=f);}else e=null,i=f;return null!==e&&(e=function(e,t,r){return [t].concat(r.map((function(e){return e[3]})))}(0,e[0],e[1])),null===e&&(i=p),s[m]={nextPos:i,result:e},e}function h(){var e,t,r,n,a,o,u,c,l="selector@"+i,f=s[l];if(f)return i=f.nextPos,f.result;if(a=i,o=i,null!==(e=d())){for(t=[],u=i,null!==(r=p())&&null!==(n=d())?r=[r,n]:(r=null,i=u);null!==r;)t.push(r),u=i,null!==(r=p())&&null!==(n=d())?r=[r,n]:(r=null,i=u);null!==t?e=[e,t]:(e=null,i=o);}else e=null,i=o;return null!==e&&(c=e[0],e=e[1].reduce((function(e,t){return {type:t[0],left:e,right:t[1]}}),c)),null===e&&(i=a),s[l]={nextPos:i,result:e},e}function d(){var e,r,n,a,o,c,l,p,f="sequence@"+i,h=s[f];if(h)return i=h.nextPos,h.result;if(a=i,o=i,33===t.charCodeAt(i)?(e="!",i++):(e=null,u('"!"')),null!==(e=null!==e?e:"")){if(null!==(n=m()))for(r=[];null!==n;)r.push(n),n=m();else r=null;null!==r?e=[e,r]:(e=null,i=o);}else e=null,i=o;return null!==e&&(c=e[0],l=e[1],p=1===l.length?l[0]:{type:"compound",selectors:l},c&&(p.subject=!0),e=p),null===e&&(i=a),s[f]={nextPos:i,result:e},e}function m(){var e,t="atom@"+i,r=s[t];return r?(i=r.nextPos,r.result):(null===(e=g())&&null===(e=y())&&null===(e=v())&&null===(e=w())&&null===(e=_())&&null===(e=T())&&null===(e=P())&&null===(e=I())&&null===(e=B())&&null===(e=O())&&null===(e=L())&&(e=N()),s[t]={nextPos:i,result:e},e)}function g(){var e,r,n="wildcard@"+i,a=s[n];return a?(i=a.nextPos,a.result):(r=i,42===t.charCodeAt(i)?(e="*",i++):(e=null,u('"*"')),null!==e&&(e={type:"wildcard",value:e}),null===e&&(i=r),s[n]={nextPos:i,result:e},e)}function y(){var e,r,n,a,o="identifier@"+i,c=s[o];return c?(i=c.nextPos,c.result):(n=i,a=i,35===t.charCodeAt(i)?(e="#",i++):(e=null,u('"#"')),null!==(e=null!==e?e:"")&&null!==(r=l())?e=[e,r]:(e=null,i=a),null!==e&&(e=function(e,t){return {type:"identifier",value:t}}(0,e[1])),null===e&&(i=n),s[o]={nextPos:i,result:e},e)}function v(){var e,r,n,a,o,l,p,f="attr@"+i,h=s[f];return h?(i=h.nextPos,h.result):(l=i,p=i,91===t.charCodeAt(i)?(e="[",i++):(e=null,u('"["')),null!==e&&null!==(r=c())&&null!==(n=C())&&null!==(a=c())?(93===t.charCodeAt(i)?(o="]",i++):(o=null,u('"]"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p),null!==e&&(e=e[2]),null===e&&(i=l),s[f]={nextPos:i,result:e},e)}function x(){var e,r,n,a,o="attrOps@"+i,c=s[o];return c?(i=c.nextPos,c.result):(n=i,a=i,/^[><!]/.test(t.charAt(i))?(e=t.charAt(i),i++):(e=null,u("[><!]")),null!==(e=null!==e?e:"")?(61===t.charCodeAt(i)?(r="=",i++):(r=null,u('"="')),null!==r?e=[e,r]:(e=null,i=a)):(e=null,i=a),null!==e&&(e=e[0]+"="),null===e&&(i=n),null===e&&(/^[><]/.test(t.charAt(i))?(e=t.charAt(i),i++):(e=null,u("[><]"))),s[o]={nextPos:i,result:e},e)}function b(){var e,r,n,a,o="attrEqOps@"+i,c=s[o];return c?(i=c.nextPos,c.result):(n=i,a=i,33===t.charCodeAt(i)?(e="!",i++):(e=null,u('"!"')),null!==(e=null!==e?e:"")?(61===t.charCodeAt(i)?(r="=",i++):(r=null,u('"="')),null!==r?e=[e,r]:(e=null,i=a)):(e=null,i=a),null!==e&&(e=e[0]+"="),null===e&&(i=n),s[o]={nextPos:i,result:e},e)}function E(){var e,r,n,a="attrName@"+i,o=s[a];if(o)return i=o.nextPos,o.result;if(n=i,null===(r=l())&&(46===t.charCodeAt(i)?(r=".",i++):(r=null,u('"."'))),null!==r)for(e=[];null!==r;)e.push(r),null===(r=l())&&(46===t.charCodeAt(i)?(r=".",i++):(r=null,u('"."')));else e=null;return null!==e&&(e=function(e,t){return t.join("")}(0,e)),null===e&&(i=n),s[a]={nextPos:i,result:e},e}function C(){var e,t,r,n,a,o,u,l="attrValue@"+i,p=s[l];return p?(i=p.nextPos,p.result):(o=i,u=i,null!==(e=E())&&null!==(t=c())&&null!==(r=b())&&null!==(n=c())?(null===(a=F())&&(a=A()),null!==a?e=[e,t,r,n,a]:(e=null,i=u)):(e=null,i=u),null!==e&&(e=function(e,t,r,n){return {type:"attribute",name:t,operator:r,value:n}}(0,e[0],e[2],e[4])),null===e&&(i=o),null===e&&(o=i,u=i,null!==(e=E())&&null!==(t=c())&&null!==(r=x())&&null!==(n=c())?(null===(a=S())&&null===(a=k())&&(a=D()),null!==a?e=[e,t,r,n,a]:(e=null,i=u)):(e=null,i=u),null!==e&&(e=function(e,t,r,n){return {type:"attribute",name:t,operator:r,value:n}}(0,e[0],e[2],e[4])),null===e&&(i=o),null===e&&(o=i,null!==(e=E())&&(e=function(e,t){return {type:"attribute",name:t}}(0,e)),null===e&&(i=o))),s[l]={nextPos:i,result:e},e)}function S(){var e,r,n,a,o,c,l,p,f,h,d="string@"+i,m=s[d];if(m)return i=m.nextPos,m.result;if(o=i,c=i,34===t.charCodeAt(i)?(e='"',i++):(e=null,u('"\\""')),null!==e){for(r=[],/^[^\\"]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u('[^\\\\"]')),null===n&&(l=i,p=i,92===t.charCodeAt(i)?(n="\\",i++):(n=null,u('"\\\\"')),null!==n?(t.length>i?(a=t.charAt(i),i++):(a=null,u("any character")),null!==a?n=[n,a]:(n=null,i=p)):(n=null,i=p),null!==n&&(f=n[0],h=n[1],n=f+h),null===n&&(i=l));null!==n;)r.push(n),/^[^\\"]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u('[^\\\\"]')),null===n&&(l=i,p=i,92===t.charCodeAt(i)?(n="\\",i++):(n=null,u('"\\\\"')),null!==n?(t.length>i?(a=t.charAt(i),i++):(a=null,u("any character")),null!==a?n=[n,a]:(n=null,i=p)):(n=null,i=p),null!==n&&(n=function(e,t,r){return t+r}(0,n[0],n[1])),null===n&&(i=l));null!==r?(34===t.charCodeAt(i)?(n='"',i++):(n=null,u('"\\""')),null!==n?e=[e,r,n]:(e=null,i=c)):(e=null,i=c);}else e=null,i=c;if(null!==e&&(e=function(e,t){return {type:"literal",value:M(t.join(""))}}(0,e[1])),null===e&&(i=o),null===e){if(o=i,c=i,39===t.charCodeAt(i)?(e="'",i++):(e=null,u('"\'"')),null!==e){for(r=[],/^[^\\']/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[^\\\\']")),null===n&&(l=i,p=i,92===t.charCodeAt(i)?(n="\\",i++):(n=null,u('"\\\\"')),null!==n?(t.length>i?(a=t.charAt(i),i++):(a=null,u("any character")),null!==a?n=[n,a]:(n=null,i=p)):(n=null,i=p),null!==n&&(n=function(e,t,r){return t+r}(0,n[0],n[1])),null===n&&(i=l));null!==n;)r.push(n),/^[^\\']/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[^\\\\']")),null===n&&(l=i,p=i,92===t.charCodeAt(i)?(n="\\",i++):(n=null,u('"\\\\"')),null!==n?(t.length>i?(a=t.charAt(i),i++):(a=null,u("any character")),null!==a?n=[n,a]:(n=null,i=p)):(n=null,i=p),null!==n&&(n=function(e,t,r){return t+r}(0,n[0],n[1])),null===n&&(i=l));null!==r?(39===t.charCodeAt(i)?(n="'",i++):(n=null,u('"\'"')),null!==n?e=[e,r,n]:(e=null,i=c)):(e=null,i=c);}else e=null,i=c;null!==e&&(e=function(e,t){return {type:"literal",value:M(t.join(""))}}(0,e[1])),null===e&&(i=o);}return s[d]={nextPos:i,result:e},e}function k(){var e,r,n,a,o,c,l,p,f="number@"+i,h=s[f];if(h)return i=h.nextPos,h.result;for(a=i,o=i,c=i,e=[],/^[0-9]/.test(t.charAt(i))?(r=t.charAt(i),i++):(r=null,u("[0-9]"));null!==r;)e.push(r),/^[0-9]/.test(t.charAt(i))?(r=t.charAt(i),i++):(r=null,u("[0-9]"));if(null!==e?(46===t.charCodeAt(i)?(r=".",i++):(r=null,u('"."')),null!==r?e=[e,r]:(e=null,i=c)):(e=null,i=c),null!==(e=null!==e?e:"")){if(/^[0-9]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[0-9]")),null!==n)for(r=[];null!==n;)r.push(n),/^[0-9]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[0-9]"));else r=null;null!==r?e=[e,r]:(e=null,i=o);}else e=null,i=o;return null!==e&&(l=e[0],p=e[1],e={type:"literal",value:parseFloat((l?l.join(""):"")+p.join(""))}),null===e&&(i=a),s[f]={nextPos:i,result:e},e}function D(){var e,t,r="path@"+i,n=s[r];return n?(i=n.nextPos,n.result):(t=i,null!==(e=l())&&(e=function(e,t){return {type:"literal",value:t}}(0,e)),null===e&&(i=t),s[r]={nextPos:i,result:e},e)}function F(){var e,r,n,a,o,l,p,f="type@"+i,h=s[f];if(h)return i=h.nextPos,h.result;if(l=i,p=i,"type("===t.substr(i,5)?(e="type(",i+=5):(e=null,u('"type("')),null!==e)if(null!==(r=c())){if(/^[^ )]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[^ )]")),null!==a)for(n=[];null!==a;)n.push(a),/^[^ )]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[^ )]"));else n=null;null!==n&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p);}else e=null,i=p;else e=null,i=p;return null!==e&&(e={type:"type",value:e[2].join("")}),null===e&&(i=l),s[f]={nextPos:i,result:e},e}function A(){var e,r,n,a,o,c="regex@"+i,l=s[c];if(l)return i=l.nextPos,l.result;if(a=i,o=i,47===t.charCodeAt(i)?(e="/",i++):(e=null,u('"/"')),null!==e){if(/^[^\/]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[^\\/]")),null!==n)for(r=[];null!==n;)r.push(n),/^[^\/]/.test(t.charAt(i))?(n=t.charAt(i),i++):(n=null,u("[^\\/]"));else r=null;null!==r?(47===t.charCodeAt(i)?(n="/",i++):(n=null,u('"/"')),null!==n?e=[e,r,n]:(e=null,i=o)):(e=null,i=o);}else e=null,i=o;return null!==e&&(e=function(e,t){return {type:"regexp",value:new RegExp(t.join(""))}}(0,e[1])),null===e&&(i=a),s[c]={nextPos:i,result:e},e}function w(){var e,r,n,a,o,c,p,f,h="field@"+i,d=s[h];if(d)return i=d.nextPos,d.result;if(c=i,p=i,46===t.charCodeAt(i)?(e=".",i++):(e=null,u('"."')),null!==e)if(null!==(r=l())){for(n=[],f=i,46===t.charCodeAt(i)?(a=".",i++):(a=null,u('"."')),null!==a&&null!==(o=l())?a=[a,o]:(a=null,i=f);null!==a;)n.push(a),f=i,46===t.charCodeAt(i)?(a=".",i++):(a=null,u('"."')),null!==a&&null!==(o=l())?a=[a,o]:(a=null,i=f);null!==n?e=[e,r,n]:(e=null,i=p);}else e=null,i=p;else e=null,i=p;return null!==e&&(e=function(e,t,r){return {type:"field",name:r.reduce((function(e,t){return e+t[0]+t[1]}),t)}}(0,e[1],e[2])),null===e&&(i=c),s[h]={nextPos:i,result:e},e}function _(){var e,r,n,a,o,l,p,h="negation@"+i,d=s[h];return d?(i=d.nextPos,d.result):(l=i,p=i,":not("===t.substr(i,5)?(e=":not(",i+=5):(e=null,u('":not("')),null!==e&&null!==(r=c())&&null!==(n=f())&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p),null!==e&&(e={type:"not",selectors:e[2]}),null===e&&(i=l),s[h]={nextPos:i,result:e},e)}function T(){var e,r,n,a,o,l,p,h="matches@"+i,d=s[h];return d?(i=d.nextPos,d.result):(l=i,p=i,":matches("===t.substr(i,9)?(e=":matches(",i+=9):(e=null,u('":matches("')),null!==e&&null!==(r=c())&&null!==(n=f())&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p),null!==e&&(e={type:"matches",selectors:e[2]}),null===e&&(i=l),s[h]={nextPos:i,result:e},e)}function P(){var e,r,n,a,o,l,p,h="has@"+i,d=s[h];return d?(i=d.nextPos,d.result):(l=i,p=i,":has("===t.substr(i,5)?(e=":has(",i+=5):(e=null,u('":has("')),null!==e&&null!==(r=c())&&null!==(n=f())&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p),null!==e&&(e={type:"has",selectors:e[2]}),null===e&&(i=l),s[h]={nextPos:i,result:e},e)}function I(){var e,r,n="firstChild@"+i,a=s[n];return a?(i=a.nextPos,a.result):(r=i,":first-child"===t.substr(i,12)?(e=":first-child",i+=12):(e=null,u('":first-child"')),null!==e&&(e=j(1)),null===e&&(i=r),s[n]={nextPos:i,result:e},e)}function B(){var e,r,n="lastChild@"+i,a=s[n];return a?(i=a.nextPos,a.result):(r=i,":last-child"===t.substr(i,11)?(e=":last-child",i+=11):(e=null,u('":last-child"')),null!==e&&(e=R(1)),null===e&&(i=r),s[n]={nextPos:i,result:e},e)}function O(){var e,r,n,a,o,l,p,f,h="nthChild@"+i,d=s[h];if(d)return i=d.nextPos,d.result;if(l=i,p=i,":nth-child("===t.substr(i,11)?(e=":nth-child(",i+=11):(e=null,u('":nth-child("')),null!==e)if(null!==(r=c())){if(/^[0-9]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[0-9]")),null!==a)for(n=[];null!==a;)n.push(a),/^[0-9]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[0-9]"));else n=null;null!==n&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p);}else e=null,i=p;else e=null,i=p;return null!==e&&(f=e[2],e=j(parseInt(f.join(""),10))),null===e&&(i=l),s[h]={nextPos:i,result:e},e}function L(){var e,r,n,a,o,l,p,f,h="nthLastChild@"+i,d=s[h];if(d)return i=d.nextPos,d.result;if(l=i,p=i,":nth-last-child("===t.substr(i,16)?(e=":nth-last-child(",i+=16):(e=null,u('":nth-last-child("')),null!==e)if(null!==(r=c())){if(/^[0-9]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[0-9]")),null!==a)for(n=[];null!==a;)n.push(a),/^[0-9]/.test(t.charAt(i))?(a=t.charAt(i),i++):(a=null,u("[0-9]"));else n=null;null!==n&&null!==(a=c())?(41===t.charCodeAt(i)?(o=")",i++):(o=null,u('")"')),null!==o?e=[e,r,n,a,o]:(e=null,i=p)):(e=null,i=p);}else e=null,i=p;else e=null,i=p;return null!==e&&(f=e[2],e=R(parseInt(f.join(""),10))),null===e&&(i=l),s[h]={nextPos:i,result:e},e}function N(){var e,r,n,a,o="class@"+i,c=s[o];return c?(i=c.nextPos,c.result):(n=i,a=i,58===t.charCodeAt(i)?(e=":",i++):(e=null,u('":"')),null!==e?("statement"===t.substr(i,9).toLowerCase()?(r=t.substr(i,9),i+=9):(r=null,u('"statement"')),null===r&&("expression"===t.substr(i,10).toLowerCase()?(r=t.substr(i,10),i+=10):(r=null,u('"expression"')),null===r&&("declaration"===t.substr(i,11).toLowerCase()?(r=t.substr(i,11),i+=11):(r=null,u('"declaration"')),null===r&&("function"===t.substr(i,8).toLowerCase()?(r=t.substr(i,8),i+=8):(r=null,u('"function"')),null===r&&("pattern"===t.substr(i,7).toLowerCase()?(r=t.substr(i,7),i+=7):(r=null,u('"pattern"')))))),null!==r?e=[e,r]:(e=null,i=a)):(e=null,i=a),null!==e&&(e={type:"class",name:e[1]}),null===e&&(i=n),s[o]={nextPos:i,result:e},e)}function j(e){return {type:"nth-child",index:{type:"literal",value:e}}}function R(e){return {type:"nth-last-child",index:{type:"literal",value:e}}}function M(e){return e.replace(/\\(.)/g,(function(e,t){switch(t){case"a":return "a";case"b":return "\b";case"f":return "\f";case"n":return "\n";case"r":return "\r";case"t":return "\t";case"v":return "\v";default:return t}}))}var V=n[r]();if(null===V||i!==t.length){var U=Math.max(i,a),q=U<t.length?t.charAt(U):null,W=function(){for(var e=1,r=1,n=!1,o=0;o<Math.max(i,a);o++){var s=t.charAt(o);"\n"===s?(n||e++,r=1,n=!1):"\r"===s||"\u2028"===s||"\u2029"===s?(e++,r=1,n=!0):(r++,n=!1);}return {line:e,column:r}}();throw new this.SyntaxError(function(e){e.sort();for(var t=null,r=[],n=0;n<e.length;n++)e[n]!==t&&(r.push(e[n]),t=e[n]);return r}(o),q,U,W.line,W.column)}return V},toSource:function(){return this._source},SyntaxError:function(t,r,n,i,a){this.name="SyntaxError",this.expected=t,this.found=r,this.message=function(t,r){var n;switch(t.length){case 0:n="end of input";break;case 1:n=t[0];break;default:n=t.slice(0,t.length-1).join(", ")+" or "+t[t.length-1];}return "Expected "+n+" but "+(r?e(r):"end of input")+" found."}(t,r),this.offset=n,this.line=i,this.column=a;}};return t.SyntaxError.prototype=Error.prototype,t}();t.exports?t.exports=r:e.esquery=r;}))),wC=r((function(e){!function(){var t=Zu,r=AC,n=Array.isArray||function(e){return "[object Array]"==={}.toString.call(e)},a={},o={};function s(){function e(t,r,i){var a,o,s;if(0===i.length)return t===r;if(null==r)return !1;if(a=r[i[0]],o=i.slice(1),n(a)){for(s=0,l=a.length;s<l;++s)if(e(t,a[s],o))return !0;return !1}return e(t,a,o)}function s(r,n,l){var f,h,d,m;if(!n)return !0;if(!r)return !1;switch(l||(l=[]),n.type){case"wildcard":return !0;case"identifier":return n.value.toLowerCase()===r.type.toLowerCase();case"field":return e(r,l[(f=n.name.split(".")).length-1],f);case"matches":for(h=0,d=n.selectors.length;h<d;++h)if(s(r,n.selectors[h],l))return !0;return !1;case"compound":for(h=0,d=n.selectors.length;h<d;++h)if(!s(r,n.selectors[h],l))return !1;return !0;case"not":for(h=0,d=n.selectors.length;h<d;++h)if(s(r,n.selectors[h],l))return !1;return !0;case"has":var g,y=[];for(h=0,d=n.selectors.length;h<d;++h)g=[],t.traverse(r,{enter:function(e,t){null!=t&&g.unshift(t),s(e,n.selectors[h],g)&&y.push(e);},leave:function(){g.shift();}});return 0!==y.length;case"child":return !!s(r,n.right,l)&&s(l[0],n.left,l.slice(1));case"descendant":if(s(r,n.right,l))for(h=0,d=l.length;h<d;++h)if(s(l[h],n.left,l.slice(h+1)))return !0;return !1;case"attribute":switch(m=function(e,t){var r,n=t.split(".");for(r=0;r<n.length;r++){if(null==e)return e;e=e[n[r]];}return e}(r,n.name),n.operator){case null:case void 0:return null!=m;case"=":switch(n.value.type){case"regexp":return "string"==typeof m&&n.value.value.test(m);case"literal":return ""+n.value.value==""+m;case"type":return n.value.value===i(m)}case"!=":switch(n.value.type){case"regexp":return !n.value.value.test(m);case"literal":return ""+n.value.value!=""+m;case"type":return n.value.value!==i(m)}case"<=":return m<=n.value.value;case"<":return m<n.value.value;case">":return m>n.value.value;case">=":return m>=n.value.value}case"sibling":return s(r,n.right,l)&&u(r,n.left,l,a)||n.left.subject&&s(r,n.left,l)&&u(r,n.right,l,o);case"adjacent":return s(r,n.right,l)&&c(r,n.left,l,a)||n.right.subject&&s(r,n.left,l)&&c(r,n.right,l,o);case"nth-child":return s(r,n.right,l)&&p(r,l,(function(e){return n.index.value-1}));case"nth-last-child":return s(r,n.right,l)&&p(r,l,(function(e){return e-n.index.value}));case"class":if(!r.type)return !1;switch(n.name.toLowerCase()){case"statement":if("Statement"===r.type.slice(-9))return !0;case"declaration":return "Declaration"===r.type.slice(-11);case"pattern":if("Pattern"===r.type.slice(-7))return !0;case"expression":return "Expression"===r.type.slice(-10)||"Literal"===r.type.slice(-7)||"Identifier"===r.type&&(0===l.length||"MetaProperty"!==l[0].type)||"MetaProperty"===r.type;case"function":return "Function"===r.type.slice(0,8)||"ArrowFunctionExpression"===r.type}throw new Error("Unknown class name: "+n.name)}throw new Error("Unknown selector type: "+n.type)}function u(e,r,i,o){var u,c,l,p,f,h,d,m,g=i[0];if(!g)return !1;for(p=0,f=(l=t.VisitorKeys[g.type]).length;p<f;++p)if(u=g[l[p]],n(u)){if((c=u.indexOf(e))<0)continue;for(o===a?(d=0,m=c):(d=c+1,m=u.length),h=d;h<m;++h)if(s(u[h],r,i))return !0}return !1}function c(e,r,i,u){var c,l,p,f,h,d=i[0];if(!d)return !1;for(p=0,f=(l=t.VisitorKeys[d.type]).length;p<f;++p)if(c=d[l[p]],n(c)){if((h=c.indexOf(e))<0)continue;if(u===a&&h>0&&s(c[h-1],r,i))return !0;if(u===o&&h<c.length-1&&s(c[h+1],r,i))return !0}return !1}function p(e,r,i){var a,o,s,u,c,l=r[0];if(!l)return !1;for(s=0,u=(o=t.VisitorKeys[l.type]).length;s<u;++s)if(a=l[o[s]],n(a)&&(c=a.indexOf(e))>=0&&c===i(a.length))return !0;return !1}function f(e,r){var n,a,o,u,c,l=[],p=[];return r?(n=function e(t,r){var n,a;if(null==t||"object"!=i(t))return [];for(a in null==r&&(r=t),n=t.subject?[r]:[],t)({}).hasOwnProperty.call(t,a)&&[].push.apply(n,e(t[a],"left"===a?t[a]:r));return n}(r),t.traverse(e,{enter:function(e,t){if(null!=t&&l.unshift(t),s(e,r,l))if(n.length)for(a=0,o=n.length;a<o;++a)for(s(e,n[a],l)&&p.push(e),u=0,c=l.length;u<c;++u)s(l[u],n[a],l.slice(u+1))&&p.push(l[u]);else p.push(e);},leave:function(){l.shift();}}),p):p}function h(e){return r.parse(e)}function d(e,t){return f(e,h(t))}return d.parse=h,d.match=f,d.matches=s,d.query=d}e.exports?e.exports=s():this.esquery=s();}();})),_C=n(Zx);function TC(e){return e&&"object"==i(e)&&"default"in e?e.default:e}var PC=TC(Ws),IC=TC(Qc),BC=TC(Cu),OC=TC(Ox),LC=TC(_C),NC=TC(Pu),jC=TC(FC),RC=TC(wC);var MC,VC=function(e,t){for(var r={},n=0,i=Object.entries(e);n<i.length;n++){var a=b(i[n],2),o=a[0],s=a[1];Object.hasOwnProperty.call(t,o)||(r[o]=s);}return r}(Fy.globals.es2015,Fy.globals.es5),UC={Atomics:!1,SharedArrayBuffer:!1},qC=new Map(Object.entries({builtin:{globals:Fy.globals.es5},es6:{globals:VC,parserOptions:{ecmaVersion:6}},es2015:{globals:VC,parserOptions:{ecmaVersion:6}},es2017:{globals:p({},VC,{},UC),parserOptions:{ecmaVersion:8}},es2020:{globals:p({},VC,{},UC,{},{BigInt:!1,BigInt64Array:!1,BigUint64Array:!1}),parserOptions:{ecmaVersion:11}},browser:{globals:Fy.globals.browser},node:{globals:Fy.globals.node,parserOptions:{ecmaFeatures:{globalReturn:!0}}},"shared-node-browser":{globals:Fy.globals["shared-node-browser"]},worker:{globals:Fy.globals.worker},serviceworker:{globals:Fy.globals.serviceworker},commonjs:{globals:Fy.globals.commonjs,parserOptions:{ecmaFeatures:{globalReturn:!0}}},amd:{globals:Fy.globals.amd},mocha:{globals:Fy.globals.mocha},jasmine:{globals:Fy.globals.jasmine},jest:{globals:Fy.globals.jest},phantomjs:{globals:Fy.globals.phantomjs},jquery:{globals:Fy.globals.jquery},qunit:{globals:Fy.globals.qunit},prototypejs:{globals:Fy.globals.prototypejs},shelljs:{globals:Fy.globals.shelljs},meteor:{globals:Fy.globals.meteor},mongo:{globals:Fy.globals.mongo},protractor:{globals:Fy.globals.protractor},applescript:{globals:Fy.globals.applescript},nashorn:{globals:Fy.globals.nashorn},atomtest:{globals:Fy.globals.atomtest},embertest:{globals:Fy.globals.embertest},webextensions:{globals:Fy.globals.webextensions},greasemonkey:{globals:Fy.globals.greasemonkey}})),WC="eslint@6.7.1",$C="sha512-UWzBS79pNcsDSxgxbdjkmzn/B6BhsXMfUaOHnNwyE8nD+Q6pyT96ow2MccVayUTV4yMid4qLhMiQaywctRkBLA==",GC={},zC={type:"range",registry:!0,raw:"eslint@^6.0.0",name:"eslint",escapedName:"eslint",rawSpec:"^6.0.0",saveSpec:null,fetchSpec:"^6.0.0"},HC=["#DEV:/"],KC="https://registry.npmjs.org/eslint/-/eslint-6.7.1.tgz",JC="269ccccec3ef60ab32358a44d147ac209154b919",QC="/home/runner/work/eslint4b/eslint4b",XC={name:"Nicholas C. Zakas",email:"nicholas+npm@nczconsulting.com"},YC={eslint:"./bin/eslint.js"},ZC={url:"https://github.com/eslint/eslint/issues/"},eS={"@babel/code-frame":"^7.0.0",ajv:"^6.10.0",chalk:"^2.1.0","cross-spawn":"^6.0.5",debug:"^4.0.1",doctrine:"^3.0.0","eslint-scope":"^5.0.0","eslint-utils":"^1.4.3","eslint-visitor-keys":"^1.1.0",espree:"^6.1.2",esquery:"^1.0.1",esutils:"^2.0.2","file-entry-cache":"^5.0.1","functional-red-black-tree":"^1.0.1","glob-parent":"^5.0.0",globals:"^12.1.0",ignore:"^4.0.6","import-fresh":"^3.0.0",imurmurhash:"^0.1.4",inquirer:"^7.0.0","is-glob":"^4.0.0","js-yaml":"^3.13.1","json-stable-stringify-without-jsonify":"^1.0.1",levn:"^0.3.0",lodash:"^4.17.14",minimatch:"^3.0.4",mkdirp:"^0.5.1","natural-compare":"^1.4.0",optionator:"^0.8.3",progress:"^2.0.0",regexpp:"^2.0.1",semver:"^6.1.2","strip-ansi":"^5.2.0","strip-json-comments":"^3.0.1",table:"^5.2.3","text-table":"^0.2.0","v8-compile-cache":"^2.0.3"},tS="An AST-based pattern checker for JavaScript.",rS={"@babel/core":"^7.4.3","@babel/preset-env":"^7.4.3",acorn:"^7.1.0","babel-loader":"^8.0.5",chai:"^4.0.1",cheerio:"^0.22.0","common-tags":"^1.8.0","core-js":"^3.1.3",dateformat:"^3.0.3",ejs:"^2.6.1",eslint:"file:.","eslint-config-eslint":"file:packages/eslint-config-eslint","eslint-plugin-eslint-plugin":"^2.0.1","eslint-plugin-internal-rules":"file:tools/internal-rules","eslint-plugin-jsdoc":"^15.9.5","eslint-plugin-node":"^9.0.0","eslint-release":"^1.2.0",eslump:"^2.0.0",esprima:"^4.0.1",glob:"^7.1.3",jsdoc:"^3.5.5",karma:"^4.0.1","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.3","karma-webpack":"^4.0.0-rc.6",leche:"^2.2.3","lint-staged":"^8.1.5","load-perf":"^0.2.0",markdownlint:"^0.15.0","markdownlint-cli":"^0.17.0","metro-memory-fs":"^0.54.1",mocha:"^6.1.2","mocha-junit-reporter":"^1.23.0","npm-license":"^0.3.3",nyc:"^14.1.1",proxyquire:"^2.0.1",puppeteer:"^1.18.0",recast:"^0.18.1","regenerator-runtime":"^0.13.2",shelljs:"^0.8.2",sinon:"^7.3.2",temp:"^0.9.0",webpack:"^4.35.0","webpack-cli":"^3.3.5",yorkie:"^2.0.0"},nS={node:"^8.10.0 || ^10.13.0 || >=11.10.1"},iS=["LICENSE","README.md","bin","conf","lib","messages"],aS="https://opencollective.com/eslint",oS={"pre-commit":"lint-staged"},sS=["ast","lint","javascript","ecmascript","espree"],uS={type:"git",url:"git+https://github.com/eslint/eslint.git"},cS={docs:"node Makefile.js docs",fix:"node Makefile.js lint -- fix",fuzz:"node Makefile.js fuzz","generate-alpharelease":"node Makefile.js generatePrerelease -- alpha","generate-betarelease":"node Makefile.js generatePrerelease -- beta","generate-rcrelease":"node Makefile.js generatePrerelease -- rc","generate-release":"node Makefile.js generateRelease",gensite:"node Makefile.js gensite",lint:"node Makefile.js lint",perf:"node Makefile.js perf","publish-release":"node Makefile.js publishRelease",test:"node Makefile.js test","test:cli":"mocha",webpack:"node Makefile.js webpack"},lS={_from:"eslint@^6.0.0",_id:WC,_inBundle:!1,_integrity:$C,_location:"/eslint",_phantomChildren:GC,_requested:zC,_requiredBy:HC,_resolved:KC,_shasum:JC,_spec:"eslint@^6.0.0",_where:QC,author:XC,bin:YC,bugs:ZC,bundleDependencies:!1,dependencies:eS,deprecated:!1,description:tS,devDependencies:rS,engines:nS,files:iS,funding:aS,gitHooks:oS,homepage:"https://eslint.org",keywords:sS,license:"MIT","lint-staged":{"*.js":["eslint --fix","git add"],"*.md":"markdownlint"},main:"./lib/api.js",name:"eslint",repository:uS,scripts:cS,version:"6.7.1"},pS=Object.freeze({__proto__:null,_from:"eslint@^6.0.0",_id:WC,_inBundle:!1,_integrity:$C,_location:"/eslint",_phantomChildren:GC,_requested:zC,_requiredBy:HC,_resolved:KC,_shasum:JC,_spec:"eslint@^6.0.0",_where:QC,author:XC,bin:YC,bugs:ZC,bundleDependencies:!1,dependencies:eS,deprecated:!1,description:tS,devDependencies:rS,engines:nS,files:iS,funding:aS,gitHooks:oS,homepage:"https://eslint.org",keywords:sS,license:"MIT",main:"./lib/api.js",name:"eslint",repository:uS,scripts:cS,version:"6.7.1",default:lS}),fS=Fy.createCommonjsModule((function(e){var t=["off","warn","error"],r=t.reduce((function(e,t,r){return e[t]=r,e}),{}),n=[0,1,2,"off","warn","error"];e.exports={getRuleSeverity:function(e){var t=Array.isArray(e)?e[0]:e;return 0===t||1===t||2===t?t:"string"==typeof t&&r[t.toLowerCase()]||0},normalizeToStrings:function(e){e.rules&&Object.keys(e.rules).forEach((function(r){var n=e.rules[r];"number"==typeof n?e.rules[r]=t[n]||t[0]:Array.isArray(n)&&"number"==typeof n[0]&&(n[0]=t[n[0]]||t[0]);}));},isErrorSeverity:function(t){return 2===e.exports.getRuleSeverity(t)},isValidSeverity:function(e){var t=Array.isArray(e)?e[0]:e;return "string"==typeof t&&(t=t.toLowerCase()),-1!==n.indexOf(t)},isEverySeverityValid:function(e){var t=this;return Object.keys(e).every((function(r){return t.isValidSeverity(e[r])}))},normalizeConfigGlobal:function(e){switch(e){case"off":return "off";case!0:case"true":case"writeable":case"writable":return "writable";case null:case!1:case"false":case"readable":case"readonly":return "readonly";default:throw new Error("'".concat(e,"' is not a valid configuration for a global (use 'readonly', 'writable', or 'off')"))}}};})),hS=(fS.getRuleSeverity,fS.normalizeToStrings,fS.isErrorSeverity,fS.isValidSeverity,fS.isEverySeverityValid,fS.normalizeConfigGlobal,{env:{type:"object"},extends:{$ref:"#/definitions/stringOrStrings"},globals:{type:"object"},overrides:{type:"array",items:{$ref:"#/definitions/overrideConfig"},additionalItems:!1},parser:{type:["string","null"]},parserOptions:{type:"object"},plugins:{type:"array"},processor:{type:"string"},rules:{type:"object"},settings:{type:"object"},noInlineConfig:{type:"boolean"},reportUnusedDisableDirectives:{type:"boolean"},ecmaFeatures:{type:"object"}}),dS={definitions:{stringOrStrings:{oneOf:[{type:"string"},{type:"array",items:{type:"string"},additionalItems:!1}]},stringOrStringsRequired:{oneOf:[{type:"string"},{type:"array",items:{type:"string"},additionalItems:!1,minItems:1}]},objectConfig:{type:"object",properties:p({root:{type:"boolean"},ignorePatterns:{$ref:"#/definitions/stringOrStrings"}},hS),additionalProperties:!1},overrideConfig:{type:"object",properties:p({excludedFiles:{$ref:"#/definitions/stringOrStrings"},files:{$ref:"#/definitions/stringOrStringsRequired"}},hS),required:["files"],additionalProperties:!1}},$ref:"#/definitions/objectConfig"},mS=new Map,gS=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new OC(p({meta:!1,useDefaults:!0,validateSchema:!1,missingRefs:"ignore",verbose:!0,schemaId:"auto"},e));return t.addMetaSchema(LC),t._opts.defaultMeta=LC.id,t}(),yS=new WeakMap,vS=Function.prototype,xS={ESLINT_LEGACY_ECMAFEATURES:"The 'ecmaFeatures' config file property is deprecated, and has no effect."},bS={error:2,warn:1,off:0};function ES(e){if(!e)return null;var t=e.schema||e.meta&&e.meta.schema;return Array.isArray(t)?t.length?{type:"array",items:t,minItems:0,maxItems:t.length}:{type:"array",minItems:0,maxItems:0}:t||null}function CS(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;try{0!==function(e){var t=Array.isArray(e)?e[0]:e,r="string"==typeof t?bS[t.toLowerCase()]:t;if(0===r||1===r||2===r)return r;throw new Error("\tSeverity should be one of the following: 0 = off, 1 = warn, 2 = error (you passed '".concat(BC.inspect(t).replace(/'/g,'"').replace(/\n/g,""),"').\n"))}(r)&&function(e,t){if(!yS.has(e)){var r=ES(e);r&&yS.set(e,gS.compile(r));}var n=yS.get(e);if(n&&(n(t),n.errors))throw new Error(n.errors.map((function(e){return "\tValue ".concat(JSON.stringify(e.data)," ").concat(e.message,".\n")})).join(""))}(e,Array.isArray(r)?r.slice(1):[]);}catch(e){var i='Configuration for rule "'.concat(t,'" is invalid:\n').concat(e.message);throw "string"==typeof n?new Error("".concat(n,":\n\t").concat(i)):new Error(i)}}function SS(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:vS;e&&Object.keys(e).forEach((function(e){if(!(r(e)||qC.get(e)||null))throw new Error("".concat(t,':\n\tEnvironment key "').concat(e,'" is unknown\n'))}));}function kS(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:vS;e&&Object.keys(e).forEach((function(n){CS(r(n)||mS.get(n)||null,n,e[n],t);}));}function DS(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;e&&Object.entries(e).forEach((function(e){var r=b(e,2),n=r[0],i=r[1];try{fS.normalizeConfigGlobal(i);}catch(i){throw new Error("ESLint configuration of global '".concat(n,"' in ").concat(t," is invalid:\n").concat(i.message))}}));}function FS(e,t,r){if(e&&!r(e))throw new Error("ESLint configuration of processor in '".concat(t,"' is invalid: '").concat(e,"' was not found."))}var AS=Fy.lodash.memoize((function(e,t){var r=PC.relative(process.cwd(),e),n=xS[t];process.emitWarning("".concat(n,' (found in "').concat(r,'")'),"DeprecationWarning",t);}));function wS(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!(MC=MC||gS.compile(dS))(e))throw new Error("ESLint configuration in ".concat(t," is invalid:\n").concat(function(e){return e.map((function(e){if("additionalProperties"===e.keyword){var t=e.dataPath.length?"".concat(e.dataPath.slice(1),".").concat(e.params.additionalProperty):e.params.additionalProperty;return 'Unexpected top-level property "'.concat(t,'"')}if("type"===e.keyword){var r=e.dataPath.slice(1),n=Array.isArray(e.schema)?e.schema.join("/"):e.schema,i=JSON.stringify(e.data);return 'Property "'.concat(r,'" is the wrong type (expected ').concat(n," but got `").concat(i,"`)")}var a="."===e.dataPath[0]?e.dataPath.slice(1):e.dataPath;return '"'.concat(a,'" ').concat(e.message,". Value: ").concat(JSON.stringify(e.data))})).map((function(e){return "\t- ".concat(e,".\n")})).join("")}(MC.errors)));Object.hasOwnProperty.call(e,"ecmaFeatures")&&AS(t,"ESLINT_LEGACY_ECMAFEATURES");}var _S=new WeakSet;var TS={getRuleOptionsSchema:ES,validate:function(e,t,r,n){wS(e,t),kS(e.rules,t,r),SS(e.env,t,n),DS(e.globals,t);var i=!0,a=!1,o=void 0;try{for(var s,u=(e.overrides||[])[Symbol.iterator]();!(i=(s=u.next()).done);i=!0){var c=s.value;kS(c.rules,t,r),SS(c.env,t,n),DS(e.globals,t);}}catch(e){a=!0,o=e;}finally{try{i||null==u.return||u.return();}finally{if(a)throw o}}},validateConfigArray:function(e){var t=Map.prototype.get.bind(e.pluginEnvironments),r=Map.prototype.get.bind(e.pluginProcessors),n=Map.prototype.get.bind(e.pluginRules),i=!0,a=!1,o=void 0;try{for(var s,u=e[Symbol.iterator]();!(i=(s=u.next()).done);i=!0){var c=s.value;_S.has(c)||(_S.add(c),SS(c.env,c.name,t),DS(c.globals,c.name),FS(c.processor,c.name,r),kS(c.rules,c.name,n));}}catch(e){a=!0,o=e;}finally{try{i||null==u.return||u.return();}finally{if(a)throw o}}},validateConfigSchema:wS,validateRuleOptions:CS},PS=function(){function e(){a(this,e),this.current=null;}return s(e,[{key:"getOneToken",value:function(){return this.moveNext()?this.current:null}},{key:"getAllTokens",value:function(){for(var e=[];this.moveNext();)e.push(this.current);return e}},{key:"moveNext",value:function(){throw new Error("Not implemented.")}}]),e}();function IS(e){return e.range[0]}var BS={search:function(e,t){return Fy.lodash.sortedIndexBy(e,{range:[t]},IS)},getFirstIndex:function(e,t,r){if(r in t)return t[r];if(r-1 in t){var n=t[r-1],i=0<=n&&n<e.length?e[n]:null;return i&&i.range[0]>=r?n:n+1}return 0},getLastIndex:function(e,t,r){if(r in t)return t[r]-1;if(r-1 in t){var n=t[r-1],i=0<=n&&n<e.length?e[n]:null;return i&&i.range[1]>r?n-1:n}return e.length-1}},OS=function(e){function t(e,r,n,i,o){var s;return a(this,t),(s=v(this,h(t).call(this))).tokens=e,s.comments=r,s.tokenIndex=BS.getLastIndex(e,n,o),s.commentIndex=BS.search(r,o)-1,s.border=i,s}return f(t,PS),s(t,[{key:"moveNext",value:function(){var e=0<=this.tokenIndex?this.tokens[this.tokenIndex]:null,t=0<=this.commentIndex?this.comments[this.commentIndex]:null;return e&&(!t||e.range[1]>t.range[1])?(this.current=e,this.tokenIndex-=1):t?(this.current=t,this.commentIndex-=1):this.current=null,!!this.current&&(-1===this.border||this.current.range[0]>=this.border)}}]),t}(),LS=function(e){function t(e,r,n,i,o){var s;return a(this,t),(s=v(this,h(t).call(this))).tokens=e,s.index=BS.getLastIndex(e,n,o),s.indexEnd=BS.getFirstIndex(e,n,i),s}return f(t,PS),s(t,[{key:"moveNext",value:function(){return !!(this.index>=this.indexEnd)&&(this.current=this.tokens[this.index],this.index-=1,!0)}},{key:"getOneToken",value:function(){return this.index>=this.indexEnd?this.tokens[this.index]:null}}]),t}(),NS=function(e){function t(e){var r;return a(this,t),(r=v(this,h(t).call(this))).cursor=e,r}return f(t,PS),s(t,[{key:"moveNext",value:function(){var e=this.cursor.moveNext();return this.current=this.cursor.current,e}}]),t}(),jS=function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,e))).predicate=r,n}return f(t,NS),s(t,[{key:"moveNext",value:function(){for(var e=this.predicate;x(h(t.prototype),"moveNext",this).call(this);)if(e(this.current))return !0;return !1}}]),t}(),RS=function(e){function t(e,r,n,i,o){var s;return a(this,t),(s=v(this,h(t).call(this))).tokens=e,s.comments=r,s.tokenIndex=BS.getFirstIndex(e,n,i),s.commentIndex=BS.search(r,i),s.border=o,s}return f(t,PS),s(t,[{key:"moveNext",value:function(){var e=this.tokenIndex<this.tokens.length?this.tokens[this.tokenIndex]:null,t=this.commentIndex<this.comments.length?this.comments[this.commentIndex]:null;return e&&(!t||e.range[0]<t.range[0])?(this.current=e,this.tokenIndex+=1):t?(this.current=t,this.commentIndex+=1):this.current=null,!!this.current&&(-1===this.border||this.current.range[1]<=this.border)}}]),t}(),MS=function(e){function t(e,r,n,i,o){var s;return a(this,t),(s=v(this,h(t).call(this))).tokens=e,s.index=BS.getFirstIndex(e,n,i),s.indexEnd=BS.getLastIndex(e,n,o),s}return f(t,PS),s(t,[{key:"moveNext",value:function(){return !!(this.index<=this.indexEnd)&&(this.current=this.tokens[this.index],this.index+=1,!0)}},{key:"getOneToken",value:function(){return this.index<=this.indexEnd?this.tokens[this.index]:null}},{key:"getAllTokens",value:function(){return this.tokens.slice(this.index,this.indexEnd+1)}}]),t}(),VS=function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,e))).count=r,n}return f(t,NS),s(t,[{key:"moveNext",value:function(){return !!(0<this.count)&&(this.count-=1,x(h(t.prototype),"moveNext",this).call(this))}}]),t}(),US=function(e){function t(e,r){var n;return a(this,t),(n=v(this,h(t).call(this,e))).count=r,n}return f(t,NS),s(t,[{key:"moveNext",value:function(){for(;0<this.count;)if(this.count-=1,!x(h(t.prototype),"moveNext",this).call(this))return !1;return x(h(t.prototype),"moveNext",this).call(this)}}]),t}(),qS=function(){function e(t,r){a(this,e),this.TokenCursor=t,this.TokenCommentCursor=r;}return s(e,[{key:"createBaseCursor",value:function(e,t,r,n,i,a){return new(a?this.TokenCommentCursor:this.TokenCursor)(e,t,r,n,i)}},{key:"createCursor",value:function(e,t,r,n,i,a,o,s,u){var c=this.createBaseCursor(e,t,r,n,i,a);return o&&(c=new jS(c,o)),1<=s&&(c=new US(c,s)),0<=u&&(c=new VS(c,u)),c}}]),e}(),WS={forward:new qS(MS,RS),backward:new qS(LS,OS)},$S=function(e){function t(e,r,n,i,o,s,u){var c;return a(this,t),(c=v(this,h(t).call(this,e,r,n,i,o))).index=Math.max(0,c.index-s),c.indexEnd=Math.min(e.length-1,c.indexEnd+u),c}return f(t,MS),t}(),GS=Fy.require$$0.isCommentToken,zS=Symbol("tokens"),HS=Symbol("comments"),KS=Symbol("indexMap");function JS(e,t,r,n,i,a,o){var s=!1,u=0,c=null;return "number"==typeof o?u=0|o:"function"==typeof o?c=o:o&&(s=!!o.includeComments,u=0|o.skip,c=o.filter||null),NC(0<=u,"options.skip should be zero or a positive integer."),NC(!c||"function"==typeof c,"options.filter should be a function."),e.createCursor(t,r,n,i,a,s,c,u,-1)}function QS(e,t,r,n,i,a,o){var s=!1,u=0,c=!1,l=null;return "number"==typeof o?(u=0|o,c=!0):"function"==typeof o?l=o:o&&(s=!!o.includeComments,u=0|o.count,c="number"==typeof o.count,l=o.filter||null),NC(0<=u,"options.count should be zero or a positive integer."),NC(!l||"function"==typeof l,"options.filter should be a function."),e.createCursor(t,r,n,i,a,s,l,0,c?u:-1)}function XS(e,t,r,n,i,a,o){return void 0===a&&void 0===o?new MS(e,t,r,n,i):"number"==typeof a||void 0===a?new $S(e,t,r,n,i,0|a,0|o):QS(WS.forward,e,t,r,n,i,a)}function YS(e){for(var t=[],r=e.getOneToken();r&&GS(r);)t.push(r),r=e.getOneToken();return t}var ZS=function(){function e(t,r){a(this,e),this[zS]=t,this[HS]=r,this[KS]=function(e,t){for(var r=Number.MAX_SAFE_INTEGER,n=Object.create(null),i=0,a=0,o=0,s=null;i<e.length||a<t.length;){for(o=a<t.length?t[a].range[0]:r;i<e.length&&(s=e[i].range)[0]<o;)n[s[0]]=i,n[s[1]-1]=i,i+=1;for(o=i<e.length?e[i].range[0]:r;a<t.length&&(s=t[a].range)[0]<o;)n[s[0]]=i,n[s[1]-1]=i,a+=1;}return n}(t,r);}return s(e,[{key:"getTokenByRangeStart",value:function(e,t){var r=t&&t.includeComments,n=WS.forward.createBaseCursor(this[zS],this[HS],this[KS],e,-1,r).getOneToken();return n&&n.range[0]===e?n:null}},{key:"getFirstToken",value:function(e,t){return JS(WS.forward,this[zS],this[HS],this[KS],e.range[0],e.range[1],t).getOneToken()}},{key:"getLastToken",value:function(e,t){return JS(WS.backward,this[zS],this[HS],this[KS],e.range[0],e.range[1],t).getOneToken()}},{key:"getTokenBefore",value:function(e,t){return JS(WS.backward,this[zS],this[HS],this[KS],-1,e.range[0],t).getOneToken()}},{key:"getTokenAfter",value:function(e,t){return JS(WS.forward,this[zS],this[HS],this[KS],e.range[1],-1,t).getOneToken()}},{key:"getFirstTokenBetween",value:function(e,t,r){return JS(WS.forward,this[zS],this[HS],this[KS],e.range[1],t.range[0],r).getOneToken()}},{key:"getLastTokenBetween",value:function(e,t,r){return JS(WS.backward,this[zS],this[HS],this[KS],e.range[1],t.range[0],r).getOneToken()}},{key:"getTokenOrCommentBefore",value:function(e,t){return this.getTokenBefore(e,{includeComments:!0,skip:t})}},{key:"getTokenOrCommentAfter",value:function(e,t){return this.getTokenAfter(e,{includeComments:!0,skip:t})}},{key:"getFirstTokens",value:function(e,t){return QS(WS.forward,this[zS],this[HS],this[KS],e.range[0],e.range[1],t).getAllTokens()}},{key:"getLastTokens",value:function(e,t){return QS(WS.backward,this[zS],this[HS],this[KS],e.range[0],e.range[1],t).getAllTokens().reverse()}},{key:"getTokensBefore",value:function(e,t){return QS(WS.backward,this[zS],this[HS],this[KS],-1,e.range[0],t).getAllTokens().reverse()}},{key:"getTokensAfter",value:function(e,t){return QS(WS.forward,this[zS],this[HS],this[KS],e.range[1],-1,t).getAllTokens()}},{key:"getFirstTokensBetween",value:function(e,t,r){return QS(WS.forward,this[zS],this[HS],this[KS],e.range[1],t.range[0],r).getAllTokens()}},{key:"getLastTokensBetween",value:function(e,t,r){return QS(WS.backward,this[zS],this[HS],this[KS],e.range[1],t.range[0],r).getAllTokens().reverse()}},{key:"getTokens",value:function(e,t,r){return XS(this[zS],this[HS],this[KS],e.range[0],e.range[1],t,r).getAllTokens()}},{key:"getTokensBetween",value:function(e,t,r){return XS(this[zS],this[HS],this[KS],e.range[1],t.range[0],r,r).getAllTokens()}},{key:"commentsExistBetween",value:function(e,t){var r=BS.search(this[HS],e.range[1]);return r<this[HS].length&&this[HS][r].range[1]<=t.range[0]}},{key:"getCommentsBefore",value:function(e){return YS(QS(WS.backward,this[zS],this[HS],this[KS],-1,e.range[0],{includeComments:!0})).reverse()}},{key:"getCommentsAfter",value:function(e){return YS(QS(WS.forward,this[zS],this[HS],this[KS],e.range[1],-1,{includeComments:!0}))}},{key:"getCommentsInside",value:function(e){return this.getTokens(e,{includeComments:!0,filter:GS})}}]),e}(),ek=Fy.require$$0.isCommentToken;var tk={SourceCode:function(e){function t(e,r){var n,o,s,u,c,l;a(this,t),"string"==typeof e?(o=e,s=r):"object"==i(e)&&null!==e&&(o=e.text,s=e.ast,u=e.parserServices,c=e.scopeManager,l=e.visitorKeys),function(e){if(!e.tokens)throw new Error("AST is missing the tokens array.");if(!e.comments)throw new Error("AST is missing the comments array.");if(!e.loc)throw new Error("AST is missing location information.");if(!e.range)throw new Error("AST is missing range information")}(s),(n=v(this,h(t).call(this,s.tokens,s.comments))).hasBOM=65279===o.charCodeAt(0),n.text=n.hasBOM?o.slice(1):o,n.ast=s,n.parserServices=u||{},n.scopeManager=c||null,n.visitorKeys=l||Fy.Traverser.DEFAULT_VISITOR_KEYS;var p=n.text.match(Fy.require$$0$1.shebangPattern);p&&s.comments.length&&s.comments[0].value===p[1]&&(s.comments[0].type="Shebang"),n.tokensAndComments=function(e,t){for(var r=[],n=0,i=0;n<e.length||i<t.length;)i>=t.length||n<e.length&&e[n].range[0]<t[i].range[0]?r.push(e[n++]):r.push(t[i++]);return r}(s.tokens,s.comments),n.lines=[],n.lineStartIndices=[0];for(var f,d=Fy.require$$0$1.createGlobalLinebreakMatcher();f=d.exec(n.text);)n.lines.push(n.text.slice(n.lineStartIndices[n.lineStartIndices.length-1],f.index)),n.lineStartIndices.push(f.index+f[0].length);return n.lines.push(n.text.slice(n.lineStartIndices[n.lineStartIndices.length-1])),n._commentCache=new WeakMap,Object.freeze(y(n)),Object.freeze(n.lines),n}return f(t,ZS),s(t,[{key:"getText",value:function(e,t,r){return e?this.text.slice(Math.max(e.range[0]-(t||0),0),e.range[1]+(r||0)):this.text}},{key:"getLines",value:function(){return this.lines}},{key:"getAllComments",value:function(){return this.ast.comments}},{key:"getComments",value:function(e){if(this._commentCache.has(e))return this._commentCache.get(e);var t={leading:[],trailing:[]};if("Program"===e.type)0===e.body.length&&(t.leading=e.comments);else {(("BlockStatement"===e.type||"ClassBody"===e.type)&&0===e.body.length||"ObjectExpression"===e.type&&0===e.properties.length||"ArrayExpression"===e.type&&0===e.elements.length||"SwitchStatement"===e.type&&0===e.cases.length)&&(t.trailing=this.getTokens(e,{includeComments:!0,filter:ek}));for(var r=this.getTokenBefore(e,{includeComments:!0});r&&ek(r)&&!(e.parent&&r.start<e.parent.start);)t.leading.push(r),r=this.getTokenBefore(r,{includeComments:!0});for(t.leading.reverse(),r=this.getTokenAfter(e,{includeComments:!0});r&&ek(r)&&!(e.parent&&r.end>e.parent.end);)t.trailing.push(r),r=this.getTokenAfter(r,{includeComments:!0});}return this._commentCache.set(e,t),t}},{key:"getJSDocComment",value:function(e){var t=this,r=function(e){var r=t.getTokenBefore(e,{includeComments:!0});return r&&ek(r)&&"Block"===r.type&&"*"===r.value.charAt(0)&&1>=e.loc.start.line-r.loc.end.line?r:null},n=e.parent;switch(e.type){case"ClassDeclaration":case"FunctionDeclaration":return r(function(e){return "ExportDefaultDeclaration"===e.type||"ExportNamedDeclaration"===e.type||"ExportAllDeclaration"===e.type||"ExportSpecifier"===e.type}(n)?n:e);case"ClassExpression":return r(n.parent);case"ArrowFunctionExpression":case"FunctionExpression":if("CallExpression"!==n.type&&"NewExpression"!==n.type){for(;!this.getCommentsBefore(n).length&&!/Function/.test(n.type)&&"MethodDefinition"!==n.type&&"Property"!==n.type&&(n=n.parent););if(n&&"FunctionDeclaration"!==n.type&&"Program"!==n.type)return r(n)}return r(e);default:return null}}},{key:"getNodeByRangeIndex",value:function(e){var t=null;return Fy.Traverser.traverse(this.ast,{visitorKeys:this.visitorKeys,enter:function(r){r.range[0]<=e&&e<r.range[1]?t=r:this.skip();},leave:function(e){e===t&&this.break();}}),t}},{key:"isSpaceBetween",value:function(e,t){if(function(e,t){return e.range[0]<=t.range[0]&&e.range[1]>=t.range[0]||t.range[0]<=e.range[0]&&t.range[1]>=e.range[0]}(e,t))return !1;for(var r=b(e.range[1]<=t.range[0]?[e,t]:[t,e],2),n=r[0],i=r[1],a=this.getLastToken(n)||n,o=this.getFirstToken(i)||i,s=a;s!==o;){var u=this.getTokenAfter(s,{includeComments:!0});if(s.range[1]!==u.range[0])return !0;s=u;}return !1}},{key:"isSpaceBetweenTokens",value:function(){return this.isSpaceBetween.apply(this,arguments)}},{key:"getLocFromIndex",value:function(e){if("number"!=typeof e)throw new TypeError("Expected `index` to be a number.");if(0>e||e>this.text.length)throw new RangeError("Index out of range (requested index ".concat(e,", but source text has length ").concat(this.text.length,")."));if(e===this.text.length)return {line:this.lines.length,column:this.lines[this.lines.length-1].length};var t=Fy.lodash.sortedLastIndex(this.lineStartIndices,e);return {line:t,column:e-this.lineStartIndices[t-1]}}},{key:"getIndexFromLoc",value:function(e){if("object"!=i(e)||"number"!=typeof e.line||"number"!=typeof e.column)throw new TypeError("Expected `loc` to be an object with numeric `line` and `column` properties.");if(0>=e.line)throw new RangeError("Line number out of range (line ".concat(e.line," requested). Line numbers should be 1-based."));if(e.line>this.lineStartIndices.length)throw new RangeError("Line number out of range (line ".concat(e.line," requested, but only ").concat(this.lineStartIndices.length," lines present)."));var t=this.lineStartIndices[e.line-1],r=e.line===this.lineStartIndices.length?this.text.length:this.lineStartIndices[e.line],n=t+e.column;if(e.line===this.lineStartIndices.length&&n>r||e.line<this.lineStartIndices.length&&n>=r)throw new RangeError("Column number out of range (column ".concat(e.column," requested, but the length of line ").concat(e.line," is ").concat(r-t,")."));return n}}],[{key:"splitLines",value:function(e){return e.split(Fy.require$$0$1.createGlobalLinebreakMatcher())}}]),t}()},rk=Fy.require$$1("eslint:code-path");function nk(e){return e.id+(e.reachable?"":"!")}var ik={enabled:rk.enabled,dump:rk,dumpState:rk.enabled?function(e,t,r){for(var n=0;n<t.currentSegments.length;++n){var i=t.currentSegments[n].internal;r?i.exitNodes.push(e):i.nodes.push(e);}rk(["".concat(t.currentSegments.map(nk).join(","),")"),"".concat(e.type).concat(r?":exit":"")].join(" "));}:rk,dumpDot:rk.enabled?function(e){var t='\ndigraph {\nnode[shape=box,style="rounded,filled",fillcolor=white];\ninitial[label="",shape=circle,style=filled,fillcolor=black,width=0.25,height=0.25];\n';0<e.returnedSegments.length&&(t+='final[label="",shape=doublecircle,style=filled,fillcolor=black,width=0.25,height=0.25];\n'),0<e.thrownSegments.length&&(t+='thrown[label="✘",shape=circle,width=0.3,height=0.3,fixedsize];\n');var r=Object.create(null),n=this.makeDotArrows(e,r);for(var i in r){var a=r[i];t+="".concat(i,"["),t+=a.reachable?'label="':'style="rounded,dashed,filled",fillcolor="#FF9800",label="<<unreachable>>\\n',t+=0<a.internal.nodes.length||0<a.internal.exitNodes.length?[].concat(a.internal.nodes.map((function(e){switch(e.type){case"Identifier":return "".concat(e.type," (").concat(e.name,")");case"Literal":return "".concat(e.type," (").concat(e.value,")");default:return e.type}})),a.internal.exitNodes.map((function(e){switch(e.type){case"Identifier":return "".concat(e.type,":exit (").concat(e.name,")");case"Literal":return "".concat(e.type,":exit (").concat(e.value,")");default:return "".concat(e.type,":exit")}}))).join("\\n"):"????",t+='"];\n';}t+="".concat(n,"\n"),rk("DOT",t+="}");}:rk,makeDotArrows:function(e,t){for(var r=[[e.initialSegment,0]],n=t||Object.create(null),i=e.initialSegment.id,a="initial->".concat(e.initialSegment.id);0<r.length;){var o=r.pop(),s=o[0],u=o[1];if(!n[s.id]||0!==u){n[s.id]=s;var c=s.allNextSegments[u];c&&(a+=i===s.id?"->".concat(c.id):";\n".concat(s.id,"->").concat(c.id),i=c.id,r.unshift([s,1+u]),r.push([c,0]));}}return e.returnedSegments.forEach((function(e){a+=i===e.id?"->final":";\n".concat(e.id,"->final"),i=null;})),e.thrownSegments.forEach((function(e){a+=i===e.id?"->thrown":";\n".concat(e.id,"->thrown"),i=null;})),"".concat(a,";")}};function ak(e){return e.reachable}var ok=function(){function e(t,r,n){a(this,e),this.id=t,this.nextSegments=[],this.prevSegments=r.filter(ak),this.allNextSegments=[],this.allPrevSegments=r,this.reachable=n,Object.defineProperty(this,"internal",{value:{used:!1,loopedPrevSegments:[]}}),ik.enabled&&(this.internal.nodes=[],this.internal.exitNodes=[]);}return s(e,[{key:"isLoopedPrevSegment",value:function(e){return -1!==this.internal.loopedPrevSegments.indexOf(e)}}],[{key:"newRoot",value:function(t){return new e(t,[],!0)}},{key:"newNext",value:function(t,r){return new e(t,e.flattenUnusedSegments(r),r.some(ak))}},{key:"newUnreachable",value:function(t,r){var n=new e(t,e.flattenUnusedSegments(r),!1);return e.markUsed(n),n}},{key:"newDisconnected",value:function(t,r){return new e(t,[],r.some(ak))}},{key:"markUsed",value:function(e){var t;if(!e.internal.used)if(e.internal.used=!0,e.reachable)for(t=0;t<e.allPrevSegments.length;++t){var r=e.allPrevSegments[t];r.allNextSegments.push(e),r.nextSegments.push(e);}else for(t=0;t<e.allPrevSegments.length;++t)e.allPrevSegments[t].allNextSegments.push(e);}},{key:"markPrevSegmentAsLooped",value:function(e,t){e.internal.loopedPrevSegments.push(t);}},{key:"flattenUnusedSegments",value:function(e){for(var t=Object.create(null),r=[],n=0;n<e.length;++n){var i=e[n];if(!t[i.id])if(i.internal.used)t[i.id]=!0,r.push(i);else for(var a=0;a<i.allPrevSegments.length;++a){var o=i.allPrevSegments[a];t[o.id]||(t[o.id]=!0,r.push(o));}}return r}}]),e}();function sk(e){return e.reachable}function uk(e,t,r,n){for(var i=e.segmentsList,a=0<=t?t:i.length+t,o=0<=r?r:i.length+r,s=[],u=0;u<e.count;++u){for(var c=[],l=a;l<=o;++l)c.push(i[l][u]);s.push(n(e.idGenerator.next(),c));}return s}function ck(e,t){for(var r=t;r.length>e.count;){for(var n=[],i=0,a=0|r.length/2;i<a;++i)n.push(ok.newNext(e.idGenerator.next(),[r[i],r[i+a]]));r=n;}return r}var lk=function(){function e(t,r,n){a(this,e),this.idGenerator=t,this.upper=r,this.count=n,this.segmentsList=[];}return s(e,[{key:"makeNext",value:function(e,t){return uk(this,e,t,ok.newNext)}},{key:"makeUnreachable",value:function(e,t){return uk(this,e,t,ok.newUnreachable)}},{key:"makeDisconnected",value:function(e,t){return uk(this,e,t,ok.newDisconnected)}},{key:"add",value:function(e){NC(e.length>=this.count,"".concat(e.length," >= ").concat(this.count)),this.segmentsList.push(ck(this,e));}},{key:"replaceHead",value:function(e){NC(e.length>=this.count,"".concat(e.length," >= ").concat(this.count)),this.segmentsList.splice(-1,1,ck(this,e));}},{key:"addAll",value:function(e){NC(e.count===this.count);for(var t=e.segmentsList,r=0;r<t.length;++r)this.segmentsList.push(t[r]);}},{key:"clear",value:function(){this.segmentsList=[];}},{key:"head",get:function(){var e=this.segmentsList;return 0===e.length?[]:e[e.length-1]}},{key:"empty",get:function(){return 0===this.segmentsList.length}},{key:"reachable",get:function(){var e=this.head;return 0<e.length&&e.some(sk)}}],[{key:"newRoot",value:function(t){var r=new e(t,null,1);return r.add([ok.newRoot(t.next())]),r}},{key:"newEmpty",value:function(t,r){return new e(t.idGenerator,t,(r?2:1)*t.count)}}]),e}();function pk(e,t,r,n){for(var i=0;i<n.length;++i){var a=n[i];e.push(a),-1===t.indexOf(a)&&r.push(a);}}function fk(e){for(var t=e.tryContext;t;){if(t.hasFinalizer&&"finally"!==t.position)return t;t=t.upper;}return e}function hk(e){for(var t=e.tryContext;t;){if("try"===t.position||t.hasFinalizer&&"catch"===t.position)return t;t=t.upper;}return e}function dk(e,t){e.splice(e.indexOf(t),1);}function mk(e,t,r){for(var n=ok.flattenUnusedSegments(t),i=ok.flattenUnusedSegments(r),a=Math.min(n.length,i.length),o=0;o<a;++o){var s=n[o],u=i[o];u.reachable&&s.nextSegments.push(u),s.reachable&&u.prevSegments.push(s),s.allNextSegments.push(u),u.allPrevSegments.push(s),2<=u.allPrevSegments.length&&ok.markPrevSegmentAsLooped(u,s),e.notifyLooped(s,u);}}function gk(e,t,r){t.processed||(t.trueForkContext.add(r),t.falseForkContext.add(r)),!0!==e.test&&e.brokenForkContext.addAll(t.falseForkContext),e.endOfTestSegments=t.trueForkContext.makeNext(0,-1);}var yk=function(){function e(t,r){a(this,e),this.idGenerator=t,this.notifyLooped=r,this.forkContext=lk.newRoot(t),this.choiceContext=null,this.switchContext=null,this.tryContext=null,this.loopContext=null,this.breakContext=null,this.currentSegments=[],this.initialSegment=this.forkContext.head[0];var n=this.finalSegments=[],i=this.returnedForkContext=[],o=this.thrownForkContext=[];i.add=pk.bind(null,i,o,n),o.add=pk.bind(null,o,i,n);}return s(e,[{key:"pushForkContext",value:function(e){return this.forkContext=lk.newEmpty(this.forkContext,e),this.forkContext}},{key:"popForkContext",value:function(){var e=this.forkContext;return this.forkContext=e.upper,this.forkContext.replaceHead(e.makeNext(0,-1)),e}},{key:"forkPath",value:function(){this.forkContext.add(this.parentForkContext.makeNext(-1,-1));}},{key:"forkBypassPath",value:function(){this.forkContext.add(this.parentForkContext.head);}},{key:"pushChoiceContext",value:function(e,t){this.choiceContext={upper:this.choiceContext,kind:e,isForkingAsResult:t,trueForkContext:lk.newEmpty(this.forkContext),falseForkContext:lk.newEmpty(this.forkContext),processed:!1};}},{key:"popChoiceContext",value:function(){var e=this.choiceContext;this.choiceContext=e.upper;var t=this.forkContext,r=t.head;switch(e.kind){case"&&":case"||":if(e.processed||(e.trueForkContext.add(r),e.falseForkContext.add(r)),e.isForkingAsResult){var n=this.choiceContext;return n.trueForkContext.addAll(e.trueForkContext),n.falseForkContext.addAll(e.falseForkContext),n.processed=!0,e}break;case"test":e.processed?(e.falseForkContext.clear(),e.falseForkContext.add(r)):(e.trueForkContext.clear(),e.trueForkContext.add(r));break;case"loop":return e;default:throw new Error("unreachable")}var i=e.trueForkContext;return i.addAll(e.falseForkContext),t.replaceHead(i.makeNext(0,-1)),e}},{key:"makeLogicalRight",value:function(){var e=this.choiceContext,t=this.forkContext;if(e.processed){var r="&&"===e.kind?e.trueForkContext:e.falseForkContext;t.replaceHead(r.makeNext(0,-1)),r.clear(),e.processed=!1;}else "&&"===e.kind?e.falseForkContext.add(t.head):e.trueForkContext.add(t.head),t.replaceHead(t.makeNext(-1,-1));}},{key:"makeIfConsequent",value:function(){var e=this.choiceContext,t=this.forkContext;e.processed||(e.trueForkContext.add(t.head),e.falseForkContext.add(t.head)),e.processed=!1,t.replaceHead(e.trueForkContext.makeNext(0,-1));}},{key:"makeIfAlternate",value:function(){var e=this.choiceContext,t=this.forkContext;e.trueForkContext.clear(),e.trueForkContext.add(t.head),e.processed=!0,t.replaceHead(e.falseForkContext.makeNext(0,-1));}},{key:"pushSwitchContext",value:function(e,t){this.switchContext={upper:this.switchContext,hasCase:e,defaultSegments:null,defaultBodySegments:null,foundDefault:!1,lastIsDefault:!1,countForks:0},this.pushBreakContext(!0,t);}},{key:"popSwitchContext",value:function(){var e=this.switchContext;this.switchContext=e.upper;var t=this.forkContext,r=this.popBreakContext().brokenForkContext;if(0!==e.countForks){var n=t.head;this.forkBypassPath();var i=t.head;r.add(n),e.lastIsDefault||(e.defaultBodySegments?(function(e,t){for(var r=0;r<e.length;++r){var n=e[r],i=t[r];dk(n.nextSegments,i),dk(n.allNextSegments,i),dk(i.prevSegments,n),dk(i.allPrevSegments,n);}}(e.defaultSegments,e.defaultBodySegments),mk(this,i,e.defaultBodySegments)):r.add(i));for(var a=0;a<e.countForks;++a)this.forkContext=this.forkContext.upper;this.forkContext.replaceHead(r.makeNext(0,-1));}else r.empty||(r.add(t.makeNext(-1,-1)),t.replaceHead(r.makeNext(0,-1)));}},{key:"makeSwitchCaseBody",value:function(e,t){var r=this.switchContext;if(r.hasCase){var n=this.forkContext,i=this.pushForkContext();i.add(n.makeNext(0,-1)),t?(r.defaultSegments=n.head,e?r.foundDefault=!0:r.defaultBodySegments=i.head):!e&&r.foundDefault&&(r.foundDefault=!1,r.defaultBodySegments=i.head),r.lastIsDefault=t,r.countForks+=1;}}},{key:"pushTryContext",value:function(e){this.tryContext={upper:this.tryContext,position:"try",hasFinalizer:e,returnedForkContext:e?lk.newEmpty(this.forkContext):null,thrownForkContext:lk.newEmpty(this.forkContext),lastOfTryIsReachable:!1,lastOfCatchIsReachable:!1};}},{key:"popTryContext",value:function(){var e=this.tryContext;if(this.tryContext=e.upper,"catch"!==e.position){var t=e.returnedForkContext,r=e.thrownForkContext;if(!t.empty||!r.empty){var n=this.forkContext.head;this.forkContext=this.forkContext.upper;var i=n.slice(0,0|n.length/2),a=n.slice(0|n.length/2);t.empty||fk(this).returnedForkContext.add(a),r.empty||hk(this).thrownForkContext.add(a),this.forkContext.replaceHead(i),e.lastOfTryIsReachable||e.lastOfCatchIsReachable||this.forkContext.makeUnreachable();}}else this.popForkContext();}},{key:"makeCatchBlock",value:function(){var e=this.tryContext,t=this.forkContext,r=e.thrownForkContext;e.position="catch",e.thrownForkContext=lk.newEmpty(t),e.lastOfTryIsReachable=t.reachable,r.add(t.head);var n=r.makeNext(0,-1);this.pushForkContext(),this.forkBypassPath(),this.forkContext.add(n);}},{key:"makeFinallyBlock",value:function(){var e=this.tryContext,t=this.forkContext,r=e.returnedForkContext,n=e.thrownForkContext,i=t.head;if("catch"===e.position?(this.popForkContext(),t=this.forkContext,e.lastOfCatchIsReachable=t.reachable):e.lastOfTryIsReachable=t.reachable,e.position="finally",!r.empty||!n.empty){for(var a=t.makeNext(-1,-1),o=0;o<t.count;++o){for(var s=[i[o]],u=0;u<r.segmentsList.length;++u)s.push(r.segmentsList[u][o]);for(var c=0;c<n.segmentsList.length;++c)s.push(n.segmentsList[c][o]);a.push(ok.newNext(this.idGenerator.next(),s));}this.pushForkContext(!0),this.forkContext.add(a);}}},{key:"makeFirstThrowablePathInTryBlock",value:function(){var e=this.forkContext;if(e.reachable){var t=hk(this);t!==this&&"try"===t.position&&t.thrownForkContext.empty&&(t.thrownForkContext.add(e.head),e.replaceHead(e.makeNext(-1,-1)));}}},{key:"pushLoopContext",value:function(e,t){var r=this.forkContext,n=this.pushBreakContext(!0,t);switch(e){case"WhileStatement":this.pushChoiceContext("loop",!1),this.loopContext={upper:this.loopContext,type:e,label:t,test:void 0,continueDestSegments:null,brokenForkContext:n.brokenForkContext};break;case"DoWhileStatement":this.pushChoiceContext("loop",!1),this.loopContext={upper:this.loopContext,type:e,label:t,test:void 0,entrySegments:null,continueForkContext:lk.newEmpty(r),brokenForkContext:n.brokenForkContext};break;case"ForStatement":this.pushChoiceContext("loop",!1),this.loopContext={upper:this.loopContext,type:e,label:t,test:void 0,endOfInitSegments:null,testSegments:null,endOfTestSegments:null,updateSegments:null,endOfUpdateSegments:null,continueDestSegments:null,brokenForkContext:n.brokenForkContext};break;case"ForInStatement":case"ForOfStatement":this.loopContext={upper:this.loopContext,type:e,label:t,prevSegments:null,leftSegments:null,endOfLeftSegments:null,continueDestSegments:null,brokenForkContext:n.brokenForkContext};break;default:throw new Error('unknown type: "'.concat(e,'"'))}}},{key:"popLoopContext",value:function(){var e=this.loopContext;this.loopContext=e.upper;var t=this.forkContext,r=this.popBreakContext().brokenForkContext;switch(e.type){case"WhileStatement":case"ForStatement":this.popChoiceContext(),mk(this,t.head,e.continueDestSegments);break;case"DoWhileStatement":var n=this.popChoiceContext();n.processed||(n.trueForkContext.add(t.head),n.falseForkContext.add(t.head)),!0!==e.test&&r.addAll(n.falseForkContext);for(var i=n.trueForkContext.segmentsList,a=0;a<i.length;++a)mk(this,i[a],e.entrySegments);break;case"ForInStatement":case"ForOfStatement":r.add(t.head),mk(this,t.head,e.leftSegments);break;default:throw new Error("unreachable")}r.empty?t.replaceHead(t.makeUnreachable(-1,-1)):t.replaceHead(r.makeNext(0,-1));}},{key:"makeWhileTest",value:function(e){var t=this.loopContext,r=this.forkContext,n=r.makeNext(0,-1);t.test=e,t.continueDestSegments=n,r.replaceHead(n);}},{key:"makeWhileBody",value:function(){var e=this.loopContext,t=this.choiceContext,r=this.forkContext;t.processed||(t.trueForkContext.add(r.head),t.falseForkContext.add(r.head)),!0!==e.test&&e.brokenForkContext.addAll(t.falseForkContext),r.replaceHead(t.trueForkContext.makeNext(0,-1));}},{key:"makeDoWhileBody",value:function(){var e=this.loopContext,t=this.forkContext,r=t.makeNext(-1,-1);e.entrySegments=r,t.replaceHead(r);}},{key:"makeDoWhileTest",value:function(e){var t=this.loopContext,r=this.forkContext;if(t.test=e,!t.continueForkContext.empty){t.continueForkContext.add(r.head);var n=t.continueForkContext.makeNext(0,-1);r.replaceHead(n);}}},{key:"makeForTest",value:function(e){var t=this.loopContext,r=this.forkContext,n=r.head,i=r.makeNext(-1,-1);t.test=e,t.endOfInitSegments=n,t.continueDestSegments=t.testSegments=i,r.replaceHead(i);}},{key:"makeForUpdate",value:function(){var e=this.loopContext,t=this.choiceContext,r=this.forkContext;e.testSegments?gk(e,t,r.head):e.endOfInitSegments=r.head;var n=r.makeDisconnected(-1,-1);e.continueDestSegments=e.updateSegments=n,r.replaceHead(n);}},{key:"makeForBody",value:function(){var e=this.loopContext,t=this.choiceContext,r=this.forkContext;e.updateSegments?(e.endOfUpdateSegments=r.head,e.testSegments&&mk(this,e.endOfUpdateSegments,e.testSegments)):e.testSegments?gk(e,t,r.head):e.endOfInitSegments=r.head;var n=e.endOfTestSegments;if(!n){var i=lk.newEmpty(r);i.add(e.endOfInitSegments),e.endOfUpdateSegments&&i.add(e.endOfUpdateSegments),n=i.makeNext(0,-1);}e.continueDestSegments=e.continueDestSegments||n,r.replaceHead(n);}},{key:"makeForInOfLeft",value:function(){var e=this.loopContext,t=this.forkContext,r=t.makeDisconnected(-1,-1);e.prevSegments=t.head,e.leftSegments=e.continueDestSegments=r,t.replaceHead(r);}},{key:"makeForInOfRight",value:function(){var e=this.loopContext,t=this.forkContext,r=lk.newEmpty(t);r.add(e.prevSegments);var n=r.makeNext(-1,-1);e.endOfLeftSegments=t.head,t.replaceHead(n);}},{key:"makeForInOfBody",value:function(){var e=this.loopContext,t=this.forkContext,r=lk.newEmpty(t);r.add(e.endOfLeftSegments);var n=r.makeNext(-1,-1);mk(this,t.head,e.leftSegments),e.brokenForkContext.add(t.head),t.replaceHead(n);}},{key:"pushBreakContext",value:function(e,t){return this.breakContext={upper:this.breakContext,breakable:e,label:t,brokenForkContext:lk.newEmpty(this.forkContext)},this.breakContext}},{key:"popBreakContext",value:function(){var e=this.breakContext,t=this.forkContext;if(this.breakContext=e.upper,!e.breakable){var r=e.brokenForkContext;r.empty||(r.add(t.head),t.replaceHead(r.makeNext(0,-1)));}return e}},{key:"makeBreak",value:function(e){var t=this.forkContext;if(t.reachable){var r=function(e,t){for(var r=e.breakContext;r;){if(t?r.label===t:r.breakable)return r;r=r.upper;}return null}(this,e);r&&r.brokenForkContext.add(t.head),t.replaceHead(t.makeUnreachable(-1,-1));}}},{key:"makeContinue",value:function(e){var t=this.forkContext;if(t.reachable){var r=function(e,t){if(!t)return e.loopContext;for(var r=e.loopContext;r;){if(r.label===t)return r;r=r.upper;}return null}(this,e);r&&(r.continueDestSegments?(mk(this,t.head,r.continueDestSegments),("ForInStatement"===r.type||"ForOfStatement"===r.type)&&r.brokenForkContext.add(t.head)):r.continueForkContext.add(t.head)),t.replaceHead(t.makeUnreachable(-1,-1));}}},{key:"makeReturn",value:function(){var e=this.forkContext;e.reachable&&(fk(this).returnedForkContext.add(e.head),e.replaceHead(e.makeUnreachable(-1,-1)));}},{key:"makeThrow",value:function(){var e=this.forkContext;e.reachable&&(hk(this).thrownForkContext.add(e.head),e.replaceHead(e.makeUnreachable(-1,-1)));}},{key:"makeFinal",value:function(){var e=this.currentSegments;0<e.length&&e[0].reachable&&this.returnedForkContext.add(e);}},{key:"headSegments",get:function(){return this.forkContext.head}},{key:"parentForkContext",get:function(){var e=this.forkContext;return e&&e.upper}}]),e}(),vk=function(){function e(t){a(this,e),this.prefix=t+"",this.n=0;}return s(e,[{key:"next",value:function(){return this.n=0|1+this.n,0>this.n&&(this.n=1),this.prefix+this.n}}]),e}(),xk=function(){function e(t,r,n){a(this,e),this.id=t,this.upper=r,this.childCodePaths=[],Object.defineProperty(this,"internal",{value:new yk(new vk("".concat(t,"_")),n)}),r&&r.childCodePaths.push(this);}return s(e,[{key:"traverseSegments",value:function(e,t){function r(e){return p[e.id]||l.isLoopedPrevSegment(e)}var n,i;"function"==typeof e?(i=e,n={}):(n=e||{},i=t);for(var a=n.first||this.internal.initialSegment,o=n.last,s=null,u=0,c=0,l=null,p=Object.create(null),f=[[a,0]],h=null,d=!1,m={skip:function(){1>=f.length?d=!0:h=f[f.length-2][0];},break:function(){d=!0;}};0<f.length;){if(s=f[f.length-1],l=s[0],0===(u=s[1])){if(p[l.id]){f.pop();continue}if(l!==a&&0<l.prevSegments.length&&!l.prevSegments.every(r)){f.pop();continue}if(h&&-1!==l.prevSegments.indexOf(h)&&(h=null),p[l.id]=!0,!h&&(i.call(this,l,m),l===o&&m.skip(),d))break}u<(c=l.nextSegments.length-1)?(s[1]+=1,f.push([l.nextSegments[u],0])):u===c?(s[0]=l.nextSegments[u],s[1]=0):f.pop();}}},{key:"initialSegment",get:function(){return this.internal.initialSegment}},{key:"finalSegments",get:function(){return this.internal.finalSegments}},{key:"returnedSegments",get:function(){return this.internal.returnedForkContext}},{key:"thrownSegments",get:function(){return this.internal.thrownForkContext}},{key:"currentSegments",get:function(){return this.internal.currentSegments}}],[{key:"getState",value:function(e){return e.internal}}]),e}(),bk=Fy.require$$0$1.breakableTypePattern;function Ek(e){return !!e.test}function Ck(e){return "&&"===e||"||"===e}function Sk(e){return "LabeledStatement"===e.parent.type?e.parent.label.name:null}function kk(e){return "Literal"===e.type?!!e.value:void 0}function Dk(e,t){var r,n,i,a=e.codePath,o=xk.getState(a),s=o.currentSegments,u=o.headSegments,c=Math.max(s.length,u.length);for(r=0;r<c;++r)(n=s[r])!==(i=u[r])&&n&&(ik.dump("onCodePathSegmentEnd ".concat(n.id)),n.reachable&&e.emitter.emit("onCodePathSegmentEnd",n,t));for(o.currentSegments=u,r=0;r<c;++r)(n=s[r])!==(i=u[r])&&i&&(ik.dump("onCodePathSegmentStart ".concat(i.id)),ok.markUsed(i),i.reachable&&e.emitter.emit("onCodePathSegmentStart",i,t));}function Fk(e,t){var r=e.codePath,n=r&&xk.getState(r),i=t.parent;switch(t.type){case"Program":case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":r&&(Dk(e,t),ik.dumpState(t,n,!1)),r=e.codePath=new xk(e.idGenerator.next(),r,e.onLooped),n=xk.getState(r),ik.dump("onCodePathStart ".concat(r.id)),e.emitter.emit("onCodePathStart",r,t);break;case"LogicalExpression":Ck(t.operator)&&n.pushChoiceContext(t.operator,function(e){var t=e.parent;switch(t.type){case"ConditionalExpression":case"IfStatement":case"WhileStatement":case"DoWhileStatement":case"ForStatement":return t.test===e;case"LogicalExpression":return Ck(t.operator);default:return !1}}(t));break;case"ConditionalExpression":case"IfStatement":n.pushChoiceContext("test",!1);break;case"SwitchStatement":n.pushSwitchContext(t.cases.some(Ek),Sk(t));break;case"TryStatement":n.pushTryContext(!!t.finalizer);break;case"SwitchCase":i.discriminant!==t&&i.cases[0]!==t&&n.forkPath();break;case"WhileStatement":case"DoWhileStatement":case"ForStatement":case"ForInStatement":case"ForOfStatement":n.pushLoopContext(t.type,Sk(t));break;case"LabeledStatement":bk.test(t.body.type)||n.pushBreakContext(!1,t.label.name);}Dk(e,t),ik.dumpState(t,n,!1);}function Ak(e,t){switch(t.type){case"Program":case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":var r=e.codePath;xk.getState(r).makeFinal(),function(e,t){for(var r=xk.getState(e.codePath),n=r.currentSegments,i=0;i<n.length;++i){var a=n[i];ik.dump("onCodePathSegmentEnd ".concat(a.id)),a.reachable&&e.emitter.emit("onCodePathSegmentEnd",a,t);}r.currentSegments=[];}(e,t),ik.dump("onCodePathEnd ".concat(r.id)),e.emitter.emit("onCodePathEnd",r,t),ik.dumpDot(r),(r=e.codePath=e.codePath.upper)&&ik.dumpState(t,xk.getState(r),!0);}}var wk=function(){function e(t){a(this,e),this.original=t,this.emitter=t.emitter,this.codePath=null,this.idGenerator=new vk("s"),this.currentNode=null,this.onLooped=this.onLooped.bind(this);}return s(e,[{key:"enterNode",value:function(e){this.currentNode=e,e.parent&&function(e,t){var r=e.codePath,n=xk.getState(r),i=t.parent;switch(i.type){case"LogicalExpression":i.right===t&&Ck(i.operator)&&n.makeLogicalRight();break;case"ConditionalExpression":case"IfStatement":i.consequent===t?n.makeIfConsequent():i.alternate===t&&n.makeIfAlternate();break;case"SwitchCase":i.consequent[0]===t&&n.makeSwitchCaseBody(!1,!i.test);break;case"TryStatement":i.handler===t?n.makeCatchBlock():i.finalizer===t&&n.makeFinallyBlock();break;case"WhileStatement":i.test===t?n.makeWhileTest(kk(t)):(NC(i.body===t),n.makeWhileBody());break;case"DoWhileStatement":i.body===t?n.makeDoWhileBody():(NC(i.test===t),n.makeDoWhileTest(kk(t)));break;case"ForStatement":i.test===t?n.makeForTest(kk(t)):i.update===t?n.makeForUpdate():i.body===t&&n.makeForBody();break;case"ForInStatement":case"ForOfStatement":i.left===t?n.makeForInOfLeft():i.right===t?n.makeForInOfRight():(NC(i.body===t),n.makeForInOfBody());break;case"AssignmentPattern":i.right===t&&(n.pushForkContext(),n.forkBypassPath(),n.forkPath());}}(this,e),Fk(this,e),this.original.enterNode(e),this.currentNode=null;}},{key:"leaveNode",value:function(e){this.currentNode=e,function(e,t){var r=e.codePath,n=xk.getState(r),i=!1;switch(t.type){case"IfStatement":case"ConditionalExpression":n.popChoiceContext();break;case"LogicalExpression":Ck(t.operator)&&n.popChoiceContext();break;case"SwitchStatement":n.popSwitchContext();break;case"SwitchCase":0===t.consequent.length&&n.makeSwitchCaseBody(!0,!t.test),n.forkContext.reachable&&(i=!0);break;case"TryStatement":n.popTryContext();break;case"BreakStatement":Dk(e,t),n.makeBreak(t.label&&t.label.name),i=!0;break;case"ContinueStatement":Dk(e,t),n.makeContinue(t.label&&t.label.name),i=!0;break;case"ReturnStatement":Dk(e,t),n.makeReturn(),i=!0;break;case"ThrowStatement":Dk(e,t),n.makeThrow(),i=!0;break;case"Identifier":(function(e){var t=e.parent;switch(t.type){case"LabeledStatement":case"BreakStatement":case"ContinueStatement":case"ArrayPattern":case"RestElement":case"ImportSpecifier":case"ImportDefaultSpecifier":case"ImportNamespaceSpecifier":case"CatchClause":return !1;case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":case"ClassDeclaration":case"ClassExpression":case"VariableDeclarator":return t.id!==e;case"Property":case"MethodDefinition":return t.key!==e||t.computed||t.shorthand;case"AssignmentPattern":return t.key!==e;default:return !0}})(t)&&(n.makeFirstThrowablePathInTryBlock(),i=!0);break;case"CallExpression":case"ImportExpression":case"MemberExpression":case"NewExpression":n.makeFirstThrowablePathInTryBlock();break;case"WhileStatement":case"DoWhileStatement":case"ForStatement":case"ForInStatement":case"ForOfStatement":n.popLoopContext();break;case"AssignmentPattern":n.popForkContext();break;case"LabeledStatement":bk.test(t.body.type)||n.popBreakContext();}i||Dk(e,t),ik.dumpState(t,n,!0);}(this,e),this.original.leaveNode(e),Ak(this,e),this.currentNode=null;}},{key:"onLooped",value:function(e,t){e.reachable&&t.reachable&&(ik.dump("onCodePathSegmentLoop ".concat(e.id," -> ").concat(t.id)),this.emitter.emit("onCodePathSegmentLoop",e,t,this.currentNode));}}]),e}();function _k(e,t){return e.line-t.line||e.column-t.column}function Tk(e){var t=[],r=0,n=null,i=new Map,a=new Set,o=new Set,s=!0,u=!1,c=void 0;try{for(var l,p=e.problems[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){for(var f=l.value;r<e.directives.length&&0>=_k(e.directives[r],f);){var h=e.directives[r++];switch(h.type){case"disable":null===h.ruleId?(n=h,i.clear(),a.clear()):n?(a.delete(h.ruleId),i.set(h.ruleId,h)):i.set(h.ruleId,h);break;case"enable":null===h.ruleId?(n=null,i.clear()):n?(a.add(h.ruleId),i.delete(h.ruleId)):i.delete(h.ruleId);}}i.has(f.ruleId)?o.add(i.get(f.ruleId)):n&&!a.has(f.ruleId)?o.add(n):t.push(f);}}catch(e){u=!0,c=e;}finally{try{s||null==p.return||p.return();}finally{if(u)throw c}}return {problems:t,unusedDisableDirectives:e.directives.filter((function(e){return "disable"===e.type&&!o.has(e)})).map((function(t){return {ruleId:null,message:t.ruleId?"Unused eslint-disable directive (no problems were reported from '".concat(t.ruleId,"')."):"Unused eslint-disable directive (no problems were reported).",line:t.unprocessedDirective.line,column:t.unprocessedDirective.column,severity:"warn"===e.reportUnusedDisableDirectives?1:2,nodeType:null}}))}}var Pk=Fy.require$$1("eslint:config-comment-parser"),Ik=function(){function e(){a(this,e);}return s(e,[{key:"parseStringConfig",value:function(e,t){Pk("Parsing String config");var r={};return e.replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*([,:])[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*/g,"$1").split(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]|,+/).forEach((function(e){if(e){var n=b(e.split(":"),2),i=n[0],a=n[1],o=void 0===a?null:a;r[i]={value:o,comment:t};}})),r}},{key:"parseJsonConfig",value:function(e,t){Pk("Parsing JSON config");var r={};try{if(r=jC.parse("Object",e)||{},fS.isEverySeverityValid(r))return {success:!0,config:r}}catch(e){Pk("Levn parsing failed; falling back to manual parsing.");}r={};var n=e.replace(/([\x2D\/-9A-Za-z]+):/g,'"$1":').replace(/(\]|[0-9])[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+(?=")/,"$1,");try{r=JSON.parse("{".concat(n,"}"));}catch(e){return Pk("Manual parsing failed."),{success:!1,error:{ruleId:null,fatal:!0,severity:2,message:"Failed to parse JSON from '".concat(n,"': ").concat(e.message),line:t.start.line,column:t.start.column+1}}}return {success:!0,config:r}}},{key:"parseListConfig",value:function(e){Pk("Parsing list config");var t={};return e.replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*,[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*/g,",").split(/,+/).forEach((function(e){var r=e.trim();r&&(t[r]=!0);})),t}}]),e}();function Bk(e){switch(e.type){case"identifier":return [e.value];case"matches":var t,r=e.selectors.map(Bk);return r.every(Boolean)?(t=Fy.lodash).union.apply(t,E(r)):null;case"compound":var n,i=e.selectors.map(Bk).filter((function(e){return e}));return i.length?(n=Fy.lodash).intersection.apply(n,E(i)):null;case"child":case"descendant":case"sibling":case"adjacent":return Bk(e.right);default:return null}}function Ok(e){switch(e.type){case"child":case"descendant":case"sibling":case"adjacent":return Ok(e.left)+Ok(e.right);case"compound":case"not":case"matches":return e.selectors.reduce((function(e,t){return e+Ok(t)}),0);case"attribute":case"field":case"nth-child":case"nth-last-child":return 1;default:return 0}}function Lk(e){switch(e.type){case"child":case"descendant":case"sibling":case"adjacent":return Lk(e.left)+Lk(e.right);case"compound":case"not":case"matches":return e.selectors.reduce((function(e,t){return e+Lk(t)}),0);case"identifier":return 1;default:return 0}}function Nk(e,t){return e.attributeCount-t.attributeCount||e.identifierCount-t.identifierCount||(e.rawSelector<=t.rawSelector?-1:1)}var jk=Fy.lodash.memoize((function(e){var t=function(e){try{return RC.parse(e.replace(/:exit$/,""))}catch(t){if("number"==typeof t.offset)throw new SyntaxError('Syntax error in selector "'.concat(e,'" at position ').concat(t.offset,": ").concat(t.message));throw t}}(e);return {rawSelector:e,isExit:e.endsWith(":exit"),parsedSelector:t,listenerTypes:Bk(t),attributeCount:Ok(t),identifierCount:Lk(t)}})),Rk=function(){function e(t){var r=this;a(this,e),this.emitter=t,this.currentAncestry=[],this.enterSelectorsByNodeType=new Map,this.exitSelectorsByNodeType=new Map,this.anyTypeEnterSelectors=[],this.anyTypeExitSelectors=[],t.eventNames().forEach((function(e){var t=jk(e);if(t.listenerTypes){var n=t.isExit?r.exitSelectorsByNodeType:r.enterSelectorsByNodeType;t.listenerTypes.forEach((function(e){n.has(e)||n.set(e,[]),n.get(e).push(t);}));}else {(t.isExit?r.anyTypeExitSelectors:r.anyTypeEnterSelectors).push(t);}})),this.anyTypeEnterSelectors.sort(Nk),this.anyTypeExitSelectors.sort(Nk),this.enterSelectorsByNodeType.forEach((function(e){return e.sort(Nk)})),this.exitSelectorsByNodeType.forEach((function(e){return e.sort(Nk)}));}return s(e,[{key:"applySelector",value:function(e,t){RC.matches(e,t.parsedSelector,this.currentAncestry)&&this.emitter.emit(t.rawSelector,e);}},{key:"applySelectors",value:function(e,t){for(var r=(t?this.exitSelectorsByNodeType:this.enterSelectorsByNodeType).get(e.type)||[],n=t?this.anyTypeExitSelectors:this.anyTypeEnterSelectors,i=0,a=0;i<r.length||a<n.length;)i>=r.length||a<n.length&&0>Nk(n[a],r[i])?this.applySelector(e,n[a++]):this.applySelector(e,r[i++]);}},{key:"enterNode",value:function(e){e.parent&&this.currentAncestry.unshift(e.parent),this.applySelectors(e,!1);}},{key:"leaveNode",value:function(e){this.applySelectors(e,!0),this.currentAncestry.shift();}}]),e}();function Mk(e,t){return {range:[e,e],text:t}}var Vk=Object.freeze({insertTextAfter:function(e,t){return this.insertTextAfterRange(e.range,t)},insertTextAfterRange:function(e,t){return Mk(e[1],t)},insertTextBefore:function(e,t){return this.insertTextBeforeRange(e.range,t)},insertTextBeforeRange:function(e,t){return Mk(e[0],t)},replaceText:function(e,t){return this.replaceTextRange(e.range,t)},replaceTextRange:function(e,t){return {range:e,text:t}},remove:function(e){return this.removeRange(e.range)},removeRange:function(e){return {range:e,text:""}}}),Uk=function(e,t){return t?e.replace(/\{\{((?:[\0-z\|~-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+?)\}\}/g,(function(e,r){var n=r.trim();return n in t?t[n]:e})):e};function qk(){return 1===arguments.length?Object.assign({},arguments.length<=0?void 0:arguments[0]):"string"==typeof(arguments.length<=1?void 0:arguments[1])?{node:arguments.length<=0?void 0:arguments[0],message:arguments.length<=1?void 0:arguments[1],data:arguments.length<=2?void 0:arguments[2],fix:arguments.length<=3?void 0:arguments[3]}:{node:arguments.length<=0?void 0:arguments[0],loc:arguments.length<=1?void 0:arguments[1],message:arguments.length<=2?void 0:arguments[2],data:arguments.length<=3?void 0:arguments[3],fix:arguments.length<=4?void 0:arguments[4]}}function Wk(e){e.node?NC("object"==i(e.node),"Node must be an object"):NC(e.loc,"Node must be provided when reporting error if location is not provided");}function $k(e){return e.loc?e.loc.start?e.loc:{start:e.loc,end:null}:e.node.loc}function Gk(e,t){return e.range[0]-t.range[0]||e.range[1]-t.range[1]}function zk(e,t){if("function"!=typeof e.fix)return null;var r=e.fix(Vk);return r&&Symbol.iterator in r?function(e,t){var r=Math.max;if(0===e.length)return null;if(1===e.length)return e[0];e.sort(Gk);var n=t.text,i=e[0].range[0],a=e[e.length-1].range[1],o="",s=Number.MIN_SAFE_INTEGER,u=!0,c=!1,l=void 0;try{for(var p,f=e[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var h=p.value;NC(h.range[0]>=s,"Fix objects must not be overlapped in a report."),0<=h.range[0]&&(o+=n.slice(r(0,i,s),h.range[0])),o+=h.text,s=h.range[1];}}catch(e){c=!0,l=e;}finally{try{u||null==f.return||f.return();}finally{if(c)throw l}}return {range:[i,a],text:o+=n.slice(r(0,i,s),a)}}(Array.from(r),t):r}function Hk(e,t,r){return e.suggest&&Array.isArray(e.suggest)?e.suggest.map((function(e){var n=e.desc||r[e.messageId];return p({},e,{desc:Uk(n,e.data),fix:zk(e,t)})})):[]}function Kk(e){var t={ruleId:e.ruleId,severity:e.severity,message:e.message,line:e.loc.start.line,column:e.loc.start.column+1,nodeType:e.node&&e.node.type||null};return e.messageId&&(t.messageId=e.messageId),e.loc.end&&(t.endLine=e.loc.end.line,t.endColumn=e.loc.end.column+1),e.fix&&(t.fix=e.fix),e.suggestions&&0<e.suggestions.length&&(t.suggestions=e.suggestions),t}function Jk(e,t){e&&Array.isArray(e)&&e.forEach((function(e){if(e.messageId){var r=e.messageId;if(!t)throw new TypeError("context.report() called with a suggest option with a messageId '".concat(r,"', but no messages were present in the rule metadata."));if(!t[r])throw new TypeError("context.report() called with a suggest option with a messageId '".concat(r,"' which is not present in the 'messages' config: ").concat(JSON.stringify(t,null,2)));if(e.desc)throw new TypeError("context.report() called with a suggest option that defines both a 'messageId' and an 'desc'. Please only pass one.")}else if(!e.desc)throw new TypeError("context.report() called with a suggest option that doesn't have either a `desc` or `messageId`");if("function"!=typeof e.fix)throw new TypeError("context.report() called with a suggest option without a fix function. See: ".concat(e))}));}var Qk=function(e){return function(){var t,r=qk.apply(void 0,arguments),n=e.messageIds;if(Wk(r),r.messageId){if(!n)throw new TypeError("context.report() called with a messageId, but no messages were present in the rule metadata.");var i=r.messageId;if(r.message)throw new TypeError("context.report() called with a message and a messageId. Please only pass one.");if(!n||!Object.prototype.hasOwnProperty.call(n,i))throw new TypeError("context.report() called with a messageId of '".concat(i,"' which is not present in the 'messages' config: ").concat(JSON.stringify(n,null,2)));t=n[i];}else {if(!r.message)throw new TypeError("Missing `message` property in report() call; add a message that describes the linting problem.");t=r.message;}return Jk(r.suggest,n),Kk({ruleId:e.ruleId,severity:e.severity,node:r.node,message:Uk(t,r.data),messageId:r.messageId,loc:$k(r),fix:e.disableFixes?null:zk(r,e.sourceCode),suggestions:e.disableFixes?[]:Hk(r,e.sourceCode,n)})}};var Xk=function(){function e(){a(this,e),this._rules=Object.create(null);}return s(e,[{key:"define",value:function(e,t){this._rules[e]=function(e){return "function"==typeof e?Object.assign({create:e},e):e}(t);}},{key:"get",value:function(e){return "string"==typeof this._rules[e]&&this.define(e,null),this._rules[e]?this._rules[e]:mS.has(e)?mS.get(e):null}},{key:Symbol.iterator,value:regeneratorRuntime.mark((function e(){var t,r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(mS,"t0",1);case 1:t=0,r=Object.keys(this._rules);case 2:if(!(t<r.length)){e.next=9;break}return n=r[t],e.next=6,[n,this.get(n)];case 6:t++,e.next=2;break;case 9:case"end":return e.stop()}}),e,this)}))}]),e}(),Yk=function(){var e=Object.create(null);return Object.freeze({on:function(t,r){t in e?e[t].push(r):e[t]=[r];},emit:function(t){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];t in e&&e[t].forEach((function(e){return e.apply(void 0,n)}));},eventNames:function(){return Object.keys(e)}})},Zk=Fy.require$$1("eslint:source-code-fixer"),eD="\ufeff";function tD(e,t){return e.fix.range[0]-t.fix.range[0]||e.fix.range[1]-t.fix.range[1]}function rD(e,t){return e.line-t.line||e.column-t.column}function nD(){Object.freeze(this);}nD.applyFixes=function(e,t,r){function n(e){var t=e.fix,r=t.range[0],n=t.range[1];return c>=r||r>n?(a.push(e),!1):((0>r&&0<=n||0===r&&t.text.startsWith(eD))&&(l=""),l+=u.slice(i(0,c),i(0,r)),l+=t.text,c=n,!0)}var i=Math.max;if(Zk("Applying fixes"),!1===r)return Zk("shouldFix parameter was false, not attempting fixes"),{fixed:!1,messages:t,output:e};var a=[],o=[],s=e.startsWith(eD)?eD:"",u=s?e.slice(1):e,c=Number.NEGATIVE_INFINITY,l=s;if(t.forEach((function(e){Object.prototype.hasOwnProperty.call(e,"fix")?o.push(e):a.push(e);})),o.length){Zk("Found fixes to apply");var p=!1,f=!0,h=!1,d=void 0;try{for(var m,g=o.sort(tD)[Symbol.iterator]();!(f=(m=g.next()).done);f=!0){var y=m.value;"function"!=typeof r||r(y)?(n(y),p=!0):a.push(y);}}catch(e){h=!0,d=e;}finally{try{f||null==g.return||g.return();}finally{if(h)throw d}}return l+=u.slice(i(0,c)),{fixed:p,messages:a.sort(rD),output:l}}return Zk("No fixes to apply"),{fixed:!1,messages:t,output:s+u}};var iD=nD,aD={"generator-star":["generator-star-spacing"],"global-strict":["strict"],"no-arrow-condition":["no-confusing-arrow","no-constant-condition"],"no-comma-dangle":["comma-dangle"],"no-empty-class":["no-empty-character-class"],"no-empty-label":["no-labels"],"no-extra-strict":["strict"],"no-reserved-keys":["quote-props"],"no-space-before-semi":["semi-spacing"],"no-wrap-func":["no-extra-parens"],"space-after-function-name":["space-before-function-paren"],"space-after-keywords":["keyword-spacing"],"space-before-function-parentheses":["space-before-function-paren"],"space-before-keywords":["keyword-spacing"],"space-in-brackets":["object-curly-spacing","array-bracket-spacing","computed-property-spacing"],"space-return-throw-case":["keyword-spacing"],"space-unary-word-ops":["space-unary-ops"],"spaced-line-comment":["spaced-comment"]},oD={rules:aD},sD=Object.freeze({__proto__:null,rules:aD,default:oD}),uD=Fy.getCjsExportFromNamespace(pS),cD=Fy.getCjsExportFromNamespace(sD),lD=tk.SourceCode,pD=Fy.require$$1("eslint:linter"),fD=new Ik,hD={start:{line:1,column:0},end:{line:1,column:1}};function dD(e){var t=e.ruleId,r=void 0===t?null:t,n=e.loc,i=void 0===n?hD:n,a=e.message,o=void 0===a?function(e){return Object.prototype.hasOwnProperty.call(cD.rules,e)?"Rule '".concat(e,"' was removed and replaced by: ").concat(cD.rules[e].join(", ")):"Definition for rule '".concat(e,"' was not found.")}(e.ruleId):a,s=e.severity,u=void 0===s?2:s;return {ruleId:r,message:o,line:i.start.line,column:i.start.column+1,endLine:i.end.line,endColumn:i.end.column+1,severity:u,nodeType:null}}function mD(e,t,r,n){var i={},a=Object.create(null),o={},s=[],u=[];return t.comments.filter((function(e){return "Shebang"!==e.type})).forEach((function(e){var t=e.value.trim(),c=/^(eslint(?:\x2Denv|\x2Denable|\x2Ddisable(?:(?:\x2Dnext)?\x2Dline)?)?|exported|globals?)(?:[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]|$)/.exec(t);if(c){var l=c[1],p=/^eslint\x2Ddisable\x2D(next\x2D)?line$/.test(l);if("Line"!==e.type||p){if(n){var f="Block"===e.type?"/*".concat(l,"*/"):"//".concat(l);return void s.push(dD({ruleId:null,message:"'".concat(f,"' has no effect because you have 'noInlineConfig' setting in ").concat(n,"."),loc:e.loc,severity:1}))}if(p&&e.loc.start.line!==e.loc.end.line)return void s.push(dD({ruleId:null,message:"".concat(l," comment should not span multiple lines."),loc:e.loc}));var h=t.slice(c.index+l.length);switch(l){case"eslint-disable":case"eslint-enable":case"eslint-disable-next-line":case"eslint-disable-line":var d=function(e){var t=e.type,r=e.loc,n=e.value,i=e.ruleMapper,a=Object.keys(fD.parseListConfig(n)),o=a.length?a:[null],s={directives:[],directiveProblems:[]},u=!0,c=!1,l=void 0;try{for(var p,f=o[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var h=p.value;null===h||null!==i(h)?s.directives.push({type:t,line:r.start.line,column:r.start.column+1,ruleId:h}):s.directiveProblems.push(dD({ruleId:h,loc:r}));}}catch(e){c=!0,l=e;}finally{try{u||null==f.return||f.return();}finally{if(c)throw l}}return s}({type:l.slice(7),loc:e.loc,value:h,ruleMapper:r}),m=d.directives,g=d.directiveProblems;u.push.apply(u,E(m)),s.push.apply(s,E(g));break;case"exported":Object.assign(o,fD.parseStringConfig(h,e));break;case"globals":case"global":for(var y=0,v=Object.entries(fD.parseStringConfig(h,e));y<v.length;y++){var x=b(v[y],2),C=x[0],S=x[1].value,k=void 0;try{k=fS.normalizeConfigGlobal(S);}catch(t){s.push(dD({ruleId:null,loc:e.loc,message:t.message}));continue}a[C]?(a[C].comments.push(e),a[C].value=k):a[C]={comments:[e],value:k};}break;case"eslint":var D=fD.parseJsonConfig(h,e.loc);D.success?Object.keys(D.config).forEach((function(t){var n=r(t),a=D.config[t];if(null!==n){try{TS.validateRuleOptions(n,t,a);}catch(r){return void s.push(dD({ruleId:t,message:r.message,loc:e.loc}))}i[t]=a;}else s.push(dD({ruleId:t,loc:e.loc}));})):s.push(D.error);}}}})),{configuredRules:i,enabledGlobals:a,exportedVariables:o,problems:s,disableDirectives:u}}var gD=/\/\*[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*eslint\x2Denv[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+?)\*\//g;function yD(e){var t=e.split(PC.sep),r=t.lastIndexOf("<text>");return -1===r?e:t.slice(r).join(PC.sep)}function vD(e){return Array.isArray(e)?e.slice(1):[]}function xD(e,t,r){var n=t.ecmaFeatures||{},i=t.ecmaVersion||5;return IC.analyze(e,{ignoreEval:!0,nodejsScope:n.globalReturn,impliedStrict:n.impliedStrict,ecmaVersion:i,sourceType:t.sourceType||"script",childVisitorKeys:r||Fy.evk.KEYS,fallback:Fy.Traverser.getKeys})}function bD(e,t){for(var r="Program"!==t.type,n=t;n;n=n.parent){var i=e.acquire(n,r);if(i)return "function-expression-name"===i.type?i.childScopes[0]:i}return e.scopes[0]}var ED={getSource:"getText",getSourceLines:"getLines",getAllComments:"getAllComments",getNodeByRangeIndex:"getNodeByRangeIndex",getComments:"getComments",getCommentsBefore:"getCommentsBefore",getCommentsAfter:"getCommentsAfter",getCommentsInside:"getCommentsInside",getJSDocComment:"getJSDocComment",getFirstToken:"getFirstToken",getFirstTokens:"getFirstTokens",getLastToken:"getLastToken",getLastTokens:"getLastTokens",getTokenAfter:"getTokenAfter",getTokenBefore:"getTokenBefore",getTokenByRangeStart:"getTokenByRangeStart",getTokens:"getTokens",getTokensAfter:"getTokensAfter",getTokensBefore:"getTokensBefore",getTokensBetween:"getTokensBetween"},CD=Object.freeze(Object.keys(ED).reduce((function(e,t){return Object.assign(e,u({},t,(function(){var e;return (e=this.getSourceCode())[ED[t]].apply(e,arguments)})))}),{}));function SD(e,t,r,n,i,a,o,s,u){var c=Yk(),l=[],p=e.ast;Fy.Traverser.traverse(e.ast,{enter:function(e,t){e.parent=t,l.push({isEntering:!0,node:e});},leave:function(e){l.push({isEntering:!1,node:e});},visitorKeys:e.visitorKeys});var f=Object.freeze(Object.assign(Object.create(CD),{getAncestors:function(){return function(e){for(var t=[],r=e.parent;r;r=r.parent)t.push(r);return t.reverse()}(p)},getDeclaredVariables:e.scopeManager.getDeclaredVariables.bind(e.scopeManager),getCwd:function(){return u},getFilename:function(){return o},getScope:function(){return bD(e.scopeManager,p)},getSourceCode:function(){return e},markVariableAsUsed:function(t){return function(e,t,r,n){for(var i=r.ecmaFeatures&&r.ecmaFeatures.globalReturn||"module"===r.sourceType,a=bD(e,t),o="global"===a.type&&i?a.childScopes[0]:a;o;o=o.upper){var s=o.variables.find((function(e){return e.name===n}));if(s)return s.eslintUsed=!0,!0}return !1}(e.scopeManager,p,n,t)},parserOptions:n,parserPath:i,parserServices:e.parserServices,settings:a})),h=[];Object.keys(t).forEach((function(n){var i=fS.getRuleSeverity(t[n]);if(0!==i){var a=r(n);if(null!==a){var o=a.meta&&a.meta.messages,u=null,l=Object.freeze(Object.assign(Object.create(f),{id:n,options:vD(t[n]),report:function(){null===u&&(u=Qk({ruleId:n,severity:i,sourceCode:e,messageIds:o,disableFixes:s}));var t=u.apply(void 0,arguments);if(t.fix&&a.meta&&!a.meta.fixable)throw new Error("Fixable rules should export a `meta.fixable` property.");h.push(t);}})),p=function(e,t){try{return e.create(t)}catch(e){throw e.message="Error while loading rule '".concat(t.id,"': ").concat(e.message),e}}(a,l);Object.keys(p).forEach((function(e){c.on(e,p[e]);}));}else h.push(dD({ruleId:n}));}}));var d=new wk(new Rk(c));return l.forEach((function(e){p=e.node;try{e.isEntering?d.enterNode(p):d.leaveNode(p);}catch(e){throw e.currentNode=p,e}})),h}function kD(e,t){return e.lastConfigArray&&e.lastConfigArray.pluginRules.get(t)||e.ruleMap.get(t)}function DD(e){return e||("object"==("undefined"==typeof process?"undefined":i(process))?process.cwd():void 0)}var FD=new WeakMap,AD={linter_1:{Linter:{Linter:function(){function e(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).cwd;a(this,e),FD.set(this,{cwd:DD(t),lastConfigArray:null,lastSourceCode:null,parserMap:new Map([["espree",Fy.espree]]),ruleMap:new Xk}),this.version=uD.version;}return s(e,[{key:"_verifyWithoutProcessors",value:function(e,t,r){var n,a=FD.get(this),o=t||{},s=function(e,t){var r=!0===t.noInlineConfig,n=!1===e.allowInlineConfig,i=t.configNameOfNoInlineConfig?" (".concat(t.configNameOfNoInlineConfig,")"):"",a=e.reportUnusedDisableDirectives;return "boolean"==typeof a&&(a=a?"error":"off"),"string"!=typeof a&&(a=t.reportUnusedDisableDirectives?"warn":"off"),{filename:yD(e.filename||"<input>"),allowInlineConfig:!n,warnInlineConfig:r&&!n?"your config".concat(i):null,reportUnusedDisableDirectives:a,disableFixes:!!e.disableFixes}}(r,o);"string"==typeof e?(a.lastSourceCode=null,n=e):(a.lastSourceCode=e,n=e.text);var u="espree",c=Fy.espree;if("object"==i(o.parser)&&null!==o.parser)u=o.parser.filePath,c=o.parser.definition;else if("string"==typeof o.parser){if(!a.parserMap.has(o.parser))return [{ruleId:null,fatal:!0,severity:2,message:"Configured parser '".concat(o.parser,"' was not found."),line:0,column:0}];u=o.parser,c=a.parserMap.get(o.parser);}var l=s.allowInlineConfig&&!s.warnInlineConfig?function(e){var t,r;for(gD.lastIndex=0;t=gD.exec(e);)r=Object.assign(r||{},fD.parseListConfig(t[1]));return r}(n):{},p=Object.assign({builtin:!0},o.env,l),f=Object.keys(p).filter((function(e){return p[e]})).map((function(e){return function(e,t){return e.lastConfigArray&&e.lastConfigArray.pluginEnvironments.get(t)||qC.get(t)||null}(a,e)})).filter((function(e){return e})),h=function(e,t,r){var n=r.filter((function(e){return e.parserOptions})).reduce((function(e,t){return Fy.lodash.merge(e,t.parserOptions)}),{}),i=Fy.lodash.merge(n,t||{});return "module"===i.sourceType&&(i.ecmaFeatures=Object.assign({},i.ecmaFeatures,{globalReturn:!1})),i.ecmaVersion=function(e){return 2015<=e?e-2009:e}(i.ecmaVersion),i}(0,o.parserOptions||{},f),d=function(e,t){return Object.assign.apply(Object,[{}].concat(E(t.filter((function(e){return e.globals})).map((function(e){return e.globals}))),[e]))}(o.globals||{},f),m=o.settings||{};if(a.lastSourceCode)a.lastSourceCode.scopeManager||(a.lastSourceCode=new lD({text:a.lastSourceCode.text,ast:a.lastSourceCode.ast,parserServices:a.lastSourceCode.parserServices,visitorKeys:a.lastSourceCode.visitorKeys,scopeManager:xD(a.lastSourceCode.ast,h)}));else {var g=function(e,t,r,n){var i=function(e){return 65279===e.charCodeAt(0)?e.slice(1):e}(e).replace(Fy.require$$0$1.shebangPattern,(function(e,t){return "//".concat(t)})),a=Object.assign({},r,{loc:!0,range:!0,raw:!0,tokens:!0,comment:!0,eslintVisitorKeys:!0,eslintScopeManager:!0,filePath:n});try{var o="function"==typeof t.parseForESLint?t.parseForESLint(i,a):{ast:t.parse(i,a)},s=o.ast,u=o.services||{},c=o.visitorKeys||Fy.evk.KEYS,l=o.scopeManager||xD(s,a,c);return {success:!0,sourceCode:new lD({text:e,ast:s,parserServices:u,scopeManager:l,visitorKeys:c})}}catch(e){var p="Parsing error: ".concat(e.message.replace(/^line [0-9]+:/i,"").trim());return pD("%s\n%s",p,e.stack),{success:!1,error:{ruleId:null,fatal:!0,severity:2,message:p,line:e.lineNumber,column:e.column}}}}(n,c,h,s.filename);if(!g.success)return [g.error];a.lastSourceCode=g.sourceCode;}var y=a.lastSourceCode,v=s.allowInlineConfig?mD(s.filename,y.ast,(function(e){return kD(a,e)}),s.warnInlineConfig):{configuredRules:{},enabledGlobals:{},exportedVariables:{},problems:[],disableDirectives:[]};!function(e,t,r){var n=r.exportedVariables,i=r.enabledGlobals,a=!0,o=!1,s=void 0;try{for(var u,c=new Set([].concat(E(Object.keys(t)),E(Object.keys(i))))[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var l=u.value,p=void 0===t[l]?void 0:fS.normalizeConfigGlobal(t[l]),f=i[l]&&i[l].value||p,h=i[l]&&i[l].comments;if("off"!==f){var d=e.set.get(l);d||(d=new IC.Variable(l,e),e.variables.push(d),e.set.set(l,d)),d.eslintImplicitGlobalSetting=p,d.eslintExplicitGlobal=void 0!==h,d.eslintExplicitGlobalComments=h,d.writeable="writable"===f;}}}catch(e){o=!0,s=e;}finally{try{a||null==c.return||c.return();}finally{if(o)throw s}}Object.keys(n).forEach((function(t){var r=e.set.get(t);r&&(r.eslintUsed=!0);})),e.through=e.through.filter((function(t){var r=t.identifier.name,n=e.set.get(r);return !n||(t.resolved=n,n.references.push(t),!1)}));}(y.scopeManager.scopes[0],d,{exportedVariables:v.exportedVariables,enabledGlobals:v.enabledGlobals});var x,b=Object.assign({},o.rules,v.configuredRules);try{x=SD(y,b,(function(e){return kD(a,e)}),h,u,m,s.filename,s.disableFixes,a.cwd);}catch(e){if(e.message+="\nOccurred while linting ".concat(s.filename),pD("An error occurred while traversing"),pD("Filename:",s.filename),e.currentNode){var C=e.currentNode.loc.start.line;pD("Line:",C),e.message+=":".concat(C);}throw pD("Parser Options:",h),pD("Parser Path:",u),pD("Settings:",m),e}return function(e){var t=e.directives,r=e.problems,n=e.reportUnusedDisableDirectives,i=void 0===n?"off":n,a=t.filter((function(e){return "disable"===e.type||"enable"===e.type})).map((function(e){return Object.assign({},e,{unprocessedDirective:e})})).sort(_k),o=Fy.lodash.flatMap(t,(function(e){switch(e.type){case"disable":case"enable":return [];case"disable-line":return [{type:"disable",line:e.line,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+1,column:0,ruleId:e.ruleId,unprocessedDirective:e}];case"disable-next-line":return [{type:"disable",line:e.line+1,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+2,column:0,ruleId:e.ruleId,unprocessedDirective:e}];default:throw new TypeError("Unrecognized directive type '".concat(e.type,"'"))}})).sort(_k),s=Tk({problems:r,directives:a,reportUnusedDisableDirectives:i}),u=Tk({problems:s.problems,directives:o,reportUnusedDisableDirectives:i});return "off"===i?u.problems:u.problems.concat(s.unusedDisableDirectives).concat(u.unusedDisableDirectives).sort(_k)}({directives:v.disableDirectives,problems:x.concat(v.problems).sort((function(e,t){return e.line-t.line||e.column-t.column})),reportUnusedDisableDirectives:s.reportUnusedDisableDirectives})}},{key:"verify",value:function(e,t,r){pD("Verify");var n="string"==typeof r?{filename:r}:r||{};return t&&"function"==typeof t.extractConfig?this._verifyWithConfigArray(e,t,n):n.preprocess||n.postprocess?this._verifyWithProcessor(e,t,n):this._verifyWithoutProcessors(e,t,n)}},{key:"_verifyWithConfigArray",value:function(e,t,r){pD("With ConfigArray: %s",r.filename),FD.get(this).lastConfigArray=t;var n=t.extractConfig(r.filename),i=n.processor&&t.pluginProcessors.get(n.processor);if(i){pD("Apply the processor: %o",n.processor);var a=i.preprocess,o=i.postprocess,s=i.supportsAutofix,u=r.disableFixes||!s;return this._verifyWithProcessor(e,n,p({},r,{disableFixes:u,postprocess:o,preprocess:a}),t)}return this._verifyWithoutProcessors(e,n,r)}},{key:"_verifyWithProcessor",value:function(e,t,r,n){var a=this,o=r.filename||"<input>",s=yD(o),u=function(e){return "object"==i(e)?(e.hasBOM?"\ufeff":"")+e.text:e+""}(e),c=r.preprocess||function(e){return [e]},l=r.postprocess||Fy.lodash.flatten,f=r.filterCodeBlock||function(e){return e.endsWith(".js")},h=PC.extname(o);return l(c(u,s).map((function(e,i){if(pD("A code block was found: %o",e.filename||"(unnamed)"),"string"==typeof e)return a._verifyWithoutProcessors(e,t,r);var s=e.text,u=PC.join(o,"".concat(i,"_").concat(e.filename));return f(u,s)?n&&PC.extname(u)!==h?(pD("Resolving configuration again because the file extension was changed."),a._verifyWithConfigArray(s,n,p({},r,{filename:u}))):a._verifyWithoutProcessors(s,t,p({},r,{filename:u})):(pD("This code block was skipped."),[])})),s)}},{key:"getSourceCode",value:function(){return FD.get(this).lastSourceCode}},{key:"defineRule",value:function(e,t){FD.get(this).ruleMap.define(e,t);}},{key:"defineRules",value:function(e){var t=this;Object.getOwnPropertyNames(e).forEach((function(r){t.defineRule(r,e[r]);}));}},{key:"getRules",value:function(){var e=FD.get(this),t=e.lastConfigArray,r=e.ruleMap;return new Map(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(r,"t0",1);case 1:if(e.t1=t,!e.t1){e.next=4;break}return e.delegateYield(t.pluginRules,"t2",4);case 4:case"end":return e.stop()}}),e)}))())}},{key:"defineParser",value:function(e,t){FD.get(this).parserMap.set(e,t);}},{key:"verifyAndFix",value:function(e,t,r){var n,i=[],a=!1,o=0,s=e,u=r&&r.filename||"".concat(e.slice(0,10),"..."),c=!(r&&void 0!==r.fix)||r.fix;do{if(o++,pD("Linting code for ".concat(u," (pass ").concat(o,")")),i=this.verify(s,t,r),pD("Generating fixed text for ".concat(u," (pass ").concat(o,")")),n=iD.applyFixes(s,i,c),1===i.length&&i[0].fatal)break;a=a||n.fixed,s=n.output;}while(n.fixed&&o<10);return n.fixed&&(n.messages=this.verify(s,t,r)),n.fixed=a,n.output=s,n}}],[{key:"version",get:function(){return uD.version}}]),e}(),getLinterInternalSlots:function(e){return FD.get(e)}}.Linter,SourceCodeFixer:iD,interpolate:Uk}.Linter},wD=r((function(e){!function(){function t(e){if(null==e)return !1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return !0}return !1}function r(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return !1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return !0}return !1},isStatement:t,isIterationStatement:function(e){if(null==e)return !1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return !0}return !1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return !1;if(null==e.alternate)return !1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return !0;t=r(t);}while(t);return !1},trailingStatement:r};}();})),_D=(wD.isExpression,wD.isStatement,wD.isIterationStatement,wD.isSourceElement,wD.isProblematicIfStatement,wD.trailingStatement,r((function(e){!function(){var t,r,n,i,a,o;function s(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(r={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},n=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],i=new Array(128),o=0;o<128;++o)i[o]=o>=97&&o<=122||o>=65&&o<=90||36===o||95===o;for(a=new Array(128),o=0;o<128;++o)a[o]=o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||36===o||95===o;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&n.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?i[e]:r.NonAsciiIdentifierStart.test(s(e))},isIdentifierPartES5:function(e){return e<128?a[e]:r.NonAsciiIdentifierPart.test(s(e))},isIdentifierStartES6:function(e){return e<128?i[e]:t.NonAsciiIdentifierStart.test(s(e))},isIdentifierPartES6:function(e){return e<128?a[e]:t.NonAsciiIdentifierPart.test(s(e))}};}();}))),TD=(_D.isDecimalDigit,_D.isHexDigit,_D.isOctalDigit,_D.isWhiteSpace,_D.isLineTerminator,_D.isIdentifierStartES5,_D.isIdentifierPartES5,_D.isIdentifierStartES6,_D.isIdentifierPartES6,r((function(e){!function(){var t=_D;function r(e,t){return !(!t&&"yield"===e)&&n(e,t)}function n(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return !0;default:return !1}}(e))return !0;switch(e.length){case 2:return "if"===e||"in"===e||"do"===e;case 3:return "var"===e||"for"===e||"new"===e||"try"===e;case 4:return "this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return "while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return "return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return "default"===e||"finally"===e||"extends"===e;case 8:return "function"===e||"continue"===e||"debugger"===e;case 10:return "instanceof"===e;default:return !1}}function i(e,t){return "null"===e||"true"===e||"false"===e||r(e,t)}function a(e,t){return "null"===e||"true"===e||"false"===e||n(e,t)}function o(e){var r,n,i;if(0===e.length)return !1;if(i=e.charCodeAt(0),!t.isIdentifierStartES5(i))return !1;for(r=1,n=e.length;r<n;++r)if(i=e.charCodeAt(r),!t.isIdentifierPartES5(i))return !1;return !0}function s(e){var r,n,i,a,o;if(0===e.length)return !1;for(o=t.isIdentifierStartES6,r=0,n=e.length;r<n;++r){if(55296<=(i=e.charCodeAt(r))&&i<=56319){if(++r>=n)return !1;if(!(56320<=(a=e.charCodeAt(r))&&a<=57343))return !1;i=1024*(i-55296)+(a-56320)+65536;}if(!o(i))return !1;o=t.isIdentifierPartES6;}return !0}e.exports={isKeywordES5:r,isKeywordES6:n,isReservedWordES5:i,isReservedWordES6:a,isRestrictedWord:function(e){return "eval"===e||"arguments"===e},isIdentifierNameES5:o,isIdentifierNameES6:s,isIdentifierES5:function(e,t){return o(e)&&!i(e,t)},isIdentifierES6:function(e,t){return s(e)&&!a(e,t)}};}();}))),PD=(TD.isKeywordES5,TD.isKeywordES6,TD.isReservedWordES5,TD.isReservedWordES6,TD.isRestrictedWord,TD.isIdentifierNameES5,TD.isIdentifierNameES6,TD.isIdentifierES5,TD.isIdentifierES6,r((function(e,t){t.ast=wD,t.code=_D,t.keyword=TD;}))),ID=(PD.ast,PD.code,PD.keyword,function(e){return new MD(e||HD,null)}
   /*! @author Toru Nagashima <https://github.com/mysticatea> */),BD=0,OD=1;function LD(e,t,r,n,i,a){this._color=e,this.key=t,this.value=r,this.left=n,this.right=i,this._count=a;}function ND(e){return new LD(e._color,e.key,e.value,e.left,e.right,e._count)}function jD(e,t){return new LD(e,t.key,t.value,t.left,t.right,t._count)}function RD(e){e._count=1+(e.left?e.left._count:0)+(e.right?e.right._count:0);}function MD(e,t){this._compare=e,this.root=t;}var VD=MD.prototype;function UD(e,t){var r;if(t.left&&(r=UD(e,t.left)))return r;return (r=e(t.key,t.value))||(t.right?UD(e,t.right):void 0)}function qD(e,t,r,n){if(t(e,n.key)<=0){var i;if(n.left)if(i=qD(e,t,r,n.left))return i;if(i=r(n.key,n.value))return i}if(n.right)return qD(e,t,r,n.right)}function WD(e,t,r,n,i){var a,o=r(e,i.key),s=r(t,i.key);if(o<=0){if(i.left&&(a=WD(e,t,r,n,i.left)))return a;if(s>0&&(a=n(i.key,i.value)))return a}if(s>0&&i.right)return WD(e,t,r,n,i.right)}function $D(e,t){this.tree=e,this._stack=t;}Object.defineProperty(VD,"keys",{get:function(){var e=[];return this.forEach((function(t,r){e.push(t);})),e}}),Object.defineProperty(VD,"values",{get:function(){var e=[];return this.forEach((function(t,r){e.push(r);})),e}}),Object.defineProperty(VD,"length",{get:function(){return this.root?this.root._count:0}}),VD.insert=function(e,t){for(var r=this._compare,n=this.root,i=[],a=[];n;){var o=r(e,n.key);i.push(n),a.push(o),n=o<=0?n.left:n.right;}i.push(new LD(BD,e,t,null,null,1));for(var s=i.length-2;s>=0;--s){n=i[s];a[s]<=0?i[s]=new LD(n._color,n.key,n.value,i[s+1],n.right,n._count+1):i[s]=new LD(n._color,n.key,n.value,n.left,i[s+1],n._count+1);}for(s=i.length-1;s>1;--s){var u=i[s-1];n=i[s];if(u._color===OD||n._color===OD)break;var c=i[s-2];if(c.left===u)if(u.left===n){if(!(l=c.right)||l._color!==BD){if(c._color=BD,c.left=u.right,u._color=OD,u.right=c,i[s-2]=u,i[s-1]=n,RD(c),RD(u),s>=3)(p=i[s-3]).left===c?p.left=u:p.right=u;break}u._color=OD,c.right=jD(OD,l),c._color=BD,s-=1;}else {if(!(l=c.right)||l._color!==BD){if(u.right=n.left,c._color=BD,c.left=n.right,n._color=OD,n.left=u,n.right=c,i[s-2]=n,i[s-1]=u,RD(c),RD(u),RD(n),s>=3)(p=i[s-3]).left===c?p.left=n:p.right=n;break}u._color=OD,c.right=jD(OD,l),c._color=BD,s-=1;}else if(u.right===n){if(!(l=c.left)||l._color!==BD){if(c._color=BD,c.right=u.left,u._color=OD,u.left=c,i[s-2]=u,i[s-1]=n,RD(c),RD(u),s>=3)(p=i[s-3]).right===c?p.right=u:p.left=u;break}u._color=OD,c.left=jD(OD,l),c._color=BD,s-=1;}else {var l;if(!(l=c.left)||l._color!==BD){var p;if(u.left=n.right,c._color=BD,c.right=n.left,n._color=OD,n.right=u,n.left=c,i[s-2]=n,i[s-1]=u,RD(c),RD(u),RD(n),s>=3)(p=i[s-3]).right===c?p.right=n:p.left=n;break}u._color=OD,c.left=jD(OD,l),c._color=BD,s-=1;}}return i[0]._color=OD,new MD(r,i[0])},VD.forEach=function(e,t,r){if(this.root)switch(arguments.length){case 1:return UD(e,this.root);case 2:return qD(t,this._compare,e,this.root);case 3:if(this._compare(t,r)>=0)return;return WD(t,r,this._compare,e,this.root)}},Object.defineProperty(VD,"begin",{get:function(){for(var e=[],t=this.root;t;)e.push(t),t=t.left;return new $D(this,e)}}),Object.defineProperty(VD,"end",{get:function(){for(var e=[],t=this.root;t;)e.push(t),t=t.right;return new $D(this,e)}}),VD.at=function(e){if(e<0)return new $D(this,[]);for(var t=this.root,r=[];;){if(r.push(t),t.left){if(e<t.left._count){t=t.left;continue}e-=t.left._count;}if(!e)return new $D(this,r);if(e-=1,!t.right)break;if(e>=t.right._count)break;t=t.right;}return new $D(this,[])},VD.ge=function(e){for(var t=this._compare,r=this.root,n=[],i=0;r;){var a=t(e,r.key);n.push(r),a<=0&&(i=n.length),r=a<=0?r.left:r.right;}return n.length=i,new $D(this,n)},VD.gt=function(e){for(var t=this._compare,r=this.root,n=[],i=0;r;){var a=t(e,r.key);n.push(r),a<0&&(i=n.length),r=a<0?r.left:r.right;}return n.length=i,new $D(this,n)},VD.lt=function(e){for(var t=this._compare,r=this.root,n=[],i=0;r;){var a=t(e,r.key);n.push(r),a>0&&(i=n.length),r=a<=0?r.left:r.right;}return n.length=i,new $D(this,n)},VD.le=function(e){for(var t=this._compare,r=this.root,n=[],i=0;r;){var a=t(e,r.key);n.push(r),a>=0&&(i=n.length),r=a<0?r.left:r.right;}return n.length=i,new $D(this,n)},VD.find=function(e){for(var t=this._compare,r=this.root,n=[];r;){var i=t(e,r.key);if(n.push(r),0===i)return new $D(this,n);r=i<=0?r.left:r.right;}return new $D(this,[])},VD.remove=function(e){var t=this.find(e);return t?t.remove():this},VD.get=function(e){for(var t=this._compare,r=this.root;r;){var n=t(e,r.key);if(0===n)return r.value;r=n<=0?r.left:r.right;}};var GD=$D.prototype;function zD(e,t){e.key=t.key,e.value=t.value,e.left=t.left,e.right=t.right,e._color=t._color,e._count=t._count;}function HD(e,t){return e<t?-1:e>t?1:0}Object.defineProperty(GD,"valid",{get:function(){return this._stack.length>0}}),Object.defineProperty(GD,"node",{get:function(){return this._stack.length>0?this._stack[this._stack.length-1]:null},enumerable:!0}),GD.clone=function(){return new $D(this.tree,this._stack.slice())},GD.remove=function(){var e=this._stack;if(0===e.length)return this.tree;var t=new Array(e.length),r=e[e.length-1];t[t.length-1]=new LD(r._color,r.key,r.value,r.left,r.right,r._count);for(var n=e.length-2;n>=0;--n){(r=e[n]).left===e[n+1]?t[n]=new LD(r._color,r.key,r.value,t[n+1],r.right,r._count):t[n]=new LD(r._color,r.key,r.value,r.left,t[n+1],r._count);}if((r=t[t.length-1]).left&&r.right){var i=t.length;for(r=r.left;r.right;)t.push(r),r=r.right;var a=t[i-1];t.push(new LD(r._color,a.key,a.value,r.left,r.right,r._count)),t[i-1].key=r.key,t[i-1].value=r.value;for(n=t.length-2;n>=i;--n)r=t[n],t[n]=new LD(r._color,r.key,r.value,r.left,t[n+1],r._count);t[i-1].left=t[i];}if((r=t[t.length-1])._color===BD){var o=t[t.length-2];o.left===r?o.left=null:o.right===r&&(o.right=null),t.pop();for(n=0;n<t.length;++n)t[n]._count--;return new MD(this.tree._compare,t[0])}if(r.left||r.right){r.left?zD(r,r.left):r.right&&zD(r,r.right),r._color=OD;for(n=0;n<t.length-1;++n)t[n]._count--;return new MD(this.tree._compare,t[0])}if(1===t.length)return new MD(this.tree._compare,null);for(n=0;n<t.length;++n)t[n]._count--;var s=t[t.length-2];return function(e){for(var t,r,n,i,a=e.length-1;a>=0;--a){if(t=e[a],0===a)return void(t._color=OD);if((r=e[a-1]).left===t){if((n=r.right).right&&n.right._color===BD){if(i=(n=r.right=ND(n)).right=ND(n.right),r.right=n.left,n.left=r,n.right=i,n._color=r._color,t._color=OD,r._color=OD,i._color=OD,RD(r),RD(n),a>1)(o=e[a-2]).left===r?o.left=n:o.right=n;return void(e[a-1]=n)}if(n.left&&n.left._color===BD){if(i=(n=r.right=ND(n)).left=ND(n.left),r.right=i.left,n.left=i.right,i.left=r,i.right=n,i._color=r._color,r._color=OD,n._color=OD,t._color=OD,RD(r),RD(n),RD(i),a>1)(o=e[a-2]).left===r?o.left=i:o.right=i;return void(e[a-1]=i)}if(n._color===OD){if(r._color===BD)return r._color=OD,void(r.right=jD(BD,n));r.right=jD(BD,n);continue}n=ND(n),r.right=n.left,n.left=r,n._color=r._color,r._color=BD,RD(r),RD(n),a>1&&((o=e[a-2]).left===r?o.left=n:o.right=n),e[a-1]=n,e[a]=r,a+1<e.length?e[a+1]=t:e.push(t),a+=2;}else {if((n=r.left).left&&n.left._color===BD){if(i=(n=r.left=ND(n)).left=ND(n.left),r.left=n.right,n.right=r,n.left=i,n._color=r._color,t._color=OD,r._color=OD,i._color=OD,RD(r),RD(n),a>1)(o=e[a-2]).right===r?o.right=n:o.left=n;return void(e[a-1]=n)}if(n.right&&n.right._color===BD){if(i=(n=r.left=ND(n)).right=ND(n.right),r.left=i.right,n.right=i.left,i.right=r,i.left=n,i._color=r._color,r._color=OD,n._color=OD,t._color=OD,RD(r),RD(n),RD(i),a>1)(o=e[a-2]).right===r?o.right=i:o.left=i;return void(e[a-1]=i)}if(n._color===OD){if(r._color===BD)return r._color=OD,void(r.left=jD(BD,n));r.left=jD(BD,n);continue}var o;n=ND(n),r.left=n.right,n.right=r,n._color=r._color,r._color=BD,RD(r),RD(n),a>1&&((o=e[a-2]).right===r?o.right=n:o.left=n),e[a-1]=n,e[a]=r,a+1<e.length?e[a+1]=t:e.push(t),a+=2;}}}(t),s.left===r?s.left=null:s.right=null,new MD(this.tree._compare,t[0])},Object.defineProperty(GD,"key",{get:function(){if(this._stack.length>0)return this._stack[this._stack.length-1].key},enumerable:!0}),Object.defineProperty(GD,"value",{get:function(){if(this._stack.length>0)return this._stack[this._stack.length-1].value},enumerable:!0}),Object.defineProperty(GD,"index",{get:function(){var e=0,t=this._stack;if(0===t.length){var r=this.tree.root;return r?r._count:0}t[t.length-1].left&&(e=t[t.length-1].left._count);for(var n=t.length-2;n>=0;--n)t[n+1]===t[n].right&&(++e,t[n].left&&(e+=t[n].left._count));return e},enumerable:!0}),GD.next=function(){var e=this._stack;if(0!==e.length){var t=e[e.length-1];if(t.right)for(t=t.right;t;)e.push(t),t=t.left;else for(e.pop();e.length>0&&e[e.length-1].right===t;)t=e[e.length-1],e.pop();}},Object.defineProperty(GD,"hasNext",{get:function(){var e=this._stack;if(0===e.length)return !1;if(e[e.length-1].right)return !0;for(var t=e.length-1;t>0;--t)if(e[t-1].left===e[t])return !0;return !1}}),GD.update=function(e){var t=this._stack;if(0===t.length)throw new Error("Can't update empty node!");var r=new Array(t.length),n=t[t.length-1];r[r.length-1]=new LD(n._color,n.key,e,n.left,n.right,n._count);for(var i=t.length-2;i>=0;--i)(n=t[i]).left===t[i+1]?r[i]=new LD(n._color,n.key,n.value,r[i+1],n.right,n._count):r[i]=new LD(n._color,n.key,n.value,n.left,r[i+1],n._count);return new MD(this.tree._compare,r[0])},GD.prev=function(){var e=this._stack;if(0!==e.length){var t=e[e.length-1];if(t.left)for(t=t.left;t;)e.push(t),t=t.right;else for(e.pop();e.length>0&&e[e.length-1].left===t;)t=e[e.length-1],e.pop();}},Object.defineProperty(GD,"hasPrev",{get:function(){var e=this._stack;if(0===e.length)return !1;if(e[e.length-1].left)return !0;for(var t=e.length-1;t>0;--t)if(e[t-1].right===e[t])return !0;return !1}});var KD=Object.freeze({});function JD(e){return !(e<48)&&(e<58||!(e<65)&&(e<91||(95===e||!(e<97)&&(e<123||(QD(e)||function(e){if(e<7376)return e<3458?e<2691?e<2363?e<1770?e<1479?183===e||!(e<768)&&(e<880||(903===e||!(e<1155)&&(e<1160||!(e<1425)&&(e<1470||(1471===e||!(e<1473)&&(e<1475||!(e<1476)&&e<1478)))))):1479===e||!(e<1552)&&(e<1563||!(e<1611)&&(e<1632||!(e<1632)&&(e<1642||(1648===e||!(e<1750)&&(e<1757||!(e<1759)&&(e<1765||!(e<1767)&&e<1769)))))):e<2070?!(e<1770)&&(e<1774||!(e<1776)&&(e<1786||(1809===e||!(e<1840)&&(e<1867||!(e<1958)&&(e<1969||!(e<1984)&&(e<1994||!(e<2027)&&(e<2036||2045===e))))))):e<2074||!(e<2075)&&(e<2084||!(e<2085)&&(e<2088||!(e<2089)&&(e<2094||!(e<2137)&&(e<2140||!(e<2259)&&(e<2274||!(e<2275)&&(e<2307||(2307===e||2362===e))))))):e<2509?e<2402?2363===e||(2364===e||!(e<2366)&&(e<2369||!(e<2369)&&(e<2377||!(e<2377)&&(e<2381||(2381===e||!(e<2382)&&(e<2384||!(e<2385)&&e<2392)))))):e<2404||!(e<2406)&&(e<2416||(2433===e||!(e<2434)&&(e<2436||(2492===e||!(e<2494)&&(e<2497||!(e<2497)&&(e<2501||!(e<2503)&&(e<2505||!(e<2507)&&e<2509))))))):e<2622?2509===e||(2519===e||!(e<2530)&&(e<2532||!(e<2534)&&(e<2544||(2558===e||!(e<2561)&&(e<2563||(2563===e||2620===e)))))):e<2625||!(e<2625)&&(e<2627||!(e<2631)&&(e<2633||!(e<2635)&&(e<2638||(2641===e||!(e<2662)&&(e<2672||!(e<2672)&&(e<2674||(2677===e||!(e<2689)&&e<2691))))))):e<3072?e<2881?e<2786?2691===e||(2748===e||!(e<2750)&&(e<2753||!(e<2753)&&(e<2758||!(e<2759)&&(e<2761||(2761===e||!(e<2763)&&(e<2765||2765===e)))))):e<2788||!(e<2790)&&(e<2800||!(e<2810)&&(e<2816||(2817===e||!(e<2818)&&(e<2820||(2876===e||(2878===e||(2879===e||2880===e))))))):e<2946?!(e<2881)&&(e<2885||!(e<2887)&&(e<2889||!(e<2891)&&(e<2893||(2893===e||(2902===e||(2903===e||!(e<2914)&&(e<2916||!(e<2918)&&e<2928))))))):2946===e||!(e<3006)&&(e<3008||(3008===e||!(e<3009)&&(e<3011||!(e<3014)&&(e<3017||!(e<3018)&&(e<3021||(3021===e||(3031===e||!(e<3046)&&e<3056))))))):e<3271?e<3170?3072===e||!(e<3073)&&(e<3076||(3076===e||!(e<3134)&&(e<3137||!(e<3137)&&(e<3141||!(e<3142)&&(e<3145||!(e<3146)&&(e<3150||!(e<3157)&&e<3159)))))):e<3172||!(e<3174)&&(e<3184||(3201===e||!(e<3202)&&(e<3204||(3260===e||(3262===e||(3263===e||!(e<3264)&&(e<3269||3270===e))))))):e<3387?!(e<3271)&&(e<3273||!(e<3274)&&(e<3276||!(e<3276)&&(e<3278||!(e<3285)&&(e<3287||!(e<3298)&&(e<3300||!(e<3302)&&(e<3312||!(e<3328)&&(e<3330||!(e<3330)&&e<3332))))))):e<3389||!(e<3390)&&(e<3393||!(e<3393)&&(e<3397||!(e<3398)&&(e<3401||!(e<3402)&&(e<3405||(3405===e||(3415===e||!(e<3426)&&(e<3428||!(e<3430)&&e<3440))))))):e<6112?e<4152?e<3864?e<3633?!(e<3458)&&(e<3460||(3530===e||!(e<3535)&&(e<3538||!(e<3538)&&(e<3541||(3542===e||!(e<3544)&&(e<3552||!(e<3558)&&(e<3568||!(e<3570)&&e<3572))))))):3633===e||!(e<3636)&&(e<3643||!(e<3655)&&(e<3663||!(e<3664)&&(e<3674||(3761===e||!(e<3764)&&(e<3770||!(e<3771)&&(e<3773||!(e<3784)&&(e<3790||!(e<3792)&&e<3802))))))):e<3968?!(e<3864)&&(e<3866||!(e<3872)&&(e<3882||(3893===e||(3895===e||(3897===e||!(e<3902)&&(e<3904||!(e<3953)&&(e<3967||3967===e))))))):e<3973||!(e<3974)&&(e<3976||!(e<3981)&&(e<3992||!(e<3993)&&(e<4029||(4038===e||!(e<4139)&&(e<4141||!(e<4141)&&(e<4145||(4145===e||!(e<4146)&&e<4152))))))):e<4240?e<4194?4152===e||!(e<4153)&&(e<4155||!(e<4155)&&(e<4157||!(e<4157)&&(e<4159||!(e<4160)&&(e<4170||!(e<4182)&&(e<4184||!(e<4184)&&(e<4186||!(e<4190)&&e<4193)))))):e<4197||!(e<4199)&&(e<4206||!(e<4209)&&(e<4213||(4226===e||!(e<4227)&&(e<4229||!(e<4229)&&(e<4231||!(e<4231)&&(e<4237||(4237===e||4239===e))))))):e<6002?!(e<4240)&&(e<4250||!(e<4250)&&(e<4253||(4253===e||!(e<4957)&&(e<4960||!(e<4969)&&(e<4978||!(e<5906)&&(e<5909||!(e<5938)&&(e<5941||!(e<5970)&&e<5972))))))):e<6004||!(e<6068)&&(e<6070||(6070===e||!(e<6071)&&(e<6078||!(e<6078)&&(e<6086||(6086===e||!(e<6087)&&(e<6089||!(e<6089)&&(e<6100||6109===e))))))):e<6916?e<6683?e<6448?!(e<6112)&&(e<6122||!(e<6155)&&(e<6158||!(e<6160)&&(e<6170||(6313===e||!(e<6432)&&(e<6435||!(e<6435)&&(e<6439||!(e<6439)&&(e<6441||!(e<6441)&&e<6444))))))):e<6450||(6450===e||!(e<6451)&&(e<6457||!(e<6457)&&(e<6460||!(e<6470)&&(e<6480||!(e<6608)&&(e<6618||(6618===e||!(e<6679)&&(e<6681||!(e<6681)&&e<6683))))))):e<6755?6683===e||(6741===e||(6742===e||(6743===e||!(e<6744)&&(e<6751||(6752===e||(6753===e||6754===e)))))):e<6757||!(e<6757)&&(e<6765||!(e<6765)&&(e<6771||!(e<6771)&&(e<6781||(6783===e||!(e<6784)&&(e<6794||!(e<6800)&&(e<6810||!(e<6832)&&(e<6846||!(e<6912)&&e<6916))))))):e<7082?e<6979?6916===e||(6964===e||(6965===e||!(e<6966)&&(e<6971||(6971===e||(6972===e||!(e<6973)&&(e<6978||6978===e)))))):e<6981||!(e<6992)&&(e<7002||!(e<7019)&&(e<7028||!(e<7040)&&(e<7042||(7042===e||(7073===e||!(e<7074)&&(e<7078||!(e<7078)&&(e<7080||!(e<7080)&&e<7082))))))):e<7150?7082===e||!(e<7083)&&(e<7086||!(e<7088)&&(e<7098||(7142===e||(7143===e||!(e<7144)&&(e<7146||!(e<7146)&&(e<7149||7149===e)))))):7150===e||!(e<7151)&&(e<7154||!(e<7154)&&(e<7156||!(e<7204)&&(e<7212||!(e<7212)&&(e<7220||!(e<7220)&&(e<7222||!(e<7222)&&(e<7224||!(e<7232)&&(e<7242||!(e<7248)&&e<7258)))))));if(e<70206)return e<43703?e<43188?e<11647?e<7416?!(e<7376)&&(e<7379||!(e<7380)&&(e<7393||(7393===e||!(e<7394)&&(e<7401||(7405===e||!(e<7410)&&(e<7412||(7412===e||7415===e))))))):e<7418||!(e<7616)&&(e<7674||!(e<7675)&&(e<7680||!(e<8255)&&(e<8257||(8276===e||!(e<8400)&&(e<8413||(8417===e||!(e<8421)&&(e<8433||!(e<11503)&&e<11506))))))):e<42654?11647===e||!(e<11744)&&(e<11776||!(e<12330)&&(e<12334||!(e<12334)&&(e<12336||!(e<12441)&&(e<12443||!(e<42528)&&(e<42538||(42607===e||!(e<42612)&&e<42622)))))):e<42656||!(e<42736)&&(e<42738||(43010===e||(43014===e||(43019===e||!(e<43043)&&(e<43045||!(e<43045)&&(e<43047||(43047===e||!(e<43136)&&e<43138))))))):e<43472?e<43346?!(e<43188)&&(e<43204||!(e<43204)&&(e<43206||!(e<43216)&&(e<43226||!(e<43232)&&(e<43250||(43263===e||!(e<43264)&&(e<43274||!(e<43302)&&(e<43310||!(e<43335)&&e<43346))))))):e<43348||!(e<43392)&&(e<43395||(43395===e||(43443===e||!(e<43444)&&(e<43446||!(e<43446)&&(e<43450||!(e<43450)&&(e<43452||(43452===e||!(e<43453)&&e<43457))))))):e<43587?!(e<43472)&&(e<43482||(43493===e||!(e<43504)&&(e<43514||!(e<43561)&&(e<43567||!(e<43567)&&(e<43569||!(e<43569)&&(e<43571||!(e<43571)&&(e<43573||!(e<43573)&&e<43575))))))):43587===e||(43596===e||(43597===e||!(e<43600)&&(e<43610||(43643===e||(43644===e||(43645===e||(43696===e||!(e<43698)&&e<43701))))))):e<68912?e<65024?e<44003?!(e<43703)&&(e<43705||!(e<43710)&&(e<43712||(43713===e||(43755===e||!(e<43756)&&(e<43758||!(e<43758)&&(e<43760||(43765===e||43766===e))))))):e<44005||(44005===e||!(e<44006)&&(e<44008||(44008===e||!(e<44009)&&(e<44011||(44012===e||(44013===e||!(e<44016)&&(e<44026||64286===e))))))):e<66422?!(e<65024)&&(e<65040||!(e<65056)&&(e<65072||!(e<65075)&&(e<65077||!(e<65101)&&(e<65104||!(e<65296)&&(e<65306||(65343===e||(66045===e||66272===e))))))):e<66427||!(e<66720)&&(e<66730||!(e<68097)&&(e<68100||!(e<68101)&&(e<68103||!(e<68108)&&(e<68112||!(e<68152)&&(e<68155||(68159===e||!(e<68325)&&(e<68327||!(e<68900)&&e<68904))))))):e<69933?e<69762?!(e<68912)&&(e<68922||!(e<69446)&&(e<69457||(69632===e||(69633===e||(69634===e||!(e<69688)&&(e<69703||!(e<69734)&&(e<69744||!(e<69759)&&e<69762))))))):69762===e||!(e<69808)&&(e<69811||!(e<69811)&&(e<69815||!(e<69815)&&(e<69817||!(e<69817)&&(e<69819||!(e<69872)&&(e<69882||!(e<69888)&&(e<69891||!(e<69927)&&(e<69932||69932===e))))))):e<70079?!(e<69933)&&(e<69941||!(e<69942)&&(e<69952||!(e<69957)&&(e<69959||(70003===e||!(e<70016)&&(e<70018||(70018===e||!(e<70067)&&(e<70070||!(e<70070)&&e<70079))))))):e<70081||!(e<70089)&&(e<70093||!(e<70096)&&(e<70106||!(e<70188)&&(e<70191||!(e<70191)&&(e<70194||!(e<70194)&&(e<70196||(70196===e||(70197===e||!(e<70198)&&e<70200)))))));if(e<72243)return e<71087?e<70709?e<70462?70206===e||(70367===e||!(e<70368)&&(e<70371||!(e<70371)&&(e<70379||!(e<70384)&&(e<70394||!(e<70400)&&(e<70402||!(e<70402)&&(e<70404||!(e<70459)&&e<70461)))))):e<70464||(70464===e||!(e<70465)&&(e<70469||!(e<70471)&&(e<70473||!(e<70475)&&(e<70478||(70487===e||!(e<70498)&&(e<70500||!(e<70502)&&(e<70509||!(e<70512)&&e<70517))))))):e<70832?!(e<70709)&&(e<70712||!(e<70712)&&(e<70720||!(e<70720)&&(e<70722||!(e<70722)&&(e<70725||(70725===e||(70726===e||!(e<70736)&&(e<70746||70750===e))))))):e<70835||!(e<70835)&&(e<70841||(70841===e||(70842===e||!(e<70843)&&(e<70847||!(e<70847)&&(e<70849||(70849===e||!(e<70850)&&(e<70852||!(e<70864)&&e<70874))))))):e<71342?e<71219?!(e<71087)&&(e<71090||!(e<71090)&&(e<71094||!(e<71096)&&(e<71100||!(e<71100)&&(e<71102||(71102===e||!(e<71103)&&(e<71105||!(e<71132)&&(e<71134||!(e<71216)&&e<71219))))))):e<71227||!(e<71227)&&(e<71229||(71229===e||(71230===e||!(e<71231)&&(e<71233||!(e<71248)&&(e<71258||(71339===e||(71340===e||71341===e))))))):e<71462?!(e<71342)&&(e<71344||!(e<71344)&&(e<71350||(71350===e||(71351===e||!(e<71360)&&(e<71370||!(e<71453)&&(e<71456||!(e<71456)&&(e<71458||!(e<71458)&&e<71462))))))):71462===e||!(e<71463)&&(e<71468||!(e<71472)&&(e<71482||!(e<71724)&&(e<71727||!(e<71727)&&(e<71736||(71736===e||!(e<71737)&&(e<71739||!(e<71904)&&(e<71914||!(e<72193)&&e<72203)))))));if(e<73111)return e<72873?e<72343?!(e<72243)&&(e<72249||(72249===e||!(e<72251)&&(e<72255||(72263===e||!(e<72273)&&(e<72279||!(e<72279)&&(e<72281||!(e<72281)&&(e<72284||!(e<72330)&&e<72343))))))):72343===e||!(e<72344)&&(e<72346||(72751===e||!(e<72752)&&(e<72759||!(e<72760)&&(e<72766||(72766===e||(72767===e||!(e<72784)&&(e<72794||!(e<72850)&&e<72872))))))):e<73020?72873===e||!(e<72874)&&(e<72881||(72881===e||!(e<72882)&&(e<72884||(72884===e||!(e<72885)&&(e<72887||!(e<73009)&&(e<73015||73018===e)))))):e<73022||!(e<73023)&&(e<73030||(73031===e||!(e<73040)&&(e<73050||!(e<73098)&&(e<73103||!(e<73104)&&(e<73106||!(e<73107)&&(e<73109||(73109===e||73110===e)))))));if(e<119362)return e<94033?73111===e||!(e<73120)&&(e<73130||!(e<73459)&&(e<73461||!(e<73461)&&(e<73463||!(e<92768)&&(e<92778||!(e<92912)&&(e<92917||!(e<92976)&&(e<92983||!(e<93008)&&e<93018)))))):e<94079||!(e<94095)&&(e<94099||!(e<113821)&&(e<113823||!(e<119141)&&(e<119143||!(e<119143)&&(e<119146||!(e<119149)&&(e<119155||!(e<119163)&&(e<119171||!(e<119173)&&(e<119180||!(e<119210)&&e<119214)))))));if(e<122880)return !(e<119362)&&(e<119365||!(e<120782)&&(e<120832||!(e<121344)&&(e<121399||!(e<121403)&&(e<121453||(121461===e||(121476===e||!(e<121499)&&(e<121504||!(e<121505)&&e<121520)))))));return e<122887||!(e<122888)&&(e<122905||!(e<122907)&&(e<122914||!(e<122915)&&(e<122917||!(e<122918)&&(e<122923||!(e<125136)&&(e<125143||!(e<125252)&&(e<125259||!(e<125264)&&(e<125274||!(e<917760)&&e<918e3)))))))}(e))))))}function QD(e){return e<12449?e<3776?e<2613?e<1765?e<890?e<660?e<248?170===e||(181===e||(186===e||!(e<192)&&(e<215||!(e<216)&&e<247))):e<443||(443===e||!(e<444)&&(e<448||!(e<448)&&(e<452||!(e<452)&&e<660))):e<748?660===e||!(e<661)&&(e<688||!(e<688)&&(e<706||!(e<710)&&(e<722||!(e<736)&&e<741))):748===e||(750===e||!(e<880)&&(e<884||(884===e||!(e<886)&&e<888))):e<1329?e<908?890===e||!(e<891)&&(e<894||(895===e||(902===e||!(e<904)&&e<907))):908===e||!(e<910)&&(e<930||!(e<931)&&(e<1014||!(e<1015)&&(e<1154||!(e<1162)&&e<1328))):e<1568?!(e<1329)&&(e<1367||(1369===e||!(e<1376)&&(e<1417||!(e<1488)&&(e<1515||!(e<1519)&&e<1523)))):e<1600||(1600===e||!(e<1601)&&(e<1611||!(e<1646)&&(e<1648||!(e<1649)&&(e<1748||1749===e)))):e<2384?e<2042?e<1810?!(e<1765)&&(e<1767||!(e<1774)&&(e<1776||!(e<1786)&&(e<1789||(1791===e||1808===e)))):e<1840||!(e<1869)&&(e<1958||(1969===e||!(e<1994)&&(e<2027||!(e<2036)&&e<2038))):e<2112?2042===e||!(e<2048)&&(e<2070||(2074===e||(2084===e||2088===e))):e<2137||!(e<2144)&&(e<2155||!(e<2208)&&(e<2229||!(e<2230)&&(e<2238||!(e<2308)&&(e<2362||2365===e)))):e<2493?e<2447?2384===e||!(e<2392)&&(e<2402||(2417===e||!(e<2418)&&(e<2433||!(e<2437)&&e<2445))):e<2449||!(e<2451)&&(e<2473||!(e<2474)&&(e<2481||(2482===e||!(e<2486)&&e<2490))):e<2556?2493===e||(2510===e||!(e<2524)&&(e<2526||!(e<2527)&&(e<2530||!(e<2544)&&e<2546))):2556===e||!(e<2565)&&(e<2571||!(e<2575)&&(e<2577||!(e<2579)&&(e<2601||!(e<2602)&&(e<2609||!(e<2610)&&e<2612)))):e<3168?e<2877?e<2741?e<2693?!(e<2613)&&(e<2615||!(e<2616)&&(e<2618||!(e<2649)&&(e<2653||(2654===e||!(e<2674)&&e<2677)))):e<2702||!(e<2703)&&(e<2706||!(e<2707)&&(e<2729||!(e<2730)&&(e<2737||!(e<2738)&&e<2740))):e<2821?!(e<2741)&&(e<2746||(2749===e||(2768===e||!(e<2784)&&(e<2786||2809===e)))):e<2829||!(e<2831)&&(e<2833||!(e<2835)&&(e<2857||!(e<2858)&&(e<2865||!(e<2866)&&(e<2868||!(e<2869)&&e<2874)))):e<2974?e<2949?2877===e||!(e<2908)&&(e<2910||!(e<2911)&&(e<2914||(2929===e||2947===e))):e<2955||!(e<2958)&&(e<2961||!(e<2962)&&(e<2966||!(e<2969)&&(e<2971||2972===e))):e<3077?!(e<2974)&&(e<2976||!(e<2979)&&(e<2981||!(e<2984)&&(e<2987||!(e<2990)&&(e<3002||3024===e)))):e<3085||!(e<3086)&&(e<3089||!(e<3090)&&(e<3113||!(e<3114)&&(e<3130||(3133===e||!(e<3160)&&e<3163)))):e<3507?e<3313?e<3242?!(e<3168)&&(e<3170||(3200===e||!(e<3205)&&(e<3213||!(e<3214)&&(e<3217||!(e<3218)&&e<3241)))):e<3252||!(e<3253)&&(e<3258||(3261===e||(3294===e||!(e<3296)&&e<3298))):e<3406?!(e<3313)&&(e<3315||!(e<3333)&&(e<3341||!(e<3342)&&(e<3345||!(e<3346)&&(e<3387||3389===e)))):3406===e||!(e<3412)&&(e<3415||!(e<3423)&&(e<3426||!(e<3450)&&(e<3456||!(e<3461)&&(e<3479||!(e<3482)&&e<3506)))):e<3722?e<3648?!(e<3507)&&(e<3516||(3517===e||!(e<3520)&&(e<3527||!(e<3585)&&(e<3633||!(e<3634)&&e<3636)))):e<3654||(3654===e||!(e<3713)&&(e<3715||(3716===e||!(e<3719)&&e<3721))):e<3749?3722===e||(3725===e||!(e<3732)&&(e<3736||!(e<3737)&&(e<3744||!(e<3745)&&e<3748))):3749===e||(3751===e||!(e<3754)&&(e<3756||!(e<3757)&&(e<3761||!(e<3762)&&(e<3764||3773===e)))):e<7401?e<5743?e<4349?e<4186?e<3913?!(e<3776)&&(e<3781||(3782===e||!(e<3804)&&(e<3808||(3840===e||!(e<3904)&&e<3912)))):e<3949||!(e<3976)&&(e<3981||!(e<4096)&&(e<4139||(4159===e||!(e<4176)&&e<4182))):e<4238?!(e<4186)&&(e<4190||(4193===e||!(e<4197)&&(e<4199||!(e<4206)&&(e<4209||!(e<4213)&&e<4226)))):4238===e||!(e<4256)&&(e<4294||(4295===e||(4301===e||!(e<4304)&&(e<4347||4348===e)))):e<4792?e<4698?!(e<4349)&&(e<4352||!(e<4352)&&(e<4681||!(e<4682)&&(e<4686||!(e<4688)&&(e<4695||4696===e)))):e<4702||!(e<4704)&&(e<4745||!(e<4746)&&(e<4750||!(e<4752)&&(e<4785||!(e<4786)&&e<4790))):e<4882?!(e<4792)&&(e<4799||(4800===e||!(e<4802)&&(e<4806||!(e<4808)&&(e<4823||!(e<4824)&&e<4881)))):e<4886||!(e<4888)&&(e<4955||!(e<4992)&&(e<5008||!(e<5024)&&(e<5110||!(e<5112)&&(e<5118||!(e<5121)&&e<5741)))):e<6320?e<5998?e<5888?!(e<5743)&&(e<5760||!(e<5761)&&(e<5787||!(e<5792)&&(e<5867||!(e<5870)&&(e<5873||!(e<5873)&&e<5881)))):e<5901||!(e<5902)&&(e<5906||!(e<5920)&&(e<5938||!(e<5952)&&(e<5970||!(e<5984)&&e<5997))):e<6211?!(e<5998)&&(e<6001||!(e<6016)&&(e<6068||(6103===e||(6108===e||!(e<6176)&&e<6211)))):6211===e||!(e<6212)&&(e<6265||!(e<6272)&&(e<6277||!(e<6277)&&(e<6279||!(e<6279)&&(e<6313||6314===e)))):e<6981?e<6576?!(e<6320)&&(e<6390||!(e<6400)&&(e<6431||!(e<6480)&&(e<6510||!(e<6512)&&(e<6517||!(e<6528)&&e<6572)))):e<6602||!(e<6656)&&(e<6679||!(e<6688)&&(e<6741||(6823===e||!(e<6917)&&e<6964))):e<7245?!(e<6981)&&(e<6988||!(e<7043)&&(e<7073||!(e<7086)&&(e<7088||!(e<7098)&&(e<7142||!(e<7168)&&e<7204)))):e<7248||!(e<7258)&&(e<7288||!(e<7288)&&(e<7294||!(e<7296)&&(e<7305||!(e<7312)&&(e<7355||!(e<7357)&&e<7360)))):e<8495?e<8130?e<7960?e<7531?!(e<7401)&&(e<7405||!(e<7406)&&(e<7410||!(e<7413)&&(e<7415||!(e<7424)&&(e<7468||!(e<7468)&&e<7531)))):e<7544||(7544===e||!(e<7545)&&(e<7579||!(e<7579)&&(e<7616||!(e<7680)&&e<7958))):e<8027?!(e<7960)&&(e<7966||!(e<7968)&&(e<8006||!(e<8008)&&(e<8014||!(e<8016)&&(e<8024||8025===e)))):8027===e||(8029===e||!(e<8031)&&(e<8062||!(e<8064)&&(e<8117||!(e<8118)&&(e<8125||8126===e)))):e<8450?e<8178?!(e<8130)&&(e<8133||!(e<8134)&&(e<8141||!(e<8144)&&(e<8148||!(e<8150)&&(e<8156||!(e<8160)&&e<8173)))):e<8181||!(e<8182)&&(e<8189||(8305===e||(8319===e||!(e<8336)&&e<8349))):e<8473?8450===e||(8455===e||!(e<8458)&&(e<8468||(8469===e||8472===e))):e<8478||(8484===e||(8486===e||(8488===e||!(e<8490)&&(e<8494||8494===e)))):e<11648?e<11312?e<8526?!(e<8495)&&(e<8501||!(e<8501)&&(e<8505||(8505===e||!(e<8508)&&(e<8512||!(e<8517)&&e<8522)))):8526===e||!(e<8544)&&(e<8579||!(e<8579)&&(e<8581||!(e<8581)&&(e<8585||!(e<11264)&&e<11311))):e<11506?!(e<11312)&&(e<11359||!(e<11360)&&(e<11388||!(e<11388)&&(e<11390||!(e<11390)&&(e<11493||!(e<11499)&&e<11503)))):e<11508||!(e<11520)&&(e<11558||(11559===e||(11565===e||!(e<11568)&&(e<11624||11631===e)))):e<12294?e<11712?!(e<11648)&&(e<11671||!(e<11680)&&(e<11687||!(e<11688)&&(e<11695||!(e<11696)&&(e<11703||!(e<11704)&&e<11711)))):e<11719||!(e<11720)&&(e<11727||!(e<11728)&&(e<11735||!(e<11736)&&(e<11743||12293===e))):e<12347?12294===e||(12295===e||!(e<12321)&&(e<12330||!(e<12337)&&(e<12342||!(e<12344)&&e<12347))):12347===e||(12348===e||!(e<12353)&&(e<12439||!(e<12443)&&(e<12445||!(e<12445)&&(e<12447||12447===e)))):e<68448?e<55216?e<43138?e<42623?e<40981?e<12704?!(e<12449)&&(e<12539||!(e<12540)&&(e<12543||(12543===e||!(e<12549)&&(e<12592||!(e<12593)&&e<12687)))):e<12731||!(e<12784)&&(e<12800||!(e<13312)&&(e<19894||!(e<19968)&&(e<40944||!(e<40960)&&e<40981))):e<42508?40981===e||!(e<40982)&&(e<42125||!(e<42192)&&(e<42232||!(e<42232)&&(e<42238||!(e<42240)&&e<42508))):42508===e||!(e<42512)&&(e<42528||!(e<42538)&&(e<42540||!(e<42560)&&(e<42606||42606===e))):e<42891?e<42775?42623===e||!(e<42624)&&(e<42652||!(e<42652)&&(e<42654||!(e<42656)&&(e<42726||!(e<42726)&&e<42736))):e<42784||!(e<42786)&&(e<42864||(42864===e||!(e<42865)&&(e<42888||42888===e))):e<43002?!(e<42891)&&(e<42895||(42895===e||!(e<42896)&&(e<42938||(42999===e||!(e<43e3)&&e<43002)))):43002===e||!(e<43003)&&(e<43010||!(e<43011)&&(e<43014||!(e<43015)&&(e<43019||!(e<43020)&&(e<43043||!(e<43072)&&e<43124)))):e<43697?e<43494?e<43312?!(e<43138)&&(e<43188||!(e<43250)&&(e<43256||(43259===e||!(e<43261)&&(e<43263||!(e<43274)&&e<43302)))):e<43335||!(e<43360)&&(e<43389||!(e<43396)&&(e<43443||(43471===e||!(e<43488)&&e<43493))):e<43588?43494===e||!(e<43495)&&(e<43504||!(e<43514)&&(e<43519||!(e<43520)&&(e<43561||!(e<43584)&&e<43587))):e<43596||!(e<43616)&&(e<43632||(43632===e||!(e<43633)&&(e<43639||(43642===e||!(e<43646)&&e<43696)))):e<43777?e<43739?43697===e||!(e<43701)&&(e<43703||!(e<43705)&&(e<43710||(43712===e||43714===e))):e<43741||(43741===e||!(e<43744)&&(e<43755||(43762===e||!(e<43763)&&e<43765))):e<43824?!(e<43777)&&(e<43783||!(e<43785)&&(e<43791||!(e<43793)&&(e<43799||!(e<43808)&&(e<43815||!(e<43816)&&e<43823)))):e<43867||!(e<43868)&&(e<43872||!(e<43872)&&(e<43878||!(e<43888)&&(e<43968||!(e<43968)&&(e<44003||!(e<44032)&&e<55204)))):e<66349?e<65345?e<64318?e<64275?!(e<55216)&&(e<55239||!(e<55243)&&(e<55292||!(e<63744)&&(e<64110||!(e<64112)&&(e<64218||!(e<64256)&&e<64263)))):e<64280||(64285===e||!(e<64287)&&(e<64297||!(e<64298)&&(e<64311||!(e<64312)&&e<64317))):e<64848?64318===e||!(e<64320)&&(e<64322||!(e<64323)&&(e<64325||!(e<64326)&&(e<64434||!(e<64467)&&e<64830))):e<64912||!(e<64914)&&(e<64968||!(e<65008)&&(e<65020||!(e<65136)&&(e<65141||!(e<65142)&&(e<65277||!(e<65313)&&e<65339)))):e<65536?e<65440?!(e<65345)&&(e<65371||!(e<65382)&&(e<65392||(65392===e||!(e<65393)&&(e<65438||!(e<65438)&&e<65440)))):e<65471||!(e<65474)&&(e<65480||!(e<65482)&&(e<65488||!(e<65490)&&(e<65496||!(e<65498)&&e<65501))):e<65616?!(e<65536)&&(e<65548||!(e<65549)&&(e<65575||!(e<65576)&&(e<65595||!(e<65596)&&(e<65598||!(e<65599)&&e<65614)))):e<65630||!(e<65664)&&(e<65787||!(e<65856)&&(e<65909||!(e<66176)&&(e<66205||!(e<66208)&&(e<66257||!(e<66304)&&e<66336)))):e<67639?e<66640?e<66432?!(e<66349)&&(e<66369||(66369===e||!(e<66370)&&(e<66378||(66378===e||!(e<66384)&&e<66422)))):e<66462||!(e<66464)&&(e<66500||!(e<66504)&&(e<66512||!(e<66513)&&(e<66518||!(e<66560)&&e<66640))):e<67072?!(e<66640)&&(e<66718||!(e<66736)&&(e<66772||!(e<66776)&&(e<66812||!(e<66816)&&(e<66856||!(e<66864)&&e<66916)))):e<67383||!(e<67392)&&(e<67414||!(e<67424)&&(e<67432||!(e<67584)&&(e<67590||(67592===e||!(e<67594)&&e<67638)))):e<68030?e<67808?!(e<67639)&&(e<67641||(67644===e||!(e<67647)&&(e<67670||!(e<67680)&&(e<67703||!(e<67712)&&e<67743)))):e<67827||!(e<67828)&&(e<67830||!(e<67840)&&(e<67862||!(e<67872)&&(e<67898||!(e<67968)&&e<68024))):e<68192?!(e<68030)&&(e<68032||(68096===e||!(e<68112)&&(e<68116||!(e<68117)&&(e<68120||!(e<68121)&&e<68150)))):e<68221||!(e<68224)&&(e<68253||!(e<68288)&&(e<68296||!(e<68297)&&(e<68325||!(e<68352)&&(e<68406||!(e<68416)&&e<68438)))):e<93760?e<71040?e<70163?e<69763?e<68864?!(e<68448)&&(e<68467||!(e<68480)&&(e<68498||!(e<68608)&&(e<68681||!(e<68736)&&(e<68787||!(e<68800)&&e<68851)))):e<68900||!(e<69376)&&(e<69405||(69415===e||!(e<69424)&&(e<69446||!(e<69635)&&e<69688))):e<70006?!(e<69763)&&(e<69808||!(e<69840)&&(e<69865||!(e<69891)&&(e<69927||(69956===e||!(e<69968)&&e<70003)))):70006===e||!(e<70019)&&(e<70067||!(e<70081)&&(e<70085||(70106===e||(70108===e||!(e<70144)&&e<70162)))):e<70442?e<70303?!(e<70163)&&(e<70188||!(e<70272)&&(e<70279||(70280===e||!(e<70282)&&(e<70286||!(e<70287)&&e<70302)))):e<70313||!(e<70320)&&(e<70367||!(e<70405)&&(e<70413||!(e<70415)&&(e<70417||!(e<70419)&&e<70441))):e<70493?!(e<70442)&&(e<70449||!(e<70450)&&(e<70452||!(e<70453)&&(e<70458||(70461===e||70480===e)))):e<70498||!(e<70656)&&(e<70709||!(e<70727)&&(e<70731||!(e<70784)&&(e<70832||!(e<70852)&&(e<70854||70855===e)))):e<72960?e<72203?e<71424?!(e<71040)&&(e<71087||!(e<71128)&&(e<71132||!(e<71168)&&(e<71216||(71236===e||!(e<71296)&&e<71339)))):e<71451||!(e<71680)&&(e<71724||!(e<71840)&&(e<71904||(71935===e||72192===e))):e<72349?!(e<72203)&&(e<72243||(72250===e||(72272===e||!(e<72284)&&(e<72324||!(e<72326)&&e<72330)))):72349===e||!(e<72384)&&(e<72441||!(e<72704)&&(e<72713||!(e<72714)&&(e<72751||(72768===e||!(e<72818)&&e<72848)))):e<74752?e<73063?!(e<72960)&&(e<72967||!(e<72968)&&(e<72970||!(e<72971)&&(e<73009||(73030===e||!(e<73056)&&e<73062)))):e<73065||!(e<73066)&&(e<73098||(73112===e||!(e<73440)&&(e<73459||!(e<73728)&&e<74650))):e<92736?!(e<74752)&&(e<74863||!(e<74880)&&(e<75076||!(e<77824)&&(e<78895||!(e<82944)&&(e<83527||!(e<92160)&&e<92729)))):e<92767||!(e<92880)&&(e<92910||!(e<92928)&&(e<92976||!(e<92992)&&(e<92996||!(e<93027)&&(e<93048||!(e<93053)&&e<93072)))):e<120772?e<119997?e<113776?e<94208?!(e<93760)&&(e<93824||!(e<93952)&&(e<94021||(94032===e||!(e<94099)&&(e<94112||!(e<94176)&&e<94178)))):e<100338||!(e<100352)&&(e<101107||!(e<110592)&&(e<110879||!(e<110960)&&(e<111356||!(e<113664)&&e<113771))):e<119966?!(e<113776)&&(e<113789||!(e<113792)&&(e<113801||!(e<113808)&&(e<113818||!(e<119808)&&(e<119893||!(e<119894)&&e<119965)))):e<119968||(119970===e||!(e<119973)&&(e<119975||!(e<119977)&&(e<119981||!(e<119982)&&(e<119994||119995===e)))):e<120146?e<120094?!(e<119997)&&(e<120004||!(e<120005)&&(e<120070||!(e<120071)&&(e<120075||!(e<120077)&&(e<120085||!(e<120086)&&e<120093)))):e<120122||!(e<120123)&&(e<120127||!(e<120128)&&(e<120133||(120134===e||!(e<120138)&&e<120145))):e<120598?!(e<120146)&&(e<120486||!(e<120488)&&(e<120513||!(e<120514)&&(e<120539||!(e<120540)&&(e<120571||!(e<120572)&&e<120597)))):e<120629||!(e<120630)&&(e<120655||!(e<120656)&&(e<120687||!(e<120688)&&(e<120713||!(e<120714)&&(e<120745||!(e<120746)&&e<120771)))):e<126555?e<126521?e<126497?!(e<120772)&&(e<120780||!(e<124928)&&(e<125125||!(e<125184)&&(e<125252||!(e<126464)&&(e<126468||!(e<126469)&&e<126496)))):e<126499||(126500===e||(126503===e||!(e<126505)&&(e<126515||!(e<126516)&&e<126520))):e<126539?126521===e||(126523===e||(126530===e||(126535===e||126537===e))):126539===e||!(e<126541)&&(e<126544||!(e<126545)&&(e<126547||(126548===e||(126551===e||126553===e)))):e<126592?e<126567?126555===e||(126557===e||(126559===e||!(e<126561)&&(e<126563||126564===e))):e<126571||!(e<126572)&&(e<126579||!(e<126580)&&(e<126584||!(e<126585)&&(e<126589||126590===e))):e<131072?!(e<126592)&&(e<126602||!(e<126603)&&(e<126620||!(e<126625)&&(e<126628||!(e<126629)&&(e<126634||!(e<126635)&&e<126652)))):e<173783||!(e<173824)&&(e<177973||!(e<177984)&&(e<178206||!(e<178208)&&(e<183970||!(e<183984)&&(e<191457||!(e<194560)&&e<195102))))}var XD={$LONE:new Set(["ASCII","ASCII_Hex_Digit","AHex","Alphabetic","Alpha","Any","Assigned","Bidi_Control","Bidi_C","Bidi_Mirrored","Bidi_M","Case_Ignorable","CI","Cased","Changes_When_Casefolded","CWCF","Changes_When_Casemapped","CWCM","Changes_When_Lowercased","CWL","Changes_When_NFKC_Casefolded","CWKCF","Changes_When_Titlecased","CWT","Changes_When_Uppercased","CWU","Dash","Default_Ignorable_Code_Point","DI","Deprecated","Dep","Diacritic","Dia","Emoji","Emoji_Component","Emoji_Modifier","Emoji_Modifier_Base","Emoji_Presentation","Extender","Ext","Grapheme_Base","Gr_Base","Grapheme_Extend","Gr_Ext","Hex_Digit","Hex","IDS_Binary_Operator","IDSB","IDS_Trinary_Operator","IDST","ID_Continue","IDC","ID_Start","IDS","Ideographic","Ideo","Join_Control","Join_C","Logical_Order_Exception","LOE","Lowercase","Lower","Math","Noncharacter_Code_Point","NChar","Pattern_Syntax","Pat_Syn","Pattern_White_Space","Pat_WS","Quotation_Mark","QMark","Radical","Regional_Indicator","RI","Sentence_Terminal","STerm","Soft_Dotted","SD","Terminal_Punctuation","Term","Unified_Ideograph","UIdeo","Uppercase","Upper","Variation_Selector","VS","White_Space","space","XID_Continue","XIDC","XID_Start","XIDS"]),General_Category:new Set(["Cased_Letter","LC","Close_Punctuation","Pe","Connector_Punctuation","Pc","Control","Cc","cntrl","Currency_Symbol","Sc","Dash_Punctuation","Pd","Decimal_Number","Nd","digit","Enclosing_Mark","Me","Final_Punctuation","Pf","Format","Cf","Initial_Punctuation","Pi","Letter","L","Letter_Number","Nl","Line_Separator","Zl","Lowercase_Letter","Ll","Mark","M","Combining_Mark","Math_Symbol","Sm","Modifier_Letter","Lm","Modifier_Symbol","Sk","Nonspacing_Mark","Mn","Number","N","Open_Punctuation","Ps","Other","C","Other_Letter","Lo","Other_Number","No","Other_Punctuation","Po","Other_Symbol","So","Paragraph_Separator","Zp","Private_Use","Co","Punctuation","P","punct","Separator","Z","Space_Separator","Zs","Spacing_Mark","Mc","Surrogate","Cs","Symbol","S","Titlecase_Letter","Lt","Unassigned","Cn","Uppercase_Letter","Lu"]),Script:new Set(["Adlam","Adlm","Ahom","Anatolian_Hieroglyphs","Hluw","Arabic","Arab","Armenian","Armn","Avestan","Avst","Balinese","Bali","Bamum","Bamu","Bassa_Vah","Bass","Batak","Batk","Bengali","Beng","Bhaiksuki","Bhks","Bopomofo","Bopo","Brahmi","Brah","Braille","Brai","Buginese","Bugi","Buhid","Buhd","Canadian_Aboriginal","Cans","Carian","Cari","Caucasian_Albanian","Aghb","Chakma","Cakm","Cham","Cherokee","Cher","Common","Zyyy","Coptic","Copt","Qaac","Cuneiform","Xsux","Cypriot","Cprt","Cyrillic","Cyrl","Deseret","Dsrt","Devanagari","Deva","Duployan","Dupl","Egyptian_Hieroglyphs","Egyp","Elbasan","Elba","Ethiopic","Ethi","Georgian","Geor","Glagolitic","Glag","Gothic","Goth","Grantha","Gran","Greek","Grek","Gujarati","Gujr","Gurmukhi","Guru","Han","Hani","Hangul","Hang","Hanunoo","Hano","Hatran","Hatr","Hebrew","Hebr","Hiragana","Hira","Imperial_Aramaic","Armi","Inherited","Zinh","Qaai","Inscriptional_Pahlavi","Phli","Inscriptional_Parthian","Prti","Javanese","Java","Kaithi","Kthi","Kannada","Knda","Katakana","Kana","Kayah_Li","Kali","Kharoshthi","Khar","Khmer","Khmr","Khojki","Khoj","Khudawadi","Sind","Lao","Laoo","Latin","Latn","Lepcha","Lepc","Limbu","Limb","Linear_A","Lina","Linear_B","Linb","Lisu","Lycian","Lyci","Lydian","Lydi","Mahajani","Mahj","Malayalam","Mlym","Mandaic","Mand","Manichaean","Mani","Marchen","Marc","Masaram_Gondi","Gonm","Meetei_Mayek","Mtei","Mende_Kikakui","Mend","Meroitic_Cursive","Merc","Meroitic_Hieroglyphs","Mero","Miao","Plrd","Modi","Mongolian","Mong","Mro","Mroo","Multani","Mult","Myanmar","Mymr","Nabataean","Nbat","New_Tai_Lue","Talu","Newa","Nko","Nkoo","Nushu","Nshu","Ogham","Ogam","Ol_Chiki","Olck","Old_Hungarian","Hung","Old_Italic","Ital","Old_North_Arabian","Narb","Old_Permic","Perm","Old_Persian","Xpeo","Old_South_Arabian","Sarb","Old_Turkic","Orkh","Oriya","Orya","Osage","Osge","Osmanya","Osma","Pahawh_Hmong","Hmng","Palmyrene","Palm","Pau_Cin_Hau","Pauc","Phags_Pa","Phag","Phoenician","Phnx","Psalter_Pahlavi","Phlp","Rejang","Rjng","Runic","Runr","Samaritan","Samr","Saurashtra","Saur","Sharada","Shrd","Shavian","Shaw","Siddham","Sidd","SignWriting","Sgnw","Sinhala","Sinh","Sora_Sompeng","Sora","Soyombo","Soyo","Sundanese","Sund","Syloti_Nagri","Sylo","Syriac","Syrc","Tagalog","Tglg","Tagbanwa","Tagb","Tai_Le","Tale","Tai_Tham","Lana","Tai_Viet","Tavt","Takri","Takr","Tamil","Taml","Tangut","Tang","Telugu","Telu","Thaana","Thaa","Thai","Tibetan","Tibt","Tifinagh","Tfng","Tirhuta","Tirh","Ugaritic","Ugar","Vai","Vaii","Warang_Citi","Wara","Yi","Yiii","Zanabazar_Square","Zanb"])};XD.gc=XD.General_Category,XD.sc=XD.Script_Extensions=XD.scx=XD.Script;var YD=10,ZD=13,eF=36,tF=40,rF=41,nF=42,iF=43,aF=46,oF=48,sF=55,uF=57,cF=63,lF=65,pF=70,fF=90,hF=95,dF=97,mF=102,gF=122,yF=91,vF=92,xF=93,bF=94,EF=123,CF=124,SF=125,kF=8204,DF=8205,FF=8232,AF=8233,wF=0,_F=1114111;function TF(e){return e>=lF&&e<=fF||e>=dF&&e<=gF}function PF(e){return e>=oF&&e<=uF}function IF(e){return e>=oF&&e<=uF||e>=lF&&e<=pF||e>=dF&&e<=mF}function BF(e){return e===YD||e===ZD||e===FF||e===AF}function OF(e){return e>=dF&&e<=mF?e-dF+10:e>=lF&&e<=pF?e-lF+10:e-oF}var LF={at:function(e,t,r){return r<t?e.charCodeAt(r):-1},width:function(e){return 1}},NF={at:function(e,t,r){return r<t?e.codePointAt(r):-1},width:function(e){return e>65535?2:1}},jF=function(){function e(){a(this,e),this._impl=LF,this._s="",this._i=0,this._end=0,this._cp1=-1,this._w1=1,this._cp2=-1,this._w2=1,this._cp3=-1,this._w3=1,this._cp4=-1;}return s(e,[{key:"reset",value:function(e,t,r,n){this._impl=n?NF:LF,this._s=e,this._end=r,this.rewind(t);}},{key:"rewind",value:function(e){var t=this._impl;this._i=e,this._cp1=t.at(this._s,this._end,e),this._w1=t.width(this._cp1),this._cp2=t.at(this._s,this._end,e+this._w1),this._w2=t.width(this._cp2),this._cp3=t.at(this._s,this._end,e+this._w1+this._w2),this._w3=t.width(this._cp3),this._cp4=t.at(this._s,this._end,e+this._w1+this._w2+this._w3);}},{key:"advance",value:function(){if(-1!==this._cp1){var e=this._impl;this._i+=this._w1,this._cp1=this._cp2,this._w1=this._w2,this._cp2=this._cp3,this._w2=e.width(this._cp2),this._cp3=this._cp4,this._w3=e.width(this._cp3),this._cp4=e.at(this._s,this._end,this._i+this._w1+this._w2+this._w3);}}},{key:"eat",value:function(e){return this._cp1===e&&(this.advance(),!0)}},{key:"eat2",value:function(e,t){return this._cp1===e&&this._cp2===t&&(this.advance(),this.advance(),!0)}},{key:"eat3",value:function(e,t,r){return this._cp1===e&&this._cp2===t&&this._cp3===r&&(this.advance(),this.advance(),this.advance(),!0)}},{key:"source",get:function(){return this._s}},{key:"index",get:function(){return this._i}},{key:"currentCodePoint",get:function(){return this._cp1}},{key:"nextCodePoint",get:function(){return this._cp2}},{key:"nextCodePoint2",get:function(){return this._cp3}},{key:"nextCodePoint3",get:function(){return this._cp4}}]),e}(),RF=function(e){function t(e,r,n,i){var o;return a(this,t),e&&("/"!==e[0]&&(e="/".concat(e,"/").concat(r?"u":"")),e=": ".concat(e)),(o=v(this,h(t).call(this,"Invalid regular expression".concat(e,": ").concat(i)))).index=n,o}return f(t,g(SyntaxError)),t}();function MF(e){return e===bF||e===eF||e===vF||e===aF||e===nF||e===iF||e===cF||e===tF||e===rF||e===yF||e===xF||e===EF||e===SF||e===CF}function VF(e){return function(e){return !(e<65)&&(e<91||!(e<97)&&(e<123||QD(e)))}(e)||e===eF||e===hF}function UF(e){return TF(e)||e===hF}function qF(e,t){return XD.hasOwnProperty(e)&&XD[e].has(t)}var WF=function(){function e(t){a(this,e),this._reader=new jF,this._uFlag=!1,this._nFlag=!1,this._lastIntValue=0,this._lastMinValue=0,this._lastMaxValue=0,this._lastStrValue="",this._lastKeyValue="",this._lastValValue="",this._lastAssertionIsQuantifiable=!1,this._numCapturingParens=0,this._groupNames=new Set,this._backreferenceNames=new Set,this._options=t||{};}return s(e,[{key:"validateLiteral",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length;if(this._uFlag=this._nFlag=!1,this.reset(e,t,r),this.onLiteralEnter(t),this.eat(47)&&this.eatRegExpBody()&&this.eat(47)){var n=this.index,i=-1!==e.indexOf("u",n);this.validateFlags(e,n,r),this.validatePattern(e,t+1,n-1,i);}else if(t>=r)this.raise("Empty");else {var a=String.fromCodePoint(this.currentCodePoint);this.raise("Unexpected character '".concat(a,"'"));}this.onLiteralLeave(t,r);}},{key:"validateFlags",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length,n=new Set,i=!1,a=!1,o=!1,s=!1,u=!1,c=!1,l=t;l<r;++l){var p=e.charCodeAt(l);n.has(p)&&this.raise("Duplicated flag '".concat(e[l],"'")),n.add(p),103===p?i=!0:105===p?a=!0:109===p?o=!0:117===p&&this.ecmaVersion>=2015?u=!0:121===p&&this.ecmaVersion>=2015?s=!0:115===p&&this.ecmaVersion>=2018?c=!0:this.raise("Invalid flag '".concat(e[l],"'"));}this.onFlags(t,r,i,a,o,u,s,c);}},{key:"validatePattern",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._uFlag=n&&this.ecmaVersion>=2015,this._nFlag=n&&this.ecmaVersion>=2018,this.reset(e,t,r),this.pattern(),!this._nFlag&&this.ecmaVersion>=2018&&this._groupNames.size>0&&(this._nFlag=!0,this.rewind(t),this.pattern());}},{key:"onLiteralEnter",value:function(e){this._options.onLiteralEnter&&this._options.onLiteralEnter(e);}},{key:"onLiteralLeave",value:function(e,t){this._options.onLiteralLeave&&this._options.onLiteralLeave(e,t);}},{key:"onFlags",value:function(e,t,r,n,i,a,o,s){this._options.onFlags&&this._options.onFlags(e,t,r,n,i,a,o,s);}},{key:"onPatternEnter",value:function(e){this._options.onPatternEnter&&this._options.onPatternEnter(e);}},{key:"onPatternLeave",value:function(e,t){this._options.onPatternLeave&&this._options.onPatternLeave(e,t);}},{key:"onDisjunctionEnter",value:function(e){this._options.onDisjunctionEnter&&this._options.onDisjunctionEnter(e);}},{key:"onDisjunctionLeave",value:function(e,t){this._options.onDisjunctionLeave&&this._options.onDisjunctionLeave(e,t);}},{key:"onAlternativeEnter",value:function(e,t){this._options.onAlternativeEnter&&this._options.onAlternativeEnter(e,t);}},{key:"onAlternativeLeave",value:function(e,t,r){this._options.onAlternativeLeave&&this._options.onAlternativeLeave(e,t,r);}},{key:"onGroupEnter",value:function(e){this._options.onGroupEnter&&this._options.onGroupEnter(e);}},{key:"onGroupLeave",value:function(e,t){this._options.onGroupLeave&&this._options.onGroupLeave(e,t);}},{key:"onCapturingGroupEnter",value:function(e,t){this._options.onCapturingGroupEnter&&this._options.onCapturingGroupEnter(e,t);}},{key:"onCapturingGroupLeave",value:function(e,t,r){this._options.onCapturingGroupLeave&&this._options.onCapturingGroupLeave(e,t,r);}},{key:"onQuantifier",value:function(e,t,r,n,i){this._options.onQuantifier&&this._options.onQuantifier(e,t,r,n,i);}},{key:"onLookaroundAssertionEnter",value:function(e,t,r){this._options.onLookaroundAssertionEnter&&this._options.onLookaroundAssertionEnter(e,t,r);}},{key:"onLookaroundAssertionLeave",value:function(e,t,r,n){this._options.onLookaroundAssertionLeave&&this._options.onLookaroundAssertionLeave(e,t,r,n);}},{key:"onEdgeAssertion",value:function(e,t,r){this._options.onEdgeAssertion&&this._options.onEdgeAssertion(e,t,r);}},{key:"onWordBoundaryAssertion",value:function(e,t,r,n){this._options.onWordBoundaryAssertion&&this._options.onWordBoundaryAssertion(e,t,r,n);}},{key:"onAnyCharacterSet",value:function(e,t,r){this._options.onAnyCharacterSet&&this._options.onAnyCharacterSet(e,t,r);}},{key:"onEscapeCharacterSet",value:function(e,t,r,n){this._options.onEscapeCharacterSet&&this._options.onEscapeCharacterSet(e,t,r,n);}},{key:"onUnicodePropertyCharacterSet",value:function(e,t,r,n,i,a){this._options.onUnicodePropertyCharacterSet&&this._options.onUnicodePropertyCharacterSet(e,t,r,n,i,a);}},{key:"onCharacter",value:function(e,t,r){this._options.onCharacter&&this._options.onCharacter(e,t,r);}},{key:"onBackreference",value:function(e,t,r){this._options.onBackreference&&this._options.onBackreference(e,t,r);}},{key:"onCharacterClassEnter",value:function(e,t){this._options.onCharacterClassEnter&&this._options.onCharacterClassEnter(e,t);}},{key:"onCharacterClassLeave",value:function(e,t,r){this._options.onCharacterClassLeave&&this._options.onCharacterClassLeave(e,t,r);}},{key:"onCharacterClassRange",value:function(e,t,r,n){this._options.onCharacterClassRange&&this._options.onCharacterClassRange(e,t,r,n);}},{key:"reset",value:function(e,t,r){this._reader.reset(e,t,r,this._uFlag);}},{key:"rewind",value:function(e){this._reader.rewind(e);}},{key:"advance",value:function(){this._reader.advance();}},{key:"eat",value:function(e){return this._reader.eat(e)}},{key:"eat2",value:function(e,t){return this._reader.eat2(e,t)}},{key:"eat3",value:function(e,t,r){return this._reader.eat3(e,t,r)}},{key:"raise",value:function(e){throw new RF(this.source,this._uFlag,this.index,e)}},{key:"eatRegExpBody",value:function(){for(var e=this.index,t=!1,r=!1;;){var n=this.currentCodePoint;if(-1===n||BF(n)){var i=t?"character class":"regular expression";this.raise("Unterminated ".concat(i));}if(r)r=!1;else if(n===vF)r=!0;else if(n===yF)t=!0;else if(n===xF)t=!1;else if(47===n&&!t||n===nF&&this.index===e)break;this.advance();}return this.index!==e}},{key:"pattern",value:function(){var e=this.index;this._numCapturingParens=this.countCapturingParens(),this._groupNames.clear(),this._backreferenceNames.clear(),this.onPatternEnter(e),this.disjunction();var t=this.currentCodePoint;if(-1!==this.currentCodePoint){t===rF&&this.raise("Unmatched ')'"),t===vF&&this.raise("\\ at end of pattern"),t!==xF&&t!==SF||this.raise("Lone quantifier brackets");var r=String.fromCodePoint(t);this.raise("Unexpected character '".concat(r,"'"));}var n=!0,i=!1,a=void 0;try{for(var o,s=this._backreferenceNames[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value;this._groupNames.has(u)||this.raise("Invalid named capture referenced");}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}this.onPatternLeave(e,this.index);}},{key:"countCapturingParens",value:function(){for(var e=this.index,t=!1,r=!1,n=0,i=0;-1!==(i=this.currentCodePoint);)r?r=!1:i===vF?r=!0:i===yF?t=!0:i===xF?t=!1:i!==tF||t||this.nextCodePoint===cF&&(60!==this.nextCodePoint2||61===this.nextCodePoint3||33===this.nextCodePoint3)||(n+=1),this.advance();return this.rewind(e),n}},{key:"disjunction",value:function(){var e=this.index,t=0;for(this.onDisjunctionEnter(e),this.alternative(t++);this.eat(CF);)this.alternative(t++);this.eatQuantifier(!0)&&this.raise("Nothing to repeat"),this.eat(EF)&&this.raise("Lone quantifier brackets"),this.onDisjunctionLeave(e,this.index);}},{key:"alternative",value:function(e){var t=this.index;for(this.onAlternativeEnter(t,e);-1!==this.currentCodePoint&&this.eatTerm(););this.onAlternativeLeave(t,this.index,e);}},{key:"eatTerm",value:function(){return this.eatAssertion()?(this._lastAssertionIsQuantifiable&&this.eatQuantifier(),!0):!(this.strict?!this.eatAtom():!this.eatExtendedAtom())&&(this.eatQuantifier(),!0)}},{key:"eatAssertion",value:function(){var e=this.index;if(this._lastAssertionIsQuantifiable=!1,this.eat(bF))return this.onEdgeAssertion(e,this.index,"start"),!0;if(this.eat(eF))return this.onEdgeAssertion(e,this.index,"end"),!0;if(this.eat2(vF,66))return this.onWordBoundaryAssertion(e,this.index,"word",!0),!0;if(this.eat2(vF,98))return this.onWordBoundaryAssertion(e,this.index,"word",!1),!0;if(this.eat2(tF,cF)){var t=this.ecmaVersion>=2018&&this.eat(60),r=!1;if(this.eat(61)||(r=this.eat(33))){var n=t?"lookbehind":"lookahead";return this.onLookaroundAssertionEnter(e,n,r),this.disjunction(),this.eat(rF)||this.raise("Unterminated group"),this._lastAssertionIsQuantifiable=!t&&!this.strict,this.onLookaroundAssertionLeave(e,this.index,n,r),!0}this.rewind(e);}return !1}},{key:"eatQuantifier",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.index,r=0,n=0,i=!1;if(this.eat(nF))r=0,n=Number.POSITIVE_INFINITY;else if(this.eat(iF))r=1,n=Number.POSITIVE_INFINITY;else if(this.eat(cF))r=0,n=1;else {if(!this.eatBracedQuantifier(e))return !1;r=this._lastMinValue,n=this._lastMaxValue;}return i=!this.eat(cF),e||this.onQuantifier(t,this.index,r,n,i),!0}},{key:"eatBracedQuantifier",value:function(e){var t=this.index;if(this.eat(EF)){if(this._lastMinValue=0,this._lastMaxValue=Number.POSITIVE_INFINITY,this.eatDecimalDigits()&&(this._lastMinValue=this._lastMaxValue=this._lastIntValue,this.eat(44)&&(this._lastMaxValue=this.eatDecimalDigits()?this._lastIntValue:Number.POSITIVE_INFINITY),this.eat(SF)))return !e&&this._lastMaxValue<this._lastMinValue&&this.raise("numbers out of order in {} quantifier"),!0;!e&&this.strict&&this.raise("Incomplete quantifier"),this.rewind(t);}return !1}},{key:"eatAtom",value:function(){return this.eatPatternCharacter()||this.eatDot()||this.eatReverseSolidusAtomEscape()||this.eatCharacterClass()||this.eatUncapturingGroup()||this.eatCapturingGroup()}},{key:"eatDot",value:function(){return !!this.eat(aF)&&(this.onAnyCharacterSet(this.index-1,this.index,"any"),!0)}},{key:"eatReverseSolidusAtomEscape",value:function(){var e=this.index;if(this.eat(vF)){if(this.eatAtomEscape())return !0;this.rewind(e);}return !1}},{key:"eatUncapturingGroup",value:function(){var e=this.index;return !!this.eat3(tF,cF,58)&&(this.onGroupEnter(e),this.disjunction(),this.eat(rF)||this.raise("Unterminated group"),this.onGroupLeave(e,this.index),!0)}},{key:"eatCapturingGroup",value:function(){var e=this.index;if(this.eat(tF)){this._lastStrValue="",this.ecmaVersion>=2018?this.groupSpecifier():this.currentCodePoint===cF&&this.raise("Invalid group");var t=this._lastStrValue||null;return this.onCapturingGroupEnter(e,t),this.disjunction(),this.eat(rF)||this.raise("Unterminated group"),this.onCapturingGroupLeave(e,this.index,t),!0}return !1}},{key:"eatExtendedAtom",value:function(){return this.eatDot()||this.eatReverseSolidusAtomEscape()||this.eatReverseSolidusFollowedByC()||this.eatCharacterClass()||this.eatUncapturingGroup()||this.eatCapturingGroup()||this.eatInvalidBracedQuantifier()||this.eatExtendedPatternCharacter()}},{key:"eatReverseSolidusFollowedByC",value:function(){return this.currentCodePoint===vF&&99===this.nextCodePoint&&(this._lastIntValue=this.currentCodePoint,this.advance(),this.onCharacter(this.index-1,this.index,vF),!0)}},{key:"eatInvalidBracedQuantifier",value:function(){return this.eatBracedQuantifier(!0)&&this.raise("Nothing to repeat"),!1}},{key:"eatSyntaxCharacter",value:function(){return !!MF(this.currentCodePoint)&&(this._lastIntValue=this.currentCodePoint,this.advance(),!0)}},{key:"eatPatternCharacter",value:function(){var e=this.index,t=this.currentCodePoint;return -1!==t&&!MF(t)&&(this.advance(),this.onCharacter(e,this.index,t),!0)}},{key:"eatExtendedPatternCharacter",value:function(){var e=this.index,t=this.currentCodePoint;return -1!==t&&t!==bF&&t!==eF&&t!==vF&&t!==aF&&t!==nF&&t!==iF&&t!==cF&&t!==tF&&t!==rF&&t!==yF&&t!==CF&&(this.advance(),this.onCharacter(e,this.index,t),!0)}},{key:"groupSpecifier",value:function(){if(this._lastStrValue="",this.eat(cF)){if(this.eatGroupName()){if(!this._groupNames.has(this._lastStrValue))return void this._groupNames.add(this._lastStrValue);this.raise("Duplicate capture group name");}this.raise("Invalid group");}}},{key:"eatGroupName",value:function(){if(this._lastStrValue="",this.eat(60)){if(this.eatRegExpIdentifierName()&&this.eat(62))return !0;this.raise("Invalid capture group name");}return !1}},{key:"eatRegExpIdentifierName",value:function(){if(this._lastStrValue="",this.eatRegExpIdentifierStart()){for(this._lastStrValue+=String.fromCodePoint(this._lastIntValue);this.eatRegExpIdentifierPart();)this._lastStrValue+=String.fromCodePoint(this._lastIntValue);return !0}return !1}},{key:"eatRegExpIdentifierStart",value:function(){var e=this.index,t=this.currentCodePoint;return this.advance(),t===vF&&this.eatRegExpUnicodeEscapeSequence()&&(t=this._lastIntValue),VF(t)?(this._lastIntValue=t,!0):(this.index!==e&&this.rewind(e),!1)}},{key:"eatRegExpIdentifierPart",value:function(){var e=this.index,t=this.currentCodePoint;return this.advance(),t===vF&&this.eatRegExpUnicodeEscapeSequence()&&(t=this._lastIntValue),function(e){return JD(e)||e===eF||e===hF||e===kF||e===DF}(t)?(this._lastIntValue=t,!0):(this.index!==e&&this.rewind(e),!1)}},{key:"eatAtomEscape",value:function(){return !!(this.eatBackreference()||this.eatCharacterClassEscape()||this.eatCharacterEscape()||this._nFlag&&this.eatKGroupName())||((this.strict||this._uFlag)&&this.raise("Invalid escape"),!1)}},{key:"eatBackreference",value:function(){var e=this.index;if(this.eatDecimalEscape()){var t=this._lastIntValue;if(t<=this._numCapturingParens)return this.onBackreference(e-1,this.index,t),!0;this.strict&&this.raise("Invalid escape"),this.rewind(e);}return !1}},{key:"eatKGroupName",value:function(){var e=this.index;if(this.eat(107)){if(this.eatGroupName()){var t=this._lastStrValue;return this._backreferenceNames.add(t),this.onBackreference(e-1,this.index,t),!0}this.raise("Invalid named reference");}return !1}},{key:"eatCharacterEscape",value:function(){var e=this.index;return !!(this.eatControlEscape()||this.eatCControlLetter()||this.eatZero()||this.eatHexEscapeSequence()||this.eatRegExpUnicodeEscapeSequence()||!this.strict&&this.eatLegacyOctalEscapeSequence()||this.eatIdentityEscape())&&(this.onCharacter(e-1,this.index,this._lastIntValue),!0)}},{key:"eatCControlLetter",value:function(){var e=this.index;if(this.eat(99)){if(this.eatControlLetter())return !0;this.rewind(e);}return !1}},{key:"eatZero",value:function(){return this.currentCodePoint===oF&&!PF(this.nextCodePoint)&&(this._lastIntValue=0,this.advance(),!0)}},{key:"eatControlEscape",value:function(){return this.eat(116)?(this._lastIntValue=9,!0):this.eat(110)?(this._lastIntValue=YD,!0):this.eat(118)?(this._lastIntValue=11,!0):this.eat(mF)?(this._lastIntValue=12,!0):!!this.eat(114)&&(this._lastIntValue=ZD,!0)}},{key:"eatControlLetter",value:function(){var e=this.currentCodePoint;return !!TF(e)&&(this.advance(),this._lastIntValue=e%32,!0)}},{key:"eatRegExpUnicodeEscapeSequence",value:function(){var e=this.index;if(this.eat(117)){if(this.eatFixedHexDigits(4)){var t=this._lastIntValue;if(this._uFlag&&t>=55296&&t<=56319){var r=this.index;if(this.eat(vF)&&this.eat(117)&&this.eatFixedHexDigits(4)){var n=this._lastIntValue;if(n>=56320&&n<=57343)return this._lastIntValue=1024*(t-55296)+(n-56320)+65536,!0}this.rewind(r),this._lastIntValue=t;}return !0}if(this._uFlag&&this.eat(EF)&&this.eatHexDigits()&&this.eat(SF)&&function(e){return e>=wF&&e<=_F}(this._lastIntValue))return !0;(this.strict||this._uFlag)&&this.raise("Invalid unicode escape"),this.rewind(e);}return !1}},{key:"eatIdentityEscape",value:function(){return this._uFlag?!!this.eatSyntaxCharacter()||!!this.eat(47)&&(this._lastIntValue=47,!0):!!this.isValidIdentityEscape(this.currentCodePoint)&&(this._lastIntValue=this.currentCodePoint,this.advance(),!0)}},{key:"isValidIdentityEscape",value:function(e){return -1!==e&&(this.strict?!JD(e):99!==e&&(!this._nFlag||107!==e))}},{key:"eatDecimalEscape",value:function(){this._lastIntValue=0;var e=this.currentCodePoint;if(e>=49&&e<=uF){do{this._lastIntValue=10*this._lastIntValue+(e-oF),this.advance();}while((e=this.currentCodePoint)>=oF&&e<=uF);return !0}return !1}},{key:"eatCharacterClassEscape",value:function(){var e=this.index;if(this.eat(100))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"digit",!1),!0;if(this.eat(68))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"digit",!0),!0;if(this.eat(115))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"space",!1),!0;if(this.eat(83))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"space",!0),!0;if(this.eat(119))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"word",!1),!0;if(this.eat(87))return this._lastIntValue=-1,this.onEscapeCharacterSet(e-1,this.index,"word",!0),!0;var t=!1;if(this._uFlag&&this.ecmaVersion>=2018&&(this.eat(112)||(t=this.eat(80)))){if(this._lastIntValue=-1,this.eat(EF)&&this.eatUnicodePropertyValueExpression()&&this.eat(SF))return this.onUnicodePropertyCharacterSet(e-1,this.index,"property",this._lastKeyValue,this._lastValValue||null,t),!0;this.raise("Invalid property name");}return !1}},{key:"eatUnicodePropertyValueExpression",value:function(){var e=this.index;if(this.eatUnicodePropertyName()&&this.eat(61)&&(this._lastKeyValue=this._lastStrValue,this.eatUnicodePropertyValue())){if(this._lastValValue=this._lastStrValue,qF(this._lastKeyValue,this._lastValValue))return !0;this.raise("Invalid property name");}if(this.rewind(e),this.eatLoneUnicodePropertyNameOrValue()){var t=this._lastStrValue;if(qF("General_Category",t))return this._lastKeyValue="General_Category",this._lastValValue=t,!0;if(function(e){return XD.$LONE.has(e)}(t))return this._lastKeyValue=t,this._lastValValue="",!0;this.raise("Invalid property name");}return !1}},{key:"eatUnicodePropertyName",value:function(){for(this._lastStrValue="";UF(this.currentCodePoint);)this._lastStrValue+=String.fromCodePoint(this.currentCodePoint),this.advance();return ""!==this._lastStrValue}},{key:"eatUnicodePropertyValue",value:function(){for(this._lastStrValue="";UF(e=this.currentCodePoint)||PF(e);)this._lastStrValue+=String.fromCodePoint(this.currentCodePoint),this.advance();var e;return ""!==this._lastStrValue}},{key:"eatLoneUnicodePropertyNameOrValue",value:function(){return this.eatUnicodePropertyValue()}},{key:"eatCharacterClass",value:function(){var e=this.index;if(this.eat(yF)){var t=this.eat(bF);return this.onCharacterClassEnter(e,t),this.classRanges(),this.eat(xF)||this.raise("Unterminated character class"),this.onCharacterClassLeave(e,this.index,t),!0}return !1}},{key:"classRanges",value:function(){for(var e=this.index;this.eatClassAtom();){var t=this._lastIntValue,r=this.index;if(this.eat(45)&&(this.onCharacter(r,this.index,45),this.eatClassAtom())){var n=this._lastIntValue;-1===t||-1===n?this.strict&&this.raise("Invalid character class"):t>n?this.raise("Range out of order in character class"):this.onCharacterClassRange(e,this.index,t,n);}e=this.index;}}},{key:"eatClassAtom",value:function(){var e=this.index;if(this.eat(vF)){if(this.eatClassEscape())return !0;this._uFlag&&this.raise("Invalid escape"),this.rewind(e);}var t=this.currentCodePoint;return -1!==t&&t!==xF&&(this.advance(),this._lastIntValue=t,this.onCharacter(e,this.index,t),!0)}},{key:"eatClassEscape",value:function(){var e=this.index;if(this.eat(98))return this._lastIntValue=8,this.onCharacter(e-1,this.index,8),!0;if(this._uFlag&&this.eat(45))return this._lastIntValue=45,this.onCharacter(e-1,this.index,45),!0;if(!this._uFlag&&this.eat(99)){if(this.eatClassControlLetter())return this.onCharacter(e-1,this.index,this._lastIntValue),!0;this.rewind(e);}return this.eatCharacterClassEscape()||this.eatCharacterEscape()}},{key:"eatClassControlLetter",value:function(){var e=this.currentCodePoint;return !(!PF(e)&&e!==hF)&&(this.advance(),this._lastIntValue=e%32,!0)}},{key:"eatHexEscapeSequence",value:function(){var e=this.index;if(this.eat(120)){if(this.eatFixedHexDigits(2))return !0;this._uFlag&&this.raise("Invalid escape"),this.rewind(e);}return !1}},{key:"eatDecimalDigits",value:function(){var e=this.index;for(this._lastIntValue=0;PF(this.currentCodePoint);)this._lastIntValue=10*this._lastIntValue+OF(this.currentCodePoint),this.advance();return this.index!==e}},{key:"eatHexDigits",value:function(){var e=this.index;for(this._lastIntValue=0;IF(this.currentCodePoint);)this._lastIntValue=16*this._lastIntValue+OF(this.currentCodePoint),this.advance();return this.index!==e}},{key:"eatLegacyOctalEscapeSequence",value:function(){if(this.eatOctalDigit()){var e=this._lastIntValue;if(this.eatOctalDigit()){var t=this._lastIntValue;e<=3&&this.eatOctalDigit()?this._lastIntValue=64*e+8*t+this._lastIntValue:this._lastIntValue=8*e+t;}else this._lastIntValue=e;return !0}return !1}},{key:"eatOctalDigit",value:function(){var e=this.currentCodePoint;return function(e){return e>=oF&&e<=sF}(e)?(this.advance(),this._lastIntValue=e-oF,!0):(this._lastIntValue=0,!1)}},{key:"eatFixedHexDigits",value:function(e){var t=this.index;this._lastIntValue=0;for(var r=0;r<e;++r){var n=this.currentCodePoint;if(!IF(n))return this.rewind(t),!1;this._lastIntValue=16*this._lastIntValue+OF(n),this.advance();}return !0}},{key:"strict",get:function(){return Boolean(this._options.strict||this._uFlag)}},{key:"ecmaVersion",get:function(){return this._options.ecmaVersion||2018}},{key:"source",get:function(){return this._reader.source}},{key:"index",get:function(){return this._reader.index}},{key:"currentCodePoint",get:function(){return this._reader.currentCodePoint}},{key:"nextCodePoint",get:function(){return this._reader.nextCodePoint}},{key:"nextCodePoint2",get:function(){return this._reader.nextCodePoint2}},{key:"nextCodePoint3",get:function(){return this._reader.nextCodePoint3}}]),e}(),$F={},GF={},zF={},HF=function(){function e(t){a(this,e),this._node=$F,this._flags=GF,this._backreferences=[],this._capturingGroups=[],this.source="",this.strict=Boolean(t&&t.strict),this.ecmaVersion=t&&t.ecmaVersion||2018;}return s(e,[{key:"onFlags",value:function(e,t,r,n,i,a,o,s){this._flags={type:"Flags",parent:null,start:e,end:t,raw:this.source.slice(e,t),global:r,ignoreCase:n,multiline:i,unicode:a,sticky:o,dotAll:s};}},{key:"onPatternEnter",value:function(e){this._node={type:"Pattern",parent:null,start:e,end:e,raw:"",alternatives:[]},this._backreferences.length=0,this._capturingGroups.length=0;}},{key:"onPatternLeave",value:function(e,t){var r=this;this._node.end=t,this._node.raw=this.source.slice(e,t);var n=!0,i=!1,a=void 0;try{for(var o,s=function(){var e=o.value,t=e.ref,n="number"==typeof t?r._capturingGroups[t-1]:r._capturingGroups.find((function(e){return e.name===t}));e.resolved=n,n.references.push(e);},u=this._backreferences[Symbol.iterator]();!(n=(o=u.next()).done);n=!0)s();}catch(e){i=!0,a=e;}finally{try{n||null==u.return||u.return();}finally{if(i)throw a}}}},{key:"onAlternativeEnter",value:function(e){var t=this._node;if("Assertion"!==t.type&&"CapturingGroup"!==t.type&&"Group"!==t.type&&"Pattern"!==t.type)throw new Error("UnknownError");this._node={type:"Alternative",parent:t,start:e,end:e,raw:"",elements:[]},t.alternatives.push(this._node);}},{key:"onAlternativeLeave",value:function(e,t){var r=this._node;if("Alternative"!==r.type)throw new Error("UnknownError");r.end=t,r.raw=this.source.slice(e,t),this._node=r.parent;}},{key:"onGroupEnter",value:function(e){var t=this._node;if("Alternative"!==t.type)throw new Error("UnknownError");this._node={type:"Group",parent:t,start:e,end:e,raw:"",alternatives:[]},t.elements.push(this._node);}},{key:"onGroupLeave",value:function(e,t){var r=this._node;if("Group"!==r.type||"Alternative"!==r.parent.type)throw new Error("UnknownError");r.end=t,r.raw=this.source.slice(e,t),this._node=r.parent;}},{key:"onCapturingGroupEnter",value:function(e,t){var r=this._node;if("Alternative"!==r.type)throw new Error("UnknownError");this._node={type:"CapturingGroup",parent:r,start:e,end:e,raw:"",name:t,alternatives:[],references:[]},r.elements.push(this._node),this._capturingGroups.push(this._node);}},{key:"onCapturingGroupLeave",value:function(e,t){var r=this._node;if("CapturingGroup"!==r.type||"Alternative"!==r.parent.type)throw new Error("UnknownError");r.end=t,r.raw=this.source.slice(e,t),this._node=r.parent;}},{key:"onQuantifier",value:function(e,t,r,n,i){var a=this._node;if("Alternative"!==a.type)throw new Error("UnknownError");var o=a.elements.pop();if(null==o||"Quantifier"===o.type||"Assertion"===o.type&&"lookahead"!==o.kind)throw new Error("UnknownError");var s={type:"Quantifier",parent:a,start:o.start,end:t,raw:this.source.slice(o.start,t),min:r,max:n,greedy:i,element:o};a.elements.push(s),o.parent=s;}},{key:"onLookaroundAssertionEnter",value:function(e,t,r){var n=this._node;if("Alternative"!==n.type)throw new Error("UnknownError");this._node={type:"Assertion",parent:n,start:e,end:e,raw:"",kind:t,negate:r,alternatives:[]},n.elements.push(this._node);}},{key:"onLookaroundAssertionLeave",value:function(e,t){var r=this._node;if("Assertion"!==r.type||"Alternative"!==r.parent.type)throw new Error("UnknownError");r.end=t,r.raw=this.source.slice(e,t),this._node=r.parent;}},{key:"onEdgeAssertion",value:function(e,t,r){var n=this._node;if("Alternative"!==n.type)throw new Error("UnknownError");n.elements.push({type:"Assertion",parent:n,start:e,end:t,raw:this.source.slice(e,t),kind:r});}},{key:"onWordBoundaryAssertion",value:function(e,t,r,n){var i=this._node;if("Alternative"!==i.type)throw new Error("UnknownError");i.elements.push({type:"Assertion",parent:i,start:e,end:t,raw:this.source.slice(e,t),kind:r,negate:n});}},{key:"onAnyCharacterSet",value:function(e,t,r){var n=this._node;if("Alternative"!==n.type)throw new Error("UnknownError");n.elements.push({type:"CharacterSet",parent:n,start:e,end:t,raw:this.source.slice(e,t),kind:r});}},{key:"onEscapeCharacterSet",value:function(e,t,r,n){var i=this._node;if("Alternative"!==i.type&&"CharacterClass"!==i.type)throw new Error("UnknownError");i.elements.push({type:"CharacterSet",parent:i,start:e,end:t,raw:this.source.slice(e,t),kind:r,negate:n});}},{key:"onUnicodePropertyCharacterSet",value:function(e,t,r,n,i,a){var o=this._node;if("Alternative"!==o.type&&"CharacterClass"!==o.type)throw new Error("UnknownError");o.elements.push({type:"CharacterSet",parent:o,start:e,end:t,raw:this.source.slice(e,t),kind:r,key:n,value:i,negate:a});}},{key:"onCharacter",value:function(e,t,r){var n=this._node;if("Alternative"!==n.type&&"CharacterClass"!==n.type)throw new Error("UnknownError");n.elements.push({type:"Character",parent:n,start:e,end:t,raw:this.source.slice(e,t),value:r});}},{key:"onBackreference",value:function(e,t,r){var n=this._node;if("Alternative"!==n.type)throw new Error("UnknownError");var i={type:"Backreference",parent:n,start:e,end:t,raw:this.source.slice(e,t),ref:r,resolved:zF};n.elements.push(i),this._backreferences.push(i);}},{key:"onCharacterClassEnter",value:function(e,t){var r=this._node;if("Alternative"!==r.type)throw new Error("UnknownError");this._node={type:"CharacterClass",parent:r,start:e,end:e,raw:"",negate:t,elements:[]},r.elements.push(this._node);}},{key:"onCharacterClassLeave",value:function(e,t){var r=this._node;if("CharacterClass"!==r.type||"Alternative"!==r.parent.type)throw new Error("UnknownError");r.end=t,r.raw=this.source.slice(e,t),this._node=r.parent;}},{key:"onCharacterClassRange",value:function(e,t){var r=this._node;if("CharacterClass"!==r.type)throw new Error("UnknownError");var n=r.elements,i=n.pop(),a=n.pop(),o=n.pop();if(!o||!i||!a||"Character"!==o.type||"Character"!==i.type||"Character"!==a.type||45!==a.value)throw new Error("UnknownError");var s={type:"CharacterClassRange",parent:r,start:e,end:t,raw:this.source.slice(e,t),min:o,max:i};o.parent=s,i.parent=s,n.push(s);}},{key:"pattern",get:function(){if("Pattern"!==this._node.type)throw new Error("UnknownError");return this._node}},{key:"flags",get:function(){if("Flags"!==this._flags.type)throw new Error("UnknownError");return this._flags}}]),e}(),KF=function(){function e(t){a(this,e),this._state=new HF(t),this._validator=new WF(this._state);}return s(e,[{key:"parseLiteral",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length;this._state.source=e,this._validator.validateLiteral(e,t,r);var n=this._state.pattern,i=this._state.flags,a={type:"RegExpLiteral",parent:null,start:t,end:r,raw:e,pattern:n,flags:i};return n.parent=a,i.parent=a,a}},{key:"parseFlags",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length;return this._state.source=e,this._validator.validateFlags(e,t,r),this._state.flags}},{key:"parsePattern",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.length,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this._state.source=e,this._validator.validatePattern(e,t,r,n),this._state.pattern}}]),e}(),JF=function(){function e(t){a(this,e),this._handlers=t;}return s(e,[{key:"visit",value:function(e){switch(e.type){case"Alternative":this.visitAlternative(e);break;case"Assertion":this.visitAssertion(e);break;case"Backreference":this.visitBackreference(e);break;case"CapturingGroup":this.visitCapturingGroup(e);break;case"Character":this.visitCharacter(e);break;case"CharacterClass":this.visitCharacterClass(e);break;case"CharacterClassRange":this.visitCharacterClassRange(e);break;case"CharacterSet":this.visitCharacterSet(e);break;case"Flags":this.visitFlags(e);break;case"Group":this.visitGroup(e);break;case"Pattern":this.visitPattern(e);break;case"Quantifier":this.visitQuantifier(e);break;case"RegExpLiteral":this.visitRegExpLiteral(e);break;default:throw new Error("Unknown type: ".concat(e.type))}}},{key:"visitAlternative",value:function(e){this._handlers.onAlternativeEnter&&this._handlers.onAlternativeEnter(e),e.elements.forEach(this.visit,this),this._handlers.onAlternativeLeave&&this._handlers.onAlternativeLeave(e);}},{key:"visitAssertion",value:function(e){this._handlers.onAssertionEnter&&this._handlers.onAssertionEnter(e),"lookahead"!==e.kind&&"lookbehind"!==e.kind||e.alternatives.forEach(this.visit,this),this._handlers.onAssertionLeave&&this._handlers.onAssertionLeave(e);}},{key:"visitBackreference",value:function(e){this._handlers.onBackreferenceEnter&&this._handlers.onBackreferenceEnter(e),this._handlers.onBackreferenceLeave&&this._handlers.onBackreferenceLeave(e);}},{key:"visitCapturingGroup",value:function(e){this._handlers.onCapturingGroupEnter&&this._handlers.onCapturingGroupEnter(e),e.alternatives.forEach(this.visit,this),this._handlers.onCapturingGroupLeave&&this._handlers.onCapturingGroupLeave(e);}},{key:"visitCharacter",value:function(e){this._handlers.onCharacterEnter&&this._handlers.onCharacterEnter(e),this._handlers.onCharacterLeave&&this._handlers.onCharacterLeave(e);}},{key:"visitCharacterClass",value:function(e){this._handlers.onCharacterClassEnter&&this._handlers.onCharacterClassEnter(e),e.elements.forEach(this.visit,this),this._handlers.onCharacterClassLeave&&this._handlers.onCharacterClassLeave(e);}},{key:"visitCharacterClassRange",value:function(e){this._handlers.onCharacterClassRangeEnter&&this._handlers.onCharacterClassRangeEnter(e),this.visitCharacter(e.min),this.visitCharacter(e.max),this._handlers.onCharacterClassRangeLeave&&this._handlers.onCharacterClassRangeLeave(e);}},{key:"visitCharacterSet",value:function(e){this._handlers.onCharacterSetEnter&&this._handlers.onCharacterSetEnter(e),this._handlers.onCharacterSetLeave&&this._handlers.onCharacterSetLeave(e);}},{key:"visitFlags",value:function(e){this._handlers.onFlagsEnter&&this._handlers.onFlagsEnter(e),this._handlers.onFlagsLeave&&this._handlers.onFlagsLeave(e);}},{key:"visitGroup",value:function(e){this._handlers.onGroupEnter&&this._handlers.onGroupEnter(e),e.alternatives.forEach(this.visit,this),this._handlers.onGroupLeave&&this._handlers.onGroupLeave(e);}},{key:"visitPattern",value:function(e){this._handlers.onPatternEnter&&this._handlers.onPatternEnter(e),e.alternatives.forEach(this.visit,this),this._handlers.onPatternLeave&&this._handlers.onPatternLeave(e);}},{key:"visitQuantifier",value:function(e){this._handlers.onQuantifierEnter&&this._handlers.onQuantifierEnter(e),this.visit(e.element),this._handlers.onQuantifierLeave&&this._handlers.onQuantifierLeave(e);}},{key:"visitRegExpLiteral",value:function(e){this._handlers.onRegExpLiteralEnter&&this._handlers.onRegExpLiteralEnter(e),this.visitPattern(e.pattern),this.visitFlags(e.flags),this._handlers.onRegExpLiteralLeave&&this._handlers.onRegExpLiteralLeave(e);}}]),e}();var QF=Object.freeze({__proto__:null,AST:KD,RegExpParser:KF,RegExpValidator:WF,parseRegExpLiteral:function(e,t){return new KF(t).parseLiteral(String(e))},validateRegExpLiteral:function(e,t){return new WF(t).validateLiteral(e)},visitRegExpAST:function(e,t){new JF(t).visit(e);}});function XF(e){return Array.isArray(e)?e:[e]}var YF=/^\s+$/,ZF=/^\\!/,eA=/^\\#/,tA="undefined"!=typeof Symbol?Symbol.for("node-ignore"):"node-ignore",rA=function(e,t,r){return Object.defineProperty(e,t,{value:r})},nA=/([0-z])-([0-z])/g,iA=[[/\\?\s+$/,function(e){return 0===e.indexOf("\\")?" ":""}],[/\\\s/g,function(){return " "}],[/[\\^$.|*+(){]/g,function(e){return "\\".concat(e)}],[/\[([^\]/]*)($|\])/g,function(e,t,r){return "]"===r?"[".concat(t.replace(nA,(function(e,t,r){return t.charCodeAt(0)<=r.charCodeAt(0)?e:""})),"]"):"\\".concat(e)}],[/(?!\\)\?/g,function(){return "[^/]"}],[/^\//,function(){return "^"}],[/\//g,function(){return "\\/"}],[/^\^*\\\*\\\*\\\//,function(){return "^(?:.*\\/)?"}]],aA=[[/^(?=[^^])/,function(){return /\/(?!$)/.test(this)?"^":"(?:^|\\/)"}],[/\\\/\\\*\\\*(?=\\\/|$)/g,function(e,t,r){return t+6<r.length?"(?:\\/[^\\/]+)*":"\\/.+"}],[/(^|[^\\]+)\\\*(?=.+)/g,function(e,t){return "".concat(t,"[^\\/]*")}],[/(\^|\\\/)?\\\*$/,function(e,t){var r=t?"".concat(t,"[^/]+"):"[^/]*";return "".concat(r,"(?=$|\\/$)")}],[/\\\\\\/g,function(){return "\\"}]],oA=[].concat(iA,[[/(?:[^*/])$/,function(e){return "".concat(e,"(?=$|\\/)")}]],aA),sA=[].concat(iA,[[/(?:[^*])$/,function(e){return "".concat(e,"(?=$|\\/$)")}]],aA),uA=Object.create(null),cA=function(e,t){var r=e,n=!1;return 0===e.indexOf("!")&&(n=!0,e=e.substr(1)),{origin:r,pattern:e=e.replace(ZF,"!").replace(eA,"#"),negative:n,regex:function(e,t,r){var n=uA[e];if(n)return n;var i=(t?sA:oA).reduce((function(t,r){return t.replace(r[0],r[1].bind(e))}),e);return uA[e]=r?new RegExp(i,"i"):new RegExp(i)}(e,n,t)}},lA=function(){function e(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).ignorecase,r=void 0===t||t;a(this,e),this._rules=[],this._ignorecase=r,rA(this,tA,!0),this._initCache();}return s(e,[{key:"_initCache",value:function(){this._cache=Object.create(null);}},{key:"add",value:function(e){return this._added=!1,"string"==typeof e&&(e=e.split(/\r?\n/g)),XF(e).forEach(this._addPattern,this),this._added&&this._initCache(),this}},{key:"addPattern",value:function(e){return this.add(e)}},{key:"_addPattern",value:function(e){if(e&&e[tA])return this._rules=this._rules.concat(e._rules),void(this._added=!0);if(function(e){return e&&"string"==typeof e&&!YF.test(e)&&0!==e.indexOf("#")}(e)){var t=cA(e,this._ignorecase);this._added=!0,this._rules.push(t);}}},{key:"filter",value:function(e){var t=this;return XF(e).filter((function(e){return t._filter(e)}))}},{key:"createFilter",value:function(){var e=this;return function(t){return e._filter(t)}}},{key:"ignores",value:function(e){return !this._filter(e)}},{key:"_filter",value:function(e,t){return !!e&&(e in this._cache?this._cache[e]:(t||(t=e.split("/")),t.pop(),this._cache[e]=t.length?this._filter(t.join("/")+"/",t)&&this._test(e):this._test(e)))}},{key:"_test",value:function(e){var t=0;return this._rules.forEach((function(r){t^r.negative||(t=r.negative^r.regex.test(e));})),!t}}]),e}();if("undefined"!=typeof process&&(process.env&&process.env.IGNORE_TEST_WIN32||"win32"===process.platform)){var pA=lA.prototype._filter;lA.prototype._filter=function(e,t){var r;return e=/^\\\\\?\\/.test(r=e)||/[^\x00-\x80]+/.test(r)?r:r.replace(/\\/g,"/"),pA.call(this,e,t)};}var fA=r((function(e){
   /*
      * @version    1.4.0
      * @date       2015-10-26
      * @stability  3 - Stable
      * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)
      * @license    MIT License
      */
   var t=function(e,t){var r,n,i=1,a=0,o=0,s=String.alphabet;function u(e,t,n){if(n){for(r=t;(n=u(e,r))<76&&n>65;)++r;return +e.slice(t-1,r)}return (n=s&&s.indexOf(e.charAt(t)))>-1?n+76:(n=e.charCodeAt(t)||0)<45||n>127?n:n<46?65:n<48?n-1:n<58?n+18:n<65?n-11:n<91?n+11:n<97?n-37:n<123?n+5:n-63}if((e+="")!=(t+=""))for(;i;)if(n=u(e,a++),i=u(t,o++),n<76&&i<76&&n>66&&i>66&&(n=u(e,a,a),i=u(t,o,a=r),o=r),n!=i)return n<i?-1:1;return 0};try{e.exports=t;}catch(e){String.naturalCompare=t;}})),hA="https://github.com/eslint/doctrine",dA={node:">=6.0.0"},mA={lib:"./lib"},gA=["lib"],yA=[{name:"Nicholas C. Zakas",email:"nicholas+npm@nczconsulting.com",web:"https://www.nczonline.net"},{name:"Yusuke Suzuki",email:"utatane.tea@gmail.com",web:"https://github.com/Constellation"}],vA={coveralls:"^3.0.1",dateformat:"^1.0.11",eslint:"^1.10.3","eslint-release":"^1.0.0",linefix:"^0.1.1",mocha:"^3.4.2","npm-license":"^0.3.1",nyc:"^10.3.2",semver:"^5.0.3",shelljs:"^0.5.3","shelljs-nodecli":"^0.1.1",should:"^5.0.1"},xA={pretest:"npm run lint",test:"nyc mocha",coveralls:"nyc report --reporter=text-lcov | coveralls",lint:"eslint lib/","generate-release":"eslint-generate-release","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","publish-release":"eslint-publish-release"},bA={esutils:"^2.0.2"},EA={name:"doctrine",description:"JSDoc parser",homepage:hA,main:"lib/doctrine.js",version:"3.0.0",engines:dA,directories:mA,files:gA,maintainers:yA,repository:"eslint/doctrine",devDependencies:vA,license:"Apache-2.0",scripts:xA,dependencies:bA},CA=n(Object.freeze({__proto__:null,name:"doctrine",description:"JSDoc parser",homepage:hA,main:"lib/doctrine.js",version:"3.0.0",engines:dA,directories:mA,files:gA,maintainers:yA,repository:"eslint/doctrine",devDependencies:vA,license:"Apache-2.0",scripts:xA,dependencies:bA,default:EA})),SA=r((function(e,t){!function(){var e,r;function n(e){this.name="DoctrineError",this.message=e;}e=CA.version,t.VERSION=e,n.prototype=((r=function(){}).prototype=Error.prototype,new r),n.prototype.constructor=n,t.DoctrineError=n,t.throwError=function(e){throw new n(e)},t.assert=Pu;}();})),kA=(SA.VERSION,SA.DoctrineError,SA.throwError,SA.assert,r((function(e,t){!function(){var e,r,n,i,a,o,s,u,c,l,p,f;function h(e){return -1==="><(){}[],:*|?!=".indexOf(String.fromCharCode(e))&&!c.code.isWhiteSpace(e)&&!c.code.isLineTerminator(e)}function d(e,t,r,n){this._previous=e,this._index=t,this._token=r,this._value=n;}function m(e,t){return f&&(e.range=[t[0]+p,t[1]+p]),e}function g(){var e=n.charAt(a);return a+=1,e}function y(e){var t,r,o,s=0;for(r="u"===e?4:2,t=0;t<r;++t){if(!(a<i&&c.code.isHexDigit(n.charCodeAt(a))))return "";o=g(),s=16*s+"0123456789abcdef".indexOf(o.toLowerCase());}return String.fromCharCode(s)}function v(){var e,t;if(e="",46!==(t=n.charCodeAt(a))){if(e=g(),t=n.charCodeAt(a),"0"===e){if(120===t||88===t){for(e+=g();a<i&&(t=n.charCodeAt(a),c.code.isHexDigit(t));)e+=g();return e.length<=2&&l.throwError("unexpected token"),a<i&&(t=n.charCodeAt(a),c.code.isIdentifierStartES5(t)&&l.throwError("unexpected token")),u=parseInt(e,16),r.NUMBER}if(c.code.isOctalDigit(t)){for(e+=g();a<i&&(t=n.charCodeAt(a),c.code.isOctalDigit(t));)e+=g();return a<i&&(t=n.charCodeAt(a),(c.code.isIdentifierStartES5(t)||c.code.isDecimalDigit(t))&&l.throwError("unexpected token")),u=parseInt(e,8),r.NUMBER}c.code.isDecimalDigit(t)&&l.throwError("unexpected token");}for(;a<i&&(t=n.charCodeAt(a),c.code.isDecimalDigit(t));)e+=g();}if(46===t)for(e+=g();a<i&&(t=n.charCodeAt(a),c.code.isDecimalDigit(t));)e+=g();if(101===t||69===t)if(e+=g(),43!==(t=n.charCodeAt(a))&&45!==t||(e+=g()),t=n.charCodeAt(a),c.code.isDecimalDigit(t))for(e+=g();a<i&&(t=n.charCodeAt(a),c.code.isDecimalDigit(t));)e+=g();else l.throwError("unexpected token");return a<i&&(t=n.charCodeAt(a),c.code.isIdentifierStartES5(t)&&l.throwError("unexpected token")),u=parseFloat(e),r.NUMBER}function x(){var e;for(o=a;a<i&&c.code.isWhiteSpace(n.charCodeAt(a));)g();if(a>=i)return s=r.EOF;switch(e=n.charCodeAt(a)){case 39:case 34:return s=function(){var e,t,o,s,p,f="";for(e=n.charAt(a),++a;a<i;){if((t=g())===e){e="";break}if("\\"===t)if(t=g(),c.code.isLineTerminator(t.charCodeAt(0)))"\r"===t&&10===n.charCodeAt(a)&&++a;else switch(t){case"n":f+="\n";break;case"r":f+="\r";break;case"t":f+="\t";break;case"u":case"x":p=a,(s=y(t))?f+=s:(a=p,f+=t);break;case"b":f+="\b";break;case"f":f+="\f";break;case"v":f+="\v";break;default:c.code.isOctalDigit(t.charCodeAt(0))?(o="01234567".indexOf(t),a<i&&c.code.isOctalDigit(n.charCodeAt(a))&&(o=8*o+"01234567".indexOf(g()),"0123".indexOf(t)>=0&&a<i&&c.code.isOctalDigit(n.charCodeAt(a))&&(o=8*o+"01234567".indexOf(g()))),f+=String.fromCharCode(o)):f+=t;}else {if(c.code.isLineTerminator(t.charCodeAt(0)))break;f+=t;}}return ""!==e&&l.throwError("unexpected quote"),u=f,r.STRING}();case 58:return g(),s=r.COLON;case 44:return g(),s=r.COMMA;case 40:return g(),s=r.LPAREN;case 41:return g(),s=r.RPAREN;case 91:return g(),s=r.LBRACK;case 93:return g(),s=r.RBRACK;case 123:return g(),s=r.LBRACE;case 125:return g(),s=r.RBRACE;case 46:if(a+1<i){if(60===(e=n.charCodeAt(a+1)))return g(),g(),s=r.DOT_LT;if(46===e&&a+2<i&&46===n.charCodeAt(a+2))return g(),g(),g(),s=r.REST;if(c.code.isDecimalDigit(e))return s=v()}return s=r.ILLEGAL;case 60:return g(),s=r.LT;case 62:return g(),s=r.GT;case 42:return g(),s=r.STAR;case 124:return g(),s=r.PIPE;case 63:return g(),s=r.QUESTION;case 33:return g(),s=r.BANG;case 61:return g(),s=r.EQUAL;case 45:return s=v();default:return c.code.isDecimalDigit(e)?s=v():(l.assert(h(e)),s=function(){for(u=g();a<i&&h(n.charCodeAt(a));){if(46===n.charCodeAt(a)){if(a+1>=i)return r.ILLEGAL;if(60===n.charCodeAt(a+1))break}u+=g();}return r.NAME}())}}function b(e,t){l.assert(s===e,t||"consumed token not matched"),x();}function E(e,t){s!==e&&l.throwError(t||"unexpected token"),x();}function C(){var t,n,i=o;return n=u,t=s===r.NAME||s===r.STRING?(x(),n):s===r.NUMBER?(b(r.NUMBER),String(n)):void l.throwError("unexpected token"),s===r.COLON?(b(r.COLON),m({type:e.FieldType,key:t,value:A()},[i,o])):m({type:e.FieldType,key:t,value:null},[i,o])}function S(){var t,n,i=a-u.length;return t=function(){var t=u,n=a-t.length;return E(r.NAME),s!==r.COLON||"module"!==t&&"external"!==t&&"event"!==t||(b(r.COLON),t+=":"+u,E(r.NAME)),m({type:e.NameExpression,name:t},[n,o])}(),s===r.DOT_LT||s===r.LT?(x(),n=function(){var e=[];for(e.push(w());s===r.COMMA;)b(r.COMMA),e.push(w());return e}(),E(r.GT),m({type:e.TypeApplication,expression:t,applications:n},[i,o])):t}function k(){for(var t,n,i,u=[],c=!1,p=!1,f=a-3;s!==r.RPAREN;)s===r.REST&&(b(r.REST),p=!0),n=o,(t=A()).type===e.NameExpression&&s===r.COLON&&(i=o-t.name.length,b(r.COLON),t=m({type:e.ParameterType,name:t.name,expression:A()},[i,o])),s===r.EQUAL?(b(r.EQUAL),t=m({type:e.OptionalType,expression:t},[n,o]),c=!0):c&&l.throwError("unexpected token"),p&&(t=m({type:e.RestType,expression:t},[f,o])),u.push(t),s!==r.RPAREN&&E(r.COMMA);return u}function D(){var t,n,i,c,p,f=a-u.length;return l.assert(s===r.NAME&&"function"===u,"FunctionType should start with 'function'"),b(r.NAME),E(r.LPAREN),t=!1,i=[],n=null,s!==r.RPAREN&&(s!==r.NAME||"this"!==u&&"new"!==u?i=k():(t="new"===u,b(r.NAME),E(r.COLON),n=S(),s===r.COMMA&&(b(r.COMMA),i=k()))),E(r.RPAREN),c=null,s===r.COLON&&(b(r.COLON,"ResultType should start with :"),c=s===r.NAME&&"void"===u?(b(r.NAME),{type:e.VoidLiteral}):A()),p=m({type:e.FunctionType,params:i,result:c},[f,o]),n&&(p.this=n,t&&(p.new=!0)),p}function F(){var t,n;switch(s){case r.STAR:return b(r.STAR),m({type:e.AllLiteral},[o-1,o]);case r.LPAREN:return function(){var t,n=a-1;if(b(r.LPAREN,"UnionType should start with ("),t=[],s!==r.RPAREN)for(;t.push(A()),s!==r.RPAREN;)E(r.PIPE);return b(r.RPAREN,"UnionType should end with )"),m({type:e.UnionType,elements:t},[n,o])}();case r.LBRACK:return function(){var t,n,i=a-1;for(b(r.LBRACK,"ArrayType should start with ["),t=[];s!==r.RBRACK;){if(s===r.REST){n=a-3,b(r.REST),t.push(m({type:e.RestType,expression:A()},[n,o]));break}t.push(A()),s!==r.RBRACK&&E(r.COMMA);}return E(r.RBRACK),m({type:e.ArrayType,elements:t},[i,o])}();case r.LBRACE:return function(){var t,n,i=a-1;if(b(r.LBRACE,"RecordType should start with {"),t=[],s===r.COMMA)b(r.COMMA);else for(;s!==r.RBRACE;)t.push(C()),s!==r.RBRACE&&E(r.COMMA);return n=a,E(r.RBRACE),m({type:e.RecordType,fields:t},[i,n])}();case r.NAME:if(n=a-u.length,"null"===u)return b(r.NAME),m({type:e.NullLiteral},[n,o]);if("undefined"===u)return b(r.NAME),m({type:e.UndefinedLiteral},[n,o]);if("true"===u||"false"===u)return b(r.NAME),m({type:e.BooleanLiteralType,value:"true"===u},[n,o]);if(t=d.save(),"function"===u)try{return D()}catch(e){t.restore();}return S();case r.STRING:return x(),m({type:e.StringLiteralType,value:u},[o-u.length-2,o]);case r.NUMBER:return x(),m({type:e.NumericLiteralType,value:u},[o-String(u).length,o]);default:l.throwError("unexpected token");}}function A(){var t,n;return s===r.QUESTION?(n=a-1,b(r.QUESTION),s===r.COMMA||s===r.EQUAL||s===r.RBRACE||s===r.RPAREN||s===r.PIPE||s===r.EOF||s===r.RBRACK||s===r.GT?m({type:e.NullableLiteral},[n,o]):m({type:e.NullableType,expression:F(),prefix:!0},[n,o])):s===r.BANG?(n=a-1,b(r.BANG),m({type:e.NonNullableType,expression:F(),prefix:!0},[n,o])):(n=o,t=F(),s===r.BANG?(b(r.BANG),m({type:e.NonNullableType,expression:t,prefix:!1},[n,o])):s===r.QUESTION?(b(r.QUESTION),m({type:e.NullableType,expression:t,prefix:!1},[n,o])):s===r.LBRACK?(b(r.LBRACK),E(r.RBRACK,"expected an array-style type declaration ("+u+"[])"),m({type:e.TypeApplication,expression:m({type:e.NameExpression,name:"Array"},[n,o]),applications:[t]},[n,o])):t)}function w(){var t,n;if(t=A(),s!==r.PIPE)return t;for(n=[t],b(r.PIPE);n.push(A()),s===r.PIPE;)b(r.PIPE);return m({type:e.UnionType,elements:n},[0,a])}c=PD,l=SA,e={NullableLiteral:"NullableLiteral",AllLiteral:"AllLiteral",NullLiteral:"NullLiteral",UndefinedLiteral:"UndefinedLiteral",VoidLiteral:"VoidLiteral",UnionType:"UnionType",ArrayType:"ArrayType",RecordType:"RecordType",FieldType:"FieldType",FunctionType:"FunctionType",ParameterType:"ParameterType",RestType:"RestType",NonNullableType:"NonNullableType",OptionalType:"OptionalType",NullableType:"NullableType",NameExpression:"NameExpression",TypeApplication:"TypeApplication",StringLiteralType:"StringLiteralType",NumericLiteralType:"NumericLiteralType",BooleanLiteralType:"BooleanLiteralType"},r={ILLEGAL:0,DOT_LT:1,REST:2,LT:3,GT:4,LPAREN:5,RPAREN:6,LBRACE:7,RBRACE:8,LBRACK:9,RBRACK:10,COMMA:11,COLON:12,STAR:13,PIPE:14,QUESTION:15,BANG:16,EQUAL:17,NAME:18,STRING:19,NUMBER:20,EOF:21},d.prototype.restore=function(){o=this._previous,a=this._index,s=this._token,u=this._value;},d.save=function(){return new d(o,a,s,u)},t.parseType=function(e,t){var u;return i=(n=e).length,a=0,o=0,f=t&&t.range,p=t&&t.startIndex||0,x(),u=w(),t&&t.midstream?{expression:u,index:o}:(s!==r.EOF&&l.throwError("not reach to EOF"),u)},t.parseParamType=function(t,u){var c;return i=(n=t).length,a=0,o=0,f=u&&u.range,p=u&&u.startIndex||0,x(),c=function(){var t;return s===r.REST?(b(r.REST),m({type:e.RestType,expression:w()},[0,a])):(t=w(),s===r.EQUAL?(b(r.EQUAL),m({type:e.OptionalType,expression:t},[0,a])):t)}(),u&&u.midstream?{expression:c,index:o}:(s!==r.EOF&&l.throwError("not reach to EOF"),c)},t.stringify=function(t,r){return null==r&&(r={}),function t(r,n,i){var a,o,s;switch(r.type){case e.NullableLiteral:a="?";break;case e.AllLiteral:a="*";break;case e.NullLiteral:a="null";break;case e.UndefinedLiteral:a="undefined";break;case e.VoidLiteral:a="void";break;case e.UnionType:for(a=i?"":"(",o=0,s=r.elements.length;o<s;++o)a+=t(r.elements[o],n),o+1!==s&&(a+=n?"|":" | ");i||(a+=")");break;case e.ArrayType:for(a="[",o=0,s=r.elements.length;o<s;++o)a+=t(r.elements[o],n),o+1!==s&&(a+=n?",":", ");a+="]";break;case e.RecordType:for(a="{",o=0,s=r.fields.length;o<s;++o)a+=t(r.fields[o],n),o+1!==s&&(a+=n?",":", ");a+="}";break;case e.FieldType:a=r.value?r.key+(n?":":": ")+t(r.value,n):r.key;break;case e.FunctionType:for(a=n?"function(":"function (",r.this&&(r.new?a+=n?"new:":"new: ":a+=n?"this:":"this: ",a+=t(r.this,n),0!==r.params.length&&(a+=n?",":", ")),o=0,s=r.params.length;o<s;++o)a+=t(r.params[o],n),o+1!==s&&(a+=n?",":", ");a+=")",r.result&&(a+=(n?":":": ")+t(r.result,n));break;case e.ParameterType:a=r.name+(n?":":": ")+t(r.expression,n);break;case e.RestType:a="...",r.expression&&(a+=t(r.expression,n));break;case e.NonNullableType:a=r.prefix?"!"+t(r.expression,n):t(r.expression,n)+"!";break;case e.OptionalType:a=t(r.expression,n)+"=";break;case e.NullableType:a=r.prefix?"?"+t(r.expression,n):t(r.expression,n)+"?";break;case e.NameExpression:a=r.name;break;case e.TypeApplication:for(a=t(r.expression,n)+".<",o=0,s=r.applications.length;o<s;++o)a+=t(r.applications[o],n),o+1!==s&&(a+=n?",":", ");a+=">";break;case e.StringLiteralType:a='"'+r.value+'"';break;case e.NumericLiteralType:case e.BooleanLiteralType:a=String(r.value);break;default:l.throwError("Unknown type "+r.type);}return a}(t,r.compact,r.topLevel)},t.Syntax=e;}();}))),DA=(kA.parseType,kA.parseParamType,kA.stringify,kA.Syntax,r((function(e,t){!function(){var e,r,n,i,a,o;function s(e,t,r){return e.slice(t,r)}function u(e){return "param"===e||"argument"===e||"arg"===e}function c(e){return "return"===e||"returns"===e}function l(e){return "property"===e||"prop"===e}function p(e){return u(e)||l(e)||"alias"===e||"this"===e||"mixes"===e||"requires"===e}function f(e){return l(e)||u(e)}function h(e){return u(e)||c(e)||"define"===e||"enum"===e||"implements"===e||"this"===e||"type"===e||"typedef"===e||l(e)}i=PD,e=kA,r=SA,o=Object.prototype.hasOwnProperty,a=function(e,t){return o.call(e,t)};var d="[ \\f\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]",m="("+d+"*(?:\\*"+d+"?)?)(.+|[\r\n\u2028\u2029])";function g(e){return e.replace(/^\/\*\*?/,"").replace(/\*\/$/,"").replace(new RegExp(m,"g"),"$2").replace(/\s*$/,"")}!function(t){var n,o,d,y,v,x,b,E,C;function S(){var e=v.charCodeAt(o);return o+=1,!i.code.isLineTerminator(e)||13===e&&10===v.charCodeAt(o)||(d+=1),String.fromCharCode(e)}function k(t,n,a){for(var s,u,c,l,p=!1;o<n;){if(s=v.charCodeAt(o),!i.code.isWhiteSpace(s)){if(123===s){S();break}p=!0;break}S();}if(p)return null;for(u=1,c="";o<n;)if(s=v.charCodeAt(o),i.code.isLineTerminator(s))S();else {if(125===s){if(0===(u-=1)){S();break}}else 123===s&&(u+=1);""===c&&(l=o),c+=S();}return 0!==u?r.throwError("Braces are not balanced"):f(t)?e.parseParamType(c,{startIndex:w(l),range:a}):e.parseType(c,{startIndex:w(l),range:a})}function D(e){var t;if(!i.code.isIdentifierStartES5(v.charCodeAt(o))&&!v[o].match(/[0-9]/))return null;for(t=S();o<e&&i.code.isIdentifierPartES5(v.charCodeAt(o));)t+=S();return t}function F(e){for(;o<e&&(i.code.isWhiteSpace(v.charCodeAt(o))||i.code.isLineTerminator(v.charCodeAt(o)));)S();}function A(e,t,r){var n,a,s="";if(F(e),o>=e)return null;if(91===v.charCodeAt(o)){if(!t)return null;n=!0,s=S();}if(s+=D(e),r)for(58!==v.charCodeAt(o)||"module"!==s&&"external"!==s&&"event"!==s||(s+=S(),s+=D(e)),91===v.charCodeAt(o)&&93===v.charCodeAt(o+1)&&(s+=S(),s+=S());46===v.charCodeAt(o)||47===v.charCodeAt(o)||35===v.charCodeAt(o)||45===v.charCodeAt(o)||126===v.charCodeAt(o);)s+=S(),s+=D(e);if(n){if(F(e),61===v.charCodeAt(o)){var u;s+=S(),F(e);for(var c=1;o<e;){if(u=v.charCodeAt(o),i.code.isWhiteSpace(u)&&(a||(F(e),u=v.charCodeAt(o))),39===u&&(a?"'"===a&&(a=""):a="'"),34===u&&(a?'"'===a&&(a=""):a='"'),91===u)c++;else if(93===u&&0==--c)break;s+=S();}}if(F(e),o>=e||93!==v.charCodeAt(o))return null;s+=S();}return s}function w(e){return v===x?e:function(e,t){for(var r,n=e.replace(/^\/\*\*?/,""),i=0,a=new RegExp(m,"g");r=a.exec(n);)if(i+=r[1].length,r.index+r[0].length>t+i)return t+i+e.length-n.length;return e.replace(/\*\/$/,"").replace(/\s*$/,"").length}(x,e)}function _(e,t){this._options=e,this._title=t.toLowerCase(),this._tag={title:t,description:null},this._options.lineNumbers&&(this._tag.lineNumber=d),this._first=o-t.length-1,this._last=0,this._extra={};}function T(e){var t,n;if(!function(){for(;o<y&&64!==v.charCodeAt(o);)S();return !(o>=y)&&(r.assert(64===v.charCodeAt(o)),!0)}())return null;for(n=(t=new _(e,function(){var e,t="";for(S();o<y&&((e=v.charCodeAt(o))>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57);)t+=S();return t}())).parse();o<t._last;)S();return n}_.prototype.addError=function(e){var t=Array.prototype.slice.call(arguments,1),n=e.replace(/%(\d)/g,(function(e,n){return r.assert(n<t.length,"Message reference must be in range"),t[n]}));return this._tag.errors||(this._tag.errors=[]),C&&r.throwError(n),this._tag.errors.push(n),b},_.prototype.parseType=function(){if(h(this._title))try{if(this._tag.type=k(this._title,this._last,this._options.range),!(this._tag.type||u(this._title)||c(this._title)||this.addError("Missing or invalid tag type")))return !1}catch(e){if(this._tag.type=null,!this.addError(e.message))return !1}else if(function(e){return h(e)||"throws"===e||"const"===e||"constant"===e||"namespace"===e||"member"===e||"var"===e||"module"===e||"constructor"===e||"class"===e||"extends"===e||"augments"===e||"public"===e||"private"===e||"protected"===e}(this._title))try{this._tag.type=k(this._title,this._last,this._options.range);}catch(e){}return !0},_.prototype._parseNamePath=function(e){var t;return !!((t=A(this._last,E&&f(this._title),!0))||e||this.addError("Missing or invalid tag name"))&&(this._tag.name=t,!0)},_.prototype.parseNamePath=function(){return this._parseNamePath(!1)},_.prototype.parseNamePathOptional=function(){return this._parseNamePath(!0)},_.prototype.parseName=function(){var e,t;if(function(e){return p(e)||"const"===e||"constant"===e}(this._title))if(this._tag.name=A(this._last,E&&f(this._title),function(e){return l(e)||u(e)}(this._title)),this._tag.name)"["===(t=this._tag.name).charAt(0)&&"]"===t.charAt(t.length-1)&&((e=t.substring(1,t.length-1).split("=")).length>1&&(this._tag.default=e.slice(1).join("=")),this._tag.name=e[0],this._tag.type&&"OptionalType"!==this._tag.type.type&&(this._tag.type={type:"OptionalType",expression:this._tag.type}));else {if(!p(this._title))return !0;if(u(this._title)&&this._tag.type&&this._tag.type.name)this._extra.name=this._tag.type,this._tag.name=this._tag.type.name,this._tag.type=null;else if(!this.addError("Missing or invalid tag name"))return !1}return !0},_.prototype.parseDescription=function(){var e=s(v,o,this._last).trim();return e&&(/^-\s+/.test(e)&&(e=e.substring(2)),this._tag.description=e),!0},_.prototype.parseCaption=function(){var e=s(v,o,this._last).trim(),t=e.indexOf("<caption>"),r=e.indexOf("</caption>");return t>=0&&r>=0?(this._tag.caption=e.substring(t+"<caption>".length,r).trim(),this._tag.description=e.substring(r+"</caption>".length).trim()):this._tag.description=e,!0},_.prototype.parseKind=function(){var e,t;return t={class:!0,constant:!0,event:!0,external:!0,file:!0,function:!0,member:!0,mixin:!0,module:!0,namespace:!0,typedef:!0},e=s(v,o,this._last).trim(),this._tag.kind=e,!(!a(t,e)&&!this.addError("Invalid kind name '%0'",e))},_.prototype.parseAccess=function(){var e;return e=s(v,o,this._last).trim(),this._tag.access=e,!("private"!==e&&"protected"!==e&&"public"!==e&&!this.addError("Invalid access name '%0'",e))},_.prototype.parseThis=function(){var e=s(v,o,this._last).trim();return e&&"{"===e.charAt(0)?this.parseType()&&"NameExpression"===this._tag.type.type||"UnionType"===this._tag.type.type?(this._tag.name=this._tag.type.name,!0):this.addError("Invalid name for this"):this.parseNamePath()},_.prototype.parseVariation=function(){var e,t;return t=s(v,o,this._last).trim(),e=parseFloat(t,10),this._tag.variation=e,!(isNaN(e)&&!this.addError("Invalid variation '%0'",t))},_.prototype.ensureEnd=function(){var e=s(v,o,this._last).trim();return !(e&&!this.addError("Unknown content '%0'",e))},_.prototype.epilogue=function(){var e;return e=this._tag.description,!(f(this._title)&&!this._tag.type&&e&&"["===e.charAt(0)&&(this._tag.type=this._extra.name,this._tag.name||(this._tag.name=void 0),!E&&!this.addError("Missing or invalid tag name")))},n={access:["parseAccess"],alias:["parseNamePath","ensureEnd"],augments:["parseType","parseNamePathOptional","ensureEnd"],constructor:["parseType","parseNamePathOptional","ensureEnd"],class:["parseType","parseNamePathOptional","ensureEnd"],extends:["parseType","parseNamePathOptional","ensureEnd"],example:["parseCaption"],deprecated:["parseDescription"],global:["ensureEnd"],inner:["ensureEnd"],instance:["ensureEnd"],kind:["parseKind"],mixes:["parseNamePath","ensureEnd"],mixin:["parseNamePathOptional","ensureEnd"],member:["parseType","parseNamePathOptional","ensureEnd"],method:["parseNamePathOptional","ensureEnd"],module:["parseType","parseNamePathOptional","ensureEnd"],func:["parseNamePathOptional","ensureEnd"],function:["parseNamePathOptional","ensureEnd"],var:["parseType","parseNamePathOptional","ensureEnd"],name:["parseNamePath","ensureEnd"],namespace:["parseType","parseNamePathOptional","ensureEnd"],private:["parseType","parseDescription"],protected:["parseType","parseDescription"],public:["parseType","parseDescription"],readonly:["ensureEnd"],requires:["parseNamePath","ensureEnd"],since:["parseDescription"],static:["ensureEnd"],summary:["parseDescription"],this:["parseThis","ensureEnd"],todo:["parseDescription"],typedef:["parseType","parseNamePathOptional"],variation:["parseVariation"],version:["parseDescription"]},_.prototype.parse=function(){var e,t,r;if(!this._title&&!this.addError("Missing or invalid title"))return null;for(this._last=function(){var e,t,r=o;for(t=!1;r<y;){if(e=v.charCodeAt(r),!i.code.isLineTerminator(e)||13===e&&10===v.charCodeAt(r+1)){if(t){if(64===e)break;i.code.isWhiteSpace(e)||(t=!1);}}else t=!0;r+=1;}return r}(this._title),this._options.range&&(this._tag.range=[this._first,v.slice(0,this._last).replace(/\s*$/,"").length].map(w)),e=0,t=(r=a(n,this._title)?n[this._title]:["parseType","parseName","parseDescription","epilogue"]).length;e<t;++e)if(!this[r[e]]())return null;return this._tag},t.parse=function(e,t){var n,a,s,u,c,l=[];if(void 0===t&&(t={}),v="boolean"==typeof t.unwrap&&t.unwrap?g(e):e,x=e,t.tags)if(Array.isArray(t.tags))for(s={},u=0,c=t.tags.length;u<c;u++)"string"==typeof t.tags[u]?s[t.tags[u]]=!0:r.throwError('Invalid "tags" parameter: '+t.tags);else r.throwError('Invalid "tags" parameter: '+t.tags);for(y=v.length,o=0,d=0,b=t.recoverable,E=t.sloppy,C=t.strict,a=function(e){var t,r,n="";for(r=!0;o<y&&(t=v.charCodeAt(o),!r||64!==t);)i.code.isLineTerminator(t)?r=!0:r&&!i.code.isWhiteSpace(t)&&(r=!1),n+=S();return e?n:n.trim()}(t.preserveWhitespace);n=T(t);)s&&!s.hasOwnProperty(n.title)||l.push(n);return {description:a,tags:l}};}(n={}),t.version=r.VERSION,t.parse=n.parse,t.parseType=e.parseType,t.parseParamType=e.parseParamType,t.unwrapComment=g,t.Syntax=function(e){var t,r={};for(t in e)e.hasOwnProperty(t)&&(r[t]=e[t]);return r}(e.Syntax),t.Error=r.DoctrineError,t.type={Syntax:t.Syntax,parseType:e.parseType,parseParamType:e.parseParamType,stringify:e.stringify};}();}))),FA=(DA.version,DA.parse,DA.parseType,DA.parseParamType,DA.unwrapComment,DA.Syntax,DA.Error,DA.type,n(QF)),AA=regeneratorRuntime.mark(eI);function wA(e){return e&&"object"==i(e)&&"default"in e?e.default:e}var _A=wA(PD),TA=wA(ID),PA=wA(FA),IA=wA((function(e){return new lA(e)})),BA=wA(fA),OA=wA(DA),LA=Fy.createCommonjsModule((function(e){function t(e,t,r){var n=e.identifier,i=0===t||r[t-1].identifier!==n;return n&&!1===e.init&&e.isWrite()&&i}function r(e){return e[0]!==e[0].toLocaleLowerCase()}function n(e){return e.id&&r(e.id.name)}function i(e){for(var t=e;t;t=t.parent)if(P.test(t.type))return t;return null}function a(e){return !(!e||!P.test(e.type))}function o(e){return !(!e||!I.test(e.type))}function s(t){return e.exports.isNullLiteral(t)||"Identifier"===t.type&&"undefined"===t.name||"UnaryExpression"===t.type&&"void"===t.operator}function u(e){return "CallExpression"===e.parent.type&&e.parent.callee===e}function c(e){return "MemberExpression"===e.type&&"Identifier"===e.object.type&&"Reflect"===e.object.name&&"Identifier"===e.property.type&&"apply"===e.property.name&&!1===e.computed}function l(e){return "MemberExpression"===e.type&&"Identifier"===e.object.type&&B.test(e.object.name)&&"Identifier"===e.property.type&&"from"===e.property.name&&!1===e.computed}function p(e){for(var t=e;"MemberExpression"===t.type&&!t.computed;t=t.property)if("Identifier"===t.property.type)return O.test(t.property.name);return !1}function f(e){return function(t){return !e(t)}}function h(e,t){var r=t.getJSDocComment(e);return !(!r||!N.test(r.value))||t.getCommentsBefore(e).some((function(e){return N.test(e.value)}))}function d(e){return "=>"===e.value&&"Punctuator"===e.type}function m(e){return ","===e.value&&"Punctuator"===e.type}function g(e){return "."===e.value&&"Punctuator"===e.type}function y(e){return ";"===e.value&&"Punctuator"===e.type}function v(e){return ":"===e.value&&"Punctuator"===e.type}function x(e){return "("===e.value&&"Punctuator"===e.type}function b(e){return ")"===e.value&&"Punctuator"===e.type}function E(e){return "["===e.value&&"Punctuator"===e.type}function C(e){return "]"===e.value&&"Punctuator"===e.type}function S(e){return "{"===e.value&&"Punctuator"===e.type}function k(e){return "}"===e.value&&"Punctuator"===e.type}function D(e,t){return e.id?t.getTokenAfter(e.id,x):t.getFirstToken(e,x)}var F=Fy.require$$0$1,A=F.breakableTypePattern,w=F.createGlobalLinebreakMatcher,_=F.lineBreakPattern,T=F.shebangPattern,P=/^(?:Function(?:Declaration|Expression)|ArrowFunctionExpression)$/,I=/^(?:DoWhile|For|ForIn|ForOf|While)Statement$/,B=/Array$/,O=/^(?:every|filter|find|findIndex|forEach|map|some)$/,L=/^(?:bind|call|apply)$/,N=/^[\t-\r \*\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*@this/m,j=new Set(["\r\n","\r","\n","\u2028","\u2029"]),R=new Set(["Program","BlockStatement","SwitchCase"]),M=/^(0|[1-9][0-9]*)$/,V=/^(?:(?:[\0-\[\]-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\\(?:[\0-\/8-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\\0(?![0-9]))*\\(?:[1-7]|0[0-9])/;e.exports={COMMENTS_IGNORE_PATTERN:/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*(?:eslint|jshint[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+|jslint[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+|istanbul[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+|globals?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+|exported[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+|jscs)/,LINEBREAKS:j,LINEBREAK_MATCHER:_,SHEBANG_MATCHER:T,STATEMENT_LIST_PARENTS:R,isTokenOnSameLine:function(e,t){return e.loc.end.line===t.loc.start.line},isNullOrUndefined:s,isCallee:u,isES5Constructor:n,getUpperFunction:i,isFunction:a,isLoop:o,isInLoop:function(e){for(var t=e;t&&!a(t);t=t.parent)if(o(t))return !0;return !1},isArrayFromMethod:l,isParenthesised:function(e,t){var r=e.getTokenBefore(t),n=e.getTokenAfter(t);return !(!r||!n)&&"("===r.value&&r.range[1]<=t.range[0]&&")"===n.value&&n.range[0]>=t.range[1]},createGlobalLinebreakMatcher:w,equalTokens:function(e,t,r){var n=r.getTokens(e),i=r.getTokens(t);if(n.length!==i.length)return !1;for(var a=0;a<n.length;++a)if(n[a].type!==i[a].type||n[a].value!==i[a].value)return !1;return !0},isArrowToken:d,isClosingBraceToken:k,isClosingBracketToken:C,isClosingParenToken:b,isColonToken:v,isCommaToken:m,isCommentToken:function(e){return "Line"===e.type||"Block"===e.type||"Shebang"===e.type},isDotToken:g,isKeywordToken:function(e){return "Keyword"===e.type},isNotClosingBraceToken:f(k),isNotClosingBracketToken:f(C),isNotClosingParenToken:f(b),isNotColonToken:f(v),isNotCommaToken:f(m),isNotDotToken:f(g),isNotOpeningBraceToken:f(S),isNotOpeningBracketToken:f(E),isNotOpeningParenToken:f(x),isNotSemicolonToken:f(y),isOpeningBraceToken:S,isOpeningBracketToken:E,isOpeningParenToken:x,isSemicolonToken:y,isStringLiteral:function(e){return "Literal"===e.type&&"string"==typeof e.value||"TemplateLiteral"===e.type},isBreakableStatement:function(e){return A.test(e.type)},getModifyingReferences:function(e){return e.filter(t)},isSurroundedBy:function(e,t){return e[0]===t&&e[e.length-1]===t},isDirectiveComment:function(e){var t=e.value.trim();return "Line"===e.type&&0===t.indexOf("eslint-")||"Block"===e.type&&(0===t.indexOf("global ")||0===t.indexOf("eslint ")||0===t.indexOf("eslint-"))},getTrailingStatement:_A.ast.trailingStatement,getVariableByName:function(e,t){for(var r=e;r;){var n=r.set.get(t);if(n)return n;r=r.upper;}return null},isDefaultThisBinding:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=a.capIsConstructor,f=void 0===o||o;if(f&&n(e)||h(e,t))return !1;for(var d=null===e.id,m=e;m;){var g=m.parent;switch(g.type){case"LogicalExpression":case"ConditionalExpression":m=g;break;case"ReturnStatement":var y=i(g);if(null===y||!u(y))return !0;m=y.parent;break;case"ArrowFunctionExpression":if(m!==g.body||!u(g))return !0;m=g.parent;break;case"Property":case"MethodDefinition":return g.value!==m;case"AssignmentExpression":case"AssignmentPattern":return "MemberExpression"!==g.left.type&&!(f&&d&&"Identifier"===g.left.type&&r(g.left.name));case"VariableDeclarator":return !(f&&d&&g.init===m&&"Identifier"===g.id.type&&r(g.id.name));case"MemberExpression":return g.object!==m||"Identifier"!==g.property.type||!L.test(g.property.name)||!u(g)||0===g.parent.arguments.length||s(g.parent.arguments[0]);case"CallExpression":return c(g.callee)?3!==g.arguments.length||g.arguments[0]!==m||s(g.arguments[1]):l(g.callee)?3!==g.arguments.length||g.arguments[1]!==m||s(g.arguments[2]):!p(g.callee)||2!==g.arguments.length||g.arguments[0]!==m||s(g.arguments[1]);default:return !0}}return !0},getPrecedence:function(e){switch(e.type){case"SequenceExpression":return 0;case"AssignmentExpression":case"ArrowFunctionExpression":case"YieldExpression":return 1;case"ConditionalExpression":return 3;case"LogicalExpression":switch(e.operator){case"||":return 4;case"&&":return 5}case"BinaryExpression":switch(e.operator){case"|":return 6;case"^":return 7;case"&":return 8;case"==":case"!=":case"===":case"!==":return 9;case"<":case"<=":case">":case">=":case"in":case"instanceof":return 10;case"<<":case">>":case">>>":return 11;case"+":case"-":return 12;case"*":case"/":case"%":return 13;case"**":return 15}case"UnaryExpression":case"AwaitExpression":return 16;case"UpdateExpression":return 17;case"CallExpression":case"ImportExpression":return 18;case"NewExpression":return 19;default:return 20}},isEmptyBlock:function(e){return !(!e||"BlockStatement"!==e.type||0!==e.body.length)},isEmptyFunction:function(t){return a(t)&&e.exports.isEmptyBlock(t.body)},getStaticPropertyName:function(e){var t;switch(e&&e.type){case"Property":case"MethodDefinition":t=e.key;break;case"MemberExpression":t=e.property;}switch(t&&t.type){case"Literal":return t.value+"";case"TemplateLiteral":if(0===t.expressions.length&&1===t.quasis.length)return t.quasis[0].value.cooked;break;case"Identifier":if(!e.computed)return t.name}return null},getDirectivePrologue:function(e){var t=[];if("Program"===e.type||"FunctionDeclaration"===e.type||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type){var r="Program"===e.type?e.body:e.body.body,n=!0,i=!1,a=void 0;try{for(var o,s=r[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value;if("ExpressionStatement"!==u.type||"Literal"!==u.expression.type)break;t.push(u);}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}}return t},isDecimalInteger:function(e){return "Literal"===e.type&&"number"==typeof e.value&&M.test(e.raw)},isDecimalIntegerNumericToken:function(e){return "Numeric"===e.type&&M.test(e.value)},getFunctionNameWithKind:function(t){var r=t.parent,n=[];if("MethodDefinition"===r.type&&r.static&&n.push("static"),t.async&&n.push("async"),t.generator&&n.push("generator"),"ArrowFunctionExpression"===t.type)n.push("arrow","function");else if("Property"===r.type||"MethodDefinition"===r.type){if("constructor"===r.kind)return "constructor";"get"===r.kind?n.push("getter"):"set"===r.kind?n.push("setter"):n.push("method");}else n.push("function");if(t.id)n.push("'".concat(t.id.name,"'"));else {var i=e.exports.getStaticPropertyName(r);null!==i&&n.push("'".concat(i,"'"));}return n.join(" ")},getFunctionHeadLoc:function(e,t){var r=e.parent,n=null,i=null;if("ArrowFunctionExpression"===e.type){var a=t.getTokenBefore(e.body,d);n=a.loc.start,i=a.loc.end;}else "Property"===r.type||"MethodDefinition"===r.type?(n=r.loc.start,i=D(e,t).loc.start):(n=e.loc.start,i=D(e,t).loc.start);return {start:Object.assign({},n),end:Object.assign({},i)}},getNextLocation:function(e,t){var r=e.getIndexFromLoc(t);return r+1>e.text.length?null:e.getLocFromIndex(r+1)},getParenthesisedText:function(e,t){for(var r=e.getFirstToken(t),n=e.getLastToken(t);e.getTokenBefore(r)&&"Punctuator"===e.getTokenBefore(r).type&&"("===e.getTokenBefore(r).value&&e.getTokenAfter(n)&&"Punctuator"===e.getTokenAfter(n).type&&")"===e.getTokenAfter(n).value;)r=e.getTokenBefore(r),n=e.getTokenAfter(n);return e.getText().slice(r.range[0],n.range[1])},couldBeError:function(t){switch(t.type){case"Identifier":case"CallExpression":case"NewExpression":case"MemberExpression":case"TaggedTemplateExpression":case"YieldExpression":case"AwaitExpression":return !0;case"AssignmentExpression":return e.exports.couldBeError(t.right);case"SequenceExpression":var r=t.expressions;return 0!==r.length&&e.exports.couldBeError(r[r.length-1]);case"LogicalExpression":return e.exports.couldBeError(t.left)||e.exports.couldBeError(t.right);case"ConditionalExpression":return e.exports.couldBeError(t.consequent)||e.exports.couldBeError(t.alternate);default:return !1}},isNullLiteral:function(e){return "Literal"===e.type&&null===e.value&&!e.regex&&!e.bigint},canTokensBeAdjacent:function(e,t){var r;if("string"==typeof e){var n=Fy.espree.tokenize(e,{ecmaVersion:2015});r=n[n.length-1];}else r=e;var i="string"==typeof t?Fy.espree.tokenize(t,{ecmaVersion:2015})[0]:t;if("Punctuator"===r.type||"Punctuator"===i.type){if("Punctuator"===r.type&&"Punctuator"===i.type){var a=new Set(["+","++"]),o=new Set(["-","--"]);return !(a.has(r.value)&&a.has(i.value)||o.has(r.value)&&o.has(i.value))}return !0}return "String"===r.type||"String"===i.type||"Template"===r.type||"Template"===i.type||!("Numeric"===r.type||"Numeric"!==i.type||!i.value.startsWith("."))},getNameLocationInGlobalDirectiveComment:function(e,t,r){var n=new RegExp("[\\s,]".concat(Fy.lodash.escapeRegExp(r),"(?:$|[\\s,:])"),"gu");n.lastIndex=t.value.indexOf("global")+6;var i=n.exec(t.value);return e.getLocFromIndex(t.range[0]+2+(i?i.index+1:0))},hasOctalEscapeSequence:function(e){return V.test(e)}};}));LA.COMMENTS_IGNORE_PATTERN,LA.LINEBREAKS,LA.LINEBREAK_MATCHER,LA.SHEBANG_MATCHER,LA.STATEMENT_LIST_PARENTS,LA.isTokenOnSameLine,LA.isNullOrUndefined,LA.isCallee,LA.isES5Constructor,LA.getUpperFunction,LA.isFunction,LA.isLoop,LA.isInLoop,LA.isArrayFromMethod,LA.isParenthesised,LA.createGlobalLinebreakMatcher,LA.equalTokens,LA.isArrowToken,LA.isClosingBraceToken,LA.isClosingBracketToken,LA.isClosingParenToken,LA.isColonToken,LA.isCommaToken,LA.isCommentToken,LA.isDotToken,LA.isKeywordToken,LA.isNotClosingBraceToken,LA.isNotClosingBracketToken,LA.isNotClosingParenToken,LA.isNotColonToken,LA.isNotCommaToken,LA.isNotDotToken,LA.isNotOpeningBraceToken,LA.isNotOpeningBracketToken,LA.isNotOpeningParenToken,LA.isNotSemicolonToken,LA.isOpeningBraceToken,LA.isOpeningBracketToken,LA.isOpeningParenToken,LA.isSemicolonToken,LA.isStringLiteral,LA.isBreakableStatement,LA.getModifyingReferences,LA.isSurroundedBy,LA.isDirectiveComment,LA.getTrailingStatement,LA.getVariableByName,LA.isDefaultThisBinding,LA.getPrecedence,LA.isEmptyBlock,LA.isEmptyFunction,LA.getStaticPropertyName,LA.getDirectivePrologue,LA.isDecimalInteger,LA.isDecimalIntegerNumericToken,LA.getFunctionNameWithKind,LA.getFunctionHeadLoc,LA.getNextLocation,LA.getParenthesisedText,LA.couldBeError,LA.isNullLiteral,LA.canTokensBeAdjacent,LA.getNameLocationInGlobalDirectiveComment,LA.hasOctalEscapeSequence;function NA(e){return "get"===e.kind||"set"===e.kind}function jA(e,t){return "Identifier"===e.type&&e.name===t}function RA(e,t,r,n){var i=e.parent;return "CallExpression"===i.type&&"MemberExpression"===i.callee.type&&!1===i.callee.computed&&jA(i.callee.object,r)&&jA(i.callee.property,n)&&i.arguments[t]===e}var MA={meta:{type:"suggestion",docs:{description:"enforce getter and setter pairs in objects and classes",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/accessor-pairs"},schema:[{type:"object",properties:{getWithoutSet:{type:"boolean",default:!1},setWithoutGet:{type:"boolean",default:!0},enforceForClassMembers:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{missingGetterInPropertyDescriptor:"Getter is not present in property descriptor.",missingSetterInPropertyDescriptor:"Setter is not present in property descriptor.",missingGetterInObjectLiteral:"Getter is not present for {{ name }}.",missingSetterInObjectLiteral:"Setter is not present for {{ name }}.",missingGetterInClass:"Getter is not present for class {{ name }}.",missingSetterInClass:"Setter is not present for class {{ name }}."}},create:function(e){function t(t,r){"Property"===t.type?e.report({node:t,messageId:"".concat(r,"InObjectLiteral"),loc:LA.getFunctionHeadLoc(t.value,l),data:{name:LA.getFunctionNameWithKind(t.value)}}):"MethodDefinition"===t.type?e.report({node:t,messageId:"".concat(r,"InClass"),loc:LA.getFunctionHeadLoc(t.value,l),data:{name:LA.getFunctionNameWithKind(t.value)}}):e.report({node:t,messageId:"".concat(r,"InPropertyDescriptor")});}function r(e,r){var n=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){t(o.value,r);}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}}function n(e){var t=LA.getStaticPropertyName(e);return {key:null===t?l.getTokens(e.key):t,getters:"get"===e.kind?[e]:[],setters:"set"===e.kind?[e]:[]}}function i(e,t){var r,n,i=e.find((function(e){return function(e,t){return "string"==typeof e&&"string"==typeof t?e==t:!(!Array.isArray(e)||!Array.isArray(t))&&function(e,t){if(e.length!==t.length)return !1;for(var r=0;r<e.length;r++){var n=e[r],i=t[r];if(n.type!==i.type||n.value!==i.value)return !1}return !0}(e,t)}(e.key,t.key)}));return i?((r=i.getters).push.apply(r,E(t.getters)),(n=i.setters).push.apply(n,E(t.setters))):e.push(t),e}function a(e){var t=e.filter(NA).map(n).reduce(i,[]),a=!0,o=!1,c=void 0;try{for(var l,p=t[Symbol.iterator]();!(a=(l=p.next()).done);a=!0){var f=l.value,h=f.getters,d=f.setters;u&&d.length&&!h.length&&r(d,"missingGetter"),s&&h.length&&!d.length&&r(h,"missingSetter");}}catch(e){o=!0,c=e;}finally{try{a||null==p.return||p.return();}finally{if(o)throw c}}}var o=e.options[0]||{},s=!0===o.getWithoutSet,u=!1!==o.setWithoutGet,c=!0===o.enforceForClassMembers,l=e.getSourceCode(),p={};return (u||s)&&(p.ObjectExpression=function(e){((function(e){a(e.properties.filter((function(e){return "Property"===e.type})));}))(e),function(e){if(RA(e,2,"Object","defineProperty")||RA(e,2,"Reflect","defineProperty"))return !0;var t=e.parent.parent;return "ObjectExpression"===t.type&&(RA(t,1,"Object","create")||RA(t,1,"Object","defineProperties"))}(e)&&function(e){var r=e.properties.filter((function(e){return "Property"===e.type&&"init"===e.kind&&!e.computed})).map((function(e){return e.key.name})),n=r.includes("get"),i=r.includes("set");u&&i&&!n&&t(e,"missingGetter"),s&&n&&!i&&t(e,"missingSetter");}(e);},c&&(p.ClassBody=function(e){var t=e.body.filter((function(e){return "MethodDefinition"===e.type}));a(t.filter((function(e){return e.static}))),a(t.filter((function(e){return !e.static})));})),p}},VA={meta:{type:"layout",docs:{description:"enforce linebreaks after opening and before closing array brackets",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/array-bracket-newline"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never","consistent"]},{type:"object",properties:{multiline:{type:"boolean"},minItems:{type:["integer","null"],minimum:0}},additionalProperties:!1}]}],messages:{unexpectedOpeningLinebreak:"There should be no linebreak after '['.",unexpectedClosingLinebreak:"There should be no linebreak before ']'.",missingOpeningLinebreak:"A linebreak is required after '['.",missingClosingLinebreak:"A linebreak is required before ']'."}},create:function(e){function t(e){var t=function(e){var t=!1,r=!1,i=0;return e?"consistent"===e?(t=!0,i=n):"always"===e||0===e.minItems?i=0:"never"===e?i=n:(r=!!e.multiline,i=e.minItems||n):(t=!1,r=!0,i=n),{consistent:t,multiline:r,minItems:i}}(e);return {ArrayExpression:t,ArrayPattern:t}}function r(r){var n=r.elements,a=t(e.options[0])[r.type],o=i.getFirstToken(r),s=i.getLastToken(r),u=i.getTokenAfter(o,{includeComments:!0}),c=i.getTokenBefore(s,{includeComments:!0}),l=i.getTokenAfter(o),p=i.getTokenBefore(s);n.length>=a.minItems||a.multiline&&0<n.length&&u.loc.start.line!==c.loc.end.line||0===n.length&&"Block"===u.type&&u.loc.start.line!==c.loc.end.line&&u===c||a.consistent&&o.loc.end.line!==l.loc.start.line?(LA.isTokenOnSameLine(o,l)&&function(t,r){e.report({node:t,loc:r.loc,messageId:"missingOpeningLinebreak",fix:function(e){return e.insertTextAfter(r,"\n")}});}(r,o),LA.isTokenOnSameLine(p,s)&&function(t,r){e.report({node:t,loc:r.loc,messageId:"missingClosingLinebreak",fix:function(e){return e.insertTextBefore(r,"\n")}});}(r,s)):(!LA.isTokenOnSameLine(o,l)&&function(t,r){e.report({node:t,loc:r.loc,messageId:"unexpectedOpeningLinebreak",fix:function(e){var t=i.getTokenAfter(r,{includeComments:!0});return LA.isCommentToken(t)?null:e.removeRange([r.range[1],t.range[0]])}});}(r,o),!LA.isTokenOnSameLine(p,s)&&function(t,r){e.report({node:t,loc:r.loc,messageId:"unexpectedClosingLinebreak",fix:function(e){var t=i.getTokenBefore(r,{includeComments:!0});return LA.isCommentToken(t)?null:e.removeRange([t.range[1],r.range[0]])}});}(r,s));}var n=Number.POSITIVE_INFINITY,i=e.getSourceCode();return {ArrayPattern:r,ArrayExpression:r}}},UA={meta:{type:"layout",docs:{description:"enforce consistent spacing inside array brackets",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/array-bracket-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{singleValue:{type:"boolean"},objectsInArrays:{type:"boolean"},arraysInArrays:{type:"boolean"}},additionalProperties:!1}],messages:{unexpectedSpaceAfter:"There should be no space after '{{tokenValue}}'.",unexpectedSpaceBefore:"There should be no space before '{{tokenValue}}'.",missingSpaceAfter:"A space is required after '{{tokenValue}}'.",missingSpaceBefore:"A space is required before '{{tokenValue}}'."}},create:function(e){function t(t){return !!e.options[1]&&e.options[1][t]===!c}function r(t,r){e.report({node:t,loc:r.loc.start,messageId:"unexpectedSpaceAfter",data:{tokenValue:r.value},fix:function(e){var t=l.getTokenAfter(r);return e.removeRange([r.range[1],t.range[0]])}});}function n(t,r){e.report({node:t,loc:r.loc.start,messageId:"unexpectedSpaceBefore",data:{tokenValue:r.value},fix:function(e){var t=l.getTokenBefore(r);return e.removeRange([t.range[1],r.range[0]])}});}function i(t,r){e.report({node:t,loc:r.loc.start,messageId:"missingSpaceAfter",data:{tokenValue:r.value},fix:function(e){return e.insertTextAfter(r," ")}});}function a(t,r){e.report({node:t,loc:r.loc.start,messageId:"missingSpaceBefore",data:{tokenValue:r.value},fix:function(e){return e.insertTextBefore(r," ")}});}function o(e){return e&&("ObjectExpression"===e.type||"ObjectPattern"===e.type)}function s(e){return e&&("ArrayExpression"===e.type||"ArrayPattern"===e.type)}function u(e){if(!p.spaced||0!==e.elements.length){var t=l.getFirstToken(e),u=l.getFirstToken(e,1),c=e.typeAnnotation?l.getTokenBefore(e.typeAnnotation):l.getLastToken(e),f=l.getTokenBefore(c),h=e.elements[0],d=e.elements[e.elements.length-1],m=p.objectsInArraysException&&o(h)||p.arraysInArraysException&&s(h)||p.singleElementException&&1===e.elements.length?!p.spaced:p.spaced,g=p.objectsInArraysException&&o(d)||p.arraysInArraysException&&s(d)||p.singleElementException&&1===e.elements.length?!p.spaced:p.spaced;LA.isTokenOnSameLine(t,u)&&(m&&!l.isSpaceBetweenTokens(t,u)&&i(e,t),!m&&l.isSpaceBetweenTokens(t,u)&&r(e,t)),t!==f&&LA.isTokenOnSameLine(f,c)&&(g&&!l.isSpaceBetweenTokens(f,c)&&a(e,c),!g&&l.isSpaceBetweenTokens(f,c)&&n(e,c));}}var c="always"===e.options[0],l=e.getSourceCode(),p={spaced:c,singleElementException:t("singleValue"),objectsInArraysException:t("objectsInArrays"),arraysInArraysException:t("arraysInArrays")};return {ArrayPattern:u,ArrayExpression:u}}},qA=/^(?:Arrow)?FunctionExpression$/,WA=/^(?:every|filter|find(?:Index)?|map|reduce(?:Right)?|some|sort)$/;function $A(e){return e.reachable}function GA(e,t){return "ArrowFunctionExpression"===e.type?t.getTokenBefore(e.body):e.id||e}function zA(e){return "MemberExpression"===e.type&&WA.test(LA.getStaticPropertyName(e)||"")}function HA(e){for(var t=e;t;){var r=t.parent;switch(r.type){case"LogicalExpression":case"ConditionalExpression":t=r;break;case"ReturnStatement":var n=LA.getUpperFunction(r);if(null===n||!LA.isCallee(n))return !1;t=n.parent;break;case"CallExpression":return LA.isArrayFromMethod(r.callee)?2<=r.arguments.length&&r.arguments[1]===t:!!zA(r.callee)&&1<=r.arguments.length&&r.arguments[0]===t;default:return !1}}return !1}var KA={meta:{type:"problem",docs:{description:"enforce `return` statements in callbacks of array methods",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/array-callback-return"},schema:[{type:"object",properties:{allowImplicit:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{expectedAtEnd:"Expected to return a value at the end of {{name}}.",expectedInside:"Expected to return a value in {{name}}.",expectedReturnValue:"{{name}} expected a return value."}},create:function(e){function t(t){n.shouldCheck&&n.codePath.currentSegments.some($A)&&e.report({node:t,loc:GA(t,e.getSourceCode()).loc.start,messageId:n.hasReturn?"expectedAtEnd":"expectedInside",data:{name:LA.getFunctionNameWithKind(n.node)}});}var r=e.options[0]||{allowImplicit:!1},n={upper:null,codePath:null,hasReturn:!1,shouldCheck:!1,node:null};return {onCodePathStart:function(e,t){n={upper:n,codePath:e,hasReturn:!1,shouldCheck:qA.test(t.type)&&"BlockStatement"===t.body.type&&HA(t)&&!t.async&&!t.generator,node:t};},onCodePathEnd:function(){n=n.upper;},ReturnStatement:function(t){n.shouldCheck&&(n.hasReturn=!0,!r.allowImplicit&&!t.argument&&e.report({node:t,messageId:"expectedReturnValue",data:{name:Fy.lodash.upperFirst(LA.getFunctionNameWithKind(n.node))}}));},"FunctionExpression:exit":t,"ArrowFunctionExpression:exit":t}}},JA={meta:{type:"layout",docs:{description:"enforce line breaks after each array element",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/array-element-newline"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never","consistent"]},{type:"object",properties:{multiline:{type:"boolean"},minItems:{type:["integer","null"],minimum:0}},additionalProperties:!1}]}],messages:{unexpectedLineBreak:"There should be no linebreak here.",missingLineBreak:"There should be a linebreak after this element."}},create:function(e){function t(e){var t=function(e){var t,r=!1,n=!1,i=e||"always";return i&&"always"!==i&&0!==i.minItems?"never"===i?t=a:"consistent"===i?(r=!0,t=a):(n=!!i.multiline,t=i.minItems||a):t=0,{consistent:r,multiline:n,minItems:t}}(e);return {ArrayExpression:t,ArrayPattern:t}}function r(t){var r=o.getTokenBefore(t,{includeComments:!0});e.report({loc:{start:r.loc.end,end:t.loc.start},messageId:"unexpectedLineBreak",fix:function(e){if(LA.isCommentToken(r))return null;if(!LA.isTokenOnSameLine(r,t))return e.replaceTextRange([r.range[1],t.range[0]]," ");var n=o.getTokenBefore(r,{includeComments:!0});return LA.isCommentToken(n)?null:e.replaceTextRange([n.range[1],r.range[0]],"")}});}function n(t){var r=o.getTokenBefore(t,{includeComments:!0});e.report({loc:{start:r.loc.end,end:t.loc.start},messageId:"missingLineBreak",fix:function(e){return e.replaceTextRange([r.range[1],t.range[0]],"\n")}});}function i(i){var a=i.elements,s=t(e.options[0])[i.type],u=!1;s.multiline&&(u=a.filter((function(e){return null!==e})).some((function(e){return e.loc.start.line!==e.loc.end.line})));var c=i.elements.map((function(e,t){var r=a[t-1];if(0===t||null===e||null===r)return !1;var n=o.getFirstTokenBetween(r,e,LA.isCommaToken),i=o.getTokenBefore(n),s=o.getTokenAfter(n);return !LA.isTokenOnSameLine(i,s)})).filter((function(e){return !0===e})).length,l=a.length>=s.minItems||s.multiline&&u||s.consistent&&0<c&&c<i.elements.length;a.forEach((function(e,t){var i=a[t-1];if(0!==t&&null!==e&&null!==i){var s=o.getFirstTokenBetween(i,e,LA.isCommaToken),u=o.getTokenBefore(s),c=o.getTokenAfter(s);l?LA.isTokenOnSameLine(u,c)&&n(c):!LA.isTokenOnSameLine(u,c)&&r(c);}}));}var a=Number.POSITIVE_INFINITY,o=e.getSourceCode();return {ArrayPattern:i,ArrayExpression:i}}},QA={meta:{type:"suggestion",docs:{description:"require braces around arrow function bodies",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/arrow-body-style"},schema:{anyOf:[{type:"array",items:[{enum:["always","never"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["as-needed"]},{type:"object",properties:{requireReturnForObjectLiteral:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},fixable:"code",messages:{unexpectedOtherBlock:"Unexpected block statement surrounding arrow body.",unexpectedEmptyBlock:"Unexpected block statement surrounding arrow body; put a value of `undefined` immediately after the `=>`.",unexpectedObjectBlock:"Unexpected block statement surrounding arrow body; parenthesize the returned value and move it immediately after the `=>`.",unexpectedSingleBlock:"Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.",expectedBlock:"Expected block statement surrounding arrow body."}},create:function(e){var t=e.options,r="always"===t[0],n=!t[0]||"as-needed"===t[0],i="never"===t[0],a=t[1]&&t[1].requireReturnForObjectLiteral,o=e.getSourceCode();return {"ArrowFunctionExpression:exit":function(t){var s=t.body;if("BlockStatement"===s.type){var u,c=s.body;if(1!==c.length&&!i)return;if(n&&a&&"ReturnStatement"===c[0].type&&c[0].argument&&"ObjectExpression"===c[0].argument.type)return;if(i||n&&"ReturnStatement"===c[0].type)u=0===c.length?"unexpectedEmptyBlock":1<c.length?"unexpectedOtherBlock":null===c[0].argument?"unexpectedSingleBlock":LA.isOpeningBraceToken(o.getFirstToken(c[0],{skip:1}))?"unexpectedObjectBlock":"unexpectedSingleBlock",e.report({node:t,loc:s.loc.start,messageId:u,fix:function(e){var t=[];if(1!==c.length||"ReturnStatement"!==c[0].type||!c[0].argument||function(e){return e&&"Punctuator"===e.type&&/^[\(\+\x2D\/\[`]/.test(e.value)}(o.getTokenAfter(s)))return t;var r=o.getFirstToken(s),n=o.getLastToken(s),i=o.getFirstToken(c[0],1),a=o.getLastToken(c[0]);return o.commentsExistBetween(r,i)||o.commentsExistBetween(a,n)?t.push(e.remove(r),e.remove(n),e.remove(o.getTokenAfter(r))):t.push(e.removeRange([r.range[0],i.range[0]]),e.removeRange([a.range[1],n.range[1]])),(LA.isOpeningBraceToken(i)||"SequenceExpression"===c[0].argument.type)&&t.push(e.insertTextBefore(i,"("),e.insertTextAfter(a,")")),LA.isSemicolonToken(a)&&t.push(e.remove(a)),t}});}else (r||n&&a&&"ObjectExpression"===s.type)&&e.report({node:t,loc:s.loc.start,messageId:"expectedBlock",fix:function(e){var r=[],n=o.getTokenBefore(s,LA.isArrowToken),i=o.getTokenAfter(n),a=o.getLastToken(t),u=LA.isOpeningParenToken(i)&&LA.isOpeningBraceToken(o.getTokenAfter(i));return r.push(e.insertTextBefore(i,"{return "),e.insertTextAfter(a,"}")),u&&r.push(e.remove(i),e.remove(function(e){for(var t=o.getNodeByRangeIndex(e.range[1]);!LA.isParenthesised(o,t);)t=t.parent;return o.getTokenAfter(t)}(i))),r}});}}}};function XA(e){return {start:e.params[0].loc.start,end:e.params[e.params.length-1].loc.end}}var YA={meta:{type:"layout",docs:{description:"require parentheses around arrow function arguments",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/arrow-parens"},fixable:"code",schema:[{enum:["always","as-needed"]},{type:"object",properties:{requireForBlockBody:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpectedParens:"Unexpected parentheses around single function argument.",expectedParens:"Expected parentheses around arrow function argument.",unexpectedParensInline:"Unexpected parentheses around single function argument having a body with no curly braces.",expectedParensBlock:"Expected parentheses around arrow function argument having a body with curly braces."}},create:function(e){var t="as-needed"===e.options[0],r=t&&e.options[1]&&!0===e.options[1].requireForBlockBody,n=e.getSourceCode();return {ArrowFunctionExpression:function(i){function a(e){var t=n.getTokenAfter(s),r=n.getTokenAfter(t,LA.isClosingParenToken),i=o?n.getTokenBefore(s):null,a=i&&i.range[1]===s.range[0];return e.replaceTextRange([s.range[0],r.range[1]],"".concat(a?" ":"").concat(t.value))}var o=i.async,s=n.getFirstToken(i,o?1:0);!r||1!==i.params.length||"Identifier"!==i.params[0].type||i.params[0].typeAnnotation||"BlockStatement"===i.body.type||i.returnType?r&&"BlockStatement"===i.body.type?LA.isOpeningParenToken(s)||e.report({node:i,messageId:"expectedParensBlock",loc:XA(i),fix:function(e){return e.replaceText(s,"(".concat(s.value,")"))}}):!t||1!==i.params.length||"Identifier"!==i.params[0].type||i.params[0].typeAnnotation||i.returnType?"Identifier"===s.type&&")"!==n.getTokenAfter(s).value&&e.report({node:i,messageId:"expectedParens",loc:XA(i),fix:function(e){return e.replaceText(s,"(".concat(s.value,")"))}}):LA.isOpeningParenToken(s)&&e.report({node:i,messageId:"unexpectedParens",loc:XA(i),fix:a}):LA.isOpeningParenToken(s)&&e.report({node:i,messageId:"unexpectedParensInline",loc:XA(i),fix:a});}}}},ZA={meta:{type:"layout",docs:{description:"enforce consistent spacing before and after the arrow in arrow functions",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/arrow-spacing"},fixable:"whitespace",schema:[{type:"object",properties:{before:{type:"boolean",default:!0},after:{type:"boolean",default:!0}},additionalProperties:!1}],messages:{expectedBefore:"Missing space before =>.",unexpectedBefore:"Unexpected space before =>.",expectedAfter:"Missing space after =>.",unexpectedAfter:"Unexpected space after =>."}},create:function(e){function t(e){var t=n.getTokenBefore(e.body,LA.isArrowToken);return {before:n.getTokenBefore(t),arrow:t,after:n.getTokenAfter(t)}}var r=Object.assign({},e.options[0]);r.before=!1!==r.before,r.after=!1!==r.after;var n=e.getSourceCode();return {ArrowFunctionExpression:function(n){var i=t(n),a=function(e){return {before:e.arrow.range[0]-e.before.range[1],after:e.after.range[0]-e.arrow.range[1]}}(i);r.before?0===a.before&&e.report({node:i.before,messageId:"expectedBefore",fix:function(e){return e.insertTextBefore(i.arrow," ")}}):0<a.before&&e.report({node:i.before,messageId:"unexpectedBefore",fix:function(e){return e.removeRange([i.before.range[1],i.arrow.range[0]])}}),r.after?0===a.after&&e.report({node:i.after,messageId:"expectedAfter",fix:function(e){return e.insertTextAfter(i.arrow," ")}}):0<a.after&&e.report({node:i.after,messageId:"unexpectedAfter",fix:function(e){return e.removeRange([i.arrow.range[1],i.after.range[0]])}});}}}},ew={meta:{type:"layout",docs:{description:"disallow or enforce spaces inside of blocks after opening block and before closing block",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/block-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]}],messages:{missing:"Requires a space {{location}} '{{token}}'.",extra:"Unexpected space(s) {{location}} '{{token}}'."}},create:function(e){function t(e,t){return !LA.isTokenOnSameLine(e,t)||a.isSpaceBetweenTokens(e,t)===n}function r(r){var o=function(e){return "SwitchStatement"===e.type?0<e.cases.length?a.getTokenBefore(e.cases[0]):a.getLastToken(e,1):a.getFirstToken(e)}(r),s=a.getLastToken(r),u=a.getTokenAfter(o,{includeComments:!0}),c=a.getTokenBefore(s,{includeComments:!0});"Punctuator"===o.type&&"{"===o.value&&"Punctuator"===s.type&&"}"===s.value&&u!==s&&(n||"Line"!==u.type)&&(!t(o,u)&&e.report({node:r,loc:o.loc.start,messageId:i,data:{location:"after",token:o.value},fix:function(e){return n?e.insertTextBefore(u," "):e.removeRange([o.range[1],u.range[0]])}}),!t(c,s)&&e.report({node:r,loc:s.loc.start,messageId:i,data:{location:"before",token:s.value},fix:function(e){return n?e.insertTextAfter(c," "):e.removeRange([c.range[1],s.range[0]])}}));}var n="never"!==e.options[0],i=n?"missing":"extra",a=e.getSourceCode();return {BlockStatement:r,SwitchStatement:r}}},tw={meta:{type:"layout",docs:{description:"enforce consistent brace style for blocks",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/brace-style"},schema:[{enum:["1tbs","stroustrup","allman"]},{type:"object",properties:{allowSingleLine:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"whitespace",messages:{nextLineOpen:"Opening curly brace does not appear on the same line as controlling statement.",sameLineOpen:"Opening curly brace appears on the same line as controlling statement.",blockSameLine:"Statement inside of curly braces should be on next line.",nextLineClose:"Closing curly brace does not appear on the same line as the subsequent block.",singleLineClose:"Closing curly brace should be on the same line as opening curly brace or on the line after the previous block.",sameLineClose:"Closing curly brace appears on the same line as the subsequent block."}},create:function(e){function t(e,t){var r=[e.range[1],t.range[0]];return o.text.slice(r[0],r[1]).trim()?null:function(e){return e.replaceTextRange(r," ")}}function r(r,n){var s=o.getTokenBefore(r),u=o.getTokenAfter(r),c=o.getTokenBefore(n),l=a.allowSingleLine&&LA.isTokenOnSameLine(r,n);"allman"===i||LA.isTokenOnSameLine(s,r)||e.report({node:r,messageId:"nextLineOpen",fix:t(s,r)}),"allman"===i&&LA.isTokenOnSameLine(s,r)&&!l&&e.report({node:r,messageId:"sameLineOpen",fix:function(e){return e.insertTextBefore(r,"\n")}}),LA.isTokenOnSameLine(r,u)&&u!==n&&!l&&e.report({node:r,messageId:"blockSameLine",fix:function(e){return e.insertTextAfter(r,"\n")}}),c!==r&&!l&&LA.isTokenOnSameLine(c,n)&&e.report({node:n,messageId:"singleLineClose",fix:function(e){return e.insertTextBefore(n,"\n")}});}function n(r){var n=o.getTokenAfter(r);"1tbs"!==i||LA.isTokenOnSameLine(r,n)||e.report({node:r,messageId:"nextLineClose",fix:t(r,n)}),"1tbs"!==i&&LA.isTokenOnSameLine(r,n)&&e.report({node:r,messageId:"sameLineClose",fix:function(e){return e.insertTextAfter(r,"\n")}});}var i=e.options[0]||"1tbs",a=e.options[1]||{},o=e.getSourceCode();return {BlockStatement:function(e){LA.STATEMENT_LIST_PARENTS.has(e.parent.type)||r(o.getFirstToken(e),o.getLastToken(e));},ClassBody:function(e){r(o.getFirstToken(e),o.getLastToken(e));},SwitchStatement:function(e){var t=o.getLastToken(e);r(o.getTokenBefore(e.cases.length?e.cases[0]:t),t);},IfStatement:function(e){"BlockStatement"===e.consequent.type&&e.alternate&&n(o.getLastToken(e.consequent));},TryStatement:function(e){n(o.getLastToken(e.block)),e.handler&&e.finalizer&&n(o.getLastToken(e.handler.body));}}}},rw={meta:{type:"suggestion",docs:{description:"enforce camelcase naming convention",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/camelcase"},schema:[{type:"object",properties:{ignoreDestructuring:{type:"boolean",default:!1},ignoreImports:{type:"boolean",default:!1},properties:{enum:["always","never"]},allow:{type:"array",items:[{type:"string"}],minItems:0,uniqueItems:!0}},additionalProperties:!1}],messages:{notCamelCase:"Identifier '{{name}}' is not in camel case."}},create:function(e){function t(e){return e.includes("_")&&e!==e.toUpperCase()}function r(e){return u.some((function(t){return e===t||e.match(new RegExp(t,"u"))}))}function n(t){c.includes(t)||(c.push(t),e.report({node:t,messageId:"notCamelCase",data:{name:t.name}}));}var i=e.options[0]||{},a=i.properties||"",o=i.ignoreDestructuring,s=i.ignoreImports,u=i.allow||[];"always"!==a&&"never"!==a&&(a="always");var c=[],l=new Set(["CallExpression","NewExpression"]);return {Identifier:function(e){var i=e.name,u=t(i.replace(/^_+|_+$/g,"")),c="MemberExpression"===e.parent.type?e.parent.parent:e.parent;if(!r(i))if("MemberExpression"===e.parent.type){if("never"===a)return;"Identifier"===e.parent.object.type&&e.parent.object.name===e.name&&u?n(e):"AssignmentExpression"===c.type&&u&&("MemberExpression"!==c.right.type||"MemberExpression"===c.left.type&&c.left.property.name===e.name)&&n(e);}else if("Property"===e.parent.type||"AssignmentPattern"===e.parent.type){if(e.parent.parent&&"ObjectPattern"===e.parent.parent.type){e.parent.shorthand&&e.parent.value.left&&u&&n(e);var p=e.parent.key.name===e.parent.value.name;if(t(i)&&e.parent.computed&&n(e),e.parent.key===e&&e.parent.value!==e)return;e.parent.value.name&&u&&(!p||!o)&&n(e);}if("never"===a||o&&function(e){for(var t=e;t;){var r=t.parent;if(r&&"Property"===r.type&&r.computed&&r.key===t)return !1;if("ObjectPattern"===t.type)return !0;t=r;}return !1}(e))return;!u||l.has(c.type)||e.parent.right===e||n(e);}else if(["ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier"].includes(e.parent.type)){if("ImportSpecifier"===e.parent.type&&s)return;e.parent.local&&e.parent.local.name===e.name&&u&&n(e);}else u&&!l.has(c.type)&&n(e);}}}},nw=/[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|(?:\uD800(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF])|(?:\uD801(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67])|(?:\uD802(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91])|(?:\uD803(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC48])|(?:\uD804(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61])|(?:\uD805(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA])|(?:\uD806(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8])|(?:\uD808(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDF98])|(?:[\uD80C\uD840-\uD868\uD86A-\uD86C](?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|(?:\uD80D(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC2E])|(?:\uD81A(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F])|(?:\uD81B(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDF00-\uDF44\uDF50\uDF93-\uDF9F])|(?:\uD82C(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00\uDC01])|(?:\uD82F(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99])|(?:\uD835(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB])|(?:\uD83A(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDCC4])|(?:\uD83B(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB])|(?:\uD869(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDED6\uDF00-\uDFFF])|(?:\uD86D(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDF34\uDF40-\uDFFF])|(?:\uD86E(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDC1D])|(?:\uD87E(?![\uDC00-\uDFFF]))(?:(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDE1D])/,iw=LA.COMMENTS_IGNORE_PATTERN,aw=/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/g,ow=/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*(?:[\0-\x08\x0E-\x1F!"\$-\.0-9;->@-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+:\/\/(?:[\0-"\$->@-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,sw={type:"object",properties:{ignorePattern:{type:"string"},ignoreInlineComments:{type:"boolean"},ignoreConsecutiveComments:{type:"boolean"}},additionalProperties:!1},uw={ignorePattern:"",ignoreInlineComments:!1,ignoreConsecutiveComments:!1};function cw(e,t){return Object.assign({},uw,e[t]||e)}var lw={meta:{type:"suggestion",docs:{description:"enforce or disallow capitalization of the first letter of a comment",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/capitalized-comments"},fixable:"code",schema:[{enum:["always","never"]},{oneOf:[sw,{type:"object",properties:{line:sw,block:sw},additionalProperties:!1}]}],messages:{unexpectedLowercaseComment:"Comments should not begin with a lowercase character.",unexpectedUppercaseComment:"Comments should not begin with an uppercase character."}},create:function(e){function t(e){var t=s.getTokenBefore(e,{includeComments:!0}),r=s.getTokenAfter(e,{includeComments:!0});return !(!t||!r||e.loc.start.line!==t.loc.end.line||e.loc.end.line!==r.loc.start.line)}function r(e){var t=s.getTokenBefore(e,{includeComments:!0});return !(!t||-1===["Block","Line"].indexOf(t.type))}function n(e,n){if(iw.test(e.value))return !0;var i=e.value.replace(/\*/g,"");if(n.ignorePatternRegExp&&n.ignorePatternRegExp.test(i))return !0;if(n.ignoreInlineComments&&t(e))return !0;if(n.ignoreConsecutiveComments&&r(e))return !0;if(ow.test(i))return !0;var o=i.replace(aw,"");if(0===o.length)return !0;var s=o[0];if(!nw.test(s))return !0;var u=s!==s.toLocaleLowerCase(),c=s!==s.toLocaleUpperCase();return !("always"===a&&c||"never"===a&&u)}function i(t){var r=o[t.type];if(!n(t,r)){var i="always"===a?"unexpectedLowercaseComment":"unexpectedUppercaseComment";e.report({node:null,loc:t.loc,messageId:i,fix:function(e){var r=t.value.match(nw);return e.replaceTextRange([t.range[0]+r.index+2,t.range[0]+r.index+3],"always"===a?r[0].toLocaleUpperCase():r[0].toLocaleLowerCase())}});}}var a=e.options[0]||"always",o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return {Line:cw(e,"line"),Block:cw(e,"block")}}(e.options[1]),s=e.getSourceCode();return function(e){Object.keys(e).forEach((function(t){var r=e[t].ignorePattern;if(r){var n=RegExp("^\\s*(?:".concat(r,")"),"u");e[t].ignorePatternRegExp=n;}}));}(o),{Program:function(){s.getAllComments().filter((function(e){return "Shebang"!==e.type})).forEach(i);}}}},pw={meta:{type:"suggestion",docs:{description:"enforce that class methods utilize `this`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/class-methods-use-this"},schema:[{type:"object",properties:{exceptMethods:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{missingThis:"Expected 'this' to be used by class {{name}}."}},create:function(e){function t(){s.push(!1);}function r(e){return function(e){return !e.static&&"constructor"!==e.kind&&"MethodDefinition"===e.type}(e)&&(e.computed||!o.has(e.key.name))}function n(t){var n=s.pop();r(t.parent)&&!n&&e.report({node:t,messageId:"missingThis",data:{name:LA.getFunctionNameWithKind(t)}});}function i(){s.length&&(s[s.length-1]=!0);}var a=Object.assign({},e.options[0]),o=new Set(a.exceptMethods||[]),s=[];return {FunctionDeclaration:t,"FunctionDeclaration:exit":n,FunctionExpression:t,"FunctionExpression:exit":n,ThisExpression:i,Super:i}}},fw=Object.freeze({arrays:"never",objects:"never",imports:"never",exports:"never",functions:"never"});var hw={meta:{type:"layout",docs:{description:"require or disallow trailing commas",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/comma-dangle"},fixable:"code",schema:{definitions:{value:{enum:["always-multiline","always","never","only-multiline"]},valueWithIgnore:{enum:["always-multiline","always","ignore","never","only-multiline"]}},type:"array",items:[{oneOf:[{$ref:"#/definitions/value"},{type:"object",properties:{arrays:{$ref:"#/definitions/valueWithIgnore"},objects:{$ref:"#/definitions/valueWithIgnore"},imports:{$ref:"#/definitions/valueWithIgnore"},exports:{$ref:"#/definitions/valueWithIgnore"},functions:{$ref:"#/definitions/valueWithIgnore"}},additionalProperties:!1}]}]},messages:{unexpected:"Unexpected trailing comma.",missing:"Missing trailing comma."}},create:function(e){function t(e){switch(e.type){case"ObjectExpression":case"ObjectPattern":return Fy.lodash.last(e.properties);case"ArrayExpression":case"ArrayPattern":return Fy.lodash.last(e.elements);case"ImportDeclaration":case"ExportNamedDeclaration":return Fy.lodash.last(e.specifiers);case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":return Fy.lodash.last(e.params);case"CallExpression":case"NewExpression":return Fy.lodash.last(e.arguments);default:return null}}function r(e,t){switch(e.type){case"ObjectExpression":case"ArrayExpression":case"CallExpression":case"NewExpression":return u.getLastToken(e,1);default:var r=u.getTokenAfter(t);return LA.isCommaToken(r)?r:u.getLastToken(t)}}function n(e){var n=t(e);if(!n)return !1;var i=r(e,n);return u.getTokenAfter(i).loc.end.line!==i.loc.end.line}function a(n){var i=t(n);if(i&&("ImportDeclaration"!==n.type||"ImportSpecifier"===i.type)){var a=r(n,i);LA.isCommaToken(a)&&e.report({node:i,loc:a.loc,messageId:"unexpected",fix:function(e){return e.remove(a)}});}}function o(n){var i=t(n);if(i&&("ImportDeclaration"!==n.type||"ImportSpecifier"===i.type))if(function(e){return "RestElement"!==e.type&&"RestProperty"!==e.type&&"ExperimentalRestProperty"!==e.type}(i)){var o=r(n,i);","!==o.value&&e.report({node:i,loc:{start:o.loc.end,end:LA.getNextLocation(u,o.loc.end)},messageId:"missing",fix:function(e){return e.insertTextAfter(o,",")}});}else a(n);}var s=function(e,t){return "string"==typeof e?{arrays:e,objects:e,imports:e,exports:e,functions:!t||8>t?"ignore":e}:"object"==i(e)&&null!==e?{arrays:e.arrays||fw.arrays,objects:e.objects||fw.objects,imports:e.imports||fw.imports,exports:e.exports||fw.exports,functions:e.functions||fw.functions}:fw}(e.options[0],e.parserOptions.ecmaVersion),u=e.getSourceCode(),c={always:o,"always-multiline":function(e){n(e)?o(e):a(e);},"only-multiline":function(e){n(e)||a(e);},never:a,ignore:Fy.lodash.noop};return {ObjectExpression:c[s.objects],ObjectPattern:c[s.objects],ArrayExpression:c[s.arrays],ArrayPattern:c[s.arrays],ImportDeclaration:c[s.imports],ExportNamedDeclaration:c[s.exports],FunctionDeclaration:c[s.functions],FunctionExpression:c[s.functions],ArrowFunctionExpression:c[s.functions],CallExpression:c[s.functions],NewExpression:c[s.functions]}}},dw={meta:{type:"layout",docs:{description:"enforce consistent spacing before and after commas",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/comma-spacing"},fixable:"whitespace",schema:[{type:"object",properties:{before:{type:"boolean",default:!1},after:{type:"boolean",default:!0}},additionalProperties:!1}],messages:{missing:"A space is required {{loc}} ','.",unexpected:"There should be no space {{loc}} ','."}},create:function(e){function t(t,r,n){e.report({node:t,fix:function(e){return o[r]?"before"===r?e.insertTextBefore(t," "):e.insertTextAfter(t," "):("before"===r?(i=n.range[1],a=t.range[0]):(i=t.range[1],a=n.range[0]),e.replaceTextRange([i,a],""));var i,a;},messageId:o[r]?"missing":"unexpected",data:{loc:r}});}function r(e,r){e.left&&LA.isTokenOnSameLine(e.left,e.comma)&&o.before!==i.isSpaceBetweenTokens(e.left,e.comma)&&t(r,"before",e.left),e.right&&LA.isClosingParenToken(e.right)||e.right&&!o.after&&"Line"===e.right.type||e.right&&LA.isTokenOnSameLine(e.comma,e.right)&&o.after!==i.isSpaceBetweenTokens(e.comma,e.right)&&t(r,"after",e.right);}function n(e){var t=i.getFirstToken(e);e.elements.forEach((function(e){var r;null===e?(r=i.getTokenAfter(t),LA.isCommaToken(r)&&s.push(r)):r=i.getTokenAfter(e),t=r;}));}var i=e.getSourceCode(),a=i.tokensAndComments,o={before:!!e.options[0]&&e.options[0].before,after:!e.options[0]||e.options[0].after},s=[];return {"Program:exit":function(){a.forEach((function(e,t){if(LA.isCommaToken(e)&&(!e||"JSXText"!==e.type)){var n=a[t-1],i=a[t+1];r({comma:e,left:LA.isCommaToken(n)||-1<s.indexOf(e)?null:n,right:LA.isCommaToken(i)?null:i},e);}}));},ArrayExpression:n,ArrayPattern:n}}},mw={meta:{type:"layout",docs:{description:"enforce consistent comma style",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/comma-style"},fixable:"code",schema:[{enum:["first","last"]},{type:"object",properties:{exceptions:{type:"object",additionalProperties:{type:"boolean"}}},additionalProperties:!1}],messages:{unexpectedLineBeforeAndAfterComma:"Bad line breaking before and after ','.",expectedCommaFirst:"',' should be placed first.",expectedCommaLast:"',' should be placed last."}},create:function(e){function t(e,t,r,n){var i=a.text.slice(t.range[1],r.range[0])+a.text.slice(r.range[1],n.range[0]),o=[t.range[1],n.range[0]];return function(t){return t.replaceTextRange(o,function(e,t){return "between"===e?",".concat(t.replace(LA.LINEBREAK_MATCHER,"")):"first"===e?"".concat(t,","):"last"===e?",".concat(t):""}(e,i))}}function r(r,n,o,s){if(LA.isTokenOnSameLine(n,o)&&LA.isTokenOnSameLine(r,n));else if(LA.isTokenOnSameLine(n,o)||LA.isTokenOnSameLine(r,n))"first"!==i||LA.isTokenOnSameLine(n,o)?"last"===i&&LA.isTokenOnSameLine(n,o)&&e.report({node:s,loc:{line:n.loc.end.line,column:n.loc.end.column},messageId:"expectedCommaLast",fix:t(i,r,n,o)}):e.report({node:s,messageId:"expectedCommaFirst",fix:t(i,r,n,o)});else {var u=a.getCommentsAfter(n)[0],c=u&&"Block"===u.type&&LA.isTokenOnSameLine(n,u)?i:"between";e.report({node:s,loc:{line:n.loc.end.line,column:n.loc.start.column},messageId:"unexpectedLineBeforeAndAfterComma",fix:t(c,r,n,o)});}}function n(e,t){var n=e[t],i="ArrayExpression"===e.type||"ArrayPattern"===e.type;if(1<n.length||i){var o=a.getFirstToken(e);if(n.forEach((function(e){var t=e?a.getTokenBefore(e):o,n=e?a.getFirstToken(e):a.getTokenAfter(t);if(LA.isCommaToken(t)&&r(o,t,n,e||n),e){var i=a.getTokenAfter(e,LA.isNotClosingParenToken);o=i?a.getTokenBefore(i):a.ast.tokens[a.ast.tokens.length-1];}})),i){var s=a.getLastToken(e),u=a.getTokenBefore(s);LA.isCommaToken(u)&&r(a.getTokenBefore(u),u,s,s);}}}var i=e.options[0]||"last",a=e.getSourceCode(),o={ArrayPattern:!0,ArrowFunctionExpression:!0,CallExpression:!0,FunctionDeclaration:!0,FunctionExpression:!0,ImportDeclaration:!0,ObjectPattern:!0,NewExpression:!0};if(2===e.options.length&&Object.prototype.hasOwnProperty.call(e.options[1],"exceptions"))for(var s=Object.keys(e.options[1].exceptions),u=0;u<s.length;u++)o[s[u]]=e.options[1].exceptions[s[u]];var c={};return o.VariableDeclaration||(c.VariableDeclaration=function(e){n(e,"declarations");}),o.ObjectExpression||(c.ObjectExpression=function(e){n(e,"properties");}),o.ObjectPattern||(c.ObjectPattern=function(e){n(e,"properties");}),o.ArrayExpression||(c.ArrayExpression=function(e){n(e,"elements");}),o.ArrayPattern||(c.ArrayPattern=function(e){n(e,"elements");}),o.FunctionDeclaration||(c.FunctionDeclaration=function(e){n(e,"params");}),o.FunctionExpression||(c.FunctionExpression=function(e){n(e,"params");}),o.ArrowFunctionExpression||(c.ArrowFunctionExpression=function(e){n(e,"params");}),o.CallExpression||(c.CallExpression=function(e){n(e,"arguments");}),o.ImportDeclaration||(c.ImportDeclaration=function(e){n(e,"specifiers");}),o.NewExpression||(c.NewExpression=function(e){n(e,"arguments");}),c}},gw={meta:{type:"suggestion",docs:{description:"enforce a maximum cyclomatic complexity allowed in a program",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/complexity"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{complex:"{{name}} has a complexity of {{complexity}}. Maximum allowed is {{max}}."}},create:function(e){function t(){s.push(1);}function r(t){var r=Fy.lodash.upperFirst(LA.getFunctionNameWithKind(t)),n=s.pop();n>o&&e.report({node:t,messageId:"complex",data:{name:r,complexity:n,max:o}});}function n(){s.length&&s[s.length-1]++;}var a=e.options[0],o=20;"object"==i(a)&&(Object.prototype.hasOwnProperty.call(a,"maximum")||Object.prototype.hasOwnProperty.call(a,"max"))?o=a.maximum||a.max:"number"==typeof a&&(o=a);var s=[];return {FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t,"FunctionDeclaration:exit":r,"FunctionExpression:exit":r,"ArrowFunctionExpression:exit":r,CatchClause:n,ConditionalExpression:n,LogicalExpression:n,ForStatement:n,ForInStatement:n,ForOfStatement:n,IfStatement:n,SwitchCase:function(e){e.test&&n();},WhileStatement:n,DoWhileStatement:n}}},yw={meta:{type:"layout",docs:{description:"enforce consistent spacing inside computed property brackets",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/computed-property-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{enforceForClassMembers:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpectedSpaceBefore:"There should be no space before '{{tokenValue}}'.",unexpectedSpaceAfter:"There should be no space after '{{tokenValue}}'.",missingSpaceBefore:"A space is required before '{{tokenValue}}'.",missingSpaceAfter:"A space is required after '{{tokenValue}}'."}},create:function(e){function t(t,r,n){e.report({node:t,loc:r.loc.start,messageId:"unexpectedSpaceAfter",data:{tokenValue:r.value},fix:function(e){return e.removeRange([r.range[1],n.range[0]])}});}function r(t,r,n){e.report({node:t,loc:r.loc.start,messageId:"unexpectedSpaceBefore",data:{tokenValue:r.value},fix:function(e){return e.removeRange([n.range[1],r.range[0]])}});}function n(t,r){e.report({node:t,loc:r.loc.start,messageId:"missingSpaceAfter",data:{tokenValue:r.value},fix:function(e){return e.insertTextAfter(r," ")}});}function i(t,r){e.report({node:t,loc:r.loc.start,messageId:"missingSpaceBefore",data:{tokenValue:r.value},fix:function(e){return e.insertTextBefore(r," ")}});}function a(e){return function(a){if(a.computed){var u=a[e],c=o.getTokenBefore(u,LA.isOpeningBracketToken),l=o.getTokenAfter(c,{includeComments:!0}),p=o.getTokenAfter(u,LA.isClosingBracketToken),f=o.getTokenBefore(p,{includeComments:!0});LA.isTokenOnSameLine(c,l)&&(s?!o.isSpaceBetweenTokens(c,l)&&LA.isTokenOnSameLine(c,l)&&n(a,c):o.isSpaceBetweenTokens(c,l)&&t(a,c,l)),LA.isTokenOnSameLine(f,p)&&(s?!o.isSpaceBetweenTokens(f,p)&&LA.isTokenOnSameLine(f,p)&&i(a,p):o.isSpaceBetweenTokens(f,p)&&r(a,p,f));}}}var o=e.getSourceCode(),s="always"===e.options[0],u=e.options[1]&&e.options[1].enforceForClassMembers,c={Property:a("key"),MemberExpression:a("property")};return u&&(c.MethodDefinition=a("key")),c}};function vw(e){return !e.reachable}var xw={meta:{type:"suggestion",docs:{description:"require `return` statements to either always or never specify values",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/consistent-return"},schema:[{type:"object",properties:{treatUndefinedAsUnspecified:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{missingReturn:"Expected to return a value at the end of {{name}}.",missingReturnValue:"{{name}} expected a return value.",unexpectedReturnValue:"{{name}} expected no return value."}},create:function(e){function t(t){var r,i;!n.hasReturnValue||n.codePath.currentSegments.every(vw)||LA.isES5Constructor(t)||function(e){return "FunctionExpression"===e.type&&e.parent&&"MethodDefinition"===e.parent.type&&"constructor"===e.parent.kind}(t)||("Program"===t.type?(r={line:1,column:0},i="program"):r="ArrowFunctionExpression"===t.type?e.getSourceCode().getTokenBefore(t.body,LA.isArrowToken).loc.start:"MethodDefinition"===t.parent.type||"Property"===t.parent.type&&t.parent.method?t.parent.key.loc.start:(t.id||t).loc.start,!i&&(i=LA.getFunctionNameWithKind(t)),e.report({node:t,loc:r,messageId:"missingReturn",data:{name:i}}));}var r=!0===(e.options[0]||{}).treatUndefinedAsUnspecified,n=null;return {onCodePathStart:function(e,t){n={upper:n,codePath:e,hasReturn:!1,hasReturnValue:!1,messageId:"",node:t};},onCodePathEnd:function(){n=n.upper;},ReturnStatement:function(t){var i=t.argument,a=!!i;r&&a&&(a=!function(e,t){return "Identifier"===e.type&&e.name===t}(i,"undefined")&&"void"!==i.operator),n.hasReturn?n.hasReturnValue!==a&&e.report({node:t,messageId:n.messageId,data:n.data}):(n.hasReturn=!0,n.hasReturnValue=a,n.messageId=a?"missingReturnValue":"unexpectedReturnValue",n.data={name:"Program"===n.node.type?"Program":Fy.lodash.upperFirst(LA.getFunctionNameWithKind(n.node))});},"Program:exit":t,"FunctionDeclaration:exit":t,"FunctionExpression:exit":t,"ArrowFunctionExpression:exit":t}}};function bw(e){return e.reachable}function Ew(e){if(!e)return !1;switch(e.type){case"ClassExpression":case"FunctionExpression":case"ThisExpression":case"MemberExpression":case"CallExpression":case"NewExpression":case"YieldExpression":case"TaggedTemplateExpression":case"MetaProperty":return !0;case"Identifier":return "undefined"!==e.name;case"AssignmentExpression":return Ew(e.right);case"LogicalExpression":return Ew(e.left)||Ew(e.right);case"ConditionalExpression":return Ew(e.alternate)||Ew(e.consequent);case"SequenceExpression":return Ew(e.expressions[e.expressions.length-1]);default:return !1}}var Cw={meta:{type:"problem",docs:{description:"require `super()` calls in constructors",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/constructor-super"},schema:[],messages:{missingSome:"Lacked a call of 'super()' in some code paths.",missingAll:"Expected to call 'super()'.",duplicate:"Unexpected duplicate 'super()'.",badSuper:"Unexpected 'super()' because 'super' is not a constructor.",unexpected:"Unexpected 'super()'."}},create:function(e){function t(e){return e.reachable&&i[e.id].calledInSomePaths}function r(e){return !(1!==e.nextSegments.length||!e.nextSegments[0].isLoopedPrevSegment(e))||e.reachable&&i[e.id].calledInEveryPaths}var n=null,i=Object.create(null);return {onCodePathStart:function(e,t){if(function(e){return "FunctionExpression"===e.type&&"MethodDefinition"===e.parent.type&&"constructor"===e.parent.kind}(t)){var r=t.parent.parent.parent.superClass;n={upper:n,isConstructor:!0,hasExtends:!!r,superIsConstructor:Ew(r),codePath:e};}else n={upper:n,isConstructor:!1,hasExtends:!1,superIsConstructor:!1,codePath:e};},onCodePathEnd:function(i,a){var o=n.hasExtends;if(n=n.upper,o){var s=i.returnedSegments,u=s.every(r),c=s.some(t);u||e.report({messageId:c?"missingSome":"missingAll",node:a.parent});}},onCodePathSegmentStart:function(e){if(n&&n.isConstructor&&n.hasExtends){var a=i[e.id]={calledInSomePaths:!1,calledInEveryPaths:!1,validNodes:[]},o=e.prevSegments;0<o.length&&(a.calledInSomePaths=o.some(t),a.calledInEveryPaths=o.every(r));}},onCodePathSegmentLoop:function(a,o){if(n&&n.isConstructor&&n.hasExtends){var s=2<=o.prevSegments.length;n.codePath.traverseSegments({first:o,last:a},(function(n){var a=i[n.id],o=n.prevSegments;if(a.calledInSomePaths=o.some(t),a.calledInEveryPaths=o.every(r),a.calledInSomePaths||s){var u=a.validNodes;a.validNodes=[];for(var c=0;c<u.length;++c){var l=u[c];e.report({messageId:"duplicate",node:l});}}}));}},"CallExpression:exit":function(t){if(n&&n.isConstructor&&"Super"===t.callee.type)if(n.hasExtends){for(var r=n.codePath.currentSegments,a=!1,o=null,s=0;s<r.length;++s){var u=r[s];u.reachable&&(o=i[u.id],a=a||o.calledInSomePaths,o.calledInSomePaths=o.calledInEveryPaths=!0);}o&&(a?e.report({messageId:"duplicate",node:t}):n.superIsConstructor?o.validNodes.push(t):e.report({messageId:"badSuper",node:t}));}else n.codePath.currentSegments.some(bw)&&e.report({messageId:"unexpected",node:t});},ReturnStatement:function(e){if(n&&n.isConstructor&&n.hasExtends&&e.argument)for(var t=n.codePath.currentSegments,r=0;r<t.length;++r){var a=t[r];if(a.reachable){var o=i[a.id];o.calledInSomePaths=o.calledInEveryPaths=!0;}}},"Program:exit":function(){i=Object.create(null);}}}},Sw={meta:{type:"suggestion",docs:{description:"enforce consistent brace style for all control statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/curly"},schema:{anyOf:[{type:"array",items:[{enum:["all"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["multi","multi-line","multi-or-nest"]},{enum:["consistent"]}],minItems:0,maxItems:2}]},fixable:"code",messages:{missingCurlyAfter:"Expected { after '{{name}}'.",missingCurlyAfterCondition:"Expected { after '{{name}}' condition.",unexpectedCurlyAfter:"Unnecessary { after '{{name}}'.",unexpectedCurlyAfterCondition:"Unnecessary { after '{{name}}' condition."}},create:function(e){function t(e){if("EmptyStatement"===e.type)return !0;var t=l.getFirstToken(e),r=l.getLastToken(e),n=LA.isSemicolonToken(r)?l.getTokenBefore(r):r;return t.loc.start.line===n.loc.end.line}function r(e){return "VariableDeclaration"===e.type?"const"===e.kind||"let"===e.kind:"FunctionDeclaration"===e.type||"ClassDeclaration"===e.type}function n(e){return "else"===e.value&&"Keyword"===e.type}function i(e){return e.alternate&&l.getFirstTokenBetween(e.consequent,e.alternate,n)}function a(n,a,c,p){var f="BlockStatement"===a.type,h=null;if("IfStatement"===n.type&&n.consequent===a&&function(e){if(e.alternate&&"BlockStatement"===e.consequent.type){if(2<=e.consequent.body.length)return !0;for(var t=e.consequent.body[0];t;t=LA.getTrailingStatement(t))if("IfStatement"===t.type&&!t.alternate)return !0}return !1}(n))h=!0;else if(o)f&&1===a.body.length&&!r(a.body[0])&&(h=!1);else if(s)(function(e){var t=l.getTokenBefore(e),r=l.getLastToken(e),n=LA.isSemicolonToken(r)?l.getTokenBefore(r):r;return t.loc.start.line===n.loc.end.line})(a)||(h=!0);else if(u)if(f&&1===a.body.length&&t(a.body[0])){var d=l.getCommentsBefore(a.body[0]);h=!!r(a.body[0])||0<d.length;}else t(a)||(h=!0);else h=!0;return {actual:f,expected:h,check:function(){null!==this.expected&&this.expected!==this.actual&&(this.expected?e.report({node:n,loc:("else"===c?i(n):n).loc.start,messageId:p&&p.condition?"missingCurlyAfterCondition":"missingCurlyAfter",data:{name:c},fix:function(e){return e.replaceText(a,"{".concat(l.getText(a),"}"))}}):e.report({node:n,loc:("else"===c?i(n):n).loc.start,messageId:p&&p.condition?"unexpectedCurlyAfterCondition":"unexpectedCurlyAfter",data:{name:c},fix:function(e){var t="DoWhileStatement"===n.type&&l.getTokenBefore(a).range[1]===a.range[0]&&!LA.canTokensBeAdjacent("do",l.getFirstToken(a,{skip:1})),r=l.getFirstToken(a),i=l.getLastToken(a),o=l.getTokenBefore(i);if(function(e){var t=l.getTokenBefore(e),r=l.getTokenAfter(e),n=l.getNodeByRangeIndex(t.range[0]);return !(LA.isSemicolonToken(t)||!r||"BlockStatement"===n.type&&"FunctionExpression"!==n.parent.type&&"ArrowFunctionExpression"!==n.parent.type||t.loc.end.line!==r.loc.start.line&&!/^[\(\+\x2D\/\[`]/.test(r.value)&&("Punctuator"!==t.type||"++"!==t.value&&"--"!==t.value))}(i))return null;var s=l.getText().slice(r.range[1],o.range[0])+l.getText(o)+l.getText().slice(o.range[1],i.range[0]);return e.replaceText(a,(t?" ":"")+s)}}));}}}var o="multi"===e.options[0],s="multi-line"===e.options[0],u="multi-or-nest"===e.options[0],c="consistent"===e.options[1],l=e.getSourceCode();return {IfStatement:function(e){"IfStatement"!==e.parent.type&&function(e){for(var t=[],r=e;r;r=r.alternate)if(t.push(a(r,r.consequent,"if",{condition:!0})),r.alternate&&"IfStatement"!==r.alternate.type){t.push(a(r,r.alternate,"else"));break}if(c){var n=t.some((function(e){return null===e.expected?e.actual:e.expected}));t.forEach((function(e){e.expected=n;}));}return t}(e).forEach((function(e){e.check();}));},WhileStatement:function(e){a(e,e.body,"while",{condition:!0}).check();},DoWhileStatement:function(e){a(e,e.body,"do").check();},ForStatement:function(e){a(e,e.body,"for",{condition:!0}).check();},ForInStatement:function(e){a(e,e.body,"for-in").check();},ForOfStatement:function(e){a(e,e.body,"for-of").check();}}}},kw=/^no default$/i,Dw={meta:{type:"suggestion",docs:{description:"require `default` cases in `switch` statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/default-case"},schema:[{type:"object",properties:{commentPattern:{type:"string"}},additionalProperties:!1}],messages:{missingDefaultCase:"Expected a default case."}},create:function(e){function t(e){return e[e.length-1]}var r=e.options[0]||{},n=r.commentPattern?new RegExp(r.commentPattern,"u"):kw,i=e.getSourceCode();return {SwitchStatement:function(r){if(r.cases.length&&!r.cases.some((function(e){return null===e.test}))){var a,o=t(r.cases),s=i.getCommentsAfter(o);s.length&&(a=t(s)),a&&n.test(a.value.trim())||e.report({node:r,messageId:"missingDefaultCase"});}}}}},Fw={meta:{type:"layout",docs:{description:"enforce consistent newlines before and after dots",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/dot-location"},schema:[{enum:["object","property"]}],fixable:"code",messages:{expectedDotAfterObject:"Expected dot to be on same line as object.",expectedDotBeforeProperty:"Expected dot to be on same line as property."}},create:function(e){function t(t){var r=t.property,a=i.getTokenBefore(r),o=i.getTokenBefore(a),s=i.getText().slice(o.range[1],a.range[0]),u=i.getText().slice(a.range[1],r.range[0]);if(n){if(!LA.isTokenOnSameLine(o,a)){var c=LA.isDecimalIntegerNumericToken(o)?" ":"";e.report({node:t,loc:a.loc,messageId:"expectedDotAfterObject",fix:function(e){return e.replaceTextRange([o.range[1],r.range[0]],"".concat(c,".").concat(s).concat(u))}});}}else LA.isTokenOnSameLine(a,r)||e.report({node:t,loc:a.loc,messageId:"expectedDotBeforeProperty",fix:function(e){return e.replaceTextRange([o.range[1],r.range[0]],"".concat(s).concat(u,"."))}});}var r=e.options[0],n="object"===r||!r,i=e.getSourceCode();return {MemberExpression:function(e){e.computed||t(e);}}}},Aw=["abstract","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with"],ww=/^[\$A-Z_a-z][\$0-9A-Z_a-z]*$/,_w=new Set(["string","boolean"]),Tw={meta:{type:"suggestion",docs:{description:"enforce dot notation whenever possible",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/dot-notation"},schema:[{type:"object",properties:{allowKeywords:{type:"boolean",default:!0},allowPattern:{type:"string",default:""}},additionalProperties:!1}],fixable:"code",messages:{useDot:"[{{key}}] is better written in dot notation.",useBrackets:".{{key}} is a syntax error."}},create:function(e){function t(t,n){if(ww.test(n)&&(a||-1===Aw.indexOf(n+""))&&(!r||!r.test(n))){var i="Literal"===t.property.type?JSON.stringify(n):"`".concat(n,"`");e.report({node:t.property,messageId:"useDot",data:{key:i},fix:function(e){var r=o.getTokenAfter(t.object,LA.isOpeningBracketToken),i=o.getLastToken(t);if(o.getFirstTokenBetween(r,i,{includeComments:!0,filter:LA.isCommentToken}))return null;var a=o.getTokenAfter(i),s=a&&i.range[1]===a.range[0]&&!LA.canTokensBeAdjacent(n+"",a),u=LA.isDecimalInteger(t.object)?" ":"",c=s?" ":"";return e.replaceTextRange([r.range[0],i.range[1]],"".concat(u,".").concat(n).concat(c))}});}}var r,n=e.options[0]||{},a=void 0===n.allowKeywords||n.allowKeywords,o=e.getSourceCode();return n.allowPattern&&(r=new RegExp(n.allowPattern,"u")),{MemberExpression:function(r){r.computed&&"Literal"===r.property.type&&(_w.has(i(r.property.value))||LA.isNullLiteral(r.property))&&t(r,r.property.value),r.computed&&"TemplateLiteral"===r.property.type&&0===r.property.expressions.length&&t(r,r.property.quasis[0].value.cooked),a||r.computed||-1===Aw.indexOf(r.property.name+"")||e.report({node:r.property,messageId:"useBrackets",data:{key:r.property.name},fix:function(e){var t=o.getTokenBefore(r.property),n=o.text.slice(t.range[1],r.property.range[0]);return n.trim()?null:"Identifier"===r.object.type&&"let"===r.object.name?null:e.replaceTextRange([t.range[0],r.property.range[1]],"[".concat(n,'"').concat(r.property.name,'"]'))}});}}}},Pw={meta:{type:"layout",docs:{description:"require or disallow newline at the end of files",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/eol-last"},fixable:"whitespace",schema:[{enum:["always","never","unix","windows"]}],messages:{missing:"Newline required at end of file but not found.",unexpected:"Newline not allowed at end of file."}},create:function(e){return {Program:function(t){var r=e.getSourceCode(),n=r.getText(),i={column:Fy.lodash.last(r.lines).length,line:r.lines.length},a=Fy.lodash.endsWith(n,"\n");if(n.length){var o=e.options[0]||"always",s=!1;"unix"===o&&(o="always"),"windows"===o&&(o="always",s=!0),"always"!==o||a?"never"===o&&a&&e.report({node:t,loc:i,messageId:"unexpected",fix:function(e){var t=/(?:\r?\n)+$/.exec(r.text).index,n=r.text.length;return e.replaceTextRange([t,n],"")}}):e.report({node:t,loc:i,messageId:"missing",fix:function(e){return e.insertTextAfterRange([0,n.length],s?"\r".concat("\n"):"\n")}});}}}}},Iw={meta:{type:"suggestion",docs:{description:"require the use of `===` and `!==`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/eqeqeq"},schema:{anyOf:[{type:"array",items:[{enum:["always"]},{type:"object",properties:{null:{enum:["always","never","ignore"]}},additionalProperties:!1}],additionalItems:!1},{type:"array",items:[{enum:["smart","allow-null"]}],additionalItems:!1}]},fixable:"code",messages:{unexpected:"Expected '{{expectedOperator}}' and instead saw '{{actualOperator}}'."}},create:function(e){function t(e){return "UnaryExpression"===e.type&&"typeof"===e.operator}function r(e){return t(e.left)||t(e.right)}function n(e){return "Literal"===e.left.type&&"Literal"===e.right.type&&i(e.left.value)==i(e.right.value)}function a(t,i){var a=u.getFirstTokenBetween(t.left,t.right,(function(e){return e.value===t.operator}));e.report({node:t,loc:a.loc,messageId:"unexpected",data:{expectedOperator:i,actualOperator:t.operator},fix:function(e){return r(t)||n(t)?e.replaceText(a,i):null}});}var o=e.options[0]||"always",s=e.options[1]||{},u=e.getSourceCode(),c="always"===o?s.null||"always":"ignore";return {BinaryExpression:function(e){var t=function(e){return LA.isNullLiteral(e.right)||LA.isNullLiteral(e.left)}(e);return "=="!==e.operator&&"!="!==e.operator?void("never"===c&&t&&a(e,e.operator.slice(0,-1))):void("smart"===o&&(r(e)||n(e)||t)||!("always"===c)&&t||a(e,"".concat(e.operator,"=")))}}}},Bw={meta:{type:"layout",docs:{description:"require or disallow spacing between function identifiers and their invocations",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/func-call-spacing"},fixable:"whitespace",schema:{anyOf:[{type:"array",items:[{enum:["never"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["always"]},{type:"object",properties:{allowNewlines:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},messages:{unexpected:"Unexpected newline between function name and paren.",missing:"Missing space between function name and paren."}},create:function(e){function t(t,i,o){var s=a.slice(i.range[1],o.range[0]).replace(/\/\*(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\*\//g,""),u=/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/.test(s),c=u&&LA.LINEBREAK_MATCHER.test(s);r&&u?e.report({node:t,loc:i.loc.start,messageId:"unexpected",fix:function(e){return c?null:e.removeRange([i.range[1],o.range[0]])}}):r||u?!r&&!n&&c&&e.report({node:t,loc:i.loc.start,messageId:"unexpected",fix:function(e){return e.replaceTextRange([i.range[1],o.range[0]]," ")}}):e.report({node:t,loc:i.loc.start,messageId:"missing",fix:function(e){return e.insertTextBefore(o," ")}});}var r="always"!==e.options[0],n=!r&&e.options[1]&&e.options[1].allowNewlines,i=e.getSourceCode(),a=i.getText();return {"CallExpression, NewExpression":function(e){var r=i.getLastToken(e),n=i.getLastToken(e.callee),a=i.getFirstTokenBetween(n,r,LA.isOpeningParenToken),o=a&&i.getTokenBefore(a);a&&a.range[1]<e.range[1]&&t(e,o,a);},ImportExpression:function(e){var r=i.getFirstToken(e);t(e,r,i.getTokenAfter(r));}}}};function Ow(e,t){return 6<=t?_A.keyword.isIdentifierES6(e):_A.keyword.isIdentifierES5(e)}var Lw={type:"object",properties:{considerPropertyDescriptor:{type:"boolean"},includeCommonJSModuleExports:{type:"boolean"}},additionalProperties:!1},Nw={meta:{type:"suggestion",docs:{description:"require function names to match the name of the variable or property to which they are assigned",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/func-name-matching"},schema:{anyOf:[{type:"array",additionalItems:!1,items:[{enum:["always","never"]},Lw]},{type:"array",additionalItems:!1,items:[Lw]}]},messages:{matchProperty:"Function name `{{funcName}}` should match property name `{{name}}`.",matchVariable:"Function name `{{funcName}}` should match variable name `{{name}}`.",notMatchProperty:"Function name `{{funcName}}` should not match property name `{{name}}`.",notMatchVariable:"Function name `{{funcName}}` should not match variable name `{{name}}`."}},create:function(e){function t(e,t,r){return !!r&&"CallExpression"===r.type&&"MemberExpression"===r.callee.type&&r.callee.object.name===e&&r.callee.property.name===t}function r(e,t){return "always"===s&&e!==t||"never"===s&&e===t}function n(t,r,n,i){var a;a="always"===s&&i?"matchProperty":"always"===s?"matchVariable":i?"notMatchProperty":"notMatchVariable",e.report({node:t,messageId:a,data:{name:r,funcName:n}});}function a(e){return "Literal"===e.type&&"string"==typeof e.value}var o=("object"==i(e.options[0])?e.options[0]:e.options[1])||{},s="string"==typeof e.options[0]?e.options[0]:"always",u=o.considerPropertyDescriptor,c=o.includeCommonJSModuleExports,l=e.parserOptions&&e.parserOptions.ecmaVersion?e.parserOptions.ecmaVersion:5;return {VariableDeclarator:function(e){!e.init||"FunctionExpression"!==e.init.type||"Identifier"!==e.id.type||e.init.id&&r(e.id.name,e.init.id.name)&&n(e,e.id.name,e.init.id.name,!1);},AssignmentExpression:function(e){if(!("FunctionExpression"!==e.right.type||e.left.computed&&"Literal"!==e.left.property.type||!c&&function(e){if("MemberExpression"===e.type&&"Identifier"===e.object.type&&"module"===e.object.name){if("Identifier"===e.property.type&&"exports"===e.property.name)return !0;if("Literal"===e.property.type&&"exports"===e.property.value)return !0}return !1}(e.left)||"Identifier"!==e.left.type&&"MemberExpression"!==e.left.type)){var t="MemberExpression"===e.left.type,i=t?LA.getStaticPropertyName(e.left):e.left.name;e.right.id&&Ow(i)&&r(i,e.right.id.name)&&n(e,i,e.right.id.name,t);}},Property:function(e){if("FunctionExpression"===e.value.type&&e.value.id&&(!e.computed||a(e.key))){if("Identifier"===e.key.type){var i=e.value.id.name,o=e.key.name;if(u&&"value"===o)if(t("Object","defineProperty",e.parent.parent)||t("Reflect","defineProperty",e.parent.parent)){var s=e.parent.parent.arguments[1];a(s)&&r(s.value,i)&&n(e,s.value,i,!0);}else t("Object","defineProperties",e.parent.parent.parent.parent)?(o=e.parent.parent.key.name,!e.parent.parent.computed&&r(o,i)&&n(e,o,i,!0)):t("Object","create",e.parent.parent.parent.parent)?(o=e.parent.parent.key.name,!e.parent.parent.computed&&r(o,i)&&n(e,o,i,!0)):r(o,i)&&n(e,o,i,!0);else r(o,i)&&n(e,o,i,!0);return}a(e.key)&&Ow(e.key.value,l)&&r(e.key.value,e.value.id.name)&&n(e,e.key.value,e.value.id.name,!0);}}}}};var jw={meta:{type:"suggestion",docs:{description:"require or disallow named `function` expressions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/func-names"},schema:{definitions:{value:{enum:["always","as-needed","never"]}},items:[{$ref:"#/definitions/value"},{type:"object",properties:{generators:{$ref:"#/definitions/value"}},additionalProperties:!1}]},messages:{unnamed:"Unexpected unnamed {{name}}.",named:"Unexpected named {{name}}."}},create:function(e){function t(e){var t=e.parent;return "MethodDefinition"===t.type||"Property"===t.type&&(t.method||"get"===t.kind||"set"===t.kind)}function r(t){e.report({node:t,messageId:"unnamed",loc:LA.getFunctionHeadLoc(t,i),data:{name:LA.getFunctionNameWithKind(t)}});}function n(t){e.report({node:t,messageId:"named",loc:LA.getFunctionHeadLoc(t,i),data:{name:LA.getFunctionNameWithKind(t)}});}var i=e.getSourceCode();return {"FunctionExpression:exit":function(i){var a=e.getDeclaredVariables(i)[0];if(!(function(e){return e&&"FunctionName"===e.defs[0].type}(a)&&0<a.references.length)){var o=!(!i.id||!i.id.name),s=function(t){return t.generator&&1<e.options.length&&e.options[1].generators?e.options[1].generators:e.options[0]||"always"}(i);"never"===s?o&&n(i):"as-needed"===s?!o&&!function(e){var r=e.parent;return t(e)||"VariableDeclarator"===r.type&&"Identifier"===r.id.type&&r.init===e||"Property"===r.type&&r.value===e||"AssignmentExpression"===r.type&&"Identifier"===r.left.type&&r.right===e||"ExportDefaultDeclaration"===r.type&&r.declaration===e||"AssignmentPattern"===r.type&&r.right===e}(i)&&r(i):!o&&!t(i)&&r(i);}}}}},Rw={meta:{type:"layout",docs:{description:"enforce consistent line breaks inside function parentheses",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/function-paren-newline"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never","consistent","multiline","multiline-arguments"]},{type:"object",properties:{minItems:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{expectedBefore:"Expected newline before ')'.",expectedAfter:"Expected newline after '('.",expectedBetween:"Expected newline between arguments/params.",unexpectedBefore:"Unexpected newline before ')'.",unexpectedAfter:"Unexpected newline after '('."}},create:function(e){function t(e,t){return p&&1===e.length?t:l||p?e.some((function(t,r){return r!==e.length-1&&t.loc.end.line!==e[r+1].loc.start.line})):f?t:e.length>=o}function r(r,n){var i=r.leftParen,a=r.rightParen,o=s.getTokenAfter(i),u=s.getTokenBefore(a),c=!LA.isTokenOnSameLine(i,o),l=!LA.isTokenOnSameLine(u,a),p=t(n,c);c&&!p?e.report({node:i,messageId:"unexpectedAfter",fix:function(e){return s.getText().slice(i.range[1],o.range[0]).trim()?null:e.removeRange([i.range[1],o.range[0]])}}):!c&&p&&e.report({node:i,messageId:"expectedAfter",fix:function(e){return e.insertTextAfter(i,"\n")}}),l&&!p?e.report({node:a,messageId:"unexpectedBefore",fix:function(e){return s.getText().slice(u.range[1],a.range[0]).trim()?null:e.removeRange([u.range[1],a.range[0]])}}):!l&&p&&e.report({node:a,messageId:"expectedBefore",fix:function(e){return e.insertTextBefore(a,"\n")}});}function n(r,n){for(var i=r.leftParen,a=s.getTokenAfter(i),o=!LA.isTokenOnSameLine(i,a),u=t(n,o),c=function(t){var r=n[t],i=n[t+1];!(r.loc.end.line!==i.loc.start.line)&&u&&e.report({node:r,messageId:"expectedBetween",fix:function(e){return e.insertTextBefore(i,"\n")}});},l=0;l<=n.length-2;l++)c(l);}function a(e){switch(e.type){case"NewExpression":if(!(e.arguments.length||LA.isOpeningParenToken(s.getLastToken(e,{skip:1}))&&LA.isClosingParenToken(s.getLastToken(e))))return null;case"CallExpression":return {leftParen:s.getTokenAfter(e.callee,LA.isOpeningParenToken),rightParen:s.getLastToken(e)};case"FunctionDeclaration":case"FunctionExpression":var t=s.getFirstToken(e,LA.isOpeningParenToken);return {leftParen:t,rightParen:e.params.length?s.getTokenAfter(e.params[e.params.length-1],LA.isClosingParenToken):s.getTokenAfter(t)};case"ArrowFunctionExpression":var r=s.getFirstToken(e);return LA.isOpeningParenToken(r)?{leftParen:r,rightParen:s.getTokenBefore(e.body,LA.isClosingParenToken)}:null;case"ImportExpression":return {leftParen:s.getFirstToken(e,1),rightParen:s.getLastToken(e)};default:throw new TypeError("unexpected node with type ".concat(e.type))}}var o,s=e.getSourceCode(),c=e.options[0]||"multiline",l="multiline"===c,p="multiline-arguments"===c,f="consistent"===c;return o="object"==i(c)?c.minItems:"always"===c?0:"never"===c?1/0:null,u({},["ArrowFunctionExpression","CallExpression","FunctionDeclaration","FunctionExpression","ImportExpression","NewExpression"],(function(e){var t,i=a(e);t="ImportExpression"===e.type?[e.source]:LA.isFunction(e)?e.params:e.arguments,i&&(r(i,t),p&&n(i,t));}))}},Mw={oneOf:[{enum:["before","after","both","neither"]},{type:"object",properties:{before:{type:"boolean"},after:{type:"boolean"}},additionalProperties:!1}]},Vw={meta:{type:"layout",docs:{description:"enforce consistent spacing around `*` operators in generator functions",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/generator-star-spacing"},fixable:"whitespace",schema:[{oneOf:[{enum:["before","after","both","neither"]},{type:"object",properties:{before:{type:"boolean"},after:{type:"boolean"},named:Mw,anonymous:Mw,method:Mw},additionalProperties:!1}]}],messages:{missingBefore:"Missing space before *.",missingAfter:"Missing space after *.",unexpectedBefore:"Unexpected space before *.",unexpectedAfter:"Unexpected space after *."}},create:function(e){function t(e,t){return e?"string"==typeof e?o[e]:Object.assign({},t,e):t}function r(e){return "*"===e.value&&"Punctuator"===e.type}function n(e){return u.getFirstToken(e.parent.method||"MethodDefinition"===e.parent.type?e.parent:e,r)}function i(t,r,n,i){if(!!(i.range[0]-n.range[1])!==s[t][r]){var a="*"===n.value,o=s[t][r],u=a?n:i,c="".concat(o?"missing":"unexpected").concat(function(e){return e[0].toUpperCase()+e.slice(1)}(r));e.report({node:u,messageId:c,fix:function(e){return o?a?e.insertTextAfter(u," "):e.insertTextBefore(u," "):e.removeRange([n.range[1],i.range[0]])}});}}function a(e){if(e.generator){var t=n(e),r=u.getTokenBefore(t),a=u.getTokenAfter(t),o="named";"MethodDefinition"===e.parent.type||"Property"===e.parent.type&&e.parent.method?o="method":!e.id&&(o="anonymous"),"method"==o&&t===u.getFirstToken(e.parent)||i(o,"before",r,t),i(o,"after",t,a);}}var o={before:{before:!0,after:!1},after:{before:!1,after:!0},both:{before:!0,after:!0},neither:{before:!1,after:!1}},s=function(e){var r=t(e,o.before);return {named:t(e.named,r),anonymous:t(e.anonymous,r),method:t(e.method,r)}}(e.options[0]||{}),u=e.getSourceCode();return {FunctionDeclaration:a,FunctionExpression:a}}},Uw=/^(?:Arrow)?FunctionExpression$/;function qw(e){return e.reachable}function Ww(e){return e.id||e}var $w={meta:{type:"problem",docs:{description:"enforce `return` statements in getters",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/getter-return"},fixable:null,schema:[{type:"object",properties:{allowImplicit:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{expected:"Expected to return a value in {{name}}.",expectedAlways:"Expected {{name}} to always return a value."}},create:function(e){function t(t){i.shouldCheck&&i.codePath.currentSegments.some(qw)&&e.report({node:t,loc:Ww(t).loc.start,messageId:i.hasReturn?"expectedAlways":"expected",data:{name:LA.getFunctionNameWithKind(i.node)}});}function r(e){var t=e.parent;if(Uw.test(e.type)&&"BlockStatement"===e.body.type){if("get"===t.kind)return !0;if("Property"===t.type&&"get"===LA.getStaticPropertyName(t)&&"ObjectExpression"===t.parent.type){if("CallExpression"===t.parent.parent.type&&"defineProperty"===LA.getStaticPropertyName(t.parent.parent.callee))return !0;if("Property"===t.parent.parent.type&&"ObjectExpression"===t.parent.parent.parent.type&&"CallExpression"===t.parent.parent.parent.parent.type&&"defineProperties"===LA.getStaticPropertyName(t.parent.parent.parent.parent.callee))return !0}}return !1}var n=e.options[0]||{allowImplicit:!1},i={upper:null,codePath:null,hasReturn:!1,shouldCheck:!1,node:null};return {onCodePathStart:function(e,t){i={upper:i,codePath:e,hasReturn:!1,shouldCheck:r(t),node:t};},onCodePathEnd:function(){i=i.upper;},ReturnStatement:function(t){i.shouldCheck&&(i.hasReturn=!0,!n.allowImplicit&&!t.argument&&e.report({node:t,messageId:"expected",data:{name:LA.getFunctionNameWithKind(i.node)}}));},"FunctionExpression:exit":t,"ArrowFunctionExpression:exit":t}}},Gw=["AssignmentExpression","VariableDeclarator","MemberExpression","ExpressionStatement","CallExpression","ConditionalExpression","Program","VariableDeclaration"];var zw={meta:{type:"suggestion",docs:{description:"require `require()` calls to be placed at top-level module scope",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/global-require"},schema:[],messages:{unexpected:"Unexpected require()."}},create:function(e){return {CallExpression:function(t){var r=e.getScope();"require"!==t.callee.name||function(e,t){var r=function(e,t){var r=e.references.filter((function(e){return e.identifier.range[0]===t.range[0]&&e.identifier.range[1]===t.range[1]}));return 1===r.length?r[0]:null}(e,t);return r&&r.resolved&&0<r.resolved.defs.length}(r,t.callee)||(e.getAncestors().every((function(e){return -1<Gw.indexOf(e.type)}))||e.report({node:t,messageId:"unexpected"}));}}}};function Hw(e){return "get"===e.kind||"set"===e.kind}var Kw={meta:{type:"suggestion",docs:{description:"require grouped accessor pairs in object literals and classes",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/grouped-accessor-pairs"},schema:[{enum:["anyOrder","getBeforeSet","setBeforeGet"]}],messages:{notGrouped:"Accessor pair {{ formerName }} and {{ latterName }} should be grouped.",invalidOrder:"Expected {{ latterName }} to be before {{ formerName }}."}},create:function(e){function t(t,r,n){e.report({node:n,messageId:t,loc:LA.getFunctionHeadLoc(n.value,o),data:{formerName:LA.getFunctionNameWithKind(r.value),latterName:LA.getFunctionNameWithKind(n.value)}});}function r(e){var t=LA.getStaticPropertyName(e);return {key:null===t?o.getTokens(e.key):t,getters:"get"===e.kind?[e]:[],setters:"set"===e.kind?[e]:[]}}function n(e,t){var r,n,i=e.find((function(e){return function(e,t){return "string"==typeof e&&"string"==typeof t?e==t:!(!Array.isArray(e)||!Array.isArray(t))&&function(e,t){if(e.length!==t.length)return !1;for(var r=0;r<e.length;r++){var n=e[r],i=t[r];if(n.type!==i.type||n.value!==i.value)return !1}return !0}(e,t)}(e.key,t.key)}));return i?((r=i.getters).push.apply(r,E(t.getters)),(n=i.setters).push.apply(n,E(t.setters))):e.push(t),e}function i(e,i){var o=e.filter(i).filter(Hw).map(r).reduce(n,[]),s=!0,u=!1,c=void 0;try{for(var l,p=o[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var f=l.value,h=f.getters,d=f.setters;if(1===h.length&&1===d.length){var m=b(h,1)[0],g=b(d,1)[0],y=e.indexOf(m),v=e.indexOf(g),x=y<v?m:g,E=y<v?g:m;1<Math.abs(y-v)?t("notGrouped",x,E):("getBeforeSet"===a&&y>v||"setBeforeGet"===a&&y<v)&&t("invalidOrder",x,E);}}}catch(e){u=!0,c=e;}finally{try{s||null==p.return||p.return();}finally{if(u)throw c}}}var a=e.options[0]||"anyOrder",o=e.getSourceCode();return {ObjectExpression:function(e){i(e.properties,(function(e){return "Property"===e.type}));},ClassBody:function(e){i(e.body,(function(e){return "MethodDefinition"===e.type&&!e.static})),i(e.body,(function(e){return "MethodDefinition"===e.type&&e.static}));}}}},Jw={meta:{type:"suggestion",docs:{description:"require error handling in callbacks",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/handle-callback-err"},schema:[{type:"string"}],messages:{expected:"Expected error to be handled."}},create:function(e){function t(e){return function(e){return "^"===e[0]}(n)?new RegExp(n,"u").test(e):e===n}function r(r){var n=function(e){return e.variables.filter((function(e){return e.defs[0]&&"Parameter"===e.defs[0].type}))}(e.getScope())[0];n&&t(n.name)&&0===n.references.length&&e.report({node:r,messageId:"expected"});}var n=e.options[0]||"err";return {FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}}},Qw={meta:{type:"suggestion",docs:{description:"require identifiers to match a specified regular expression",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/id-match"},schema:[{type:"string"},{type:"object",properties:{properties:{type:"boolean",default:!1},onlyDeclarations:{type:"boolean",default:!1},ignoreDestructuring:{type:"boolean",default:!1}}}],messages:{notMatch:"Identifier '{{name}}' does not match the pattern '{{pattern}}'."}},create:function(e){function t(e){return !a.test(e)}function r(e,r){return (!u||f.has(e.type))&&!p.has(e.type)&&t(r)}function n(t){l.has(t)||(e.report({node:t,messageId:"notMatch",data:{name:t.name,pattern:i}}),l.set(t,!0));}var i=e.options[0]||"^.+$",a=new RegExp(i,"u"),o=e.options[1]||{},s=!!o.properties,u=!!o.onlyDeclarations,c=!!o.ignoreDestructuring,l=new Map,p=new Set(["CallExpression","NewExpression"]),f=new Set(["FunctionDeclaration","VariableDeclarator"]),h=new Set(["ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier"]);return {Identifier:function(e){var i=e.name,a=e.parent,o="MemberExpression"===a.type?a.parent:a;if("MemberExpression"===a.type){if(!s)return;"Identifier"===a.object.type&&a.object.name===i?t(i)&&n(e):"AssignmentExpression"===o.type&&"MemberExpression"===o.left.type&&o.left.property.name===e.name?t(i)&&n(e):"AssignmentExpression"===o.type&&"MemberExpression"!==o.right.type&&t(i)&&n(e);}else if("Property"===a.type||"AssignmentPattern"===a.type){if(a.parent&&"ObjectPattern"===a.parent.type){a.shorthand&&a.value.left&&t(i)&&n(e);var u=a.key.name===a.value.name;if(!u&&a.key===e)return;a.value.name&&t(i)&&(!u||!c)&&n(e);}if(!s||c&&function(e){for(var t=e.parent;t;){if("ObjectPattern"===t.type)return !0;t=t.parent;}return !1}(e))return;a.right!==e&&r(o,i)&&n(e);}else h.has(a.type)?a.local&&a.local.name===e.name&&t(i)&&n(e):r(o,i)&&n(e);}}}},Xw=LA.isCommentToken,Yw=LA.isNotOpeningParenToken,Zw={meta:{type:"layout",docs:{description:"enforce the location of arrow function bodies",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/implicit-arrow-linebreak"},fixable:"whitespace",schema:[{enum:["beside","below"]}],messages:{expected:"Expected a linebreak before this expression.",unexpected:"Expected no linebreak before this expression."}},create:function(e){function t(t){if("BlockStatement"!==t.body.type){var i=r.getTokenBefore(t.body,Yw),a=r.getTokenAfter(i);i.loc.end.line===a.loc.start.line&&"below"===n?e.report({node:a,messageId:"expected",fix:function(e){return e.insertTextBefore(a,"\n")}}):i.loc.end.line!==a.loc.start.line&&"beside"===n&&e.report({node:a,messageId:"unexpected",fix:function(e){return r.getFirstTokenBetween(i,a,{includeComments:!0,filter:Xw})?null:e.replaceTextRange([i.range[1],a.range[0]]," ")}});}}var r=e.getSourceCode(),n=e.options[0]||"beside";return {ArrowFunctionExpression:function(e){return t(e)}}}},e_={meta:{type:"layout",docs:{description:"enforce consistent indentation",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/indent-legacy"},deprecated:!0,replacedBy:["indent"],fixable:"whitespace",schema:[{oneOf:[{enum:["tab"]},{type:"integer",minimum:0}]},{type:"object",properties:{SwitchCase:{type:"integer",minimum:0},VariableDeclarator:{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{var:{type:"integer",minimum:0},let:{type:"integer",minimum:0},const:{type:"integer",minimum:0}}}]},outerIIFEBody:{type:"integer",minimum:0},MemberExpression:{type:"integer",minimum:0},FunctionDeclaration:{type:"object",properties:{parameters:{oneOf:[{type:"integer",minimum:0},{enum:["first"]}]},body:{type:"integer",minimum:0}}},FunctionExpression:{type:"object",properties:{parameters:{oneOf:[{type:"integer",minimum:0},{enum:["first"]}]},body:{type:"integer",minimum:0}}},CallExpression:{type:"object",properties:{parameters:{oneOf:[{type:"integer",minimum:0},{enum:["first"]}]}}},ArrayExpression:{oneOf:[{type:"integer",minimum:0},{enum:["first"]}]},ObjectExpression:{oneOf:[{type:"integer",minimum:0},{enum:["first"]}]}},additionalProperties:!1}],messages:{expected:"Expected indentation of {{expected}} but found {{actual}}."}},create:function(e){function t(e,t,r){var n="".concat(e," ").concat(x).concat(1===e?"":"s"),i="space".concat(1===t?"":"s"),a="tab".concat(1===r?"":"s");return {expected:n,actual:0<t&&0<r?"".concat(t," ").concat(i," and ").concat(r," ").concat(a):0<t?"space"===x?t:"".concat(t," ").concat(i):0<r?"tab"===x?r:"".concat(r," ").concat(a):"0"}}function r(r,n,i,a,o,s){if(!i||!a){var u=("space"===x?" ":"\t").repeat(n),c=s?[r.range[1]-r.loc.end.column,r.range[1]-r.loc.end.column+i+a]:[r.range[0]-r.loc.start.column,r.range[0]-r.loc.start.column+i+a];e.report({node:r,loc:o,messageId:"expected",data:t(n,i,a),fix:function(e){return e.replaceTextRange(c,u)}});}}function n(e,t){var r=t?C.getLastToken(e):C.getFirstToken(e),n=C.getText(r,r.loc.start.column).split(""),i=n.slice(0,n.findIndex((function(e){return " "!==e&&"\t"!==e}))),a=i.filter((function(e){return " "===e})).length,o=i.filter((function(e){return "\t"===e})).length;return {space:a,tab:o,goodChar:"space"===x?a:o,badChar:"space"===x?o:a}}function a(e,t){var r=!0===t?C.getLastToken(e,1):C.getTokenBefore(e);return (!0===t?e.loc.end.line:e.loc.start.line)!==(r?r.loc.end.line:-1)}function o(e,t){var i=n(e,!1);("ArrayExpression"!==e.type&&"ObjectExpression"!==e.type&&(i.goodChar!==t||0!==i.badChar)&&a(e)&&r(e,t,i.space,i.tab),"IfStatement"===e.type&&e.alternate)&&(o(C.getTokenBefore(e.alternate),t),a(e.alternate)||o(e.alternate,t));"TryStatement"===e.type&&e.handler&&o(C.getFirstToken(e.handler),t);"TryStatement"===e.type&&e.finalizer&&o(C.getTokenBefore(e.finalizer),t);"DoWhileStatement"===e.type&&o(C.getTokenAfter(e.body),t);}function s(e,t){e.forEach((function(e){return o(e,t)}));}function u(e,t){var i=C.getLastToken(e),o=n(i,!0);(o.goodChar!==t||0!==o.badChar)&&a(e,!0)&&r(e,t,o.space,o.tab,{line:i.loc.start.line,column:i.loc.start.column},!0);}function c(e,t){var i=n(e,!1);(i.goodChar!==t||0!==i.badChar)&&a(e)&&r(e,t,i.space,i.tab,{line:e.loc.start.line,column:e.loc.start.column});}function l(e,t,r){for(var n=e.parent,i=new Set(r||["Program"]);n.type!==t&&!i.has(n.type)&&"Program"!==n.type;)n=n.parent;return n.type===t?n:null}function p(e){return l(e,"VariableDeclarator")}function f(e,t){return t&&t.parent.loc.start.line===e.loc.start.line&&1<t.parent.declarations.length}function h(e){var t=C.getLastToken(e);return e.loc.start.line===t.loc.end.line}function d(e){if(!h(e)){var t,r,i="ArrayExpression"===e.type?e.elements:e.properties;i=i.filter((function(e){return null!==e}));var o=p(e);if(a(e)){var l=e.parent;if(t=n(l).goodChar,o&&o.loc.start.line===e.loc.start.line)o||function(e){return !("ArrayExpression"!==e.type||!e.elements[0])&&e.elements[0].loc.start.line===e.loc.start.line&&"ObjectExpression"===e.elements[0].type}(l)||"MemberExpression"===l.type||"ExpressionStatement"===l.type||"AssignmentExpression"===l.type||"Property"===l.type||(t+=b);else if("VariableDeclarator"!==l.type||o===o.parent.declarations[0])if("VariableDeclarator"===l.type&&o.loc.start.line===l.loc.start.line)t+=b*E.VariableDeclarator[o.parent.kind];else if("ObjectExpression"===l.type||"ArrayExpression"===l.type){var d="ObjectExpression"===e.parent.type?e.parent.properties:e.parent.elements;d[0]&&d[0].loc.start.line===l.loc.start.line&&d[0].loc.end.line!==l.loc.start.line||("number"==typeof E[l.type]?t+=E[l.type]*b:t=d[0].loc.start.column);}else "CallExpression"===l.type||"NewExpression"===l.type?"number"==typeof E.CallExpression.arguments?t+=E.CallExpression.arguments*b:"first"===E.CallExpression.arguments?-1!==l.arguments.indexOf(e)&&(t=l.arguments[0].loc.start.column):t+=b:("LogicalExpression"===l.type||"ArrowFunctionExpression"===l.type)&&(t+=b);c(e,t);}else t=n(e).goodChar;r="first"===E[e.type]?i.length?i[0].loc.start.column:0:t+b*E[e.type],f(e,o)&&(r+=b*E.VariableDeclarator[o.parent.kind]),s(i,r),0<i.length&&i[i.length-1].loc.end.line===e.loc.end.line||u(e,t+(f(e,o)?E.VariableDeclarator[o.parent.kind]*b:0));}}function m(e){if(!h(e))if(!e.parent||"FunctionExpression"!==e.parent.type&&"FunctionDeclaration"!==e.parent.type&&"ArrowFunctionExpression"!==e.parent.type){var t,r;r=e.parent&&-1!==["IfStatement","WhileStatement","ForStatement","ForInStatement","ForOfStatement","DoWhileStatement","ClassDeclaration","TryStatement"].indexOf(e.parent.type)&&function(e){return "BlockStatement"===e.type||"ClassBody"===e.type||e.body&&"BlockStatement"===e.body.type||e.consequent&&"BlockStatement"===e.consequent.type}(e)?n(e.parent).goodChar:e.parent&&"CatchClause"===e.parent.type?n(e.parent.parent).goodChar:n(e).goodChar,0<(t="IfStatement"===e.type&&"BlockStatement"!==e.consequent.type?[e.consequent]:Array.isArray(e.body)?e.body:[e.body]).length&&s(t,r+b),"BlockStatement"===e.type&&u(e,r);}else !function(e){var t,r=e.parent;if(t=!r.parent||"Property"!==r.parent.type&&"ArrayExpression"!==r.parent.type?n(r).goodChar:n(r,!1).goodChar,"CallExpression"===r.parent.type){var i=r.parent;"FunctionExpression"!==r.type&&"ArrowFunctionExpression"!==r.type?i&&i.loc.start.line<e.loc.start.line&&(t=n(i).goodChar):function(e){var t=e.parent;return !!(2<=t.arguments.length&&t.arguments[1]===e)&&t.arguments[0].loc.end.line>t.arguments[0].loc.start.line}(r)&&i.callee.loc.start.line===i.callee.loc.end.line&&!a(r)&&(t=n(i).goodChar);}var o=b;null!==E.outerIIFEBody&&function(e){var t=e.parent,r=t.parent;if("CallExpression"!==t.type||t.callee!==e)return !1;for(;"UnaryExpression"===r.type&&("!"===r.operator||"~"===r.operator||"+"===r.operator||"-"===r.operator)||"AssignmentExpression"===r.type||"LogicalExpression"===r.type||"SequenceExpression"===r.type||"VariableDeclarator"===r.type;)r=r.parent;return ("ExpressionStatement"===r.type||"VariableDeclaration"===r.type)&&r.parent&&"Program"===r.parent.type}(r)?o=E.outerIIFEBody*b:"FunctionExpression"===r.type?o=E.FunctionExpression.body*b:"FunctionDeclaration"===r.type&&(o=E.FunctionDeclaration.body*b),t+=o;var c=p(e);c&&f(e,c)&&(t+=b*E.VariableDeclarator[c.parent.kind]),0<e.body.length&&s(e.body,t),u(e,t-o);}(e);}function g(e){"BlockStatement"!==e.body.type&&m(e);}function y(e,t){var r,i="SwitchStatement"===e.type?e:e.parent,a=void 0===t?n(i).goodChar:t;return D[i.loc.start.line]?D[i.loc.start.line]:(r=0<i.cases.length&&0===E.SwitchCase?a:a+b*E.SwitchCase,D[i.loc.start.line]=r,r)}var v=null,x="space",b=4,E={SwitchCase:0,VariableDeclarator:{var:1,let:1,const:1},outerIIFEBody:null,FunctionDeclaration:{parameters:v,body:1},FunctionExpression:{parameters:v,body:1},CallExpression:{arguments:v},ArrayExpression:1,ObjectExpression:1},C=e.getSourceCode();if(e.options.length&&("tab"===e.options[0]?(b=1,x="tab"):"number"==typeof e.options[0]&&(b=e.options[0],x="space"),e.options[1])){var S=e.options[1];E.SwitchCase=S.SwitchCase||0;var k=S.VariableDeclarator;"number"==typeof k?E.VariableDeclarator={var:k,let:k,const:k}:"object"==i(k)&&Object.assign(E.VariableDeclarator,k),"number"==typeof S.outerIIFEBody&&(E.outerIIFEBody=S.outerIIFEBody),"number"==typeof S.MemberExpression&&(E.MemberExpression=S.MemberExpression),"object"==i(S.FunctionDeclaration)&&Object.assign(E.FunctionDeclaration,S.FunctionDeclaration),"object"==i(S.FunctionExpression)&&Object.assign(E.FunctionExpression,S.FunctionExpression),"object"==i(S.CallExpression)&&Object.assign(E.CallExpression,S.CallExpression),("number"==typeof S.ArrayExpression||"string"==typeof S.ArrayExpression)&&(E.ArrayExpression=S.ArrayExpression),("number"==typeof S.ObjectExpression||"string"==typeof S.ObjectExpression)&&(E.ObjectExpression=S.ObjectExpression);}var D={};return {Program:function(e){0<e.body.length&&s(e.body,n(e).goodChar);},ClassBody:m,BlockStatement:m,WhileStatement:g,ForStatement:g,ForInStatement:g,ForOfStatement:g,DoWhileStatement:g,IfStatement:function(e){"BlockStatement"!==e.consequent.type&&e.consequent.loc.start.line>e.loc.start.line&&m(e);},VariableDeclaration:function(e){e.declarations[e.declarations.length-1].loc.start.line>e.declarations[0].loc.start.line&&function(e){var t=function(e){return e.declarations.reduce((function(t,r){var n=t[t.length-1];return (r.loc.start.line!==e.loc.start.line&&!n||n&&n.loc.start.line!==r.loc.start.line)&&t.push(r),t}),[])}(e),r=n(e).goodChar,i=t[t.length-1],a=r+b*E.VariableDeclarator[e.kind];if(s(t,a),!(C.getLastToken(e).loc.end.line<=i.loc.end.line)){var o=C.getTokenBefore(i);","===o.value?u(e,n(o).goodChar):u(e,a-b);}}(e);},ObjectExpression:function(e){d(e);},ArrayExpression:function(e){d(e);},MemberExpression:function(e){if(void 0!==E.MemberExpression&&!h(e)&&!l(e,"VariableDeclarator",["FunctionExpression","ArrowFunctionExpression"])&&!l(e,"AssignmentExpression",["FunctionExpression"])){var t=n(e).goodChar+b*E.MemberExpression,r=[e.property],i=C.getTokenBefore(e.property);"Punctuator"===i.type&&"."===i.value&&r.push(i),s(r,t);}},SwitchStatement:function(e){var t=n(e).goodChar,r=y(e,t);s(e.cases,r),u(e,t);},SwitchCase:function(e){if(!h(e)){var t=y(e);s(e.consequent,t+b);}},FunctionDeclaration:function(e){h(e)||("first"===E.FunctionDeclaration.parameters&&e.params.length?s(e.params.slice(1),e.params[0].loc.start.column):null!==E.FunctionDeclaration.parameters&&s(e.params,n(e).goodChar+b*E.FunctionDeclaration.parameters));},FunctionExpression:function(e){h(e)||("first"===E.FunctionExpression.parameters&&e.params.length?s(e.params.slice(1),e.params[0].loc.start.column):null!==E.FunctionExpression.parameters&&s(e.params,n(e).goodChar+b*E.FunctionExpression.parameters));},ReturnStatement:function(e){if(!h(e)){var t=n(e).goodChar;!function(e){var t=C.getText(e).replace(C.getText(e.argument),"");return /^return[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*?\([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*?\);*?/.test(t)}(e)?o(e,t):function(e,t){var i=C.getLastToken(e,LA.isClosingParenToken);if(!C.getText(i,i.loc.start.column).slice(0,-1).trim()){var a=n(i,!0);a.goodChar!==t&&r(e,t,a.space,a.tab,{line:i.loc.start.line,column:i.loc.start.column},!0);}}(e,t);}},CallExpression:function(e){h(e)||("first"===E.CallExpression.arguments&&e.arguments.length?s(e.arguments.slice(1),e.arguments[0].loc.start.column):null!==E.CallExpression.arguments&&s(e.arguments,n(e).goodChar+b*E.CallExpression.arguments));}}}},t_=new Set(["AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExperimentalRestProperty","ExperimentalSpreadProperty","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","JSXFragment","JSXOpeningFragment","JSXClosingFragment","JSXIdentifier","JSXNamespacedName","JSXMemberExpression","JSXEmptyExpression","JSXExpressionContainer","JSXElement","JSXClosingElement","JSXOpeningElement","JSXAttribute","JSXSpreadAttribute","JSXText","ExportDefaultDeclaration","ExportNamedDeclaration","ExportAllDeclaration","ExportSpecifier","ImportDeclaration","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportExpression"]),r_=function(){function e(){a(this,e),this._rbTree=TA();}return s(e,[{key:"insert",value:function(e,t){var r=this._rbTree.find(e);this._rbTree=r.valid?r.update(t):this._rbTree.insert(e,t);}},{key:"findLe",value:function(e){var t=this._rbTree.le(e);return t&&{key:t.key,value:t.value}}},{key:"deleteRange",value:function(e,t){if(e!==t)for(var r=this._rbTree.ge(e);r.valid&&r.key<t;)this._rbTree=this._rbTree.remove(r.key),r.next();}}]),e}(),n_=function(){function e(t){a(this,e),this.sourceCode=t,this.firstTokensByLineNumber=t.tokensAndComments.reduce((function(e,r){return e.has(r.loc.start.line)||e.set(r.loc.start.line,r),!e.has(r.loc.end.line)&&t.text.slice(r.range[1]-r.loc.end.column,r.range[1]).trim()&&e.set(r.loc.end.line,r),e}),new Map);}return s(e,[{key:"getFirstTokenOfLine",value:function(e){return this.firstTokensByLineNumber.get(e.loc.start.line)}},{key:"isFirstTokenOfLine",value:function(e){return this.getFirstTokenOfLine(e)===e}},{key:"getTokenIndent",value:function(e){return this.sourceCode.text.slice(e.range[0]-e.loc.start.column,e.range[0])}}]),e}(),i_=function(){function e(t,r,n){a(this,e),this._tokenInfo=t,this._indentSize=r,this._indentType=n,this._tree=new r_,this._tree.insert(0,{offset:0,from:null,force:!1}),this._lockedFirstTokens=new WeakMap,this._desiredIndentCache=new WeakMap,this._ignoredTokens=new WeakSet;}return s(e,[{key:"_getOffsetDescriptor",value:function(e){return this._tree.findLe(e.range[0]).value}},{key:"matchOffsetOf",value:function(e,t){this._lockedFirstTokens.set(t,e);}},{key:"setDesiredOffset",value:function(e,t,r){return this.setDesiredOffsets(e.range,t,r)}},{key:"setDesiredOffsets",value:function(e,t,r,n){var i={offset:r,from:t,force:n},a=this._tree.findLe(e[1]).value,o=t&&t.range[0]>=e[0]&&t.range[1]<=e[1],s=o&&this._getOffsetDescriptor(t);this._tree.deleteRange(e[0]+1,e[1]),this._tree.insert(e[0],i),o&&(this._tree.insert(t.range[0],s),this._tree.insert(t.range[1],i)),this._tree.insert(e[1],a);}},{key:"getDesiredIndent",value:function(e){if(!this._desiredIndentCache.has(e))if(this._ignoredTokens.has(e))this._desiredIndentCache.set(e,this._tokenInfo.getTokenIndent(e));else if(this._lockedFirstTokens.has(e)){var t=this._lockedFirstTokens.get(e);this._desiredIndentCache.set(e,this.getDesiredIndent(this._tokenInfo.getFirstTokenOfLine(t))+this._indentType.repeat(t.loc.start.column-this._tokenInfo.getFirstTokenOfLine(t).loc.start.column));}else {var r=this._getOffsetDescriptor(e),n=!r.from||r.from.loc.start.line!==e.loc.start.line||/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*?\n/.test(e.value)||r.force?r.offset*this._indentSize:0;this._desiredIndentCache.set(e,(r.from?this.getDesiredIndent(r.from):"")+this._indentType.repeat(n));}return this._desiredIndentCache.get(e)}},{key:"ignoreToken",value:function(e){this._tokenInfo.isFirstTokenOfLine(e)&&this._ignoredTokens.add(e);}},{key:"getFirstDependency",value:function(e){return this._getOffsetDescriptor(e).from}}]),e}(),a_={oneOf:[{type:"integer",minimum:0},{enum:["first","off"]}]},o_={meta:{type:"layout",docs:{description:"enforce consistent indentation",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/indent"},fixable:"whitespace",schema:[{oneOf:[{enum:["tab"]},{type:"integer",minimum:0}]},{type:"object",properties:{SwitchCase:{type:"integer",minimum:0,default:0},VariableDeclarator:{oneOf:[a_,{type:"object",properties:{var:a_,let:a_,const:a_},additionalProperties:!1}]},outerIIFEBody:{type:"integer",minimum:0},MemberExpression:{oneOf:[{type:"integer",minimum:0},{enum:["off"]}]},FunctionDeclaration:{type:"object",properties:{parameters:a_,body:{type:"integer",minimum:0}},additionalProperties:!1},FunctionExpression:{type:"object",properties:{parameters:a_,body:{type:"integer",minimum:0}},additionalProperties:!1},CallExpression:{type:"object",properties:{arguments:a_},additionalProperties:!1},ArrayExpression:a_,ObjectExpression:a_,ImportDeclaration:a_,flatTernaryExpressions:{type:"boolean",default:!1},ignoredNodes:{type:"array",items:{type:"string",not:{pattern:":exit$"}}},ignoreComments:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{wrongIndentation:"Expected indentation of {{expected}} but found {{actual}}."}},create:function(e){function t(e,t,r){var n="".concat(e," ").concat(p).concat(1===e?"":"s"),i="space".concat(1===t?"":"s"),a="tab".concat(1===r?"":"s");return {expected:n,actual:0<t?"space"===p?t:"".concat(t," ").concat(i):0<r?"tab"===p?r:"".concat(r," ").concat(a):"0"}}function r(r,n){var i=Array.from(m.getTokenIndent(r)),a=i.filter((function(e){return " "===e})).length,o=i.filter((function(e){return "\t"===e})).length;e.report({node:r,messageId:"wrongIndentation",data:t(n.length,a,o),loc:{start:{line:r.loc.start.line,column:0},end:{line:r.loc.start.line,column:r.loc.start.column}},fix:function(e){var t=[r.range[0]-r.loc.start.column,r.range[0]];return e.replaceTextRange(t,n)}});}function n(e,t){var r=m.getTokenIndent(e);return r===t||r.includes(" ")&&r.includes("\t")}function i(e,t,r,n){function i(e){for(var r=d.getTokenBefore(e);LA.isOpeningParenToken(r)&&r!==t;)r=d.getTokenBefore(r);return d.getTokenAfter(r)}g.setDesiredOffsets([t.range[1],r.range[0]],t,"number"==typeof n?n:1),g.setDesiredOffset(r,t,0),"first"===n&&e.length&&!e[0]||e.forEach((function(r,a){if(r&&("off"===n&&g.ignoreToken(i(r)),0!==a))if("first"===n&&m.isFirstTokenOfLine(i(r)))g.matchOffsetOf(i(e[0]),i(r));else {var o=e[a-1],s=o&&i(o),u=o&&d.getLastToken(o);o&&u.loc.end.line-function(e){var t=e.match(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/)[0].match(LA.createGlobalLinebreakMatcher());return null===t?0:t.length}(u.value)>t.loc.end.line&&g.setDesiredOffsets([o.range[1],r.range[1]],s,0);}}));}function a(e){if("BlockStatement"!==e.type){for(var t=d.getTokenBefore(e,LA.isNotOpeningParenToken),r=d.getFirstToken(e),n=d.getLastToken(e);LA.isOpeningParenToken(d.getTokenBefore(r))&&LA.isClosingParenToken(d.getTokenAfter(n));)r=d.getTokenBefore(r),n=d.getTokenAfter(n);g.setDesiredOffsets([r.range[0],n.range[1]],t,1);var i=d.getLastToken(e);"EmptyStatement"!==e.type&&LA.isSemicolonToken(i)&&g.setDesiredOffset(i,t,0);}}function o(e){var t=e.arguments.length?d.getFirstTokenBetween(e.callee,e.arguments[0],LA.isOpeningParenToken):d.getLastToken(e,1),r=d.getLastToken(e);y.add(t),y.add(r),g.setDesiredOffset(t,d.getTokenBefore(t),0),i(e.arguments,t,r,h.CallExpression.arguments);}function s(e){var t=new Set(d.getTokens(e,{includeComments:!0}));t.forEach((function(e){if(!t.has(g.getFirstDependency(e))){var r=m.getFirstTokenOfLine(e);e===r?g.ignoreToken(e):g.setDesiredOffset(e,r,0);}}));}function c(e,t){var r=e.loc.end.line,n=t.loc.start.line;if(r===n||r===n-1)return !1;for(var i=r+1;i<n;++i)if(!m.firstTokensByLineNumber.has(i))return !0;return !1}function l(e){C.add(e),v.add(d.getFirstToken(e));}var p="space",f=4,h={SwitchCase:0,VariableDeclarator:{var:1,let:1,const:1},outerIIFEBody:1,FunctionDeclaration:{parameters:1,body:1},FunctionExpression:{parameters:1,body:1},CallExpression:{arguments:1},MemberExpression:1,ArrayExpression:1,ObjectExpression:1,ImportDeclaration:1,flatTernaryExpressions:!1,ignoredNodes:[],ignoreComments:!1};e.options.length&&("tab"===e.options[0]?(f=1,p="tab"):(f=e.options[0],p="space"),e.options[1]&&(Object.assign(h,e.options[1]),("number"==typeof h.VariableDeclarator||"first"===h.VariableDeclarator)&&(h.VariableDeclarator={var:h.VariableDeclarator,let:h.VariableDeclarator,const:h.VariableDeclarator})));var d=e.getSourceCode(),m=new n_(d),g=new i_(m,f,"space"==p?" ":"\t"),y=new WeakSet,v=new Set,x={"ArrayExpression, ArrayPattern":function(e){var t=d.getFirstToken(e),r=d.getTokenAfter(Fy.lodash.findLast(e.elements)||t,LA.isClosingBracketToken);i(e.elements,t,r,h.ArrayExpression);},"ObjectExpression, ObjectPattern":function(e){var t=d.getFirstToken(e),r=d.getTokenAfter(e.properties.length?e.properties[e.properties.length-1]:t,LA.isClosingBraceToken);i(e.properties,t,r,h.ObjectExpression);},ArrowFunctionExpression:function(e){var t=d.getFirstToken(e);if(LA.isOpeningParenToken(t)){var r=t,n=d.getTokenBefore(e.body,LA.isClosingParenToken);y.add(r),y.add(n),i(e.params,r,n,h.FunctionExpression.parameters);}a(e.body);},AssignmentExpression:function(e){var t=d.getFirstTokenBetween(e.left,e.right,(function(t){return t.value===e.operator}));g.setDesiredOffsets([t.range[0],e.range[1]],d.getLastToken(e.left),1),g.ignoreToken(t),g.ignoreToken(d.getTokenAfter(t));},"BinaryExpression, LogicalExpression":function(e){var t=d.getFirstTokenBetween(e.left,e.right,(function(t){return t.value===e.operator})),r=d.getTokenAfter(t);g.ignoreToken(t),g.ignoreToken(r),g.setDesiredOffset(r,t,0);},"BlockStatement, ClassBody":function(e){var t;t=e.parent&&function(e){if(!e.parent||"CallExpression"!==e.parent.type||e.parent.callee!==e)return !1;for(var t=e.parent&&e.parent.parent;"UnaryExpression"===t.type&&-1<["!","~","+","-"].indexOf(t.operator)||"AssignmentExpression"===t.type||"LogicalExpression"===t.type||"SequenceExpression"===t.type||"VariableDeclarator"===t.type;)t=t.parent;return ("ExpressionStatement"===t.type||"VariableDeclaration"===t.type)&&"Program"===t.parent.type}(e.parent)?h.outerIIFEBody:!e.parent||"FunctionExpression"!==e.parent.type&&"ArrowFunctionExpression"!==e.parent.type?e.parent&&"FunctionDeclaration"===e.parent.type?h.FunctionDeclaration.body:1:h.FunctionExpression.body,LA.STATEMENT_LIST_PARENTS.has(e.parent.type)||g.setDesiredOffset(d.getFirstToken(e),d.getFirstToken(e.parent),0),i(e.body,d.getFirstToken(e),d.getLastToken(e),t);},CallExpression:o,"ClassDeclaration[superClass], ClassExpression[superClass]":function(e){var t=d.getFirstToken(e),r=d.getTokenBefore(e.superClass,LA.isNotOpeningParenToken);g.setDesiredOffsets([r.range[0],e.body.range[0]],t,1);},ConditionalExpression:function(e){var t=d.getFirstToken(e);if(!h.flatTernaryExpressions||!LA.isTokenOnSameLine(e.test,e.consequent)||function(e,t){for(var r=t;r.parent&&!r.parent.type.endsWith("Statement")&&!r.parent.type.endsWith("Declaration");)r=r.parent;return !(r=r.parent)||r.loc.start.line===e.loc.start.line}(t,e)){var r=d.getFirstTokenBetween(e.test,e.consequent,(function(e){return "Punctuator"===e.type&&"?"===e.value})),n=d.getFirstTokenBetween(e.consequent,e.alternate,(function(e){return "Punctuator"===e.type&&":"===e.value})),i=d.getTokenAfter(r),a=d.getTokenBefore(n),o=d.getTokenAfter(n);g.setDesiredOffset(r,t,1),g.setDesiredOffset(n,t,1),g.setDesiredOffset(i,t,1),a.loc.end.line===o.loc.start.line?g.setDesiredOffset(o,i,0):g.setDesiredOffset(o,t,1);}},"DoWhileStatement, WhileStatement, ForInStatement, ForOfStatement":function(e){return a(e.body)},ExportNamedDeclaration:function(e){if(null===e.declaration){var t=d.getLastToken(e,LA.isClosingBraceToken);i(e.specifiers,d.getFirstToken(e,{skip:1}),t,1),e.source&&g.setDesiredOffsets([t.range[1],e.range[1]],d.getFirstToken(e),1);}},ForStatement:function(e){var t=d.getFirstToken(e,1);e.init&&g.setDesiredOffsets(e.init.range,t,1),e.test&&g.setDesiredOffsets(e.test.range,t,1),e.update&&g.setDesiredOffsets(e.update.range,t,1),a(e.body);},"FunctionDeclaration, FunctionExpression":function(e){var t=d.getTokenBefore(e.body),r=d.getTokenBefore(e.params.length?e.params[0]:t);y.add(r),y.add(t),i(e.params,r,t,h[e.type].parameters);},IfStatement:function(e){a(e.consequent),e.alternate&&"IfStatement"!==e.alternate.type&&a(e.alternate);},ImportDeclaration:function(e){if(e.specifiers.some((function(e){return "ImportSpecifier"===e.type}))){var t=d.getFirstToken(e,LA.isOpeningBraceToken),r=d.getLastToken(e,LA.isClosingBraceToken);i(e.specifiers.filter((function(e){return "ImportSpecifier"===e.type})),t,r,h.ImportDeclaration);}var n=d.getLastToken(e,(function(e){return "Identifier"===e.type&&"from"===e.value})),a=d.getLastToken(e,(function(e){return "String"===e.type})),o=d.getLastToken(e,(function(e){return "Punctuator"===e.type&&";"===e.value}));if(n){var s=o&&o.range[1]===a.range[1]?e.range[1]:a.range[1];g.setDesiredOffsets([n.range[0],s],d.getFirstToken(e),1);}},ImportExpression:function(e){var t=d.getFirstToken(e,1),r=d.getLastToken(e);y.add(t),y.add(r),g.setDesiredOffset(t,d.getTokenBefore(t),0),i([e.source],t,r,h.CallExpression.arguments);},"MemberExpression, JSXMemberExpression, MetaProperty":function(e){var t="MetaProperty"===e.type?e.meta:e.object,r=d.getFirstTokenBetween(t,e.property,LA.isNotClosingParenToken),n=d.getTokenAfter(r),i=d.getTokensBetween(t,e.property,{filter:LA.isClosingParenToken}).length,a=i?d.getTokenBefore(t,{skip:i-1}):d.getFirstToken(t),o=d.getTokenBefore(r),s=e.computed?r:n;e.computed&&(g.setDesiredOffset(d.getLastToken(e),r,0),g.setDesiredOffsets(e.property.range,r,1));var u=o.loc.end.line===s.loc.start.line?o:a;"number"==typeof h.MemberExpression?(g.setDesiredOffset(r,u,h.MemberExpression),g.setDesiredOffset(n,e.computed?r:u,h.MemberExpression)):(g.ignoreToken(r),g.ignoreToken(n),g.setDesiredOffset(r,u,0),g.setDesiredOffset(n,r,0));},NewExpression:function(e){(0<e.arguments.length||LA.isClosingParenToken(d.getLastToken(e))&&LA.isOpeningParenToken(d.getLastToken(e,1)))&&o(e);},Property:function(e){if(!e.shorthand&&!e.method&&"init"===e.kind){var t=d.getFirstTokenBetween(e.key,e.value,LA.isColonToken);g.ignoreToken(d.getTokenAfter(t));}},SwitchStatement:function(e){var t=d.getTokenAfter(e.discriminant,LA.isOpeningBraceToken),r=d.getLastToken(e);g.setDesiredOffsets([t.range[1],r.range[0]],t,h.SwitchCase),e.cases.length&&d.getTokensBetween(e.cases[e.cases.length-1],r,{includeComments:!0,filter:LA.isCommentToken}).forEach((function(e){return g.ignoreToken(e)}));},SwitchCase:function(e){if(1!==e.consequent.length||"BlockStatement"!==e.consequent[0].type){var t=d.getFirstToken(e),r=d.getTokenAfter(e);g.setDesiredOffsets([t.range[1],r.range[0]],t,1);}},TemplateLiteral:function(e){e.expressions.forEach((function(t,r){var n=e.quasis[r],i=e.quasis[r+1],a=n.loc.start.line===n.loc.end.line?d.getFirstToken(n):null;g.setDesiredOffsets([n.range[1],i.range[0]],a,1),g.setDesiredOffset(d.getFirstToken(i),a,0);}));},VariableDeclaration:function(e){var t=Object.prototype.hasOwnProperty.call(h.VariableDeclarator,e.kind)?h.VariableDeclarator[e.kind]:1,r=d.getFirstToken(e),n=d.getLastToken(e);if("first"===h.VariableDeclarator[e.kind]){if(1<e.declarations.length)return void i(e.declarations,r,n,"first");t=1;}e.declarations[e.declarations.length-1].loc.start.line>e.loc.start.line?g.setDesiredOffsets(e.range,r,t,!0):g.setDesiredOffsets(e.range,r,t),LA.isSemicolonToken(n)&&g.ignoreToken(n);},VariableDeclarator:function(e){if(e.init){var t=d.getTokenBefore(e.init,LA.isNotOpeningParenToken),r=d.getTokenAfter(t);g.ignoreToken(t),g.ignoreToken(r),g.setDesiredOffsets([r.range[0],e.range[1]],t,1),g.setDesiredOffset(t,d.getLastToken(e.id),0);}},"JSXAttribute[value]":function(e){var t=d.getFirstTokenBetween(e.name,e.value,(function(e){return "Punctuator"===e.type&&"="===e.value}));g.setDesiredOffsets([t.range[0],e.value.range[1]],d.getFirstToken(e.name),1);},JSXElement:function(e){e.closingElement&&i(e.children,d.getFirstToken(e.openingElement),d.getFirstToken(e.closingElement),1);},JSXOpeningElement:function(e){var t,r=d.getFirstToken(e);e.selfClosing?(t=d.getLastToken(e,{skip:1}),g.setDesiredOffset(d.getLastToken(e),t,0)):t=d.getLastToken(e),g.setDesiredOffsets(e.name.range,d.getFirstToken(e)),i(e.attributes,r,t,1);},JSXClosingElement:function(e){var t=d.getFirstToken(e);g.setDesiredOffsets(e.name.range,t,1);},JSXFragment:function(e){var t=d.getFirstToken(e.openingFragment),r=d.getFirstToken(e.closingFragment);i(e.children,t,r,1);},JSXOpeningFragment:function(e){var t=d.getFirstToken(e),r=d.getLastToken(e);g.setDesiredOffsets(e.range,t,1),g.matchOffsetOf(t,r);},JSXClosingFragment:function(e){var t=d.getFirstToken(e),r=d.getLastToken(e,{skip:1}),n=d.getLastToken(e),i=LA.isTokenOnSameLine(r,n)?r:n;g.setDesiredOffsets(e.range,t,1),g.matchOffsetOf(t,i);},JSXExpressionContainer:function(e){var t=d.getFirstToken(e),r=d.getLastToken(e);g.setDesiredOffsets([t.range[1],r.range[0]],t,1);},JSXSpreadAttribute:function(e){var t=d.getFirstToken(e),r=d.getLastToken(e);g.setDesiredOffsets([t.range[1],r.range[0]],t,1);},"*":function(e){var t=d.getFirstToken(e);t&&!v.has(t)&&g.setDesiredOffsets(e.range,t,0);}},b=[],E=Fy.lodash.mapValues(x,(function(e){return function(t){return b.push({listener:e,node:t})}})),C=new Set,S=h.ignoredNodes.reduce((function(e,t){return Object.assign(e,u({},t,l))}),{});return Object.assign(E,S,{"*:exit":function(e){t_.has(e.type)||l(e);},"Program:exit":function(){h.ignoreComments&&d.getAllComments().forEach((function(e){return g.ignoreToken(e)})),b.filter((function(e){return !C.has(e.node)})).forEach((function(e){return e.listener(e.node)})),C.forEach(s),function(e){var t=[],r=[];e.forEach((function(e){LA.isOpeningParenToken(e)?t.push(e):LA.isClosingParenToken(e)&&r.unshift({left:t.pop(),right:e});})),r.forEach((function(e){var t=e.left,r=e.right;if(!y.has(t)&&!y.has(r)){var n=new Set(d.getTokensBetween(t,r));n.forEach((function(e){n.has(g.getFirstDependency(e))||g.setDesiredOffset(e,t,1);}));}g.setDesiredOffset(r,t,0);}));}(d.ast.tokens);var e=d.ast.comments.reduce((function(e,t){var r=d.getTokenBefore(t,{includeComments:!0});return e.set(t,e.has(r)?e.get(r):r)}),new WeakMap);d.lines.forEach((function(t,i){var a=i+1;if(m.firstTokensByLineNumber.has(a)){var o=m.firstTokensByLineNumber.get(a);if(o.loc.start.line===a){if(LA.isCommentToken(o)){var s=e.get(o),u=s?d.getTokenAfter(s):d.ast.tokens[0],l=s&&!c(s,o),p=u&&!c(o,u);if(u&&LA.isSemicolonToken(u)&&!LA.isTokenOnSameLine(o,u)&&g.setDesiredOffset(o,u,0),l&&n(o,g.getDesiredIndent(s))||p&&n(o,g.getDesiredIndent(u)))return}n(o,g.getDesiredIndent(o))||r(o,g.getDesiredIndent(o));}}}));}})}};function s_(e){return "ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type}function u_(e){var t=e.parent,r=t.parent;return s_(r)?"ForStatement"===r.type?r.init===t:r.left===t:!!e.init}var c_={meta:{type:"suggestion",docs:{description:"require or disallow initialization in variable declarations",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/init-declarations"},schema:{anyOf:[{type:"array",items:[{enum:["always"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["never"]},{type:"object",properties:{ignoreForLoopInit:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},messages:{initialized:"Variable '{{idName}}' should be initialized on declaration.",notInitialized:"Variable '{{idName}}' should not be initialized on declaration."}},create:function(e){var t=e.options[0]||"always",r=e.options[1]||{};return {"VariableDeclaration:exit":function(n){for(var i=n.kind,a=n.declarations,o=0;o<a.length;++o){var s=a[o],u=s.id,c=u_(s),l=r.ignoreForLoopInit&&s_(n.parent),p="";"always"!==t||c?"never"===t&&"const"!==i&&c&&!l&&(p="notInitialized"):p="initialized","Identifier"===u.type&&p&&e.report({node:s,messageId:p,data:{idName:u.name}});}}}}},l_={"prefer-double":{quote:'"',description:"singlequote",convert:function(e){return e.replace(/'/g,'"')}},"prefer-single":{quote:"'",description:"doublequote",convert:function(e){return e.replace(/"/g,"'")}}},p_={meta:{type:"layout",docs:{description:"enforce the consistent use of either double or single quotes in JSX attributes",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/jsx-quotes"},fixable:"whitespace",schema:[{enum:["prefer-single","prefer-double"]}],messages:{unexpected:"Unexpected usage of {{description}}."}},create:function(e){var t=e.options[0]||"prefer-double",r=l_[t];return {JSXAttribute:function(t){var n=t.value;n&&LA.isStringLiteral(n)&&!function(e){return -1!==e.value.indexOf(r.quote)||LA.isSurroundedBy(e.raw,r.quote)}(n)&&e.report({node:n,messageId:"unexpected",data:{description:r.description},fix:function(e){return e.replaceText(n,r.convert(n.raw))}});}}}};function f_(e){return e[e.length-1]}function h_(e){return e.loc.end.line===e.loc.start.line}function d_(e,t){return e.mode=t.mode||"strict",e.beforeColon=void 0===t.beforeColon?0:+t.beforeColon,e.afterColon=void 0===t.afterColon?1:+t.afterColon,void 0!==t.align&&("object"==i(t.align)?e.align=t.align:e.align={on:t.align,mode:e.mode,beforeColon:e.beforeColon,afterColon:e.afterColon}),e}var m_={meta:{type:"layout",docs:{description:"enforce consistent spacing between keys and values in object literal properties",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/key-spacing"},fixable:"whitespace",schema:[{anyOf:[{type:"object",properties:{align:{anyOf:[{enum:["colon","value"]},{type:"object",properties:{mode:{enum:["strict","minimum"]},on:{enum:["colon","value"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1}]},mode:{enum:["strict","minimum"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1},{type:"object",properties:{singleLine:{type:"object",properties:{mode:{enum:["strict","minimum"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1},multiLine:{type:"object",properties:{align:{anyOf:[{enum:["colon","value"]},{type:"object",properties:{mode:{enum:["strict","minimum"]},on:{enum:["colon","value"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1}]},mode:{enum:["strict","minimum"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1}},additionalProperties:!1},{type:"object",properties:{singleLine:{type:"object",properties:{mode:{enum:["strict","minimum"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1},multiLine:{type:"object",properties:{mode:{enum:["strict","minimum"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1},align:{type:"object",properties:{mode:{enum:["strict","minimum"]},on:{enum:["colon","value"]},beforeColon:{type:"boolean"},afterColon:{type:"boolean"}},additionalProperties:!1}},additionalProperties:!1}]}],messages:{extraKey:"Extra space after {{computed}}key '{{key}}'.",extraValue:"Extra space before value for {{computed}}key '{{key}}'.",missingKey:"Missing space after {{computed}}key '{{key}}'.",missingValue:"Missing space before value for {{computed}}key '{{key}}'."}},create:function(e){function t(e){return !(e.method||e.shorthand||"init"!==e.kind||"Property"!==e.type)}function r(e){var t=e.key;return e.computed?d.getText().slice(t.range[0],t.range[1]):e.key.name||e.key.value}function n(t,n,i,a,o){var s=i.length-a,u=function(e){return d.getTokenAfter(e,LA.isColonToken)}(t.key),c=d.getTokenBefore(u,{includeComments:!0}),l=d.getTokenAfter(u,{includeComments:!0}),p="key"===n,f=p?c.loc.start:l.loc.start,h=0<s,m=Math.abs(s),g=Array(m+1).join(" ");if((s&&"strict"===o||0>s&&"minimum"===o||0<s&&!a&&"minimum"===o)&&(!a||!function(e){return LA.LINEBREAK_MATCHER.test(e)}(i))){var y,v;if(h)v=p?[c.range[1],c.range[1]+m]:[l.range[0]-m,l.range[0]],y=function(e){return e.removeRange(v)};else y=p?function(e){return e.insertTextAfter(c,g)}:function(e){return e.insertTextBefore(l,g)};var x;x=h?"key"===n?"extraKey":"extraValue":"key"===n?"missingKey":"missingValue",e.report({node:t[n],loc:f,messageId:x,data:{computed:t.computed?"computed ":"",key:r(t)},fix:y});}}function a(e){var t=d.getFirstToken(e);return function(e){var t=d.getTokenAfter(e,LA.isColonToken);return d.getTokenBefore(t)}(e.key).range[1]-t.range[0]}function o(e){var t=/([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*):([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)/.exec(d.getText().slice(e.key.range[1],e.value.range[0]));return t?{beforeColon:t[1],afterColon:t[2]}:null}function s(e){return 1===e.properties.length?[e.properties]:e.properties.reduce((function(e,t){var r=f_(e),n=f_(r);return !n||function(e,t){var r=e.loc.start.line,n=t.loc.start.line;if(1>=n-r)return !0;var i=d.getCommentsBefore(t);if(i.length&&1>=i[0].loc.start.line-r&&1>=n-f_(i).loc.end.line){for(var a=1;a<i.length;a++)if(1<i[a].loc.start.line-i[a-1].loc.end.line)return !1;return !0}return !1}(n,t)?r.push(t):e.push([t]),e}),[[]])}function u(e){s(e).forEach((function(e){!function(e){var t,r,i,s=e.length,u=e.map(a),c=h.on,l=Math.max.apply(Math,E(u));h&&1<s?(t=h.beforeColon,r=h.afterColon,i=h.mode):(t=p.beforeColon,r=p.afterColon,i=h.mode),l+="colon"===c?t:r;for(var f=0;f<s;f++){var d=e[f],m=o(d);if(m){var g=u[f];"value"===c?(n(d,"key",m.beforeColon,t,i),n(d,"value",m.afterColon,l-g,i)):(n(d,"key",m.beforeColon,l-g,i),n(d,"value",m.afterColon,r,i));}}}(e.filter(t));}));}function c(e,t){var r=o(e);r&&(n(e,"key",r.beforeColon,t.beforeColon,t.mode),n(e,"value",r.afterColon,t.afterColon,t.mode));}var l=function(e,t){return "object"==i(t.align)?(e.align=d_({},t.align),e.align.on=t.align.on||"colon",e.align.mode=t.align.mode||"strict",e.multiLine=d_({},t.multiLine||t),e.singleLine=d_({},t.singleLine||t)):(e.multiLine=d_({},t.multiLine||t),e.singleLine=d_({},t.singleLine||t),e.multiLine.align&&(e.align={on:e.multiLine.align.on,mode:e.multiLine.align.mode||e.multiLine.mode,beforeColon:e.multiLine.align.beforeColon,afterColon:e.multiLine.align.afterColon})),e}({},e.options[0]||{}),p=l.multiLine,f=l.singleLine,h=l.align||null,d=e.getSourceCode();return h?{ObjectExpression:function(e){h_(e)?function(e){for(var t=e.length,r=0;r<t;r++)c(e[r],f);}(e.properties.filter(t)):u(e);}}:{Property:function(e){c(e,h_(e.parent)?f:p);}}}},g_=/^[\)>\]\}]$/,y_=/^(?:[!\(<\[\{~]|\+\+?|\x2D\x2D?)$/,v_=/^[\)\*>\]\}]$/,x_=/^[\*\{]$/,b_=/\$\{$/,E_=/^\}/,C_=/^(?:JSXElement|RegularExpression|String|Template)$/,S_=Aw.concat(["as","async","await","from","get","let","of","set","yield"]);function k_(e){return "Template"===e.type&&b_.test(e.value)}function D_(e){return "Template"===e.type&&E_.test(e.value)}!function(){S_.sort();for(var e=1;e<S_.length;++e)if(S_[e]===S_[e-1])throw new Error("Duplication was found in the keyword list: ".concat(S_[e]))}();var F_={meta:{type:"layout",docs:{description:"enforce consistent spacing before and after keywords",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/keyword-spacing"},fixable:"whitespace",schema:[{type:"object",properties:{before:{type:"boolean",default:!0},after:{type:"boolean",default:!0},overrides:{type:"object",properties:S_.reduce((function(e,t){return e[t]={type:"object",properties:{before:{type:"boolean"},after:{type:"boolean"}},additionalProperties:!1},e}),{}),additionalProperties:!1}},additionalProperties:!1}],messages:{expectedBefore:'Expected space(s) before "{{value}}".',expectedAfter:'Expected space(s) after "{{value}}".',unexpectedBefore:'Unexpected space(s) before "{{value}}".',unexpectedAfter:'Unexpected space(s) after "{{value}}".'}},create:function(e){function t(t,r){var n=m.getTokenBefore(t);n&&(C_.test(n.type)||r.test(n.value))&&!k_(n)&&LA.isTokenOnSameLine(n,t)&&!m.isSpaceBetweenTokens(n,t)&&e.report({loc:t.loc.start,messageId:"expectedBefore",data:t,fix:function(e){return e.insertTextBefore(t," ")}});}function r(t,r){var n=m.getTokenBefore(t);n&&(C_.test(n.type)||r.test(n.value))&&!k_(n)&&LA.isTokenOnSameLine(n,t)&&m.isSpaceBetweenTokens(n,t)&&e.report({loc:t.loc.start,messageId:"unexpectedBefore",data:t,fix:function(e){return e.removeRange([n.range[1],t.range[0]])}});}function n(t,r){var n=m.getTokenAfter(t);n&&(C_.test(n.type)||r.test(n.value))&&!D_(n)&&LA.isTokenOnSameLine(t,n)&&!m.isSpaceBetweenTokens(t,n)&&e.report({loc:t.loc.start,messageId:"expectedAfter",data:t,fix:function(e){return e.insertTextAfter(t," ")}});}function i(t,r){var n=m.getTokenAfter(t);n&&(C_.test(n.type)||r.test(n.value))&&!D_(n)&&LA.isTokenOnSameLine(t,n)&&m.isSpaceBetweenTokens(t,n)&&e.report({loc:t.loc.start,messageId:"unexpectedAfter",data:t,fix:function(e){return e.removeRange([t.range[1],n.range[0]])}});}function a(e,t){g[e.value].before(e,t||g_);}function o(e,t){g[e.value].after(e,t||y_);}function s(e){a(e),o(e);}function u(e){var t=e&&m.getFirstToken(e);t&&"Keyword"===t.type&&s(t);}function c(e){var t=e&&m.getFirstToken(e);t&&"Keyword"===t.type&&a(t);}function l(e){e&&s(m.getTokenBefore(e,LA.isKeywordToken));}function p(e){var t=e&&m.getFirstToken(e);t&&("Keyword"===t.type&&"function"===t.value||"async"===t.value)&&a(t);}function f(e){u(e),l(e.superClass);}function h(e){var t=m.getFirstToken(e);if(a(t,v_),o(t,x_),"ExportDefaultDeclaration"===e.type&&s(m.getTokenAfter(t)),e.source){var r=m.getTokenBefore(e.source);a(r,v_),o(r,x_);}}function d(e){if(e.static&&u(e),"get"===e.kind||"set"===e.kind||(e.method||"MethodDefinition"===e.type)&&e.value.async){var t=m.getTokenBefore(e.key,(function(e){switch(e.value){case"get":case"set":case"async":return !0;default:return !1}}));if(!t)throw new Error("Failed to find token get, set, or async beside method name");s(t);}}var m=e.getSourceCode(),g=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=!1!==e.before,o=!1!==e.after,s={before:a?t:r,after:o?n:i},u=e&&e.overrides||{},c=Object.create(null),l=0;l<S_.length;++l){var p=S_[l],f=u[p];if(f){var h="before"in f?f.before:a,d="after"in f?f.after:o;c[p]={before:h?t:r,after:d?n:i};}else c[p]=s;}return c}(e.options[0]);return {DebuggerStatement:u,WithStatement:u,BreakStatement:u,ContinueStatement:u,ReturnStatement:u,ThrowStatement:u,TryStatement:function(e){u(e),u(e.handler),l(e.finalizer);},IfStatement:function(e){u(e),l(e.alternate);},SwitchStatement:u,SwitchCase:u,DoWhileStatement:function(e){u(e),l(e.test);},ForInStatement:function(e){u(e),l(e.right);},ForOfStatement:function(e){e.await?(a(m.getFirstToken(e,0)),o(m.getFirstToken(e,1))):u(e),s(m.getTokenBefore(e.right,LA.isNotOpeningParenToken));},ForStatement:u,WhileStatement:u,ClassDeclaration:f,ExportNamedDeclaration:h,ExportDefaultDeclaration:h,ExportAllDeclaration:h,FunctionDeclaration:p,ImportDeclaration:h,VariableDeclaration:u,ArrowFunctionExpression:p,AwaitExpression:function(e){a(m.getFirstToken(e));},ClassExpression:f,FunctionExpression:p,NewExpression:c,Super:c,ThisExpression:c,UnaryExpression:c,YieldExpression:c,ImportNamespaceSpecifier:function(e){a(m.getFirstToken(e,1),v_);},MethodDefinition:d,Property:d}}},A_={meta:{type:"layout",docs:{description:"enforce position of line comments",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/line-comment-position"},schema:[{oneOf:[{enum:["above","beside"]},{type:"object",properties:{position:{enum:["above","beside"]},ignorePattern:{type:"string"},applyDefaultPatterns:{type:"boolean"},applyDefaultIgnorePatterns:{type:"boolean"}},additionalProperties:!1}]}],messages:{above:"Expected comment to be above code.",beside:"Expected comment to be beside code."}},create:function(e){var t,r,n=e.options[0],i=!0;n&&"string"!=typeof n?(t=!n.position||"above"===n.position,r=n.ignorePattern,i=Object.prototype.hasOwnProperty.call(n,"applyDefaultIgnorePatterns")?n.applyDefaultIgnorePatterns:!1!==n.applyDefaultPatterns):t=!n||"above"===n;var a=LA.COMMENTS_IGNORE_PATTERN,o=/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*falls?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]?through/,s=new RegExp(r,"u"),u=e.getSourceCode();return {Program:function(){u.getAllComments().filter((function(e){return "Line"===e.type})).forEach((function(n){if(!(i&&(a.test(n.value)||o.test(n.value))||r&&s.test(n.value))){var c=u.getTokenBefore(n,{includeComments:!0}),l=c&&c.loc.end.line===n.loc.start.line;t?l&&e.report({node:n,messageId:"above"}):!l&&e.report({node:n,messageId:"beside"});}}));}}}},w_={meta:{type:"layout",docs:{description:"enforce consistent linebreak style",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/linebreak-style"},fixable:"whitespace",schema:[{enum:["unix","windows"]}],messages:{expectedLF:"Expected linebreaks to be 'LF' but found 'CRLF'.",expectedCRLF:"Expected linebreaks to be 'CRLF' but found 'LF'."}},create:function(e){function t(e,t){return function(r){return r.replaceTextRange(e,t)}}var r=e.getSourceCode();return {Program:function(n){for(var i,a="unix"===(e.options[0]||"unix"),o=a?"\n":"\r\n",s=r.getText(),u=LA.createGlobalLinebreakMatcher(),c=0;null!==(i=u.exec(s));)if(c++,i[0]!==o){var l=i.index,p=[l,l+i[0].length];e.report({node:n,loc:{line:c,column:r.lines[c-1].length},messageId:a?"expectedLF":"expectedCRLF",fix:t(p,o)});}}}}};var __={meta:{type:"layout",docs:{description:"require empty lines around comments",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/lines-around-comment"},fixable:"whitespace",schema:[{type:"object",properties:{beforeBlockComment:{type:"boolean",default:!0},afterBlockComment:{type:"boolean",default:!1},beforeLineComment:{type:"boolean",default:!1},afterLineComment:{type:"boolean",default:!1},allowBlockStart:{type:"boolean",default:!1},allowBlockEnd:{type:"boolean",default:!1},allowClassStart:{type:"boolean"},allowClassEnd:{type:"boolean"},allowObjectStart:{type:"boolean"},allowObjectEnd:{type:"boolean"},allowArrayStart:{type:"boolean"},allowArrayEnd:{type:"boolean"},ignorePattern:{type:"string"},applyDefaultIgnorePatterns:{type:"boolean"}},additionalProperties:!1}],messages:{after:"Expected line after comment.",before:"Expected line before comment."}},create:function(e){function t(e,t){return e.type===t||e.body&&e.body.type===t||e.consequent&&e.consequent.type===t}function r(e){return x.getNodeByRangeIndex(e.range[0])}function n(e,n){var i=r(e);return i&&t(i,n)&&1==e.loc.start.line-i.loc.start.line}function i(e,n){var i=r(e);return i&&t(i,n)&&1==i.loc.end.line-e.loc.end.line}function a(e){return n(e,"ClassBody")||n(e,"BlockStatement")||n(e,"SwitchCase")}function o(e){return i(e,"ClassBody")||i(e,"BlockStatement")||i(e,"SwitchCase")||i(e,"SwitchStatement")}function s(e){return n(e,"ClassBody")}function u(e){return i(e,"ClassBody")}function c(e){return n(e,"ObjectExpression")||n(e,"ObjectPattern")}function l(e){return i(e,"ObjectExpression")||i(e,"ObjectPattern")}function p(e){return n(e,"ArrayExpression")||n(e,"ArrayPattern")}function f(e){return i(e,"ArrayExpression")||i(e,"ArrayPattern")}function h(t,r){if(!(v&&g.test(t.value)||m&&y.test(t.value))){var n=r.after,i=r.before,h=t.loc.start.line-1,b=t.loc.end.line+1,C=function(e){var t=e;do{t=x.getTokenBefore(t,{includeComments:!0});}while(t&&LA.isCommentToken(t));if(t&&LA.isTokenOnSameLine(t,e))return !0;t=e;do{t=x.getTokenAfter(t,{includeComments:!0});}while(t&&LA.isCommentToken(t));return !(!t||!LA.isTokenOnSameLine(e,t))}(t),S=d.allowBlockStart&&a(t)&&!(!1===d.allowClassStart&&s(t)),k=d.allowBlockEnd&&o(t)&&!(!1===d.allowClassEnd&&u(t)),F=d.allowClassStart&&s(t),A=d.allowClassEnd&&u(t),w=d.allowObjectStart&&c(t),_=d.allowObjectEnd&&l(t),T=d.allowArrayStart&&p(t),P=d.allowArrayEnd&&f(t);if(1>h&&(i=!1),b>=E&&(n=!1),!C){var I=x.getTokenBefore(t,{includeComments:!0}),B=x.getTokenAfter(t,{includeComments:!0});if(!(S||F||w||T)&&i&&!Fy.lodash.includes(D,h)&&(!LA.isCommentToken(I)||!LA.isTokenOnSameLine(I,t))){var O=t.range[0]-t.loc.start.column,L=[O,O];e.report({node:t,messageId:"before",fix:function(e){return e.insertTextBeforeRange(L,"\n")}});}k||A||_||P||!n||Fy.lodash.includes(D,b)||LA.isCommentToken(B)&&LA.isTokenOnSameLine(t,B)||e.report({node:t,messageId:"after",fix:function(e){return e.insertTextAfter(t,"\n")}});}}}var d=Object.assign({},e.options[0]),m=d.ignorePattern,g=LA.COMMENTS_IGNORE_PATTERN,y=new RegExp(m,"u"),v=!1!==d.applyDefaultIgnorePatterns;d.beforeBlockComment=!(void 0!==d.beforeBlockComment)||d.beforeBlockComment;var x=e.getSourceCode(),b=x.lines,E=b.length+1,C=x.getAllComments(),S=function(e){var t=[];return e.forEach((function(e){var r=e.loc.start.line,n=e.loc.end.line;t.push(r,n);})),t}(C),k=function(e){return e.map((function(e,t){return {code:e.trim(),num:t+1}})).filter((function(e){return !e.code})).map((function(e){return e.num}))}(b),D=S.concat(k);return {Program:function(){C.forEach((function(e){"Line"===e.type?(d.beforeLineComment||d.afterLineComment)&&h(e,{after:d.afterLineComment,before:d.beforeLineComment}):"Block"===e.type&&(d.beforeBlockComment||d.afterBlockComment)&&h(e,{after:d.afterBlockComment,before:d.beforeBlockComment});}));}}}},T_={meta:{type:"layout",docs:{description:"require or disallow newlines around directives",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/lines-around-directive"},schema:[{oneOf:[{enum:["always","never"]},{type:"object",properties:{before:{enum:["always","never"]},after:{enum:["always","never"]}},additionalProperties:!1,minProperties:2}]}],fixable:"whitespace",messages:{expected:'Expected newline {{location}} "{{value}}" directive.',unexpected:'Unexpected newline {{location}} "{{value}}" directive.'},deprecated:!0,replacedBy:["padding-line-between-statements"]},create:function(e){function t(e){var t=o.getTokenBefore(e,{includeComments:!0}),r=t?t.loc.end.line:0;return 2<=e.loc.start.line-r}function r(e){var t=o.getLastToken(e),r=o.getTokenBefore(t);return LA.isSemicolonToken(t)&&t.loc.start.line>r.loc.end.line?r:t}function n(e){var t=r(e);return 2<=o.getTokenAfter(t,{includeComments:!0}).loc.start.line-t.loc.end.line}function i(t,n,i){e.report({node:t,messageId:i?"expected":"unexpected",data:{value:t.expression.value,location:n},fix:function(e){var a=r(t);return i?"before"===n?e.insertTextBefore(t,"\n"):e.insertTextAfter(a,"\n"):e.removeRange("before"===n?[t.range[0]-1,t.range[0]]:[a.range[1],a.range[1]+1])}});}function a(e){var r=LA.getDirectivePrologue(e);if(r.length){var a=r[0],s=o.getCommentsBefore(a);s.length?("always"===u&&!t(a)&&i(a,"before",!0),"never"===u&&t(a)&&i(a,"before",!1)):"Program"===e.type&&"never"===u&&!s.length&&t(a)&&i(a,"before",!1);var l=r[r.length-1],p="Program"===e.type?e.body:e.body.body;(l!==p[p.length-1]||l.trailingComments)&&("always"===c&&!n(l)&&i(l,"after",!0),"never"===c&&n(l)&&i(l,"after",!1));}}var o=e.getSourceCode(),s=e.options[0]||"always",u="string"==typeof s?s:s.before,c="string"==typeof s?s:s.after;return {Program:a,FunctionDeclaration:a,FunctionExpression:a,ArrowFunctionExpression:a}}},P_={meta:{type:"layout",docs:{description:"require or disallow an empty line between class members",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/lines-between-class-members"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{exceptAfterSingleLine:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{never:"Unexpected blank line between class members.",always:"Expected blank line between class members."}},create:function(e){var t=[];t[0]=e.options[0]||"always",t[1]=e.options[1]||{exceptAfterSingleLine:!1};var r=e.getSourceCode();return {ClassBody:function(n){for(var i=n.body,a=function(n){var a=r.getFirstToken(i[n]),o=r.getLastToken(i[n]),s=r.getFirstToken(i[n+1]),u=function(e,t){var n=r.getCommentsBefore(t),i=n.length;if(0===i)return 1<=t.loc.start.line-e.loc.end.line-1;for(var a=0,o=-1,s=0;s<i;s++){a+=n[s].loc.end.line-n[s].loc.start.line+1,o===n[s].loc.start.line&&(a-=1),o=n[s].loc.end.line;}return e.loc.end.line===n[0].loc.start.line&&(a-=1),n[i-1].loc.end.line===t.loc.start.line&&(a-=1),1<=t.loc.start.line-e.loc.end.line-1-a}(o,s),c=!!LA.isTokenOnSameLine(a,o)&&t[1].exceptAfterSingleLine;("always"!==t[0]||c||u)&&("never"!==t[0]||!u)||e.report({node:i[n+1],messageId:u?"never":"always",fix:function(e){return u?e.replaceTextRange([o.range[1],s.range[0]],"\n"):e.insertTextAfter(o,"\n")}});},o=0;o<i.length-1;o++)a(o);}}}},I_={meta:{type:"suggestion",docs:{description:"enforce a maximum depth that blocks can be nested",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-depth"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{tooDeeply:"Blocks are nested too deeply ({{depth}}). Maximum allowed is {{maxDepth}}."}},create:function(e){function t(){o.push(0);}function r(){o.pop();}function n(t){var r=++o[o.length-1];r>u&&e.report({node:t,messageId:"tooDeeply",data:{depth:r,maxDepth:u}});}function a(){o[o.length-1]--;}var o=[],s=e.options[0],u=4;return "object"==i(s)&&(Object.prototype.hasOwnProperty.call(s,"maximum")||Object.prototype.hasOwnProperty.call(s,"max"))&&(u=s.maximum||s.max),"number"==typeof s&&(u=s),{Program:t,FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t,IfStatement:function(e){"IfStatement"!==e.parent.type&&n(e);},SwitchStatement:n,TryStatement:n,DoWhileStatement:n,WhileStatement:n,WithStatement:n,ForStatement:n,ForInStatement:n,ForOfStatement:n,"IfStatement:exit":a,"SwitchStatement:exit":a,"TryStatement:exit":a,"DoWhileStatement:exit":a,"WhileStatement:exit":a,"WithStatement:exit":a,"ForStatement:exit":a,"ForInStatement:exit":a,"ForOfStatement:exit":a,"FunctionDeclaration:exit":r,"FunctionExpression:exit":r,"ArrowFunctionExpression:exit":r,"Program:exit":r}}},B_={type:"object",properties:{code:{type:"integer",minimum:0},comments:{type:"integer",minimum:0},tabWidth:{type:"integer",minimum:0},ignorePattern:{type:"string"},ignoreComments:{type:"boolean"},ignoreStrings:{type:"boolean"},ignoreUrls:{type:"boolean"},ignoreTemplateLiterals:{type:"boolean"},ignoreRegExpLiterals:{type:"boolean"},ignoreTrailingComments:{type:"boolean"}},additionalProperties:!1},O_={anyOf:[B_,{type:"integer",minimum:0}]},L_={meta:{type:"layout",docs:{description:"enforce a maximum line length",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-len"},schema:[O_,O_,B_],messages:{max:"This line has a length of {{lineLength}}. Maximum allowed is {{maxLength}}.",maxComment:"This line has a comment length of {{lineLength}}. Maximum allowed is {{maxCommentLength}}."}},create:function(e){function t(e,t,r){return r&&r.loc.start.line===t&&t<=r.loc.end.line&&(r.loc.end.line>t||r.loc.end.column===e.length)}function r(e,t){return e.slice(0,t.loc.start.column).replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+$/,"")}function n(e,t,r){Array.isArray(e[t])||(e[t]=[]),e[t].push(r);}function i(e,t){for(var r=t.loc.start.line;r<=t.loc.end.line;++r)n(e,r,t);return e}var a=/(?:[\0-"\$-\.0-9;->@-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]):\/\/(?:[\0-"\$->@-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,o=e.getSourceCode(),s=Object.assign({},e.options[e.options.length-1]);"number"==typeof e.options[0]&&(s.code=e.options[0]),"number"==typeof e.options[1]&&(s.tabWidth=e.options[1]);var u="number"==typeof s.code?s.code:80,c="number"==typeof s.tabWidth?s.tabWidth:4,l=!!s.ignoreComments,p=!!s.ignoreStrings,f=!!s.ignoreTemplateLiterals,h=!!s.ignoreRegExpLiterals,d=!!s.ignoreTrailingComments||!!s.ignoreComments,m=!!s.ignoreUrls,g=s.comments,y=s.ignorePattern||null;return y&&(y=new RegExp(y,"u")),{Program:function(n){var s=o.lines,v=l||g||d?o.getAllComments():[],x=0,b=o.ast.tokens.filter((function(e){return "String"===e.type||"JSXText"===e.type&&"JSXAttribute"===o.getNodeByRangeIndex(e.range[0]-1).type})).reduce(i,{}),E=o.ast.tokens.filter((function(e){return "Template"===e.type})).reduce(i,{}),C=o.ast.tokens.filter((function(e){return "RegularExpression"===e.type})).reduce(i,{});s.forEach((function(i,o){var s,S=o+1,k=!1;if(x<v.length){var D=null;do{D=v[++x];}while(D&&D.loc.start.line<=S);if(function(e,t,r){var n=r.loc.start,i=r.loc.end,a=!e.slice(0,r.loc.start.column).trim();return r&&(n.line<t||n.line===t&&a)&&(i.line>t||i.line===t&&i.column===e.length)}(i,S,D=v[--x]))k=!0,s=i;else if(d&&t(i,S,D)){s=r(i,D);for(var F=x;t(s,S,v[--F]);)s=r(s,v[F]);}else s=i;}else s=i;if(!(y&&y.test(s)||m&&a.test(s)||p&&b[S]||f&&E[S]||h&&C[S])){var A=function(e,t){var r=0;return e.replace(/\t/g,(function(e,n){r+=t-(t?(n+r)%t:0)-1;})),Array.from(e).length+r}(s,c);k&&l||(k&&g?A>g&&e.report({node:n,loc:{line:S,column:0},messageId:"maxComment",data:{lineLength:A,maxCommentLength:g}}):A>u&&e.report({node:n,loc:{line:S,column:0},messageId:"max",data:{lineLength:A,maxLength:u}}));}}));}}}};var N_={meta:{type:"suggestion",docs:{description:"enforce a maximum number of line of code in a function",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-lines-per-function"},schema:[{oneOf:[{type:"object",properties:{max:{type:"integer",minimum:0},skipComments:{type:"boolean"},skipBlankLines:{type:"boolean"},IIFEs:{type:"boolean"}},additionalProperties:!1},{type:"integer",minimum:1}]}],messages:{exceed:"{{name}} has too many lines ({{lineCount}}). Maximum allowed is {{maxLines}}."}},create:function(e){function t(e,t,r){var n=r.loc.start,i=r.loc.end,a=n.line===t&&!e.slice(0,n.column).trim(),o=i.line===t&&!e.slice(i.column).trim();return r&&(n.line<t||a)&&(i.line>t||o)}function r(r){var n=function(e){return !(!e.parent||e!==e.parent.value||"MethodDefinition"!==e.parent.type&&("Property"!==e.parent.type||!0!==e.parent.method&&"get"!==e.parent.kind&&"set"!==e.parent.kind))}(r)?r.parent:r;if(l||!function(e){return "FunctionExpression"===e.type&&e.parent&&"CallExpression"===e.parent.type&&e.parent.callee===e}(n)){for(var i=0,o=n.loc.start.line-1;o<n.loc.end.line;++o){var f=a[o];u&&p.has(o+1)&&t(f,o+1,p.get(o+1))||c&&f.match(/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/)||i++;}if(i>s){var h=Fy.lodash.upperFirst(LA.getFunctionNameWithKind(r));e.report({node:n,messageId:"exceed",data:{name:h,lineCount:i,maxLines:s}});}}}var n=e.getSourceCode(),a=n.lines,o=e.options[0],s=50,u=!1,c=!1,l=!1;"object"==i(o)?(s="number"==typeof o.max?o.max:50,u=!!o.skipComments,c=!!o.skipBlankLines,l=!!o.IIFEs):"number"==typeof o&&(s=o);var p=function(e){var t=new Map;return e?(e.forEach((function(e){for(var r=e.loc.start.line;r<=e.loc.end.line;r++)t.set(r,e);})),t):t}(n.getAllComments());return {FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r}}},j_={meta:{type:"suggestion",docs:{description:"enforce a maximum number of lines per file",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-lines"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{max:{type:"integer",minimum:0},skipComments:{type:"boolean"},skipBlankLines:{type:"boolean"}},additionalProperties:!1}]}],messages:{exceed:"File has too many lines ({{actual}}). Maximum allowed is {{max}}."}},create:function(e){function t(e){return e&&("Block"===e.type||"Line"===e.type)}function r(e){var r,n=e.loc.start.line,i=e.loc.end.line;r=e;do{r=u.getTokenBefore(r,{includeComments:!0});}while(t(r));r&&LA.isTokenOnSameLine(r,e)&&(n+=1),r=e;do{r=u.getTokenAfter(r,{includeComments:!0});}while(t(r));return r&&LA.isTokenOnSameLine(e,r)&&(i-=1),n<=i?Fy.lodash.range(n,i+1):[]}var n=e.options[0],a=300;"object"==i(n)&&Object.prototype.hasOwnProperty.call(n,"max")?a=n.max:"number"==typeof n&&(a=n);var o=n&&n.skipComments,s=n&&n.skipBlankLines,u=e.getSourceCode();return {"Program:exit":function(){var t=u.lines.map((function(e,t){return {lineNumber:t+1,text:e}}));if(s&&(t=t.filter((function(e){return ""!==e.text.trim()}))),o){var n=u.getAllComments(),i=Fy.lodash.flatten(n.map((function(e){return r(e)})));t=t.filter((function(e){return !Fy.lodash.includes(i,e.lineNumber)}));}t.length>a&&e.report({loc:{line:1,column:0},messageId:"exceed",data:{max:a,actual:t.length}});}}}},R_={meta:{type:"suggestion",docs:{description:"enforce a maximum depth that callbacks can be nested",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-nested-callbacks"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{exceed:"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}."}},create:function(e){function t(t){if("CallExpression"===t.parent.type&&o.push(t),o.length>a){var r={num:o.length,max:a};e.report({node:t,messageId:"exceed",data:r});}}function r(){o.pop();}var n=e.options[0],a=10;"object"==i(n)&&(Object.prototype.hasOwnProperty.call(n,"maximum")||Object.prototype.hasOwnProperty.call(n,"max"))?a=n.maximum||n.max:"number"==typeof n&&(a=n);var o=[];return {ArrowFunctionExpression:t,"ArrowFunctionExpression:exit":r,FunctionExpression:t,"FunctionExpression:exit":r}}},M_={meta:{type:"suggestion",docs:{description:"enforce a maximum number of parameters in function definitions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-params"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{exceed:"{{name}} has too many parameters ({{count}}). Maximum allowed is {{max}}."}},create:function(e){function t(t){t.params.length>a&&e.report({loc:LA.getFunctionHeadLoc(t,r),node:t,messageId:"exceed",data:{name:Fy.lodash.upperFirst(LA.getFunctionNameWithKind(t)),count:t.params.length,max:a}});}var r=e.getSourceCode(),n=e.options[0],a=3;return "object"==i(n)&&(Object.prototype.hasOwnProperty.call(n,"maximum")||Object.prototype.hasOwnProperty.call(n,"max"))&&(a=n.maximum||n.max),"number"==typeof n&&(a=n),{FunctionDeclaration:t,ArrowFunctionExpression:t,FunctionExpression:t}}},V_={meta:{type:"layout",docs:{description:"enforce a maximum number of statements allowed per line",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-statements-per-line"},schema:[{type:"object",properties:{max:{type:"integer",minimum:1,default:1}},additionalProperties:!1}],messages:{exceed:"This line has {{numberOfStatementsOnThisLine}} {{statements}}. Maximum allowed is {{maxStatementsPerLine}}."}},create:function(e){function t(){i&&e.report({node:i,messageId:"exceed",data:{numberOfStatementsOnThisLine:c,maxStatementsPerLine:s,statements:1===c?"statement":"statements"}}),i=null;}function r(e){var r=e.loc.start.line;l.test(e.parent.type)&&e.parent.alternate!==e||(r===u?c+=1:(t(),c=1,u=r),c===s+1&&(i=i||e));}function n(e){var r=function(e){return a.getLastToken(e,LA.isNotSemicolonToken)}(e).loc.end.line;r!==u&&(t(),c=1,u=r);}var i,a=e.getSourceCode(),o=e.options[0]||{},s=void 0===o.max?1:o.max,u=0,c=0,l=/^(?:(?:DoWhile|For|ForIn|ForOf|If|Labeled|While)Statement|Export(?:Default|Named)Declaration)$/;return {BreakStatement:r,ClassDeclaration:r,ContinueStatement:r,DebuggerStatement:r,DoWhileStatement:r,ExpressionStatement:r,ForInStatement:r,ForOfStatement:r,ForStatement:r,FunctionDeclaration:r,IfStatement:r,ImportDeclaration:r,LabeledStatement:r,ReturnStatement:r,SwitchStatement:r,ThrowStatement:r,TryStatement:r,VariableDeclaration:r,WhileStatement:r,WithStatement:r,ExportNamedDeclaration:r,ExportDefaultDeclaration:r,ExportAllDeclaration:r,"BreakStatement:exit":n,"ClassDeclaration:exit":n,"ContinueStatement:exit":n,"DebuggerStatement:exit":n,"DoWhileStatement:exit":n,"ExpressionStatement:exit":n,"ForInStatement:exit":n,"ForOfStatement:exit":n,"ForStatement:exit":n,"FunctionDeclaration:exit":n,"IfStatement:exit":n,"ImportDeclaration:exit":n,"LabeledStatement:exit":n,"ReturnStatement:exit":n,"SwitchStatement:exit":n,"ThrowStatement:exit":n,"TryStatement:exit":n,"VariableDeclaration:exit":n,"WhileStatement:exit":n,"WithStatement:exit":n,"ExportNamedDeclaration:exit":n,"ExportDefaultDeclaration:exit":n,"ExportAllDeclaration:exit":n,"Program:exit":t}}},U_={meta:{type:"suggestion",docs:{description:"enforce a maximum number of statements allowed in function blocks",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/max-statements"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]},{type:"object",properties:{ignoreTopLevelFunctions:{type:"boolean"}},additionalProperties:!1}],messages:{exceed:"{{name}} has too many statements ({{count}}). Maximum allowed is {{max}}."}},create:function(e){function t(t,r,n){if(r>n){var i=Fy.lodash.upperFirst(LA.getFunctionNameWithKind(t));e.report({node:t,messageId:"exceed",data:{name:i,count:r,max:n}});}}function r(){a.push(0);}function n(e){var r=a.pop();s&&0===a.length?u.push({node:e,count:r}):t(e,r,c);}var a=[],o=e.options[0],s=e.options[1]&&e.options[1].ignoreTopLevelFunctions||!1,u=[],c=10;return "object"==i(o)&&(Object.prototype.hasOwnProperty.call(o,"maximum")||Object.prototype.hasOwnProperty.call(o,"max"))?c=o.maximum||o.max:"number"==typeof o&&(c=o),{FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r,BlockStatement:function(e){a[a.length-1]+=e.body.length;},"FunctionDeclaration:exit":n,"FunctionExpression:exit":n,"ArrowFunctionExpression:exit":n,"Program:exit":function(){1===u.length||u.forEach((function(e){var r=e.count;t(e.node,r,c);}));}}}},q_={meta:{type:"suggestion",docs:{description:"enforce a particular style for multiline comments",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/multiline-comment-style"},fixable:"whitespace",schema:[{enum:["starred-block","separate-lines","bare-block"]}],messages:{expectedBlock:"Expected a block comment instead of consecutive line comments.",expectedBareBlock:"Expected a block comment without padding stars.",startNewline:"Expected a linebreak after '/*'.",endNewline:"Expected a linebreak before '*/'.",missingStar:"Expected a '*' at the start of this line.",alignment:"Expected this line to be aligned with the start of the comment.",expectedLines:"Expected multiple line comments instead of a block comment."}},create:function(e){function t(e){var t=b(e,1)[0];if("Block"!==t.type)return !1;var r=t.value.split(LA.LINEBREAK_MATCHER);return 0<r.length&&r.every((function(e,t){return (0===t||t===r.length-1?/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/:/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*/).test(e)}))}function r(e){var t=b(e,1)[0];if("Block"!==t.type)return !1;var r=t.value.split(LA.LINEBREAK_MATCHER);return /^\*[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/.test(r[0])&&r.slice(1,-1).every((function(e){return /^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]* /.test(e)}))&&/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/.test(r[r.length-1])}function n(e){var r=b(e,1)[0];return "Line"===r.type?function(e){var t=e.map((function(e){return e.value})).filter((function(e){return e.trim().length})).every((function(e){return e.startsWith(" ")}));return e.map((function(e){var r=e.value;return t?r.replace(/^ /,""):r}))}(e):t(e)?function(e){var t=e.value.split(LA.LINEBREAK_MATCHER).filter((function(e,t,r){return 0!==t&&t!==r.length-1})).map((function(e){return e.replace(/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/,"")})),r=t.map((function(e){return e.replace(/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*/,"")})).filter((function(e){return e.trim().length})).every((function(e){return e.startsWith(" ")}));return t.map((function(e){return e.replace(r?/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\* ?/:/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*/,"")}))}(r):function(e){var t=e.value.split(LA.LINEBREAK_MATCHER).map((function(e){return e.replace(/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/,"")})),r="".concat(o.text.slice(e.range[0]-e.loc.start.column,e.range[0]),"   "),n="",i=!0,a=!1,s=void 0;try{for(var u,c=t.entries()[Symbol.iterator]();!(i=(u=c.next()).done);i=!0){var l=b(u.value,2),p=l[0],f=l[1];if(f.trim().length&&0!==p){var h=b(f.match(/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)/),2)[1];if(h.length<r.length){var d=r.slice(h.length-r.length);d.length>n.length&&(n=d);}}}}catch(e){a=!0,s=e;}finally{try{i||null==c.return||c.return();}finally{if(a)throw s}}return t.map((function(e){var t=b(e.match(/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)/),3),i=t[1],a=t[2];return i.length>r.length?"".concat(i.slice(r.length-(n.length+i.length))).concat(a):i.length<r.length?"".concat(i.slice(r.length)).concat(a):a}))}(r)}function i(e){return o.text.slice(e.range[0]-e.loc.start.column,e.range[0])}function a(e,t){return "/* ".concat(t.join("\n".concat(i(e),"   "))," */")}var o=e.getSourceCode(),s=e.options[0]||"starred-block",u={"starred-block":function(t){var r=b(t,1)[0],a=n(t);a.some((function(e){return e.includes("*/")}))||(1<t.length?e.report({loc:{start:r.loc.start,end:t[t.length-1].loc.end},messageId:"expectedBlock",fix:function(e){var n=[r.range[0],t[t.length-1].range[1]];return a.some((function(e){return e.startsWith("/")}))?null:e.replaceTextRange(n,function(e,t){var r=i(e);return "/*\n".concat(t.map((function(e){return "".concat(r," * ").concat(e)})).join("\n"),"\n").concat(r," */")}(r,a))}}):function(){var t=r.value.split(LA.LINEBREAK_MATCHER),n=i(r),a="".concat(n," *");if(!/^\*?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/.test(t[0])){var s=r.value.startsWith("*")?r.range[0]+1:r.range[0];e.report({loc:{start:r.loc.start,end:{line:r.loc.start.line,column:r.loc.start.column+2}},messageId:"startNewline",fix:function(e){return e.insertTextAfterRange([s,s+2],"\n".concat(a))}});}/^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/.test(t[t.length-1])||e.report({loc:{start:{line:r.loc.end.line,column:r.loc.end.column-2},end:r.loc.end},messageId:"endNewline",fix:function(e){return e.replaceTextRange([r.range[1]-2,r.range[1]],"\n".concat(a,"/"))}});for(var u=function(n){var i=o.lines[n-1],s=function(e){return /^[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*/.test(e)}(i)?"alignment":"missingStar";i.startsWith(a)||e.report({loc:{start:{line:n,column:0},end:{line:n,column:i.length}},messageId:s,fix:function(e){var u=o.getIndexFromLoc({line:n,column:0});if("alignment"===s){var c=b(i.match(/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\*)/)||[],2)[1],l=u+(void 0===c?"":c).length;return e.replaceTextRange([u,l],a)}var p,f=b(i.match(/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)/)||[],2)[1],h=void 0===f?"":f,d=u+h.length,m=!0,g=!1,y=void 0;try{for(var v,x=t.entries()[Symbol.iterator]();!(m=(v=x.next()).done);m=!0){var E=b(v.value,2),C=E[0],S=E[1];if(/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/.test(S)){var k=b(o.lines[r.loc.start.line-1+C].match(/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*(?:\/?\*)?([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*))/)||[],3),D=k[1],F=void 0===D?"":D,A=k[2],w=void 0===A?"":A;p="".concat(h.slice(F.length)).concat(w);break}}}catch(e){g=!0,y=e;}finally{try{m||null==x.return||x.return();}finally{if(g)throw y}}return e.replaceTextRange([u,d],"".concat(a).concat(p))}});},c=r.loc.start.line+1;c<=r.loc.end.line;c++)u(c);}());},"separate-lines":function(t){var a=b(t,1)[0];if("Block"===a.type&&!r(t)){var s=n(t),u=o.getTokenAfter(a,{includeComments:!0});u&&a.loc.end.line===u.loc.start.line||e.report({loc:{start:a.loc.start,end:{line:a.loc.start.line,column:a.loc.start.column+2}},messageId:"expectedLines",fix:function(e){return e.replaceText(a,function(e,t){return t.map((function(e){return "// ".concat(e)})).join("\n".concat(i(e)))}(a,s))}});}},"bare-block":function(i){if(!r(i)){var o=b(i,1)[0],s=n(i);"Line"===o.type&&1<s.length&&!s.some((function(e){return e.includes("*/")}))&&e.report({loc:{start:o.loc.start,end:i[i.length-1].loc.end},messageId:"expectedBlock",fix:function(e){return e.replaceTextRange([o.range[0],i[i.length-1].range[1]],a(o,s))}}),t(i)&&e.report({loc:{start:o.loc.start,end:{line:o.loc.start.line,column:o.loc.start.column+2}},messageId:"expectedBareBlock",fix:function(e){return e.replaceText(o,a(o,s))}});}}};return {Program:function(){return o.getAllComments().filter((function(e){return "Shebang"!==e.type})).filter((function(e){return !LA.COMMENTS_IGNORE_PATTERN.test(e.value)})).filter((function(e){var t=o.getTokenBefore(e,{includeComments:!0});return !t||t.loc.end.line<e.loc.start.line})).reduce((function(e,t,r,n){var i=o.getTokenBefore(t,{includeComments:!0});return "Line"===t.type&&r&&"Line"===n[r-1].type&&i&&i.loc.end.line===t.loc.start.line-1&&i===n[r-1]?e[e.length-1].push(t):e.push([t]),e}),[]).filter((function(e){return 1!==e.length||e[0].loc.start.line!==e[0].loc.end.line})).forEach(u[s])}}}},W_={meta:{type:"layout",docs:{description:"enforce newlines between operands of ternary expressions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/multiline-ternary"},schema:[{enum:["always","always-multiline","never"]}],messages:{expectedTestCons:"Expected newline between test and consequent of ternary expression.",expectedConsAlt:"Expected newline between consequent and alternate of ternary expression.",unexpectedTestCons:"Unexpected newline between test and consequent of ternary expression.",unexpectedConsAlt:"Unexpected newline between consequent and alternate of ternary expression."}},create:function(e){function t(t,r,n){e.report({node:t,messageId:"".concat(n?"expected":"unexpected").concat(t===r.test?"TestCons":"ConsAlt")});}var r=e.options[0];return {ConditionalExpression:function(e){var n=LA.isTokenOnSameLine(e.test,e.consequent),i=LA.isTokenOnSameLine(e.consequent,e.alternate);if("never"===r)n||t(e.test,e,!1),i||t(e.consequent,e,!1);else {if("always-multiline"===r&&e.loc.start.line===e.loc.end.line)return;n&&t(e.test,e,!0),i&&t(e.consequent,e,!0);}}}}},$_=["Array","Boolean","Date","Error","Function","Number","Object","RegExp","String","Symbol","BigInt"];function G_(e,t,r){if(Object.prototype.hasOwnProperty.call(e,t)&&!Array.isArray(e[t]))throw new TypeError("".concat(t,", if provided, must be an Array"));return e[t]||r}function z_(e,t){return e[t]=!0,e}var H_={meta:{type:"suggestion",docs:{description:"require constructor names to begin with a capital letter",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/new-cap"},schema:[{type:"object",properties:{newIsCap:{type:"boolean",default:!0},capIsNew:{type:"boolean",default:!0},newIsCapExceptions:{type:"array",items:{type:"string"}},newIsCapExceptionPattern:{type:"string"},capIsNewExceptions:{type:"array",items:{type:"string"}},capIsNewExceptionPattern:{type:"string"},properties:{type:"boolean",default:!0}},additionalProperties:!1}],messages:{upper:"A function with a name starting with an uppercase letter should only be used as a constructor.",lower:"A constructor name should not start with a lowercase letter."}},create:function(e){function t(e){var t="";if("MemberExpression"===e.callee.type){var r=e.callee.property;"Literal"===r.type&&"string"==typeof r.value?t=r.value:"Identifier"===r.type&&!e.callee.computed&&(t=r.name);}else t=e.callee.name;return t}function r(e){var t=e.charAt(0),r=t.toLowerCase();return r===t.toUpperCase()?"non-alpha":t===r?"lower":"upper"}function n(e,t,r,n){var i=f.getText(t.callee);return !(!e[r]&&!e[i])||!(!n||!n.test(i))||("UTC"===r&&"MemberExpression"===t.callee.type?"Identifier"===t.callee.object.type&&"Date"===t.callee.object.name:o&&"MemberExpression"===t.callee.type)}function i(t,r){var n=t.callee;"MemberExpression"===n.type&&(n=n.property),e.report({node:t,loc:n.loc.start,messageId:r});}var a=Object.assign({},e.options[0]);a.newIsCap=!1!==a.newIsCap,a.capIsNew=!1!==a.capIsNew;var o=!1===a.properties,s=G_(a,"newIsCapExceptions",[]).reduce(z_,{}),u=a.newIsCapExceptionPattern?new RegExp(a.newIsCapExceptionPattern,"u"):null,c=function(e){var t=G_(e,"capIsNewExceptions",$_);return t!==$_&&(t=t.concat($_)),t.reduce(z_,{})}(a),l=a.capIsNewExceptionPattern?new RegExp(a.capIsNewExceptionPattern,"u"):null,p={},f=e.getSourceCode();return a.newIsCap&&(p.NewExpression=function(e){var a=t(e);a&&("lower"!==r(a)||n(s,e,a,u)||i(e,"lower"));}),a.capIsNew&&(p.CallExpression=function(e){var a=t(e);a&&("upper"!==r(a)||n(c,e,a,l)||i(e,"upper"));}),p}},K_={meta:{type:"layout",docs:{description:"enforce or disallow parentheses when invoking a constructor with no arguments",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/new-parens"},fixable:"code",schema:{anyOf:[{type:"array",items:[{enum:["always","never"]}],minItems:0,maxItems:1}]},messages:{missing:"Missing '()' invoking a constructor.",unnecessary:"Unnecessary '()' invoking a constructor with no arguments."}},create:function(e){var t="never"!==e.options[0],r=e.getSourceCode();return {NewExpression:function(n){if(0===n.arguments.length){var i=r.getLastToken(n),a=i&&LA.isClosingParenToken(i)&&LA.isOpeningParenToken(r.getTokenBefore(i))&&n.callee.range[1]<n.range[1];t?!a&&e.report({node:n,messageId:"missing",fix:function(e){return e.insertTextAfter(n,"()")}}):a&&e.report({node:n,messageId:"unnecessary",fix:function(e){return [e.remove(r.getTokenBefore(i)),e.remove(i),e.insertTextBefore(n,"("),e.insertTextAfter(n,")")]}});}}}}},J_={meta:{type:"layout",docs:{description:"require or disallow an empty line after variable declarations",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/newline-after-var"},schema:[{enum:["never","always"]}],fixable:"whitespace",messages:{expected:"Expected blank line after variable declarations.",unexpected:"Unexpected blank line after variable declarations."},deprecated:!0,replacedBy:["padding-line-between-statements"]},create:function(e){function t(e){var r=i[e];return i[r+1]?t(r+1):r}var r=e.getSourceCode(),n="never"===e.options[0]?"never":"always",i=r.getAllComments().reduce((function(e,t){return e[t.loc.start.line]=t.loc.end.line,e}),{});return {VariableDeclaration:function(a){var o=function(e){var t=r.getLastToken(e);if("Punctuator"===t.type&&";"===t.value){var n=r.getTokenBefore(t);if(n.loc.end.line!==t.loc.start.line)return n}return t}(a),s=o===r.getLastToken(a)?r.getTokenAfter(a):r.getLastToken(a),u=o.loc.end.line+1;if(s&&!function(e){return "ForStatement"===e||"ForInStatement"===e||"ForOfStatement"===e}(a.parent.type)&&!function(e){return "ExportNamedDeclaration"===e||"ExportSpecifier"===e||"ExportDefaultDeclaration"===e||"ExportAllDeclaration"===e}(a.parent.type)&&!("Keyword"===s.type&&function(e){return "var"===e||"let"===e||"const"===e}(s.value)||function(e){var t=r.getTokenAfter(e);return !t||"Punctuator"===t.type&&"}"===t.value}(a))){var c=s.loc.start.line>u,l=void 0!==i[u];"never"===n&&c&&!l&&e.report({node:a,messageId:"unexpected",data:{identifier:a.name},fix:function(e){var t=r.getText().slice(o.range[1],s.range[0]).split(LA.LINEBREAK_MATCHER);return e.replaceTextRange([o.range[1],s.range[0]],"".concat(t.slice(0,-1).join(""),"\n").concat(t[t.length-1]))}}),"always"!==n||c&&(!l||function(e,r){return e.loc.start.line>t(r)+1}(s,u))||e.report({node:a,messageId:"expected",data:{identifier:a.name},fix:function(e){return (c?t(u):o.loc.end.line)===s.loc.start.line?e.insertTextBefore(s,"\n\n"):e.insertTextBeforeRange([s.range[0]-s.loc.start.column,s.range[1]],"\n")}});}}}}},Q_={meta:{type:"layout",docs:{description:"require an empty line before `return` statements",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/newline-before-return"},fixable:"whitespace",schema:[],messages:{expected:"Expected newline before return statement."},deprecated:!0,replacedBy:["padding-line-between-statements"]},create:function(e){function t(e,t){var r=i.getTokenBefore(e);return t.some((function(e){return r.value===e}))}function r(e){var r=e.parent.type;return e.parent.body?Array.isArray(e.parent.body)?e.parent.body[0]===e:e.parent.body===e:t(e,"IfStatement"===r?["else",")"]:"DoWhileStatement"===r?["do"]:"SwitchCase"===r?[":"]:[")"])}function n(e){var t=e.loc.start.line,r=function(e){var t=i.getTokenBefore(e);return t?t.loc.end.line:0}(e),n=function(e,t){var r=i.getCommentsBefore(e),n=0;return r.length?(r.forEach((function(r){n++,"Block"===r.type&&(n+=r.loc.end.line-r.loc.start.line),r.loc.start.line===t&&n--,r.loc.end.line===e.loc.start.line&&n--;})),n):n}(e,r);return 1<t-r-n}var i=e.getSourceCode();return {ReturnStatement:function(t){r(t)||n(t)||e.report({node:t,messageId:"expected",fix:function(e){if(function(e){var t=i.getCommentsBefore(e),r=t[t.length-1],n=i.getTokenBefore(e);return !(0!==t.length&&(r.loc.end.line!==n.loc.end.line||r.loc.end.line===e.loc.start.line))}(t)){var r=i.getTokenBefore(t),n=t.loc.start.line===r.loc.end.line?"\n\n":"\n";return e.insertTextBefore(t,n)}return null}});}}}},X_={meta:{type:"layout",docs:{description:"require a newline after each call in a method chain",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/newline-per-chained-call"},fixable:"whitespace",schema:[{type:"object",properties:{ignoreChainWithDepth:{type:"integer",minimum:1,maximum:10,default:2}},additionalProperties:!1}],messages:{expected:"Expected line break before `{{callee}}`."}},create:function(e){function t(e){var t=function(e){return e.computed?"[":"."}(e),r=n.getText(e.property).split(LA.LINEBREAK_MATCHER),i=e.computed&&1===r.length?"]":"";return t+r[0]+i}var r=(e.options[0]||{}).ignoreChainWithDepth||2,n=e.getSourceCode();return {"CallExpression:exit":function(i){if(i.callee&&"MemberExpression"===i.callee.type){for(var a=i.callee,o=a.object,s=1;o&&o.callee;)s+=1,o=o.callee.object;s>r&&LA.isTokenOnSameLine(a.object,a.property)&&e.report({node:a.property,loc:a.property.loc.start,messageId:"expected",data:{callee:t(a)},fix:function(e){var t=n.getTokenAfter(a.object,LA.isNotClosingParenToken);return e.insertTextBefore(t,"\n")}});}}}}},Y_=LA.getStaticPropertyName;function Z_(e){return /^(alert|confirm|prompt)$/.test(e)}function eT(e,t){var r=function(e,t){var r=e.references.filter((function(e){return e.identifier.range[0]===t.range[0]&&e.identifier.range[1]===t.range[1]}));return 1===r.length?r[0]:null}(e,t);return r&&r.resolved&&0<r.resolved.defs.length}var tT={meta:{type:"suggestion",docs:{description:"disallow the use of `alert`, `confirm`, and `prompt`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-alert"},schema:[],messages:{unexpected:"Unexpected {{name}}."}},create:function(e){return {CallExpression:function(t){var r=t.callee,n=e.getScope();if("Identifier"===r.type){var i=r.name;!eT(n,r)&&Z_(r.name)&&e.report({node:t,messageId:"unexpected",data:{name:i}});}else if("MemberExpression"===r.type&&function(e,t){return !("global"!==e.type||"ThisExpression"!==t.type)||!("window"!==t.name)&&!eT(e,t)}(n,r.object)){var a=Y_(r);Z_(a)&&e.report({node:t,messageId:"unexpected",data:{name:a}});}}}}};function rT(e){var t=e.type;return "FunctionDeclaration"===t||"FunctionExpression"===t||"ArrowFunctionExpression"===t||"ForOfStatement"===t&&!0===e.await}function nT(e,t){switch(t.type){case"ForStatement":return e===t.test||e===t.update||e===t.body;case"ForOfStatement":case"ForInStatement":return e===t.body;case"WhileStatement":case"DoWhileStatement":return e===t.test||e===t.body;default:return !1}}var iT={meta:{type:"problem",docs:{description:"disallow `await` inside of loops",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-await-in-loop"},schema:[],messages:{unexpectedAwait:"Unexpected `await` inside a loop."}},create:function(e){function t(t){if("ForOfStatement"!==t.type||t.await)for(var r=t,n=r.parent;n&&!rT(n);){if(nT(r,n))return void e.report({node:t,messageId:"unexpectedAwait"});r=n,n=n.parent;}}return {AwaitExpression:t,ForOfStatement:t}}},aT=["^","|","&","<<",">>",">>>","^=","|=","&=","<<=",">>=",">>>=","~"],oT={meta:{type:"suggestion",docs:{description:"disallow bitwise operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-bitwise"},schema:[{type:"object",properties:{allow:{type:"array",items:{enum:aT},uniqueItems:!0},int32Hint:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpected:"Unexpected use of '{{operator}}'."}},create:function(e){function t(t){e.report({node:t,messageId:"unexpected",data:{operator:t.operator}});}function r(e){!function(e){return -1!==aT.indexOf(e.operator)}(e)||function(e){return -1!==i.indexOf(e.operator)}(e)||function(e){return a&&"|"===e.operator&&e.right&&"Literal"===e.right.type&&0===e.right.value}(e)||t(e);}var n=e.options[0]||{},i=n.allow||[],a=!0===n.int32Hint;return {AssignmentExpression:r,BinaryExpression:r,UnaryExpression:r}}},sT={meta:{type:"suggestion",docs:{description:"disallow `catch` clause parameters from shadowing variables in the outer scope",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-catch-shadow"},replacedBy:["no-shadow"],deprecated:!0,schema:[],messages:{mutable:"Value of '{{name}}' may be overwritten in IE 8 and earlier."}},create:function(e){return {"CatchClause[param!=null]":function(t){var r=e.getScope();r.block===t&&(r=r.upper),function(e,t){return null!==LA.getVariableByName(e,t)}(r,t.param.name)&&e.report({node:t,messageId:"mutable",data:{name:t.param.name}});}}}},uT={meta:{type:"problem",docs:{description:"disallow reassigning class members",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/no-class-assign"},schema:[],messages:{class:"'{{name}}' is a class."}},create:function(e){function t(t){LA.getModifyingReferences(t.references).forEach((function(t){e.report({node:t.identifier,messageId:"class",data:{name:t.identifier.name}});}));}function r(r){e.getDeclaredVariables(r).forEach(t);}return {ClassDeclaration:r,ClassExpression:r}}},cT={meta:{type:"problem",docs:{description:"disallow comparing against -0",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-compare-neg-zero"},fixable:null,schema:[],messages:{unexpected:"Do not use the '{{operator}}' operator to compare against -0."}},create:function(e){function t(e){return "UnaryExpression"===e.type&&"-"===e.operator&&"Literal"===e.argument.type&&0===e.argument.value}var r=new Set([">",">=","<","<=","==","===","!=","!=="]);return {BinaryExpression:function(n){r.has(n.operator)&&(t(n.left)||t(n.right))&&e.report({node:n,messageId:"unexpected",data:{operator:n.operator}});}}}},lT=new Set(["IfStatement","WhileStatement","DoWhileStatement","ForStatement","ConditionalExpression"]),pT={DoWhileStatement:"a 'do...while' statement",ForStatement:"a 'for' statement",IfStatement:"an 'if' statement",WhileStatement:"a 'while' statement"},fT={meta:{type:"problem",docs:{description:"disallow assignment operators in conditional expressions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-cond-assign"},schema:[{enum:["except-parens","always"]}],messages:{unexpected:"Unexpected assignment within {{type}}.",missing:"Expected a conditional expression and instead saw an assignment."}},create:function(e){function t(e){return e.parent&&lT.has(e.parent.type)&&e===e.parent.test}function r(e){var r=e;do{if(t(r))return r.parent}while((r=r.parent)&&!LA.isFunction(r));return null}function n(t){t.test&&"AssignmentExpression"===t.test.type&&("ForStatement"===t.type?!LA.isParenthesised(a,t.test):!function(e){var t=a.getTokenBefore(e,1),r=a.getTokenAfter(e,1);return LA.isParenthesised(a,e)&&t&&LA.isOpeningParenToken(t)&&t.range[1]<=e.range[0]&&LA.isClosingParenToken(r)&&r.range[0]>=e.range[1]}(t.test))&&e.report({node:t.test,messageId:"missing"});}var i=e.options[0]||"except-parens",a=e.getSourceCode();return "always"===i?{AssignmentExpression:function(t){var n=r(t);n&&e.report({node:t,messageId:"unexpected",data:{type:pT[n.type]||n.type}});}}:{DoWhileStatement:n,ForStatement:n,IfStatement:n,WhileStatement:n,ConditionalExpression:n}}};var hT={meta:{type:"suggestion",docs:{description:"disallow arrow functions where they could be confused with comparisons",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-confusing-arrow"},fixable:"code",schema:[{type:"object",properties:{allowParens:{type:"boolean",default:!0}},additionalProperties:!1}],messages:{confusing:"Arrow function used ambiguously with a conditional expression."}},create:function(e){var t=e.options[0]||{},r=t.allowParens||void 0===t.allowParens,n=e.getSourceCode();return {ArrowFunctionExpression:function(t){var i=t.body;(function(e){return e&&"ConditionalExpression"===e.type})(i)&&(!r||!LA.isParenthesised(n,i))&&e.report({node:t,messageId:"confusing",fix:function(e){return r&&e.replaceText(t.body,"(".concat(n.getText(t.body),")"))}});}}}},dT={meta:{type:"suggestion",docs:{description:"disallow the use of `console`",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-console"},schema:[{type:"object",properties:{allow:{type:"array",items:{type:"string"},minItems:1,uniqueItems:!0}},additionalProperties:!1}],messages:{unexpected:"Unexpected console statement."}},create:function(e){function t(e){var t=e.identifier;return t&&"console"===t.name}function r(e){var t=e.identifier,r=t.parent;return "MemberExpression"===r.type&&r.object===t&&!function(e){var t=LA.getStaticPropertyName(e);return t&&-1!==i.indexOf(t)}(r)}function n(t){var r=t.identifier.parent;e.report({node:r,loc:r.loc,messageId:"unexpected"});}var i=(e.options[0]||{}).allow||[];return {"Program:exit":function(){var i=e.getScope(),a=LA.getVariableByName(i,"console"),o=a&&0<a.defs.length,s=a?a.references:i.through.filter(t);o||s.filter(r).forEach(n);}}}},mT={meta:{type:"problem",docs:{description:"disallow reassigning `const` variables",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/no-const-assign"},schema:[],messages:{const:"'{{name}}' is constant."}},create:function(e){function t(t){LA.getModifyingReferences(t.references).forEach((function(t){e.report({node:t.identifier,messageId:"const",data:{name:t.identifier.name}});}));}return {VariableDeclaration:function(r){"const"===r.kind&&e.getDeclaredVariables(r).forEach(t);}}}},gT=["===","!==","==","!="],yT=[">","<",">=","<=","in","instanceof"],vT={meta:{type:"problem",docs:{description:"disallow constant expressions in conditions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-constant-condition"},schema:[{type:"object",properties:{checkLoops:{type:"boolean",default:!0}},additionalProperties:!1}],messages:{unexpected:"Unexpected constant condition."}},create:function(e){function t(e,r){switch(e.type){case"Literal":return "||"===r&&!0===e.value||"&&"===r&&!1===e.value;case"UnaryExpression":return "&&"===r&&"void"===e.operator;case"LogicalExpression":return t(e.left,e.operator)||t(e.right,e.operator)}return !1}function r(e,n){switch(e.type){case"Literal":case"ArrowFunctionExpression":case"FunctionExpression":case"ObjectExpression":case"ArrayExpression":return !0;case"UnaryExpression":return !("void"!==e.operator)||"typeof"===e.operator&&n||r(e.argument,!0);case"BinaryExpression":return r(e.left,!1)&&r(e.right,!1)&&"in"!==e.operator;case"LogicalExpression":var i=r(e.left,n),a=r(e.right,n),o=i&&t(e.left,e.operator),s=a&&t(e.right,e.operator);return i&&a||"||"===e.operator&&a&&e.right.value&&(!e.parent||"BinaryExpression"!==e.parent.type||!(gT.includes(e.parent.operator)||yT.includes(e.parent.operator)))||o||s;case"AssignmentExpression":return "="===e.operator&&r(e.right,n);case"SequenceExpression":return r(e.expressions[e.expressions.length-1],n)}return !1}function n(t){l.has(t)&&(l.delete(t),e.report({node:t.test,messageId:"unexpected"}));}function i(t){t.test&&r(t.test,!0)&&e.report({node:t.test,messageId:"unexpected"});}function a(){c.push(l),l=new Set;}function o(){l=c.pop();}function s(e){u&&function(e){e.test&&r(e.test,!0)&&l.add(e);}(e);}var u=!1!==(e.options[0]||{}).checkLoops,c=[],l=new Set;return {ConditionalExpression:i,IfStatement:i,WhileStatement:s,"WhileStatement:exit":n,DoWhileStatement:s,"DoWhileStatement:exit":n,ForStatement:s,"ForStatement > .test":function(e){return s(e.parent)},"ForStatement:exit":n,FunctionDeclaration:a,"FunctionDeclaration:exit":o,FunctionExpression:a,"FunctionExpression:exit":o,YieldExpression:function(){return l.clear()}}}},xT=PA.RegExpValidator,bT=new(function(){function e(){a(this,e),this.ecmaVersion=2018,this._source="",this._controlChars=[],this._validator=new xT(this);}return s(e,[{key:"onPatternEnter",value:function(){this._controlChars=[];}},{key:"onCharacter",value:function(e,t,r){0<=r&&31>=r&&(this._source.codePointAt(e)===r||this._source.slice(e,t).startsWith("\\x")||this._source.slice(e,t).startsWith("\\u"))&&this._controlChars.push("\\x".concat("0".concat(r.toString(16)).slice(-2)));}},{key:"collectControlChars",value:function(e){try{this._source=e,this._validator.validatePattern(e);}catch(e){}return this._controlChars}}]),e}()),ET={meta:{type:"problem",docs:{description:"disallow control characters in regular expressions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-control-regex"},schema:[],messages:{unexpected:"Unexpected control character(s) in regular expression: {{controlChars}}."}},create:function(e){return {Literal:function(t){var r=function(e){return e.regex?e.regex.pattern:"string"!=typeof e.value||"NewExpression"!==e.parent.type&&"CallExpression"!==e.parent.type||"Identifier"!==e.parent.callee.type||"RegExp"!==e.parent.callee.name||e.parent.arguments[0]!==e?null:e.value}(t);if(r){var n=bT.collectControlChars(r);0<n.length&&e.report({node:t,messageId:"unexpected",data:{controlChars:n.join(", ")}});}}}}},CT={meta:{type:"problem",docs:{description:"disallow duplicate class members",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/no-dupe-class-members"},schema:[],messages:{unexpected:"Duplicate name '{{name}}'."}},create:function(e){function t(e,t){var n=r[r.length-1],i="$".concat(e);return n[i]||(n[i]={nonStatic:{init:!1,get:!1,set:!1},static:{init:!1,get:!1,set:!1}}),n[i][t?"static":"nonStatic"]}var r=[];return {Program:function(){r=[];},ClassBody:function(){r.push(Object.create(null));},"ClassBody:exit":function(){r.pop();},MethodDefinition:function(r){if(!r.computed){var n=function(e){switch(e.type){case"Identifier":return e.name;case"Literal":return e.value+"";default:return ""}}(r.key),i=t(n,r.static),a=!1;"get"===r.kind?(a=i.init||i.get,i.get=!0):"set"===r.kind?(a=i.init||i.set,i.set=!0):(a=i.init||i.get||i.set,i.init=!0),a&&e.report({node:r,messageId:"unexpected",data:{name:n}});}}}}};function ST(e,t,r){return t.every((function(t){return r.some((function(r){return e(t,r)}))}))}function kT(e,t){return "LogicalExpression"===t.type&&t.operator===e?[].concat(E(kT(e,t.left)),E(kT(e,t.right))):[t]}var DT=kT.bind(null,"||"),FT=kT.bind(null,"&&"),AT={meta:{type:"problem",docs:{description:"disallow duplicate conditions in if-else-if chains",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-dupe-else-if"},schema:[],messages:{unexpected:"This branch can never execute. Its condition is a duplicate or covered by previous conditions in the if-else-if chain."}},create:function(e){var t=e.getSourceCode(),r=ST.bind(null,(function e(r,n){return !(r.type!==n.type)&&("LogicalExpression"!==r.type||"||"!==r.operator&&"&&"!==r.operator||r.operator!==n.operator?LA.equalTokens(r,n,t):e(r.left,n.left)&&e(r.right,n.right)||e(r.left,n.right)&&e(r.right,n.left))}));return {IfStatement:function(t){for(var n=t.test,i="LogicalExpression"===n.type&&"&&"===n.operator?[n].concat(E(FT(n))):[n],a=function(t,i){t=t.parent;var a=DT(t.test).map(FT);if((i=i.map((function(e){return e.filter((function(e){return !a.some((function(t){return r(t,e)}))}))}))).some((function(e){return 0===e.length})))return e.report({node:n,messageId:"unexpected"}),o=t,s=i,"break";o=t,s=i;},o=t,s=i.map((function(e){return DT(e).map(FT)}));o.parent&&"IfStatement"===o.parent.type&&o.parent.alternate===o;){if("break"===a(o,s))break}}}}},wT=/^(?:init|get)$/,_T=/^(?:init|set)$/,TT=function(){function e(t,r){a(this,e),this.upper=t,this.node=r,this.properties=new Map;}return s(e,[{key:"getPropertyInfo",value:function(e){var t=LA.getStaticPropertyName(e);return this.properties.has(t)||this.properties.set(t,{get:!1,set:!1}),this.properties.get(t)}},{key:"isPropertyDefined",value:function(e){var t=this.getPropertyInfo(e);return wT.test(e.kind)&&t.get||_T.test(e.kind)&&t.set}},{key:"defineProperty",value:function(e){var t=this.getPropertyInfo(e);wT.test(e.kind)&&(t.get=!0),_T.test(e.kind)&&(t.set=!0);}}]),e}(),PT={meta:{type:"problem",docs:{description:"disallow duplicate keys in object literals",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-dupe-keys"},schema:[],messages:{unexpected:"Duplicate key '{{name}}'."}},create:function(e){var t=null;return {ObjectExpression:function(e){t=new TT(t,e);},"ObjectExpression:exit":function(){t=t.upper;},Property:function(r){var n=LA.getStaticPropertyName(r);"ObjectExpression"!==r.parent.type||null===n||(t.isPropertyDefined(r)&&e.report({node:t.node,loc:r.key.loc,messageId:"unexpected",data:{name:n}}),t.defineProperty(r));}}}},IT={meta:{type:"problem",docs:{description:"disallow duplicate case labels",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-duplicate-case"},schema:[],messages:{unexpected:"Duplicate case label."}},create:function(e){var t=e.getSourceCode();return {SwitchStatement:function(r){var n=new Set,i=!0,a=!1,o=void 0;try{for(var s,u=r.cases[Symbol.iterator]();!(i=(s=u.next()).done);i=!0){var c=s.value;if(c.test){var l=t.getText(c.test);n.has(l)?e.report({node:c,messageId:"unexpected"}):n.add(l);}}}catch(e){a=!0,o=e;}finally{try{i||null==u.return||u.return();}finally{if(a)throw o}}}}}};function BT(e){return e&&e.source&&e.source.value?e.source.value.trim():""}function OT(e,t,r,n,i){-1!==n.indexOf(r)&&e.report({node:t,messageId:i,data:{module:r}});}function LT(e,t,r,n){return function(i){var a=BT(i);a&&(OT(e,i,a,r,"import"),t&&OT(e,i,a,n,"importAs"),r.push(a));}}function NT(e,t,r){return function(n){var i=BT(n);i&&(OT(e,n,i,r,"export"),OT(e,n,i,t,"exportAs"),r.push(i));}}var jT={meta:{type:"problem",docs:{description:"disallow duplicate module imports",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-duplicate-imports"},schema:[{type:"object",properties:{includeExports:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{import:"'{{module}}' import is duplicated.",importAs:"'{{module}}' import is duplicated as export.",export:"'{{module}}' export is duplicated.",exportAs:"'{{module}}' export is duplicated as import."}},create:function(e){var t=(e.options[0]||{}).includeExports,r=[],n=[],i={ImportDeclaration:LT(e,t,r,n)};return t&&(i.ExportNamedDeclaration=NT(e,r,n),i.ExportAllDeclaration=NT(e,r,n)),i}},RT=function(){function e(t,r){a(this,e),this.fixer=t,this.sourceCode=r,this.retainedRange=null;}return s(e,[{key:"retainRange",value:function(e){return this.retainedRange=e,this}},{key:"retainEnclosingFunction",value:function(e){var t=LA.getUpperFunction(e);return this.retainRange(t?t.range:this.sourceCode.ast.range)}},{key:"retainSurroundingTokens",value:function(e){var t=this.sourceCode.getTokenBefore(e)||e,r=this.sourceCode.getTokenAfter(e)||e;return this.retainRange([t.range[0],r.range[1]])}},{key:"replaceTextRange",value:function(e,t){var r;return r=this.retainedRange?[Math.min(this.retainedRange[0],e[0]),Math.max(this.retainedRange[1],e[1])]:e,this.fixer.replaceTextRange(r,this.sourceCode.text.slice(r[0],e[0])+t+this.sourceCode.text.slice(e[1],r[1]))}},{key:"remove",value:function(e){return this.replaceTextRange(e.range,"")}}]),e}(),MT={meta:{type:"suggestion",docs:{description:"disallow `else` blocks after `return` statements in `if` statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-else-return"},schema:[{type:"object",properties:{allowElseIf:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"code",messages:{unexpected:"Unnecessary 'else' after 'return'."}},create:function(e){function t(e,t){if("FunctionDeclaration"===e.type)return !1;if("BlockStatement"!==e.type)return !0;var r=t.childScopes.find((function(t){return t.block===e}));return !r||function(e,t){if(0===e.length)return !0;var r=t.variableScope;if(t.variables.filter((function(e){return 0<e.defs.length})).some((function(t){var r=t.name;return e.includes(r)})))return !1;if(t!==r&&"catch"===t.upper.type&&t.upper.variables.some((function(t){var r=t.name;return e.includes(r)})))return !1;if(t.variables.filter((function(e){var t=e.defs,r=e.references;return 0===t.length&&0<r.length})).some((function(t){var r=t.name;return e.includes(r)})))return !1;if(t.through.some((function(t){return e.includes(t.identifier.name)})))return !1;if(t!==r){var n=t.block.range;if(r.variables.filter((function(t){var r=t.name;return e.includes(r)})).some((function(e){return e.defs.some((function(e){var t=e.node.range;return n[0]<=t[0]&&t[1]<=n[1]}))})))return !1}return !0}(r.variables.map((function(e){return e.name})),t)}function r(r){var n=e.getScope();e.report({node:r,messageId:"unexpected",fix:function(i){if(!t(r,n))return null;var a,o,s=e.getSourceCode(),u=s.getFirstToken(r),c=s.getTokenBefore(u),l=s.getText(r),p=s.getTokenBefore(c);o="Punctuator"===u.type&&"{"===u.value?s.getTokenAfter(u):u;var f="BlockStatement"!==r.parent.consequent.type&&";"!==p.value,h=/^[\(\+\x2D\/\[`]/.test(o.value);if(f&&h)return null;var d=s.getLastToken(r),m=s.getTokenBefore(d);if(";"!==m.value){var g=s.getTokenAfter(d),y=g&&/^[\(\+\x2D\/\[`]/.test(g.value),v=g&&g.loc.start.line===m.loc.start.line;if(y||v&&"}"!==g.value)return null}return a="Punctuator"===u.type&&"{"===u.value?l.slice(1,-1):l,new RT(i,s).retainEnclosingFunction(r).replaceTextRange([c.range[0],r.range[1]],a)}});}function n(e){return "ReturnStatement"===e.type}function i(e){if("BlockStatement"===e.type){var t=e.body,r=t[t.length-1];return r&&n(r)}return n(e)}function a(e){return n(e)||function(e){return "IfStatement"===e.type&&function(e){return e.alternate&&e.consequent}(e)&&i(e.alternate)&&i(e.consequent)}(e)}function o(e){return "BlockStatement"===e.type?e.body.some(a):a(e)}return {"IfStatement:exit":!(e.options[0]&&!1===e.options[0].allowElseIf)?function(e){var t=e.parent;if(LA.STATEMENT_LIST_PARENTS.has(t.type)){for(var n,i=[],a=e;"IfStatement"===a.type;a=a.alternate){if(!a.alternate)return;i.push(a.consequent),n=a.alternate;}i.every(o)&&r(n);}}:function(e){var t=e.parent;if(LA.STATEMENT_LIST_PARENTS.has(t.type)){var n=e.alternate;n&&o(e.consequent)&&r(n);}}}}},VT=/^\/((?:[\0-Z\]-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\\(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\[((?:[\0-\[\^-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\\(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))+\])*\/[gimsuy]*$/,UT={meta:{type:"problem",docs:{description:"disallow empty character classes in regular expressions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-empty-character-class"},schema:[],messages:{unexpected:"Empty class."}},create:function(e){var t=e.getSourceCode();return {Literal:function(r){var n=t.getFirstToken(r);"RegularExpression"!==n.type||VT.test(n.value)||e.report({node:r,messageId:"unexpected"});}}}};var qT={meta:{type:"suggestion",docs:{description:"disallow empty functions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-empty-function"},schema:[{type:"object",properties:{allow:{type:"array",items:{enum:Object.freeze(["functions","arrowFunctions","generatorFunctions","methods","generatorMethods","getters","setters","constructors"])},uniqueItems:!0}},additionalProperties:!1}],messages:{unexpected:"Unexpected empty {{name}}."}},create:function(e){function t(t){var i=function(e){var t=e.parent,r="";if("ArrowFunctionExpression"===e.type)return "arrowFunctions";if("Property"===t.type){if("get"===t.kind)return "getters";if("set"===t.kind)return "setters";r=t.method?"methods":"functions";}else if("MethodDefinition"===t.type){if("get"===t.kind)return "getters";if("set"===t.kind)return "setters";if("constructor"===t.kind)return "constructors";r="methods";}else r="functions";var n="";if(e.generator)n="generator";else {if(!e.async)return r;n="async";}return n+r[0].toUpperCase()+r.slice(1)}(t),a=LA.getFunctionNameWithKind(t),o=n.getTokens(t.body,{includeComments:!0,filter:LA.isCommentToken});-1===r.indexOf(i)&&"BlockStatement"===t.body.type&&0===t.body.body.length&&0===o.length&&e.report({node:t,loc:t.body.loc.start,messageId:"unexpected",data:{name:a}});}var r=(e.options[0]||{}).allow||[],n=e.getSourceCode();return {ArrowFunctionExpression:t,FunctionDeclaration:t,FunctionExpression:t}}},WT={meta:{type:"suggestion",docs:{description:"disallow empty block statements",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-empty"},schema:[{type:"object",properties:{allowEmptyCatch:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpected:"Empty {{type}} statement."}},create:function(e){var t=(e.options[0]||{}).allowEmptyCatch||!1,r=e.getSourceCode();return {BlockStatement:function(n){0!==n.body.length||LA.isFunction(n.parent)||t&&"CatchClause"===n.parent.type||0<r.getCommentsInside(n).length||e.report({node:n,messageId:"unexpected",data:{type:"block"}});},SwitchStatement:function(t){(void 0===t.cases||0===t.cases.length)&&e.report({node:t,messageId:"unexpected",data:{type:"switch"}});}}}},$T=Object.freeze(["global","window"]);function GT(e,t){return "Identifier"===e.type&&e.name===t}function zT(e,t){switch(e.type){case"Literal":return e.value===t;case"TemplateLiteral":return 0===e.expressions.length&&e.quasis[0].value.cooked===t;default:return !1}}function HT(e,t){return "MemberExpression"===e.type&&(e.computed?zT:GT)(e.property,t)}var KT={meta:{type:"suggestion",docs:{description:"disallow the use of `eval()`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-eval"},schema:[{type:"object",properties:{allowIndirect:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpected:"eval can be harmful."}},create:function(e){function t(t){var r=e.getScope().isStrict;o={upper:o,node:t,strict:r,defaultThis:!1,initialized:r};}function r(){o=o.upper;}function n(t){var r=t.parent,n="MemberExpression"===t.type?t.property:t,i="CallExpression"===r.type&&r.callee===t?r:t;e.report({node:i,loc:n.loc.start,messageId:"unexpected"});}var i=!(!e.options[0]||!e.options[0].allowIndirect),a=e.getSourceCode(),o=null;return i?{"CallExpression:exit":function(e){var t=e.callee;GT(t,"eval")&&n(t);}}:{"CallExpression:exit":function(e){var t=e.callee;GT(t,"eval")&&n(t);},Program:function(t){var r=e.getScope(),n=e.parserOptions.ecmaFeatures||{},i=r.isStrict||"module"===t.sourceType||n.globalReturn&&r.childScopes[0].isStrict;o={upper:null,node:t,strict:i,defaultThis:!0,initialized:!0};},"Program:exit":function(){var t=e.getScope();r(),function(e){var t=LA.getVariableByName(e,"eval");if(t)for(var r=t.references,i=0;i<r.length;++i){var a=r[i].identifier;"eval"!==a.name||LA.isCallee(a)||n(a);}}(t),function(e){for(var t=0;t<$T.length;++t){var r=$T[t],i=LA.getVariableByName(e,r);if(i)for(var a=i.references,o=0;o<a.length;++o){for(var s=a[o].identifier.parent;HT(s,r);)s=s.parent;HT(s,"eval")&&n(s);}}}(t);},FunctionDeclaration:t,"FunctionDeclaration:exit":r,FunctionExpression:t,"FunctionExpression:exit":r,ArrowFunctionExpression:t,"ArrowFunctionExpression:exit":r,ThisExpression:function(e){HT(e.parent,"eval")&&(!o.initialized&&(o.initialized=!0,o.defaultThis=LA.isDefaultThisBinding(o.node,a)),!o.strict&&o.defaultThis&&n(e.parent));}}}},JT={meta:{type:"problem",docs:{description:"disallow reassigning exceptions in `catch` clauses",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-ex-assign"},schema:[],messages:{unexpected:"Do not assign to the exception parameter."}},create:function(e){function t(t){LA.getModifyingReferences(t.references).forEach((function(t){e.report({node:t.identifier,messageId:"unexpected"});}));}return {CatchClause:function(r){e.getDeclaredVariables(r).forEach(t);}}}},QT=new Set(["defineProperty","defineProperties"]),XT={meta:{type:"suggestion",docs:{description:"disallow extending native types",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-extend-native"},schema:[{type:"object",properties:{exceptions:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1}],messages:{unexpected:"{{builtin}} prototype is read only, properties should not be added."}},create:function(e){function t(t,r){e.report({node:t,messageId:"unexpected",data:{builtin:r}});}function r(e){return !(!e||!e.parent||"MemberExpression"!==e.parent.type||e.parent.object!==e||"prototype"!==LA.getStaticPropertyName(e.parent))}function n(e){!function(e){return !(!r(e)||"MemberExpression"!==e.parent.parent.type||"AssignmentExpression"!==e.parent.parent.parent.type||e.parent.parent.parent.left!==e.parent.parent)}(e)?function(e){return !(!r(e)||"CallExpression"!==e.parent.parent.type||e.parent.parent.arguments[0]!==e.parent||"MemberExpression"!==e.parent.parent.callee.type||"Identifier"!==e.parent.parent.callee.object.type||"Object"!==e.parent.parent.callee.object.name||"Identifier"!==e.parent.parent.callee.property.type||!QT.has(e.parent.parent.callee.property.name))}(e)&&t(e.parent.parent,e.name):t(e.parent.parent.parent,e.name);}var i=e.options[0]||{},a=new Set(i.exceptions||[]),o=new Set(Object.keys(Fy.globals.builtin).filter((function(e){return e[0].toUpperCase()===e[0]})).filter((function(e){return !a.has(e)})));return {"Program:exit":function(){var t=e.getScope();o.forEach((function(e){var r=t.set.get(e);r&&r.references&&r.references.map((function(e){return e.identifier})).forEach(n);}));}}}},YT=new Set(["Literal","Identifier","ThisExpression","FunctionExpression"]),ZT={meta:{type:"suggestion",docs:{description:"disallow unnecessary calls to `.bind()`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-extra-bind"},schema:[],fixable:"code",messages:{unexpected:"The function binding is unnecessary."}},create:function(e){function t(t){e.report({node:t.parent.parent,messageId:"unexpected",loc:t.parent.property.loc.start,fix:function(e){if(t.parent.parent.arguments.length&&!function(e){return YT.has(e.type)}(t.parent.parent.arguments[0]))return null;var r=a.getFirstTokenBetween(t.parent.object,t.parent.property,LA.isNotClosingParenToken),n=a.getLastToken(t.parent.parent);return a.commentsExistBetween(r,n)?null:e.removeRange([r.range[0],t.parent.parent.range[1]])}});}function r(e){var t=e.parent,r=t.parent;return r&&"CallExpression"===r.type&&r.callee===t&&1===r.arguments.length&&"SpreadElement"!==r.arguments[0].type&&"MemberExpression"===t.type&&t.object===e&&"bind"===LA.getStaticPropertyName(t)}function n(e){o={isBound:r(e),thisFound:!1,upper:o};}function i(e){o.isBound&&!o.thisFound&&t(e),o=o.upper;}var a=e.getSourceCode(),o=null;return {"ArrowFunctionExpression:exit":function(e){r(e)&&t(e);},FunctionDeclaration:n,"FunctionDeclaration:exit":i,FunctionExpression:n,"FunctionExpression:exit":i,ThisExpression:function(){o&&(o.thisFound=!0);}}}},eP={meta:{type:"suggestion",docs:{description:"disallow unnecessary boolean casts",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-extra-boolean-cast"},schema:[],fixable:"code",messages:{unexpectedCall:"Redundant Boolean call.",unexpectedNegation:"Redundant double negation."}},create:function(e){function t(e,t){return -1!==i.indexOf(t.type)&&e===t.test||"UnaryExpression"===t.type&&"!"===t.operator}function r(e){return !!n.getCommentsInside(e).length}var n=e.getSourceCode(),i=["IfStatement","DoWhileStatement","WhileStatement","ConditionalExpression","ForStatement"];return {UnaryExpression:function(i){var a=e.getAncestors(),o=a.pop(),s=a.pop();"!"!==i.operator||"UnaryExpression"!==o.type||"!"!==o.operator||(t(o,s)||("CallExpression"===s.type||"NewExpression"===s.type)&&"Identifier"===s.callee.type&&"Boolean"===s.callee.name)&&e.report({node:o,messageId:"unexpectedNegation",fix:function(e){if(r(o))return null;var t="",a=n.getTokenBefore(o),s=n.getFirstToken(i.argument);return a&&a.range[1]===o.range[0]&&!LA.canTokensBeAdjacent(a,s)&&(t=" "),e.replaceText(o,t+n.getText(i.argument))}});},CallExpression:function(i){var a=i.parent;"Identifier"!==i.callee.type||"Boolean"!==i.callee.name||t(i,a)&&e.report({node:i,messageId:"unexpectedCall",fix:function(e){if(!i.arguments.length){if("UnaryExpression"===a.type&&"!"===a.operator){if(r(a))return null;var t="",o=n.getTokenBefore(a);return o&&o.range[1]===a.range[0]&&!LA.canTokensBeAdjacent(o,"true")&&(t=" "),e.replaceText(a,t+"true")}return r(i)?null:e.replaceText(i,"false")}if(1<i.arguments.length||"SpreadElement"===i.arguments[0].type||r(i))return null;var s=i.arguments[0];return LA.getPrecedence(s)<LA.getPrecedence(i.parent)?e.replaceText(i,"(".concat(n.getText(s),")")):e.replaceText(i,n.getText(s))}});}}}},tP={meta:{type:"suggestion",docs:{description:"disallow unnecessary labels",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-extra-label"},schema:[],fixable:"code",messages:{unexpected:"This label '{{name}}' is unnecessary."}},create:function(e){function t(e){a={label:"LabeledStatement"===e.parent.type?e.parent.label:null,breakable:!0,upper:a};}function r(){a=a.upper;}function n(t){if(t.label)for(var r=t.label,n=a;null!==n;n=n.upper)if(n.breakable||n.label&&n.label.name===r.name)return void(n.breakable&&n.label&&n.label.name===r.name&&e.report({node:r,messageId:"unexpected",data:r,fix:function(e){var n=i.getFirstToken(t);return i.commentsExistBetween(n,r)?null:e.removeRange([n.range[1],r.range[1]])}}))}var i=e.getSourceCode(),a=null;return {WhileStatement:t,"WhileStatement:exit":r,DoWhileStatement:t,"DoWhileStatement:exit":r,ForStatement:t,"ForStatement:exit":r,ForInStatement:t,"ForInStatement:exit":r,ForOfStatement:t,"ForOfStatement:exit":r,SwitchStatement:t,"SwitchStatement:exit":r,LabeledStatement:function(e){LA.isBreakableStatement(e.body)||(a={label:e.label,breakable:!1,upper:a});},"LabeledStatement:exit":function(e){LA.isBreakableStatement(e.body)||(a=a.upper);},BreakStatement:n,ContinueStatement:n}}},rP=Fy.require$$0.isParenthesized,nP={meta:{type:"layout",docs:{description:"disallow unnecessary parentheses",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-extra-parens"},fixable:"code",schema:{anyOf:[{type:"array",items:[{enum:["functions"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["all"]},{type:"object",properties:{conditionalAssign:{type:"boolean"},nestedBinaryExpressions:{type:"boolean"},returnAssign:{type:"boolean"},ignoreJSX:{enum:["none","all","single-line","multi-line"]},enforceForArrowConditionals:{type:"boolean"},enforceForSequenceExpressions:{type:"boolean"},enforceForNewInMemberExpressions:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},messages:{unexpected:"Unnecessary parentheses around expression."}},create:function(e){function t(e){if("JSXElement"===e.type||"JSXFragment"===e.type){var t=e.loc.start.line===e.loc.end.line;switch(P){case"all":return !1;case"multi-line":return t;case"single-line":return !t}}return !("SequenceExpression"===e.type&&B)&&(A||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type)}function r(e){return rP(1,e,k)}function n(e){return rP(2,e,k)}function i(e){return t(e)&&r(e)}function a(e){return t(e)&&n(e)}function o(e){return w&&"AssignmentExpression"===e.test.type}function s(e){var t=k.getLastToken(e),r=k.getTokenBefore(t);return 0<e.arguments.length||LA.isOpeningParenToken(r)&&LA.isClosingParenToken(t)&&e.callee.range[1]<e.range[1]}function u(e){return !("AssignmentExpression"!==e.type&&("ConditionalExpression"!==e.type||"AssignmentExpression"!==e.consequent.type&&"AssignmentExpression"!==e.alternate.type)&&!(e.left&&"AssignmentExpression"===e.left.type||e.right&&"AssignmentExpression"===e.right.type))}function c(e){return !(!T||!function(e){for(var t=e;t;t=t.parent)if("ReturnStatement"===t.type||"ArrowFunctionExpression"===t.type&&"BlockStatement"!==t.body.type)return !0;return !1}(e))&&("ReturnStatement"===e.type?e.argument&&u(e.argument):"ArrowFunctionExpression"===e.type&&"BlockStatement"!==e.body.type?u(e.body):u(e))}function l(e,t){return e.loc.end.line===t.loc.start.line?i(t):a(t)}function p(e){return "CallExpression"===e.type&&"FunctionExpression"===e.callee.type}function f(t){function i(){e.report({node:t,loc:a.loc,messageId:"unexpected",fix:function(e){var r=k.text.slice(a.range[1],o.range[0]);return e.replaceTextRange([a.range[0],o.range[1]],(function(e){var t=k.getTokenBefore(e),r=k.getTokenBefore(e,1),n=k.getFirstToken(e);return r&&r.range[1]===t.range[0]&&t.range[1]===n.range[0]&&!LA.canTokensBeAdjacent(r,n)}(t)?" ":"")+r+(function(e){var t=k.getTokensAfter(e,{count:2}),r=t[0],n=t[1],i=k.getLastToken(e);return r&&n&&!k.isSpaceBetweenTokens(r,n)&&!LA.canTokensBeAdjacent(i,n)}(t)?" ":""))}});}var a=k.getTokenBefore(t),o=k.getTokenAfter(t);if(!n(t)){if(D.has(k.getFirstToken(t)))return;if(p(t)&&!r(t.callee))return}return S?void S.reports.push({node:t,finishReport:i}):void i()}function h(e){"UnaryExpression"===e.type&&"BinaryExpression"===e.argument.type&&"**"===e.argument.operator||i(e.argument)&&F(e.argument)>=F(e)&&f(e.argument);}function d(e){var t=e.callee;if(i(t)&&F(t)>=F(e)){var r="NewExpression"===t.type&&!s(t);!a(t)&&(p(e)||r||"MemberExpression"===t.type&&function(e){for(var t=e.object,r=e.object.type;"MemberExpression"===r;)r=(t=t.object).type;return "CallExpression"===r}(t))||f(e.callee);}e.arguments.filter((function(e){return i(e)&&F(e)>=L})).forEach(f);}function m(e){var t=F(e),r=F(e.left),n=F(e.right),a="**"===e.operator,o=_&&("BinaryExpression"===e.left.type||"LogicalExpression"===e.left.type)||"UnaryExpression"===e.left.type&&a,s=_&&("BinaryExpression"===e.right.type||"LogicalExpression"===e.right.type);!o&&i(e.left)&&(r>t||r===t&&!a)&&f(e.left),!s&&i(e.right)&&(n>t||n===t&&a)&&f(e.right);}function g(e){e.superClass&&((F(e.superClass)>N?i(e.superClass):a(e.superClass))&&f(e.superClass));}function y(e){(F(e.argument)>=L?i(e.argument):a(e.argument))&&f(e.argument);}function v(e){var t=r(e)?k.getTokenBefore(e):k.getFirstToken(e),n=k.getTokenAfter(t,LA.isNotOpeningParenToken),a=n?k.getTokenAfter(n):null,o=n?k.getTokenAfter(n,LA.isNotClosingParenToken):null;LA.isOpeningParenToken(t)&&(LA.isOpeningBraceToken(n)||"Keyword"===n.type&&("function"===n.value||"class"===n.value||"let"===n.value&&o&&(LA.isOpeningBracketToken(o)||"Identifier"===o.type))||n&&"Identifier"===n.type&&"async"===n.value&&a&&"Keyword"===a.type&&"function"===a.value)&&D.add(n),i(e)&&f(e);}function x(e,t){return function(e,t){for(var r=[e],n=e;n!==t;){if(null===(n=n.parent))throw new Error("Nodes are not in the ancestor-descendant relationship.");r.push(n);}return r}(t,e).reverse()}function b(e,t){switch(e.type){case"ArrayExpression":case"ArrayPattern":case"BlockStatement":case"ObjectExpression":case"ObjectPattern":case"TemplateLiteral":return !0;case"ArrowFunctionExpression":case"FunctionExpression":return e.params.includes(t);case"CallExpression":case"NewExpression":return e.arguments.includes(t);case"MemberExpression":return e.computed&&e.property===t;case"ConditionalExpression":return e.consequent===t;default:return !1}}function C(e){return S.reports.some((function(t){return t.node===e}))}var S,k=e.getSourceCode(),D=new WeakSet,F=LA.getPrecedence,A="functions"!==e.options[0],w=A&&e.options[1]&&!1===e.options[1].conditionalAssign,_=A&&e.options[1]&&!1===e.options[1].nestedBinaryExpressions,T=A&&e.options[1]&&!1===e.options[1].returnAssign,P=A&&e.options[1]&&e.options[1].ignoreJSX,I=A&&e.options[1]&&!1===e.options[1].enforceForArrowConditionals,B=A&&e.options[1]&&!1===e.options[1].enforceForSequenceExpressions,O=A&&e.options[1]&&!1===e.options[1].enforceForNewInMemberExpressions,L=F({type:"AssignmentExpression"}),N=F({type:"UpdateExpression"});return {ArrayExpression:function(e){e.elements.filter((function(e){return e&&i(e)&&F(e)>=L})).forEach(f);},ArrowFunctionExpression:function(e){if(!c(e)&&("ConditionalExpression"!==e.body.type||!I||n(e.body))&&"BlockStatement"!==e.body.type){var t=k.getFirstToken(e.body,LA.isNotOpeningParenToken),r=k.getTokenBefore(t);LA.isOpeningParenToken(r)&&LA.isOpeningBraceToken(t)&&D.add(t),i(e.body)&&F(e.body)>=L&&f(e.body);}},AssignmentExpression:function(e){c(e)||i(e.right)&&F(e.right)>=F(e)&&f(e.right);},BinaryExpression:function(e){S&&"in"===e.operator&&S.inExpressionNodes.push(e),m(e);},CallExpression:d,ClassBody:function(e){e.body.filter((function(e){return "MethodDefinition"===e.type&&e.computed&&e.key&&i(e.key)&&F(e.key)>=L})).forEach((function(e){return f(e.key)}));},ConditionalExpression:function(e){c(e)||(i(e.test)&&F(e.test)>=F({type:"LogicalExpression",operator:"||"})&&f(e.test),i(e.consequent)&&F(e.consequent)>=L&&f(e.consequent),i(e.alternate)&&F(e.alternate)>=L&&f(e.alternate));},DoWhileStatement:function(e){i(e.test)&&!o(e)&&f(e.test);},ExportDefaultDeclaration:function(e){return v(e.declaration)},ExpressionStatement:function(e){return v(e.expression)},"ForInStatement, ForOfStatement":function(e){if("VariableDeclarator"!==e.left.type){var t=k.getFirstToken(e.left,LA.isNotOpeningParenToken);"let"===t.value&&(t.range[1]===e.left.range[1]||LA.isOpeningBracketToken(k.getTokenAfter(t,LA.isNotClosingParenToken)))&&D.add(t);}("ForOfStatement"!==e.type||"SequenceExpression"!==e.right.type)&&i(e.right)&&f(e.right),i(e.left)&&f(e.left);},ForStatement:function(e){e.test&&i(e.test)&&!o(e)&&f(e.test),e.update&&i(e.update)&&f(e.update),e.init&&(S={upper:S,inExpressionNodes:[],reports:[]},i(e.init)&&f(e.init));},"ForStatement > *.init:exit":function(e){S.reports.length&&S.inExpressionNodes.forEach((function(t){for(var i,a=x(e,t),o=0;o<a.length;o++){var s=a[o];if(o<a.length-1)if(b(s,a[o+1]))return;if(r(s)){if(!C(s))return;if(n(s))return;i||(i=s);}}!function(e){S.reports=S.reports.filter((function(t){return t.node!==e}));}(i);})),function(){var e,t,r=S,n=r.upper,i=r.inExpressionNodes,a=r.reports;n?((e=n.inExpressionNodes).push.apply(e,E(i)),(t=n.reports).push.apply(t,E(a))):a.forEach((function(e){return (0, e.finishReport)()})),S=n;}();},IfStatement:function(e){i(e.test)&&!o(e)&&f(e.test);},ImportExpression:function(e){var t=e.source;"SequenceExpression"===t.type?a(t)&&f(t):i(t)&&f(t);},LogicalExpression:m,MemberExpression:function(e){var t=i(e.object);t&&F(e.object)>=F(e)&&(e.computed||!(LA.isDecimalInteger(e.object)||"Literal"===e.object.type&&e.object.regex))&&f(e.object),t&&"CallExpression"===e.object.type&&"NewExpression"!==e.parent.type&&f(e.object),t&&!O&&"NewExpression"===e.object.type&&s(e.object)&&f(e.object),e.computed&&i(e.property)&&f(e.property);},NewExpression:d,ObjectExpression:function(e){e.properties.filter((function(e){var t=e.value;return t&&i(t)&&F(t)>=L})).forEach((function(e){return f(e.value)}));},Property:function(e){if(e.computed){var t=e.key;t&&i(t)&&F(t)>=L&&f(t);}},ReturnStatement:function(e){var t=k.getFirstToken(e);c(e)||e.argument&&l(t,e.argument)&&("Literal"!==e.argument.type||!e.argument.regex)&&f(e.argument);},SequenceExpression:function(e){e.expressions.filter((function(t){return i(t)&&F(t)>=F(e)})).forEach(f);},SwitchCase:function(e){e.test&&i(e.test)&&f(e.test);},SwitchStatement:function(e){i(e.discriminant)&&f(e.discriminant);},ThrowStatement:function(e){l(k.getFirstToken(e),e.argument)&&f(e.argument);},UnaryExpression:h,UpdateExpression:h,AwaitExpression:h,VariableDeclarator:function(e){e.init&&i(e.init)&&F(e.init)>=L&&("Literal"!==e.init.type||!e.init.regex)&&f(e.init);},WhileStatement:function(e){i(e.test)&&!o(e)&&f(e.test);},WithStatement:function(e){i(e.object)&&f(e.object);},YieldExpression:function(e){if(e.argument){var t=k.getFirstToken(e);(F(e.argument)>=F(e)&&l(t,e.argument)||a(e.argument))&&f(e.argument);}},ClassDeclaration:g,ClassExpression:g,SpreadElement:y,SpreadProperty:y,ExperimentalSpreadProperty:y,TemplateLiteral:function(e){e.expressions.filter((function(e){return e&&i(e)})).forEach(f);},AssignmentPattern:function(e){var t=e.right;t&&i(t)&&F(t)>=L&&f(t);}}}},iP={meta:{type:"suggestion",docs:{description:"disallow unnecessary semicolons",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-extra-semi"},fixable:"code",schema:[],messages:{unexpected:"Unnecessary semicolon."}},create:function(e){function t(t){e.report({node:t,messageId:"unexpected",fix:function(r){return new RT(r,e.getSourceCode()).retainSurroundingTokens(t).remove(t)}});}function r(e){for(var r=e;"Punctuator"===r.type&&!LA.isClosingBraceToken(r);r=n.getTokenAfter(r))LA.isSemicolonToken(r)&&t(r);}var n=e.getSourceCode();return {EmptyStatement:function(e){var r=e.parent;-1===["ForStatement","ForInStatement","ForOfStatement","WhileStatement","DoWhileStatement","IfStatement","LabeledStatement","WithStatement"].indexOf(r.type)&&t(e);},ClassBody:function(e){r(n.getFirstToken(e,1));},MethodDefinition:function(e){r(n.getTokenAfter(e));}}}},aP=/fall[s\u017F]?[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]?through/i;function oP(e){return e.reachable}var sP={meta:{type:"problem",docs:{description:"disallow fallthrough of `case` statements",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-fallthrough"},schema:[{type:"object",properties:{commentPattern:{type:"string",default:""}},additionalProperties:!1}],messages:{case:"Expected a 'break' statement before 'case'.",default:"Expected a 'break' statement before 'default'."}},create:function(e){var t,r=e.options[0]||{},n=null,i=e.getSourceCode(),a=null;return t=r.commentPattern?new RegExp(r.commentPattern,"u"):aP,{onCodePathStart:function(e){n=e;},onCodePathEnd:function(){n=n.upper;},SwitchCase:function(r){a&&!function(e,t,r){var n=t.getSourceCode(),i=Fy.lodash.last(n.getCommentsBefore(e));return !(!i||!r.test(i.value))}(r,e,t)&&e.report({messageId:r.test?"case":"default",node:r}),a=null;},"SwitchCase:exit":function(e){var t=i.getTokenAfter(e);n.currentSegments.some(oP)&&(0<e.consequent.length||function(e,t){return t.loc.start.line>e.loc.end.line+1}(e,t))&&Fy.lodash.last(e.parent.cases)!==e&&(a=e);}}}},uP={meta:{type:"suggestion",docs:{description:"disallow leading or trailing decimal points in numeric literals",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-floating-decimal"},schema:[],fixable:"code",messages:{leading:"A leading decimal point can be confused with a dot.",trailing:"A trailing decimal point can be confused with a dot."}},create:function(e){var t=e.getSourceCode();return {Literal:function(r){"number"==typeof r.value&&(r.raw.startsWith(".")&&e.report({node:r,messageId:"leading",fix:function(e){var n=t.getTokenBefore(r),i=n&&n.range[1]===r.range[0]&&!LA.canTokensBeAdjacent(n,"0".concat(r.raw));return e.insertTextBefore(r,i?" 0":"0")}}),r.raw.indexOf(".")===r.raw.length-1&&e.report({node:r,messageId:"trailing",fix:function(e){return e.insertTextAfter(r,"0")}}));}}}},cP={meta:{type:"problem",docs:{description:"disallow reassigning `function` declarations",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-func-assign"},schema:[]},create:function(e){function t(t){LA.getModifyingReferences(t).forEach((function(t){e.report({node:t.identifier,message:"'{{name}}' is a function.",data:{name:t.identifier.name}});}));}function r(e){"FunctionName"===e.defs[0].type&&t(e.references);}function n(t){e.getDeclaredVariables(t).forEach(r);}return {FunctionDeclaration:n,FunctionExpression:n}}},lP=/^(?:i|lastI)ndexOf$/;function pP(e){return "Literal"===e.type&&"number"==typeof e.value||"CallExpression"===e.type&&("Number"===e.callee.name||"parseInt"===e.callee.name||"parseFloat"===e.callee.name)}function fP(e){return LA.isStringLiteral(e)&&(""===e.value||"TemplateLiteral"===e.type&&1===e.quasis.length&&""===e.quasis[0].value.cooked)}function hP(e){return fP(e.left)?e.right:e.left}var dP={meta:{type:"suggestion",docs:{description:"disallow shorthand type conversions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-implicit-coercion"},fixable:"code",schema:[{type:"object",properties:{boolean:{type:"boolean",default:!0},number:{type:"boolean",default:!0},string:{type:"boolean",default:!0},allow:{type:"array",items:{enum:["~","!!","+","*"]},uniqueItems:!0}},additionalProperties:!1}]},create:function(e){function t(t,r,i){e.report({node:t,message:"use `{{recommendation}}` instead.",data:{recommendation:r},fix:function(e){if(!i)return null;var a=n.getTokenBefore(t);return a&&a.range[1]===t.range[0]&&!LA.canTokensBeAdjacent(a,r)?e.replaceText(t," ".concat(r)):e.replaceText(t,r)}});}var r=function(e){return {boolean:!("boolean"in e)||e.boolean,number:!("number"in e)||e.number,string:!("string"in e)||e.string,allow:e.allow||[]}}(e.options[0]||{}),n=e.getSourceCode();return {UnaryExpression:function(e){0<=r.allow.indexOf("!!")||!r.boolean||!function(e){return "!"===e.operator&&"UnaryExpression"===e.argument.type&&"!"===e.argument.operator}(e)||t(e,"Boolean(".concat(n.getText(e.argument.argument),")"),!0);0<=r.allow.indexOf("~")||!r.boolean||!function(e){return "~"===e.operator&&"CallExpression"===e.argument.type&&"MemberExpression"===e.argument.callee.type&&"Identifier"===e.argument.callee.property.type&&lP.test(e.argument.callee.property.name)}(e)||t(e,"".concat(n.getText(e.argument)," !== -1"),!1);0<=r.allow.indexOf("+")||!r.number||"+"!==e.operator||pP(e.argument)||t(e,"Number(".concat(n.getText(e.argument),")"),!0);},"BinaryExpression:exit":function(e){var i=0<=r.allow.indexOf("*"),a=!i&&r.number&&function(e){return "*"===e.operator&&("Literal"===e.left.type&&1===e.left.value||"Literal"===e.right.type&&1===e.right.value)}(e)&&function(e){var t=e.left,r=e.right;return "BinaryExpression"===r.type||pP(r)?"BinaryExpression"===t.type||pP(t)?null:t:r}(e);a&&t(e,"Number(".concat(n.getText(a),")"),!0);!(i=0<=r.allow.indexOf("+"))&&r.string&&function(e){return "+"===e.operator&&(fP(e.left)&&!LA.isStringLiteral(e.right)||fP(e.right)&&!LA.isStringLiteral(e.left))}(e)&&t(e,"String(".concat(n.getText(hP(e)),")"),!0);},AssignmentExpression:function(e){if(!(0<=r.allow.indexOf("+"))&&r.string&&function(e){return "+="===e.operator&&fP(e.right)}(e)){var i=n.getText(hP(e));t(e,"".concat(i," = String(").concat(i,")"),!0);}}}}},mP=Fy.require$$0,gP=mP.findVariable,yP=mP.getPropertyName,vP={Object:new Set(["assign","defineProperties","defineProperty","freeze","setPrototypeOf"]),Reflect:new Set(["defineProperty","deleteProperty","set","setPrototypeOf"])};function xP(e,t){var r=e.parent;return "MemberExpression"===r.type&&r.object===e&&(function(e){var t=e.parent;return "AssignmentExpression"===t.type&&t.left===e||"ArrayPattern"===t.type||"Property"===t.type&&t.value===e&&"ObjectPattern"===t.parent.type||"RestElement"===t.type||"AssignmentPattern"===t.type&&t.left===e}(r)||function(e){var t=e.parent;return "UpdateExpression"===t.type&&t.argument===e||"UnaryExpression"===t.type&&"delete"===t.operator&&t.argument===e}(r)||function(e){var t=e.parent;return "ForInStatement"===t.type&&t.left===e||"ForOfStatement"===t.type&&t.left===e}(r))||function(e,t){var r=e.parent;if("CallExpression"===r.type&&r.arguments[0]===e&&"MemberExpression"===r.callee.type&&"Identifier"===r.callee.object.type){var n=r.callee,i=n.object;if(Object.keys(vP).includes(i.name)){var a=gP(t,i);return null!==a&&"global"===a.scope.type&&vP[i.name].has(yP(n,t))}}return !1}(e,t)}function bP(e){for(var t=e.parent;t&&"AssignmentExpression"!==t.type&&"UpdateExpression"!==t.type&&"UnaryExpression"!==t.type&&"CallExpression"!==t.type&&"ForInStatement"!==t.type&&"ForOfStatement"!==t.type;)t=t.parent;return t||e}var EP={meta:{type:"problem",docs:{description:"disallow assigning to imported bindings",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-import-assign"},schema:[],messages:{readonly:"'{{name}}' is read-only.",readonlyMember:"The members of '{{name}}' are read-only."}},create:function(e){return {ImportDeclaration:function(t){var r=e.getScope(),n=!0,i=!1,a=void 0;try{for(var o,s=e.getDeclaredVariables(t)[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value,c=u.defs.some((function(e){return "ImportNamespaceSpecifier"===e.node.type})),l=null,p=!0,f=!1,h=void 0;try{for(var d,m=u.references[Symbol.iterator]();!(p=(d=m.next()).done);p=!0){var g=d.value,y=g.identifier;y!==l&&(l=y,g.isWrite()?e.report({node:bP(y),messageId:"readonly",data:{name:y.name}}):c&&xP(y,r)&&e.report({node:bP(y),messageId:"readonlyMember",data:{name:y.name}}));}}catch(e){f=!0,h=e;}finally{try{p||null==m.return||m.return();}finally{if(f)throw h}}}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}}}}},CP={meta:{type:"suggestion",docs:{description:"disallow inline comments after code",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-inline-comments"},schema:[]},create:function(e){function t(t){var n=r.lines[t.loc.start.line-1]+"",i=r.lines[t.loc.end.line-1]+"",a=n.slice(0,t.loc.start.column).trim(),o=i.slice(t.loc.end.column).trim(),s=!a,u=!o;if(!s||!u){if((s||"{"===a)&&(u||"}"===o)){var c=r.getNodeByRangeIndex(t.range[0]);if(c&&"JSXEmptyExpression"===c.type)return}LA.isDirectiveComment(t)||e.report({node:t,message:"Unexpected comment inline with code."});}}var r=e.getSourceCode();return {Program:function(){r.getAllComments().filter((function(e){return "Shebang"!==e.type})).forEach(t);}}}},SP=new(PA.RegExpValidator)({ecmaVersion:2018}),kP=/[gimsuy]/g,DP=void 0,FP={meta:{type:"problem",docs:{description:"disallow invalid regular expression strings in `RegExp` constructors",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-invalid-regexp"},schema:[{type:"object",properties:{allowConstructorFlags:{type:"array",items:{type:"string"}}},additionalProperties:!1}]},create:function(e){function t(e){return e&&"Literal"===e.type&&"string"==typeof e.value}function r(e,t){try{return SP.validatePattern(e,DP,DP,t),null}catch(e){return e.message}}var n=e.options[0],i=null;if(n&&n.allowConstructorFlags){var a=n.allowConstructorFlags.join("").replace(kP,"");a&&(i=new RegExp("[".concat(a,"]"),"giu"));}return {"CallExpression, NewExpression":function(n){if("Identifier"===n.callee.type&&"RegExp"===n.callee.name&&t(n.arguments[0])){var a=n.arguments[0].value,o=t(n.arguments[1])?n.arguments[1].value:"";i&&(o=o.replace(i,""));var s=function(e){try{return SP.validateFlags(e),null}catch(t){return "Invalid flags supplied to RegExp constructor '".concat(e,"'")}}(o)||(o?r(a,-1!==o.indexOf("u")):r(a,!0)&&r(a,!1));s&&e.report({node:n,message:"{{message}}.",data:{message:s}});}}}}},AP={meta:{type:"suggestion",docs:{description:"disallow `this` keywords outside of classes or class-like objects",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-invalid-this"},schema:[{type:"object",properties:{capIsConstructor:{type:"boolean",default:!0}},additionalProperties:!1}]},create:function(e){function t(t){i.push({init:!e.getScope().isStrict,node:t,valid:!0});}function r(){i.pop();}var n=!1!==(e.options[0]||{}).capIsConstructor,i=[],a=e.getSourceCode();return i.getCurrent=function(){var e=this[this.length-1];return e.init||(e.init=!0,e.valid=!LA.isDefaultThisBinding(e.node,a,{capIsConstructor:n})),e},{Program:function(t){var r=e.getScope(),n=e.parserOptions.ecmaFeatures||{};i.push({init:!0,node:t,valid:!(r.isStrict||"module"===t.sourceType||n.globalReturn&&r.childScopes[0].isStrict)});},"Program:exit":function(){i.pop();},FunctionDeclaration:t,"FunctionDeclaration:exit":r,FunctionExpression:t,"FunctionExpression:exit":r,ThisExpression:function(t){var r=i.getCurrent();r&&!r.valid&&e.report({node:t,message:"Unexpected 'this'."});}}}},wP=/[\x0B\f\x85\xA0\u1680\u180E\u2000-\u200B\u2028\u2029\u202F\u205F\u3000\uFEFF]/,_P=/[\x0B\f\x85\xA0\u1680\u180E\u2000-\u200B\u202F\u205F\u3000\uFEFF]+/gm,TP=/[\u2028\u2029]/gm,PP=LA.createGlobalLinebreakMatcher(),IP={meta:{type:"problem",docs:{description:"disallow irregular whitespace",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-irregular-whitespace"},schema:[{type:"object",properties:{skipComments:{type:"boolean",default:!1},skipStrings:{type:"boolean",default:!0},skipTemplates:{type:"boolean",default:!1},skipRegExps:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e){var t=e.loc.start,r=e.loc.end;a=a.filter((function(e){var n=e.loc;return !(n.line>=t.line&&n.line<=r.line&&n.column>=t.column&&(n.column<=r.column||n.line<r.line))}));}function r(e){var r=u&&"string"==typeof e.value,n=c&&!!e.regex;(r||n)&&wP.test(e.raw)&&t(e);}function n(e){wP.test(e.value)&&t(e);}function i(){}var a=[],o=e.options[0]||{},s=!!o.skipComments,u=!1!==o.skipStrings,c=!!o.skipRegExps,l=!!o.skipTemplates,p=e.getSourceCode(),f=p.getAllComments(),h={};return wP.test(p.getText())?(h.Program=function(e){((function(e){p.lines.forEach((function(t,r){for(var n;null!==(n=_P.exec(t));){var i={line:r+1,column:n.index};a.push({node:e,message:"Irregular whitespace not allowed.",loc:i});}}));}))(e),function(e){for(var t,r=p.getText(),n=p.lines,i=r.match(PP),o=-1;null!==(t=TP.exec(r));){var s=i.indexOf(t[0],o+1)||0,u={line:s+1,column:n[s].length};a.push({node:e,message:"Irregular whitespace not allowed.",loc:u}),o=s;}}(e);},h.Identifier=r,h.Literal=r,h.TemplateElement=l?function(e){"string"==typeof e.value.raw&&wP.test(e.value.raw)&&t(e);}:i,h["Program:exit"]=function(){s&&f.forEach(n),a.forEach((function(t){return e.report(t)}));}):h.Program=i,h}},BP={meta:{type:"suggestion",docs:{description:"disallow labels that share a name with a variable",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-label-var"},schema:[]},create:function(e){return {LabeledStatement:function(t){(function(e,t){return null!==LA.getVariableByName(e,t)})(e.getScope(),t.label.name)&&e.report({node:t,message:"Found identifier with same name as label."});}}}},OP={meta:{type:"suggestion",docs:{description:"disallow labeled statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-labels"},schema:[{type:"object",properties:{allowLoop:{type:"boolean",default:!1},allowSwitch:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e){return LA.isLoop(e)?"loop":"SwitchStatement"===e.type?"switch":"other"}function r(e){return "loop"===e?a:!("switch"!=e)&&o}function n(e){for(var t=s;t;){if(t.label===e)return t.kind;t=t.upper;}return "other"}var i=e.options[0],a=i&&i.allowLoop,o=i&&i.allowSwitch,s=null;return {LabeledStatement:function(e){s={label:e.label.name,kind:t(e.body),upper:s};},"LabeledStatement:exit":function(t){r(s.kind)||e.report({node:t,message:"Unexpected labeled statement."}),s=s.upper;},BreakStatement:function(t){t.label&&!r(n(t.label.name))&&e.report({node:t,message:"Unexpected label in break statement."});},ContinueStatement:function(t){t.label&&!r(n(t.label.name))&&e.report({node:t,message:"Unexpected label in continue statement."});}}}};function LP(e){for(var t=e;t.parent;t=t.parent){var r=t.parent;switch(r.type){case"WhileStatement":case"DoWhileStatement":return r;case"ForStatement":if(r.init!==t)return r;break;case"ForInStatement":case"ForOfStatement":if(r.right!==t)return r;break;case"ArrowFunctionExpression":case"FunctionExpression":case"FunctionDeclaration":return null}}return null}function NP(e,t){var r=t.resolved,n=r&&r.defs[0],i=n&&n.parent,a=i&&"VariableDeclaration"===i.type?i.kind:"";if("const"===a)return !0;if("let"===a&&i.range[0]>e.range[0]&&i.range[1]<e.range[1])return !0;var o=function(e,t){for(var r=t?t.range[1]:0,n=e,i=e;i&&i.range[0]>=r;)n=i,i=LP(i);return n}(e,"let"===a?i:null).range[0];return !!r&&r.references.every((function(e){var t=e.identifier;return !e.isWrite()||r.scope.variableScope===e.from.variableScope&&t.range[0]<o}))}var jP={meta:{type:"suggestion",docs:{description:"disallow function declarations that contain unsafe references inside loop statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-loop-func"},schema:[],messages:{unsafeRefs:"Function declared in a loop contains unsafe references to variable(s) {{ varNames }}."}},create:function(e){function t(t){var r=LP(t);if(r){var n=e.getScope().through.filter((function(e){return !NP(r,e)})).map((function(e){return e.identifier.name}));0<n.length&&e.report({node:t,messageId:"unsafeRefs",data:{varNames:"'".concat(n.join("', '"),"'")}});}}return {ArrowFunctionExpression:t,FunctionExpression:t,FunctionDeclaration:t}}},RP=new Set([768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,1155,1156,1157,1158,1159,1160,1161,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1471,1473,1474,1476,1477,1479,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1648,1750,1751,1752,1753,1754,1755,1756,1759,1760,1761,1762,1763,1764,1767,1768,1770,1771,1772,1773,1809,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,2027,2028,2029,2030,2031,2032,2033,2034,2035,2070,2071,2072,2073,2075,2076,2077,2078,2079,2080,2081,2082,2083,2085,2086,2087,2089,2090,2091,2092,2093,2137,2138,2139,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2362,2363,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2385,2386,2387,2388,2389,2390,2391,2402,2403,2433,2434,2435,2492,2494,2495,2496,2497,2498,2499,2500,2503,2504,2507,2508,2509,2519,2530,2531,2561,2562,2563,2620,2622,2623,2624,2625,2626,2631,2632,2635,2636,2637,2641,2672,2673,2677,2689,2690,2691,2748,2750,2751,2752,2753,2754,2755,2756,2757,2759,2760,2761,2763,2764,2765,2786,2787,2810,2811,2812,2813,2814,2815,2817,2818,2819,2876,2878,2879,2880,2881,2882,2883,2884,2887,2888,2891,2892,2893,2902,2903,2914,2915,2946,3006,3007,3008,3009,3010,3014,3015,3016,3018,3019,3020,3021,3031,3072,3073,3074,3075,3134,3135,3136,3137,3138,3139,3140,3142,3143,3144,3146,3147,3148,3149,3157,3158,3170,3171,3201,3202,3203,3260,3262,3263,3264,3265,3266,3267,3268,3270,3271,3272,3274,3275,3276,3277,3285,3286,3298,3299,3328,3329,3330,3331,3387,3388,3390,3391,3392,3393,3394,3395,3396,3398,3399,3400,3402,3403,3404,3405,3415,3426,3427,3458,3459,3530,3535,3536,3537,3538,3539,3540,3542,3544,3545,3546,3547,3548,3549,3550,3551,3570,3571,3633,3636,3637,3638,3639,3640,3641,3642,3655,3656,3657,3658,3659,3660,3661,3662,3761,3764,3765,3766,3767,3768,3769,3771,3772,3784,3785,3786,3787,3788,3789,3864,3865,3893,3895,3897,3902,3903,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3974,3975,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3993,3994,3995,3996,3997,3998,3999,4e3,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4038,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4182,4183,4184,4185,4190,4191,4192,4194,4195,4196,4199,4200,4201,4202,4203,4204,4205,4209,4210,4211,4212,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4239,4250,4251,4252,4253,4957,4958,4959,5906,5907,5908,5938,5939,5940,5970,5971,6002,6003,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6109,6155,6156,6157,6277,6278,6313,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443,6448,6449,6450,6451,6452,6453,6454,6455,6456,6457,6458,6459,6679,6680,6681,6682,6683,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,6780,6783,6832,6833,6834,6835,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,6912,6913,6914,6915,6916,6964,6965,6966,6967,6968,6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,7019,7020,7021,7022,7023,7024,7025,7026,7027,7040,7041,7042,7073,7074,7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,7155,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213,7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7376,7377,7378,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400,7405,7410,7411,7412,7415,7416,7417,7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7675,7676,7677,7678,7679,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,11503,11504,11505,11647,11744,11745,11746,11747,11748,11749,11750,11751,11752,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,12330,12331,12332,12333,12334,12335,12441,12442,42607,42608,42609,42610,42612,42613,42614,42615,42616,42617,42618,42619,42620,42621,42654,42655,42736,42737,43010,43014,43019,43043,43044,43045,43046,43047,43136,43137,43188,43189,43190,43191,43192,43193,43194,43195,43196,43197,43198,43199,43200,43201,43202,43203,43204,43205,43232,43233,43234,43235,43236,43237,43238,43239,43240,43241,43242,43243,43244,43245,43246,43247,43248,43249,43302,43303,43304,43305,43306,43307,43308,43309,43335,43336,43337,43338,43339,43340,43341,43342,43343,43344,43345,43346,43347,43392,43393,43394,43395,43443,43444,43445,43446,43447,43448,43449,43450,43451,43452,43453,43454,43455,43456,43493,43561,43562,43563,43564,43565,43566,43567,43568,43569,43570,43571,43572,43573,43574,43587,43596,43597,43643,43644,43645,43696,43698,43699,43700,43703,43704,43710,43711,43713,43755,43756,43757,43758,43759,43765,43766,44003,44004,44005,44006,44007,44008,44009,44010,44012,44013,64286,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65056,65057,65058,65059,65060,65061,65062,65063,65064,65065,65066,65067,65068,65069,65070,65071,66045,66272,66422,66423,66424,66425,66426,68097,68098,68099,68101,68102,68108,68109,68110,68111,68152,68153,68154,68159,68325,68326,69632,69633,69634,69688,69689,69690,69691,69692,69693,69694,69695,69696,69697,69698,69699,69700,69701,69702,69759,69760,69761,69762,69808,69809,69810,69811,69812,69813,69814,69815,69816,69817,69818,69888,69889,69890,69927,69928,69929,69930,69931,69932,69933,69934,69935,69936,69937,69938,69939,69940,70003,70016,70017,70018,70067,70068,70069,70070,70071,70072,70073,70074,70075,70076,70077,70078,70079,70080,70090,70091,70092,70188,70189,70190,70191,70192,70193,70194,70195,70196,70197,70198,70199,70206,70367,70368,70369,70370,70371,70372,70373,70374,70375,70376,70377,70378,70400,70401,70402,70403,70460,70462,70463,70464,70465,70466,70467,70468,70471,70472,70475,70476,70477,70487,70498,70499,70502,70503,70504,70505,70506,70507,70508,70512,70513,70514,70515,70516,70709,70710,70711,70712,70713,70714,70715,70716,70717,70718,70719,70720,70721,70722,70723,70724,70725,70726,70832,70833,70834,70835,70836,70837,70838,70839,70840,70841,70842,70843,70844,70845,70846,70847,70848,70849,70850,70851,71087,71088,71089,71090,71091,71092,71093,71096,71097,71098,71099,71100,71101,71102,71103,71104,71132,71133,71216,71217,71218,71219,71220,71221,71222,71223,71224,71225,71226,71227,71228,71229,71230,71231,71232,71339,71340,71341,71342,71343,71344,71345,71346,71347,71348,71349,71350,71351,71453,71454,71455,71456,71457,71458,71459,71460,71461,71462,71463,71464,71465,71466,71467,72193,72194,72195,72196,72197,72198,72199,72200,72201,72202,72243,72244,72245,72246,72247,72248,72249,72251,72252,72253,72254,72263,72273,72274,72275,72276,72277,72278,72279,72280,72281,72282,72283,72330,72331,72332,72333,72334,72335,72336,72337,72338,72339,72340,72341,72342,72343,72344,72345,72751,72752,72753,72754,72755,72756,72757,72758,72760,72761,72762,72763,72764,72765,72766,72767,72850,72851,72852,72853,72854,72855,72856,72857,72858,72859,72860,72861,72862,72863,72864,72865,72866,72867,72868,72869,72870,72871,72873,72874,72875,72876,72877,72878,72879,72880,72881,72882,72883,72884,72885,72886,73009,73010,73011,73012,73013,73014,73018,73020,73021,73023,73024,73025,73026,73027,73028,73029,73031,92912,92913,92914,92915,92916,92976,92977,92978,92979,92980,92981,92982,94033,94034,94035,94036,94037,94038,94039,94040,94041,94042,94043,94044,94045,94046,94047,94048,94049,94050,94051,94052,94053,94054,94055,94056,94057,94058,94059,94060,94061,94062,94063,94064,94065,94066,94067,94068,94069,94070,94071,94072,94073,94074,94075,94076,94077,94078,94095,94096,94097,94098,113821,113822,119141,119142,119143,119144,119145,119149,119150,119151,119152,119153,119154,119163,119164,119165,119166,119167,119168,119169,119170,119173,119174,119175,119176,119177,119178,119179,119210,119211,119212,119213,119362,119363,119364,121344,121345,121346,121347,121348,121349,121350,121351,121352,121353,121354,121355,121356,121357,121358,121359,121360,121361,121362,121363,121364,121365,121366,121367,121368,121369,121370,121371,121372,121373,121374,121375,121376,121377,121378,121379,121380,121381,121382,121383,121384,121385,121386,121387,121388,121389,121390,121391,121392,121393,121394,121395,121396,121397,121398,121403,121404,121405,121406,121407,121408,121409,121410,121411,121412,121413,121414,121415,121416,121417,121418,121419,121420,121421,121422,121423,121424,121425,121426,121427,121428,121429,121430,121431,121432,121433,121434,121435,121436,121437,121438,121439,121440,121441,121442,121443,121444,121445,121446,121447,121448,121449,121450,121451,121452,121461,121476,121499,121500,121501,121502,121503,121505,121506,121507,121508,121509,121510,121511,121512,121513,121514,121515,121516,121517,121518,121519,122880,122881,122882,122883,122884,122885,122886,122888,122889,122890,122891,122892,122893,122894,122895,122896,122897,122898,122899,122900,122901,122902,122903,122904,122907,122908,122909,122910,122911,122912,122913,122915,122916,122918,122919,122920,122921,122922,125136,125137,125138,125139,125140,125141,125142,125252,125253,125254,125255,125256,125257,125258,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]),MP=function(e){return RP.has(e)},VP=function(e){return 127995<=e&&127999>=e},UP=function(e){return 127462<=e&&127487>=e},qP=function(e,t){return 55296<=e&&56320>e&&56320<=t&&57344>t},WP=Fy.require$$0,$P=WP.CALL,GP=WP.CONSTRUCT,zP=WP.ReferenceTracker,HP=WP.getStringIfConstant,KP=PA.RegExpParser,JP=PA.visitRegExpAST,QP=MP,XP=VP,YP=UP,ZP=qP;function eI(e){var t,r,n,i,a,o,s;return regeneratorRuntime.wrap((function(u){for(;;)switch(u.prev=u.next){case 0:t=[],r=!0,n=!1,i=void 0,u.prev=4,a=e[Symbol.iterator]();case 6:if(r=(o=a.next()).done){u.next=26;break}s=o.value,u.t0=s.type,u.next="Character"===u.t0?11:"CharacterClassRange"===u.t0?13:"CharacterSet"===u.t0?18:23;break;case 11:return t.push(s.value),u.abrupt("break",23);case 13:return t.push(s.min.value),u.next=16,t;case 16:return t=[s.max.value],u.abrupt("break",23);case 18:if(u.t1=0<t.length,!u.t1){u.next=23;break}return u.next=22,t;case 22:t=[];case 23:r=!0,u.next=6;break;case 26:u.next=32;break;case 28:u.prev=28,u.t2=u.catch(4),n=!0,i=u.t2;case 32:u.prev=32,u.prev=33,r||null==a.return||a.return();case 35:if(u.prev=35,!n){u.next=38;break}throw i;case 38:return u.finish(35);case 39:return u.finish(32);case 40:if(u.t3=0<t.length,!u.t3){u.next=44;break}return u.next=44,t;case 44:case"end":return u.stop()}}),AA,null,[[4,28,32,40],[33,,35,39]])}var tI={surrogatePairWithoutUFlag:function(e){return e.some((function(t,r){return 0!==r&&ZP(e[r-1],t)}))},combiningClass:function(e){return e.some((function(t,r){return 0!==r&&QP(t)&&!QP(e[r-1])}))},emojiModifier:function(e){return e.some((function(t,r){return 0!==r&&XP(t)&&!XP(e[r-1])}))},regionalIndicatorSymbol:function(e){return e.some((function(t,r){return 0!==r&&YP(t)&&YP(e[r-1])}))},zwj:function(e){var t=e.length-1;return e.some((function(r,n){return 0!==n&&n!==t&&8205===r&&8205!==e[n-1]&&8205!==e[n+1]}))}},rI=Object.keys(tI),nI={meta:{type:"problem",docs:{description:"disallow characters which are made with multiple code points in character class syntax",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-misleading-character-class"},schema:[],messages:{surrogatePairWithoutUFlag:"Unexpected surrogate pair in character class. Use 'u' flag.",combiningClass:"Unexpected combined character in character class.",emojiModifier:"Unexpected modified Emoji in character class.",regionalIndicatorSymbol:"Unexpected national flag in character class.",zwj:"Unexpected joined character sequence in character class."}},create:function(e){function t(t,n,i){var a,o={surrogatePairWithoutUFlag:!1,combiningClass:!1,variationSelector:!1,emojiModifier:!1,regionalIndicatorSymbol:!1,zwj:!1};try{a=r.parsePattern(n,0,n.length,i.includes("u"));}catch(t){return}JP(a,{onCharacterClassEnter:function(e){var t=!0,r=!1,n=void 0;try{for(var i,a=eI(e.elements)[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){var s=i.value,u=!0,c=!1,l=void 0;try{for(var p,f=rI[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var h=p.value;o[h]=o[h]||tI[h](s);}}catch(e){c=!0,l=e;}finally{try{u||null==f.return||f.return();}finally{if(c)throw l}}}}catch(e){r=!0,n=e;}finally{try{t||null==a.return||a.return();}finally{if(r)throw n}}}});var s=!0,u=!1,c=void 0;try{for(var l,p=rI[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var f=l.value;o[f]&&e.report({node:t,messageId:f});}}catch(e){u=!0,c=e;}finally{try{s||null==p.return||p.return();}finally{if(u)throw c}}}var r=new KP;return {"Literal[regex]":function(e){t(e,e.regex.pattern,e.regex.flags);},Program:function(){var r=e.getScope(),n=new zP(r),i=!0,a=!1,o=void 0;try{for(var s,c=n.iterateGlobalReferences({RegExp:(l={},u(l,$P,!0),u(l,GP,!0),l)})[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var l,p=s.value.node,f=b(p.arguments,2),h=f[0],d=f[1],m=HP(h,r),g=HP(d,r);"string"==typeof m&&t(p,m,g||"");}}catch(e){a=!0,o=e;}finally{try{i||null==c.return||c.return();}finally{if(a)throw o}}}}}},iI=["+","-","*","/","%","**"],aI=["&","|","^","~","<<",">>",">>>"],oI=["==","!=","===","!==",">",">=","<","<="],sI=["&&","||"],uI=["in","instanceof"],cI=[].concat(iI,aI,oI,sI,uI,["?:"]),lI=[iI,aI,oI,sI,uI],pI=/^(?:Binary|Logical|Conditional)Expression$/;function fI(e){return "ConditionalExpression"===e.type?e.test:e.left}var hI={meta:{type:"suggestion",docs:{description:"disallow mixed binary operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-mixed-operators"},schema:[{type:"object",properties:{groups:{type:"array",items:{type:"array",items:{enum:cI},minItems:2,uniqueItems:!0},uniqueItems:!0},allowSamePrecedence:{type:"boolean",default:!0}},additionalProperties:!1}]},create:function(e){function t(e){var t=e,r=e.parent;return !function(e,t,r){return e.some((function(e){return -1!==e.indexOf(t)&&-1!==e.indexOf(r)}))}(o.groups,t.operator,"ConditionalExpression"===r.type?"?:":r.operator)||o.allowSamePrecedence&&LA.getPrecedence(t)===LA.getPrecedence(r)}function r(e){return a.getTokenAfter(fI(e),LA.isNotClosingParenToken)}function n(t){var n=t.parent,i=fI(n)===t?t:n,a=fI(n)===t?n:t,o="Unexpected mix of '{{leftOperator}}' and '{{rightOperator}}'.",s={leftOperator:i.operator||"?:",rightOperator:a.operator||"?:"};e.report({node:i,loc:r(i).loc,message:o,data:s}),e.report({node:a,loc:r(a).loc,message:o,data:s});}function i(e){pI.test(e.parent.type)&&("ConditionalExpression"===e.parent.type&&!t(e)&&function(e){return !LA.isParenthesised(a,e)&&!LA.isParenthesised(a,e.test)}(e.parent)?n(e):pI.test(e.parent.type)&&function(e){return e.operator!==e.parent.operator&&!LA.isParenthesised(a,e)}(e)&&!t(e)&&n(e));}var a=e.getSourceCode(),o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return {groups:e.groups&&0<e.groups.length?e.groups:lI,allowSamePrecedence:!1!==e.allowSamePrecedence}}(e.options[0]);return {BinaryExpression:i,LogicalExpression:i}}},dI={meta:{type:"suggestion",docs:{description:"disallow `require` calls to be mixed with regular variable declarations",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-mixed-requires"},schema:[{oneOf:[{type:"boolean"},{type:"object",properties:{grouping:{type:"boolean"},allowCall:{type:"boolean"}},additionalProperties:!1}]}]},create:function(e){function t(e){return e?"CallExpression"===e.type&&"Identifier"===e.callee.type&&"require"===e.callee.name?"require":s&&"CallExpression"===e.type&&"CallExpression"===e.callee.type?t(e.callee):"MemberExpression"===e.type?t(e.object):"other":"uninitialized"}function r(e){var r={};return e.forEach((function(e){var n=t(e.init);r[n]=!0;})),!(!r[c]||!r[l]&&!r[p])}function n(e){var r={};return e.forEach((function(e){t(e.init)===c&&(r[function e(t){if("MemberExpression"===t.type)return e(t.object);if(0===t.arguments.length)return f;var r=t.arguments[0];return "Literal"!==r.type||"string"!=typeof r.value?"computed":-1===u.indexOf(r.value)?/^\.{0,2}\//.test(r.value)?"file":"module":"core"}(e.init)]=!0);})),1>=Object.keys(r).length}var a=e.options[0],o=!1,s=!1;"object"==i(a)?(o=a.grouping,s=a.allowCall):o=!!a;var u=["assert","buffer","child_process","cluster","crypto","dgram","dns","domain","events","fs","http","https","net","os","path","punycode","querystring","readline","repl","smalloc","stream","string_decoder","tls","tty","url","util","v8","vm","zlib"],c="require",l="uninitialized",p="other",f="computed";return {VariableDeclaration:function(t){r(t.declarations)?e.report({node:t,message:"Do not mix 'require' and other declarations."}):o&&!n(t.declarations)&&e.report({node:t,message:"Do not mix core, module, file and computed requires."});}}}},mI={meta:{type:"layout",docs:{description:"disallow multiple spaces",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-multi-spaces"},fixable:"whitespace",schema:[{type:"object",properties:{exceptions:{type:"object",patternProperties:{"^([A-Z][a-z]*)+$":{type:"boolean"}},additionalProperties:!1},ignoreEOLComments:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e){var t=e.value.split("\n"),r=t[0],n="".concat(r.slice(0,12),"...");return 1===t.length&&12>=r.length?r:n}var r=e.getSourceCode(),n=e.options[0]||{},i=n.ignoreEOLComments,a=Object.assign({Property:!0},n.exceptions),o=0<Object.keys(a).filter((function(e){return a[e]})).length;return {Program:function(){r.tokensAndComments.forEach((function(n,s,u){if(s!==u.length-1){var c=u[s+1];if(r.text.slice(n.range[1],c.range[0]).includes("  ")&&!(n.loc.end.line<c.loc.start.line)&&!(i&&LA.isCommentToken(c)&&(s===u.length-2||c.loc.end.line<u[s+2].loc.start.line))){if(o){var l=r.getNodeByRangeIndex(c.range[0]-1);if(l&&a[l.type])return}var p;p="Block"===c.type?"/*".concat(t(c),"*/"):"Line"===c.type?"//".concat(t(c)):c.value,e.report({node:c,loc:{start:n.loc.end,end:c.loc.start},message:"Multiple spaces found before '{{displayValue}}'.",data:{displayValue:p},fix:function(e){return e.replaceTextRange([n.range[1],c.range[0]]," ")}});}}}));}}}},gI={meta:{type:"suggestion",docs:{description:"disallow multiline strings",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-multi-str"},schema:[]},create:function(e){return {Literal:function(t){LA.LINEBREAK_MATCHER.test(t.raw)&&!function(e){return 0===e.type.indexOf("JSX")}(t.parent)&&e.report({node:t,message:"Multiline support is limited to browsers supporting ES5 only."});}}}},yI={meta:{type:"layout",docs:{description:"disallow multiple empty lines",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-multiple-empty-lines"},fixable:"whitespace",schema:[{type:"object",properties:{max:{type:"integer",minimum:0},maxEOF:{type:"integer",minimum:0},maxBOF:{type:"integer",minimum:0}},required:["max"],additionalProperties:!1}]},create:function(e){var t=2,r=t,n=t;e.options.length&&(t=e.options[0].max,r=void 0===e.options[0].maxEOF?t:e.options[0].maxEOF,n=void 0===e.options[0].maxBOF?t:e.options[0].maxBOF);var i=e.getSourceCode(),a=""===i.lines[i.lines.length-1]?i.lines.slice(0,-1):i.lines,o=new Set;return {TemplateLiteral:function(e){e.quasis.forEach((function(e){for(var t=e.loc.start.line;t<e.loc.end.line;t++)o.add(t);}));},"Program:exit":function(s){return a.reduce((function(e,t,r){return (t.trim()||o.has(r+1))&&e.push(r+1),e}),[]).concat(a.length+1).reduce((function(o,u){var c,l;return 0===o?(c="Too many blank lines at the beginning of file. Max of {{max}} allowed.",l=n):u===a.length+1?(c="Too many blank lines at the end of file. Max of {{max}} allowed.",l=r):(c="More than {{max}} blank {{pluralizedLines}} not allowed.",l=t),u-o-1>l&&e.report({node:s,loc:{start:{line:o+1,column:0},end:{line:u,column:0}},message:c,data:{max:l,pluralizedLines:1===l?"line":"lines"},fix:function(e){var t=i.getIndexFromLoc({line:o+1,column:0}),r=u-l,n=r<=a.length?i.getIndexFromLoc({line:r,column:0}):i.text.length;return e.removeRange([t,n])}}),u}),0)}}}},vI=Fy.require$$0,xI=vI.CALL,bI=vI.ReferenceTracker,EI=["Atomics","JSON","Math","Reflect"],CI={meta:{type:"problem",docs:{description:"disallow calling global object properties as functions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-obj-calls"},schema:[],messages:{unexpectedCall:"'{{name}}' is not a function."}},create:function(e){return {Program:function(){var t=e.getScope(),r=new bI(t),n={},i=!0,a=!1,o=void 0;try{for(var s,c=EI[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){n[s.value]=u({},xI,!0);}}catch(e){a=!0,o=e;}finally{try{i||null==c.return||c.return();}finally{if(a)throw o}}var l=!0,p=!1,f=void 0;try{for(var h,d=r.iterateGlobalReferences(n)[Symbol.iterator]();!(l=(h=d.next()).done);l=!0){var m=h.value.node;e.report({node:m,messageId:"unexpectedCall",data:{name:m.callee.name}});}}catch(e){p=!0,f=e;}finally{try{l||null==d.return||d.return();}finally{if(p)throw f}}}}}},SI=/(?:Statement|Declaration|Function(?:Expression)?|Program)$/,kI={meta:{type:"suggestion",docs:{description:"disallow reassigning `function` parameters",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-param-reassign"},schema:[{oneOf:[{type:"object",properties:{props:{enum:[!1]}},additionalProperties:!1},{type:"object",properties:{props:{enum:[!0]},ignorePropertyModificationsFor:{type:"array",items:{type:"string"},uniqueItems:!0},ignorePropertyModificationsForRegex:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1}]}]},create:function(e){function t(e){return o.includes(e)||s.some((function(t){return new RegExp(t,"u").test(e)}))}function r(r,n,i){var o=r.identifier;o&&!r.init&&(0===n||i[n-1].identifier!==o)&&(r.isWrite()?e.report({node:o,message:"Assignment to function parameter '{{name}}'.",data:{name:o.name}}):a&&function(e){for(var t=e.identifier,r=t.parent;r&&(!SI.test(r.type)||"ForInStatement"===r.type||"ForOfStatement"===r.type);){switch(r.type){case"AssignmentExpression":return r.left===t;case"UpdateExpression":return !0;case"UnaryExpression":if("delete"===r.operator)return !0;break;case"ForInStatement":case"ForOfStatement":return !(r.left!==t);case"CallExpression":if(r.callee!==t)return !1;break;case"MemberExpression":if(r.property===t)return !1;break;case"Property":if(r.key===t)return !1;break;case"ConditionalExpression":if(r.test===t)return !1}r=(t=r).parent;}return !1}(r)&&!t(o.name)&&e.report({node:o,message:"Assignment to property of function parameter '{{name}}'.",data:{name:o.name}}));}function n(e){"Parameter"===e.defs[0].type&&e.references.forEach(r);}function i(t){e.getDeclaredVariables(t).forEach(n);}var a=e.options[0]&&e.options[0].props,o=e.options[0]&&e.options[0].ignorePropertyModificationsFor||[],s=e.options[0]&&e.options[0].ignorePropertyModificationsForRegex||[];return {"FunctionDeclaration:exit":i,"FunctionExpression:exit":i,"ArrowFunctionExpression:exit":i}}},DI={meta:{type:"suggestion",docs:{description:"disallow the unary operators `++` and `--`",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-plusplus"},schema:[{type:"object",properties:{allowForLoopAfterthoughts:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){var t=e.options[0],r=!1;return "object"==i(t)&&(r=!0===t.allowForLoopAfterthoughts),{UpdateExpression:function(t){r&&"ForStatement"===t.parent.type||e.report({node:t,message:"Unary operator '{{operator}}' used.",data:{operator:t.operator}});}}}},FI={meta:{type:"suggestion",docs:{description:"disallow variable redeclaration",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-redeclare"},messages:{redeclared:"'{{id}}' is already defined.",redeclaredAsBuiltin:"'{{id}}' is already defined as a built-in global variable.",redeclaredBySyntax:"'{{id}}' is already defined by a variable declaration."},schema:[{type:"object",properties:{builtinGlobals:{type:"boolean",default:!0}},additionalProperties:!1}]},create:function(e){var t=regeneratorRuntime.mark(r);function r(e){var r,n,i,s,u,c,l,p,f,h,d,m;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.t0=a.builtinGlobals&&("readonly"===e.eslintImplicitGlobalSetting||"writable"===e.eslintImplicitGlobalSetting),!t.t0){t.next=4;break}return t.next=4,{type:"builtin"};case 4:r=!0,n=!1,i=void 0,t.prev=7,s=e.identifiers[Symbol.iterator]();case 9:if(r=(u=s.next()).done){t.next=16;break}return c=u.value,t.next=13,{type:"syntax",node:c,loc:c.loc};case 13:r=!0,t.next=9;break;case 16:t.next=22;break;case 18:t.prev=18,t.t1=t.catch(7),n=!0,i=t.t1;case 22:t.prev=22,t.prev=23,r||null==s.return||s.return();case 25:if(t.prev=25,!n){t.next=28;break}throw i;case 28:return t.finish(25);case 29:return t.finish(22);case 30:if(!e.eslintExplicitGlobalComments){t.next=57;break}l=!0,p=!1,f=void 0,t.prev=34,h=e.eslintExplicitGlobalComments[Symbol.iterator]();case 36:if(l=(d=h.next()).done){t.next=43;break}return m=d.value,t.next=40,{type:"comment",node:m,loc:LA.getNameLocationInGlobalDirectiveComment(o,m,e.name)};case 40:l=!0,t.next=36;break;case 43:t.next=49;break;case 45:t.prev=45,t.t2=t.catch(34),p=!0,f=t.t2;case 49:t.prev=49,t.prev=50,l||null==h.return||h.return();case 52:if(t.prev=52,!p){t.next=55;break}throw f;case 55:return t.finish(52);case 56:return t.finish(49);case 57:case"end":return t.stop()}}),t,null,[[7,18,22,30],[23,,25,29],[34,45,49,57],[50,,52,56]])}function n(t){var n,i=!0,a=!1,o=void 0;try{for(var s,u=t.variables[Symbol.iterator]();!(i=(s=u.next()).done);i=!0){var c=s.value,l=r(c),p=C(n=l)||S(n)||k(),f=p[0],h=p.slice(1);if(0!==h.length){var d="builtin"===f.type?"redeclaredAsBuiltin":"redeclaredBySyntax",m={id:c.name},g=!0,y=!1,v=void 0;try{for(var x,b=h[Symbol.iterator]();!(g=(x=b.next()).done);g=!0){var E=x.value,D=E.type,F=E.node,A=E.loc,w=D===f.type?"redeclared":d;e.report({node:F,loc:A,messageId:w,data:m});}}catch(e){y=!0,v=e;}finally{try{g||null==b.return||b.return();}finally{if(y)throw v}}}}}catch(e){a=!0,o=e;}finally{try{i||null==u.return||u.return();}finally{if(a)throw o}}}function i(t){var r=e.getScope();r.block===t&&n(r);}var a={builtinGlobals:!(0!==e.options.length&&!e.options[0].builtinGlobals)},o=e.getSourceCode();return {Program:function(){var t=e.getScope();n(t),"global"===t.type&&t.childScopes[0]&&t.block===t.childScopes[0].block&&n(t.childScopes[0]);},FunctionDeclaration:i,FunctionExpression:i,ArrowFunctionExpression:i,BlockStatement:i,ForStatement:i,ForInStatement:i,ForOfStatement:i,SwitchStatement:i}}},AI=new PA.RegExpParser,wI=/ {2}/;function _I(e){return e&&"Literal"===e.type&&"string"==typeof e.value}var TI={meta:{type:"suggestion",docs:{description:"disallow multiple spaces in regular expressions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-regex-spaces"},schema:[],fixable:"code"},create:function(e){function t(t,r,n,a,o){if(wI.test(n)){var s,u=[];try{s=AI.parsePattern(r,0,r.length,o.includes("u"));}catch(t){return}PA.visitRegExpAST(s,{onCharacterClassEnter:function(e){u.push(e);}});for(var c,l=/( {2,})(?: [\*\+\?\{]|(?:[\0-\),->@-z\|-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|$)/g,p=function(i){var o=i[1].length,s=i.index;if(u.every((function(e){var t=e.start,r=e.end;return s<t||r<=s})))return {v:void e.report({node:t,message:"Spaces are hard to count. Use {{{length}}}.",data:{length:o},fix:function(e){return r===n?e.replaceTextRange([a+s,a+s+o]," {".concat(o,"}")):null}})}};c=l.exec(r);){var f=p(c);if("object"===i(f))return f.v}}}function r(r){var n=e.getScope(),i=LA.getVariableByName(n,"RegExp"),a=i&&0<i.defs.length,o=r.arguments[0],s=r.arguments[1];"Identifier"===r.callee.type&&"RegExp"===r.callee.name&&_I(o)&&!a&&t(r,o.value,o.raw.slice(1,-1),o.range[0]+1,_I(s)?s.value:"");}return {Literal:function(e){if(e.regex){var r=e.regex.pattern,n=e.raw.slice(1,e.raw.lastIndexOf("/"));t(e,r,n,e.range[0]+1,e.regex.flags);}},CallExpression:r,NewExpression:r}}},PI="Unexpected use of '{{name}}'.",II="Unexpected use of '{{name}}'. {{customMessage}}",BI={meta:{type:"suggestion",docs:{description:"disallow specified global variables",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-restricted-globals"},schema:{type:"array",items:{oneOf:[{type:"string"},{type:"object",properties:{name:{type:"string"},message:{type:"string"}},required:["name"],additionalProperties:!1}]},uniqueItems:!0,minItems:0}},create:function(e){function t(t){var r=t.identifier.name,i=n[r],a=i?II:PI;e.report({node:t.identifier,message:a,data:{name:r,customMessage:i}});}function r(e){return Object.prototype.hasOwnProperty.call(n,e)}if(0===e.options.length)return {};var n=e.options.reduce((function(e,t){return "string"==typeof t?e[t]=null:e[t.name]=t.message,e}),{});return {Program:function(){var n=e.getScope();n.variables.forEach((function(e){!e.defs.length&&r(e.name)&&e.references.forEach(t);})),n.through.forEach((function(e){r(e.identifier.name)&&t(e);}));}}}},OI={type:"array",items:{anyOf:[{type:"string"},{type:"object",properties:{name:{type:"string"},message:{type:"string",minLength:1},importNames:{type:"array",items:{type:"string"}}},additionalProperties:!1,required:["name"]}]},uniqueItems:!0},LI={meta:{type:"suggestion",docs:{description:"disallow specified modules when loaded by `import`",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-restricted-imports"},messages:{path:"'{{importSource}}' import is restricted from being used.",pathWithCustomMessage:"'{{importSource}}' import is restricted from being used. {{customMessage}}",patterns:"'{{importSource}}' import is restricted from being used by a pattern.",everything:"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted.",everythingWithCustomMessage:"* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted. {{customMessage}}"},schema:{anyOf:[OI,{type:"array",items:{type:"object",properties:{paths:OI,patterns:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1},additionalItems:!1}]}},create:function(e){function t(t){var r=t.source.value.trim(),n=f[r]&&f[r].message;e.report({node:t,messageId:n?"pathWithCustomMessage":"path",data:{importSource:r,customMessage:n}});}function r(t){var r=t.source.value.trim();e.report({node:t,messageId:"patterns",data:{importSource:r}});}function n(t,r){var n=f[t].importNames,i=f[t]&&f[t].message;e.report({node:r,messageId:i?"everythingWithCustomMessage":"everything",data:{importSource:t,importNames:n,customMessage:i}});}function a(e,t){return Object.prototype.hasOwnProperty.call(f,e)&&f[e].importNames&&function(e){return e.has("*")}(t)}function o(e,t){var r=!1;return Object.prototype.hasOwnProperty.call(f,e)&&(r=!f[e].importNames||function(e,t){return t.some((function(t){return e.has(t)}))}(t,f[e].importNames)),r}function s(e){var i=e.source.value.trim(),s=e.specifiers?e.specifiers.reduce((function(e,t){return "ImportDefaultSpecifier"===t.type?e.add("default"):"ImportNamespaceSpecifier"===t.type?e.add("*"):t.imported?e.add(t.imported.name):t.local&&e.add(t.local.name),e}),new Set):new Set;a(i,s)&&n(i,e),o(i,s)&&t(e),function(e){return 0<p.length&&h.ignores(e)}(i)&&r(e);}var u=Array.isArray(e.options)?e.options:[],c="object"==i(u[0])&&(Object.prototype.hasOwnProperty.call(u[0],"paths")||Object.prototype.hasOwnProperty.call(u[0],"patterns")),l=(c?u[0].paths:e.options)||[],p=(c?u[0].patterns:[])||[],f=l.reduce((function(e,t){return "string"==typeof t?e[t]={message:null}:e[t.name]={message:t.message,importNames:t.importNames},e}),{});if(0===Object.keys(l).length&&0===p.length)return {};var h=IA().add(p);return {ImportDeclaration:s,ExportNamedDeclaration:function(e){e.source&&s(e);},ExportAllDeclaration:s}}},NI="'{{moduleName}}' module is restricted from being used.",jI="'{{moduleName}}' module is restricted from being used. {{customMessage}}",RI={type:"array",items:{anyOf:[{type:"string"},{type:"object",properties:{name:{type:"string"},message:{type:"string",minLength:1}},additionalProperties:!1,required:["name"]}]},uniqueItems:!0},MI={meta:{type:"suggestion",docs:{description:"disallow specified modules when loaded by `require`",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-restricted-modules"},schema:{anyOf:[RI,{type:"array",items:{type:"object",properties:{paths:RI,patterns:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1},additionalItems:!1}]}},create:function(e){var t=Array.isArray(e.options)?e.options:[],r="object"==i(t[0])&&(Object.prototype.hasOwnProperty.call(t[0],"paths")||Object.prototype.hasOwnProperty.call(t[0],"patterns")),n=(r?t[0].paths:e.options)||[],a=(r?t[0].patterns:[])||[],o=n.reduce((function(e,t){return "string"==typeof t?e[t]=null:e[t.name]=t.message,e}),{});if(0===Object.keys(n).length&&0===a.length)return {};var s=IA().add(a);return {CallExpression:function(t){if(function(e){return "Identifier"===e.callee.type&&"require"===e.callee.name}(t)&&t.arguments.length&&function(e){return e&&"Literal"===e.type&&"string"==typeof e.value}(t.arguments[0])){var r=t.arguments[0].value.trim();((function(e){return Object.prototype.hasOwnProperty.call(o,e)}))(r)&&function(t){var r=t.arguments[0].value.trim(),n=o[r],i=n?jI:NI;e.report({node:t,message:i,data:{moduleName:r,customMessage:n}});}(t),0<a.length&&s.ignores(r)&&e.report({node:t,message:"'{{moduleName}}' module is restricted from being used by a pattern.",data:{moduleName:r}});}}}}},VI={meta:{type:"suggestion",docs:{description:"disallow certain properties on certain objects",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-restricted-properties"},schema:{type:"array",items:{anyOf:[{type:"object",properties:{object:{type:"string"},property:{type:"string"},message:{type:"string"}},additionalProperties:!1,required:["object"]},{type:"object",properties:{object:{type:"string"},property:{type:"string"},message:{type:"string"}},additionalProperties:!1,required:["property"]}]},uniqueItems:!0}},create:function(e){function t(t,r,n){if(null!==n){var s=i.get(r),u=s?s.get(n):a.get(r),c=o.get(n);if(u){var l=u.message?" ".concat(u.message):"";e.report({node:t,message:"'{{objectName}}.{{propertyName}}' is restricted from being used.{{message}}",data:{objectName:r,propertyName:n,message:l}});}else if(c){var p=c.message?" ".concat(c.message):"";e.report({node:t,message:"'{{propertyName}}' is restricted from being used.{{message}}",data:{propertyName:n,message:p}});}}}function r(e){if("Identifier"===e.right.type){var r=e.right.name;"ObjectPattern"===e.left.type&&e.left.properties.forEach((function(n){t(e.left,r,LA.getStaticPropertyName(n));}));}}var n=e.options;if(0===n.length)return {};var i=new Map,a=new Map,o=new Map;return n.forEach((function(e){var t=e.object,r=e.property;void 0===t?o.set(r,{message:e.message}):void 0===r?a.set(t,{message:e.message}):(!i.has(t)&&i.set(t,new Map),i.get(t).set(r,{message:e.message}));})),{MemberExpression:function(e){t(e,e.object&&e.object.name,LA.getStaticPropertyName(e));},VariableDeclarator:function(e){if(e.init&&"Identifier"===e.init.type){var r=e.init.name;"ObjectPattern"===e.id.type&&e.id.properties.forEach((function(n){t(e.id,r,LA.getStaticPropertyName(n));}));}},AssignmentExpression:r,AssignmentPattern:r}}},UI={meta:{type:"suggestion",docs:{description:"disallow specified syntax",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-restricted-syntax"},schema:{type:"array",items:{oneOf:[{type:"string"},{type:"object",properties:{selector:{type:"string"},message:{type:"string"}},required:["selector"],additionalProperties:!1}]},uniqueItems:!0,minItems:0}},create:function(e){return e.options.reduce((function(t,r){var n="string"==typeof r,i=!n&&!!r.message,a=n?r:r.selector,o=i?r.message:"Using '{{selector}}' is not allowed.";return Object.assign(t,u({},a,(function(t){e.report({node:t,message:o,data:i?{}:{selector:a}});})))}),{})}},qI=/^(?:[A-Za-z]+?Statement|ArrowFunctionExpression|FunctionExpression|ClassExpression)$/,WI={meta:{type:"suggestion",docs:{description:"disallow assignment operators in `return` statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-return-assign"},schema:[{enum:["except-parens","always"]}]},create:function(e){var t="except-parens"!==(e.options[0]||"except-parens"),r=e.getSourceCode();return {AssignmentExpression:function(n){if(t||!LA.isParenthesised(r,n)){for(var i=n,a=i.parent;a&&!qI.test(a.type);)i=a,a=a.parent;a&&"ReturnStatement"===a.type?e.report({node:a,message:"Return statement should not contain assignment."}):a&&"ArrowFunctionExpression"===a.type&&a.body===i&&e.report({node:a,message:"Arrow function should not return assignment."});}}}}},$I="Redundant use of `await` on a return value.",GI={meta:{type:"suggestion",docs:{description:"disallow unnecessary `return await`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-return-await"},fixable:null,schema:[]},create:function(e){function t(t){e.report({node:e.getSourceCode().getFirstToken(t),loc:t.loc,message:$I});}function r(e){for(var t=e;!LA.isFunction(t)&&"Program"!==t.type;){if("TryStatement"===t.parent.type&&(t===t.parent.block||t===t.parent.handler&&t.parent.finalizer))return !0;t=t.parent;}return !1}return {AwaitExpression:function(e){(function e(t){return !("ArrowFunctionExpression"!==t.parent.type)||("ReturnStatement"===t.parent.type?!r(t.parent):"ConditionalExpression"!==t.parent.type||t!==t.parent.consequent&&t!==t.parent.alternate?"LogicalExpression"===t.parent.type&&t===t.parent.right?e(t.parent):!("SequenceExpression"!==t.parent.type||t!==t.parent.expressions[t.parent.expressions.length-1])&&e(t.parent):e(t.parent))})(e)&&!r(e)&&t(e);}}}},zI=/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+/g;function HI(e,t){if(!function(e,t){if("Identifier"===e.property.type&&e.property.type===t.property.type&&e.property.name===t.property.name&&e.computed===t.computed)return !0;var r=LA.getStaticPropertyName(e),n=LA.getStaticPropertyName(t);return null!==r&&r===n}(e,t))return !1;var r=e.object,n=t.object;return !(r.type!==n.type)&&("MemberExpression"===r.type?HI(r,n):!("ThisExpression"!==r.type)||"Identifier"===r.type&&r.name===n.name)}var KI={meta:{type:"problem",docs:{description:"disallow assignments where both sides are exactly the same",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-self-assign"},schema:[{type:"object",properties:{props:{type:"boolean",default:!0}},additionalProperties:!1}]},create:function(e){function t(t){e.report({node:t,message:"'{{name}}' is assigned to itself.",data:{name:r.getText(t).replace(zI,"")}});}var r=e.getSourceCode(),n=b(e.options,1)[0],i=(n=void 0===n?{}:n).props,a=void 0===i||i;return {AssignmentExpression:function(e){"="===e.operator&&function e(t,r,n,i){if(t&&r)if("Identifier"===t.type&&"Identifier"===r.type&&t.name===r.name)i(r);else if("ArrayPattern"===t.type&&"ArrayExpression"===r.type)for(var a=Math.min(t.elements.length,r.elements.length),o=0;o<a;++o){var s=t.elements[o],u=r.elements[o];if(s&&"RestElement"===s.type&&o<r.elements.length-1)break;if(e(s,u,n,i),u&&"SpreadElement"===u.type)break}else if("RestElement"===t.type&&"SpreadElement"===r.type)e(t.argument,r.argument,n,i);else if("ObjectPattern"===t.type&&"ObjectExpression"===r.type&&1<=r.properties.length){for(var c=0,l=r.properties.length-1;0<=l;--l){var p=r.properties[l].type;if("SpreadElement"===p||"ExperimentalSpreadProperty"===p){c=l+1;break}}for(var f=0;f<t.properties.length;++f)for(var h=c;h<r.properties.length;++h)e(t.properties[f],r.properties[h],n,i);}else if("Property"!==t.type||"Property"!==r.type||"init"!==r.kind||r.method)n&&"MemberExpression"===t.type&&"MemberExpression"===r.type&&HI(t,r)&&i(r);else {var d=LA.getStaticPropertyName(t);null!==d&&d===LA.getStaticPropertyName(r)&&e(t.value,r.value,n,i);}}(e.left,e.right,a,t);}}}},JI={meta:{type:"problem",docs:{description:"disallow comparisons where both sides are exactly the same",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-self-compare"},schema:[]},create:function(e){function t(e,t){var n=r.getTokens(e),i=r.getTokens(t);return n.length===i.length&&n.every((function(e,t){return e.type===i[t].type&&e.value===i[t].value}))}var r=e.getSourceCode();return {BinaryExpression:function(r){new Set(["===","==","!==","!=",">","<",">=","<="]).has(r.operator)&&t(r.left,r.right)&&e.report({node:r,message:"Comparing to itself is potentially pointless."});}}}},QI={meta:{type:"suggestion",docs:{description:"disallow comma operators",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-sequences"},schema:[]},create:function(e){function t(e){return e.parent&&i[e.parent.type]&&e===e.parent[i[e.parent.type]]}function r(e){return LA.isParenthesised(n,e)}var n=e.getSourceCode(),i={DoWhileStatement:"test",IfStatement:"test",SwitchStatement:"discriminant",WhileStatement:"test",WithStatement:"object",ArrowFunctionExpression:"body"};return {SequenceExpression:function(i){if("ForStatement"!==i.parent.type||i!==i.parent.init&&i!==i.parent.update){if(t(i)){if(function(e){var t=n.getTokenBefore(e,1),i=n.getTokenAfter(e,1);return r(e)&&t&&i&&LA.isOpeningParenToken(t)&&t.range[1]<=e.range[0]&&LA.isClosingParenToken(i)&&i.range[0]>=e.range[1]}(i))return}else if(r(i))return;var a=n.getTokenAfter(i.expressions[0],LA.isCommaToken);e.report({node:i,loc:a.loc,message:"Unexpected use of comma operator."});}}}}},XI=Fy.require$$0.findVariable;function YI(e,t,r,n,i){var a=e.parent;return "CallExpression"===a.type&&a.arguments[i]===e&&"MemberExpression"===a.callee.type&&LA.getStaticPropertyName(a.callee)===n&&"Identifier"===a.callee.object.type&&a.callee.object.name===r&&function(e,t){var r=XI(t,e);return null!==r&&"global"===r.scope.type&&0===r.defs.length}(a.callee.object,t)}function ZI(e,t){var r=e.parent;return !("set"!==r.kind||r.value!==e)||!("Property"!==r.type||r.value!==e||"set"!==LA.getStaticPropertyName(r)||"ObjectExpression"!==r.parent.type||!function(e,t){if(YI(e,t,"Object","defineProperty",2)||YI(e,t,"Reflect","defineProperty",2))return !0;var r=e.parent;if("Property"===r.type&&r.value===e){var n=r.parent;if("ObjectExpression"===n.type&&(YI(n,t,"Object","create",1)||YI(n,t,"Object","defineProperties",1)))return !0}return !1}(r.parent,t))}var eB={meta:{type:"problem",docs:{description:"disallow returning values from setters",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-setter-return"},schema:[],messages:{returnsValue:"Setter cannot return a value."}},create:function(e){function t(t){var r=function(e){var t=e.upper;return "function-expression-name"===t.type?t.upper:t}(e.getScope());i={upper:i,isSetter:ZI(t,r)};}function r(){i=i.upper;}function n(t){e.report({node:t,messageId:"returnsValue"});}var i=null;return {FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:function(e){t(e),i.isSetter&&e.expression&&n(e.body);},"FunctionDeclaration:exit":r,"FunctionExpression:exit":r,"ArrowFunctionExpression:exit":r,ReturnStatement:function(e){i&&i.isSetter&&e.argument&&n(e);}}}};function tB(e){return "undefined"===e.name&&e.references.every((function(e){return !e.isWrite()}))&&e.defs.every((function(e){return "VariableDeclarator"===e.node.type&&null===e.node.init}))}var rB={meta:{type:"suggestion",docs:{description:"disallow identifiers from shadowing restricted names",category:"Variables",recommended:!0,url:"https://eslint.org/docs/rules/no-shadow-restricted-names"},schema:[]},create:function(e){var t=new Set(["undefined","NaN","Infinity","arguments","eval"]);return {"VariableDeclaration, :function, CatchClause":function(r){var n=!0,i=!1,a=void 0;try{for(var o,s=e.getDeclaredVariables(r)[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value;0<u.defs.length&&t.has(u.name)&&!tB(u)&&e.report({node:u.defs[0].name,message:"Shadowing of global property '{{idName}}'.",data:{idName:u.name}});}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}}}}},nB={meta:{type:"suggestion",docs:{description:"disallow variable declarations from shadowing variables declared in the outer scope",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-shadow"},schema:[{type:"object",properties:{builtinGlobals:{type:"boolean",default:!1},hoist:{enum:["all","functions","never"],default:"functions"},allow:{type:"array",items:{type:"string"}}},additionalProperties:!1}]},create:function(e){function t(e){return -1!==s.allow.indexOf(e.name)}function r(e){var t=e.scope.block;return "ClassDeclaration"===t.type&&t.id===e.identifiers[0]}function n(e,t){var r=t.scope,n=t.defs[0],i=n&&n.parent&&n.parent.range,a=e.scope,o=e.defs[0],s=o&&o.name.range;return i&&s&&i[0]<s[0]&&s[1]<i[1]&&("FunctionName"===o.type&&"FunctionExpression"===o.node.type||"ClassExpression"===o.node.type)&&r===a.upper}function i(e){var t=e.defs[0];return t&&t.name.range}function a(e,t){var r=t.defs[0],n=i(e),a=i(t);return n&&a&&n[1]<a[0]&&("functions"!==s.hoist||!r||"FunctionDeclaration"!==r.node.type)}function o(i){for(var o=i.variables,u=0;u<o.length;++u){var c=o[u];if(0!==c.identifiers.length&&!r(c)&&!t(c)){var l=LA.getVariableByName(i.upper,c.name);l&&(0<l.identifiers.length||s.builtinGlobals&&"writeable"in l)&&!n(c,l)&&("all"===s.hoist||!a(c,l))&&e.report({node:c.identifiers[0],message:"'{{name}}' is already declared in the upper scope.",data:c});}}}var s={builtinGlobals:e.options[0]&&e.options[0].builtinGlobals,hoist:e.options[0]&&e.options[0].hoist||"functions",allow:e.options[0]&&e.options[0].allow||[]};return {"Program:exit":function(){for(var t=e.getScope().childScopes.slice();t.length;){var r=t.pop();t.push.apply(t,E(r.childScopes)),o(r);}}}}},iB={meta:{type:"suggestion",docs:{description:"disallow synchronous methods",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-sync"},schema:[{type:"object",properties:{allowAtRootLevel:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){return u({},e.options[0]&&e.options[0].allowAtRootLevel?":function MemberExpression[property.name=/.*Sync$/]":"MemberExpression[property.name=/.*Sync$/]",(function(t){e.report({node:t,message:"Unexpected sync method: '{{propertyName}}'.",data:{propertyName:t.property.name}});}))}},aB=/\t+/g,oB=/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,sB={meta:{type:"layout",docs:{description:"disallow all tabs",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-tabs"},schema:[{type:"object",properties:{allowIndentationTabs:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){var t=e.getSourceCode(),r=e.options&&e.options[0]&&e.options[0].allowIndentationTabs;return {Program:function(n){t.getLines().forEach((function(t,i){for(var a;null!==(a=aB.exec(t));)(!r||oB.test(t.slice(0,a.index)))&&e.report({node:n,loc:{start:{line:i+1,column:a.index},end:{line:i+1,column:a.index+a[0].length}},message:"Unexpected tab character."});}));}}}};var uB={meta:{type:"problem",docs:{description:"disallow `this`/`super` before calling `super()` in constructors",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/no-this-before-super"},schema:[]},create:function(e){function t(e){return !e.reachable||o[e.id].superCalled}function r(){return !!(a&&a.isConstructor&&a.hasExtends)}function n(){return r()&&!a.codePath.currentSegments.every(t)}function i(e){for(var t=a.codePath.currentSegments,r=0;r<t.length;++r){var n=t[r];n.reachable&&o[n.id].invalidNodes.push(e);}}var a=null,o=Object.create(null);return {onCodePathStart:function(e,t){if(function(e){return "FunctionExpression"===e.type&&"MethodDefinition"===e.parent.type&&"constructor"===e.parent.kind}(t)){var r=t.parent.parent.parent;a={upper:a,isConstructor:!0,hasExtends:!(!r.superClass||LA.isNullOrUndefined(r.superClass)),codePath:e};}else a={upper:a,isConstructor:!1,hasExtends:!1,codePath:e};},onCodePathEnd:function(t){var r=a.hasExtends;a=a.upper,r&&t.traverseSegments((function(t,r){for(var n=o[t.id],i=0;i<n.invalidNodes.length;++i){var a=n.invalidNodes[i];e.report({message:"'{{kind}}' is not allowed before 'super()'.",node:a,data:{kind:"Super"===a.type?"super":"this"}});}n.superCalled&&r.skip();}));},onCodePathSegmentStart:function(e){r()&&(o[e.id]={superCalled:0<e.prevSegments.length&&e.prevSegments.every(t),invalidNodes:[]});},onCodePathSegmentLoop:function(e,n){r()&&a.codePath.traverseSegments({first:n,last:e},(function(e,r){var n=o[e.id];n.superCalled?(n.invalidNodes=[],r.skip()):0<e.prevSegments.length&&e.prevSegments.every(t)&&(n.superCalled=!0,n.invalidNodes=[]);}));},ThisExpression:function(e){n()&&i(e);},Super:function(e){!LA.isCallee(e)&&n()&&i(e);},"CallExpression:exit":function(e){"Super"===e.callee.type&&n()&&function(){for(var e=a.codePath.currentSegments,t=0;t<e.length;++t){var r=e[t];r.reachable&&(o[r.id].superCalled=!0);}}();},"Program:exit":function(){o=Object.create(null);}}}},cB={meta:{type:"suggestion",docs:{description:"disallow throwing literals as exceptions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-throw-literal"},schema:[],messages:{object:"Expected an error object to be thrown.",undef:"Do not throw undefined."}},create:function(e){return {ThrowStatement:function(t){LA.couldBeError(t.argument)?"Identifier"===t.argument.type&&"undefined"===t.argument.name&&e.report({node:t,messageId:"undef"}):e.report({node:t,messageId:"object"});}}}},lB={meta:{type:"layout",docs:{description:"disallow trailing whitespace at the end of lines",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-trailing-spaces"},fixable:"whitespace",schema:[{type:"object",properties:{skipBlankLines:{type:"boolean",default:!1},ignoreComments:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(t,r,n){e.report({node:t,loc:r,message:"Trailing spaces not allowed.",fix:function(e){return e.removeRange(n)}});}var r=e.getSourceCode(),n="[ \t  -​　]",i=e.options[0]||{},a=i.skipBlankLines||!1,o=i.ignoreComments||!1;return {Program:function(e){for(var i=new RegExp("".concat(n,"+$"),"u"),s=new RegExp("^".concat(n,"*$"),"u"),u=r.lines,c=r.getText().match(LA.createGlobalLinebreakMatcher()),l=function(e){var t=new Set;return e.forEach((function(e){for(var r="Block"===e.type?e.loc.end.line-1:e.loc.end.line,n=e.loc.start.line;n<=r;n++)t.add(n);})),t}(r.getAllComments()),p=0,f=[],h=0,d=u.length;h<d;h++){var m=h+1,g=c&&c[h]?c[h].length:1,y=u[h].length+g,v=i.exec(u[h]);if(v){var x={start:{line:m,column:v.index},end:{line:m,column:y-g}},b=p+x.start.column,E=p+x.end.column,C=r.getNodeByRangeIndex(b);if(C&&"TemplateElement"===C.type&&b>C.parent.range[0]&&E<C.parent.range[1]){p+=y;continue}if(a&&s.test(u[h])){p+=y;continue}f=[b,E],o&&l.has(m)||t(e,x,f);}p+=y;}}}}},pB={meta:{type:"suggestion",docs:{description:"disallow initializing variables to `undefined`",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-undef-init"},schema:[],fixable:"code"},create:function(e){var t=e.getSourceCode();return {VariableDeclarator:function(r){var n=t.getText(r.id),i=r.init&&r.init.name,a=e.getScope(),o=LA.getVariableByName(a,"undefined"),s=o&&0<o.defs.length,u=t.getLastToken(r);"undefined"!==i||"const"===r.parent.kind||s||e.report({node:r,message:"It's not necessary to initialize '{{name}}' to undefined.",data:{name:n},fix:function(e){return "var"===r.parent.kind?null:"ArrayPattern"===r.id.type||"ObjectPattern"===r.id.type?null:t.commentsExistBetween(r.id,u)?null:e.removeRange([r.id.range[1],r.range[1]])}});}}}};var fB={meta:{type:"problem",docs:{description:"disallow the use of undeclared variables unless mentioned in `/*global */` comments",category:"Variables",recommended:!0,url:"https://eslint.org/docs/rules/no-undef"},schema:[{type:"object",properties:{typeof:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{undef:"'{{name}}' is not defined."}},create:function(e){var t=e.options[0],r=t&&!0===t.typeof||!1;return {"Program:exit":function(){e.getScope().through.forEach((function(t){var n=t.identifier;!r&&function(e){var t=e.parent;return "UnaryExpression"===t.type&&"typeof"===t.operator}(n)||e.report({node:n,messageId:"undef",data:n});}));}}}},hB={meta:{type:"suggestion",docs:{description:"disallow the use of `undefined` as an identifier",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-undefined"},schema:[]},create:function(e){function t(t){e.report({node:t,message:"Unexpected use of undefined."});}function r(e){var r=e.set.get("undefined");if(r){var n=r.references,i=r.defs;n.filter((function(e){return !e.init})).forEach((function(e){return t(e.identifier)})),i.forEach((function(e){return t(e.name)}));}}return {"Program:exit":function(){for(var t=[e.getScope()];t.length;){var n=t.pop();t.push.apply(t,E(n.childScopes)),r(n);}}}}},dB={meta:{type:"problem",docs:{description:"disallow confusing multiline expressions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-unexpected-multiline"},schema:[],messages:{function:"Unexpected newline between function and ( of function call.",property:"Unexpected newline between object and [ of property access.",taggedTemplate:"Unexpected newline between template tag and template literal.",division:"Unexpected newline between numerator and division operator."}},create:function(e){function t(t,r){var i=n.getTokenAfter(t,LA.isNotClosingParenToken),a=n.getTokenBefore(i);i.loc.start.line!==a.loc.end.line&&e.report({node:t,loc:i.loc.start,messageId:r,data:{char:i.value}});}var r=/^[gimsuy]+$/,n=e.getSourceCode();return {MemberExpression:function(e){e.computed&&t(e.object,"property");},TaggedTemplateExpression:function(t){t.tag.loc.end.line===t.quasi.loc.start.line||e.report({node:t,loc:t.loc.start,messageId:"taggedTemplate"});},CallExpression:function(e){0===e.arguments.length||t(e.callee,"function");},"BinaryExpression[operator='/'] > BinaryExpression[operator='/'].left":function(e){var i=n.getTokenAfter(e,(function(e){return "/"===e.value})),a=n.getTokenAfter(i);"Identifier"===a.type&&r.test(a.value)&&i.range[1]===a.range[0]&&t(e.left,"division");}}}},mB=/(?:(?:Call|Class|Function|Member|New|Yield)Expression|Statement|Declaration)$/,gB=/^(?:DoWhile|For|While)Statement$/,yB=/^(?:BinaryExpression|ConditionalExpression)$/,vB=/^(?:ArrowFunction|Class|Function)Expression$/,xB=/^(?:Call|Member|New|TaggedTemplate|Yield)Expression$/;function bB(e){if(e.init){var t=e.resolved&&e.resolved.defs[0];if(!t||"Variable"!==t.type||"var"!==t.parent.kind)return !1}return e.isWrite()}function EB(e){return !e.modified}function CB(e){return !(e.modified||e.group)}function SB(e,t){var r=e.range,n=t.identifier.range;return r[0]<=n[0]&&n[1]<=r[1]}var kB={WhileStatement:SB,DoWhileStatement:SB,ForStatement:function(e,t){return SB(e,t)&&!(e.init&&SB(e.init,t))}};function DB(e){for(var t=e.identifier;t;){if("FunctionDeclaration"===t.type)return t.id?t:null;t=t.parent;}return null}var FB={meta:{type:"problem",docs:{description:"disallow unmodified loop conditions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-unmodified-loop-condition"},schema:[]},create:function(e){function t(t){var r=t.reference.identifier;e.report({node:r,message:"'{{name}}' is not modified in this loop.",data:r});}function r(e){e.every(EB)&&e.forEach(t);}function n(e){var t=!1;return Fy.Traverser.traverse(e,{visitorKeys:o.visitorKeys,enter:function(e){xB.test(e.type)?(t=!0,this.break()):vB.test(e.type)&&this.skip();}}),t}function i(e){if(e.init)return null;for(var t=null,r=e.identifier,i=r.parent;i;){if(mB.test(i.type)){if(gB.test(i.type)&&i.test===r)return {reference:e,group:t,isInLoop:kB[i.type].bind(null,i),modified:!1};break}if(yB.test(i.type)){if(n(i))break;t=i;}r=i,i=i.parent;}return null}function a(e){var r=e.references.map(i).filter(Boolean);if(0!==r.length){!function(e){for(var t=0;t<e.length;++t){var r=e[t];if(r.group){var n=s.get(r.group);n||(n=[],s.set(r.group,n)),n.push(r);}}}(r);var n=e.references.filter(bB);0<n.length&&function(e,t){for(var r=0;r<e.length;++r)for(var n=e[r],i=0;!n.modified&&i<t.length;++i){var a=t[i],o=void 0,s=void 0,u=n.isInLoop(a)||!!((o=DB(a))&&(s=LA.getVariableByName(a.from.upper,o.id.name))&&s.references.some(n.isInLoop));n.modified=u;}}(r,n),r.filter(CB).forEach(t);}}var o=e.getSourceCode(),s=null;return {"Program:exit":function(){var t,n=[e.getScope()];for(s=new Map;t=n.pop();)n.push.apply(n,E(t.childScopes)),t.variables.forEach(a);s.forEach(r),s=null;}}}},AB=new Set(["==","===","!=","!==",">",">=","<","<=","in","instanceof"]),wB={"==":"!=","!=":"==","===":"!==","!==":"==="},_B=LA.getPrecedence({type:"LogicalExpression",operator:"||"}),TB={meta:{type:"suggestion",docs:{description:"disallow ternary operators when simpler alternatives exist",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-unneeded-ternary"},schema:[{type:"object",properties:{defaultAssignment:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"code"},create:function(e){function t(e){return "Literal"===e.type&&"boolean"==typeof e.value}function r(e){if("BinaryExpression"===e.type&&Object.prototype.hasOwnProperty.call(wB,e.operator)){var t=i.getFirstTokenBetween(e.left,e.right,(function(t){return t.value===e.operator})),r=i.getText();return r.slice(e.range[0],t.range[0])+wB[e.operator]+r.slice(t.range[1],e.range[1])}return LA.getPrecedence(e)<LA.getPrecedence({type:"UnaryExpression"})?"!(".concat(LA.getParenthesisedText(i,e),")"):"!".concat(LA.getParenthesisedText(i,e))}var n=!1!==(e.options[0]||{}).defaultAssignment,i=e.getSourceCode();return {ConditionalExpression:function(a){t(a.alternate)&&t(a.consequent)?e.report({node:a,loc:a.consequent.loc.start,message:"Unnecessary use of boolean literals in conditional expression.",fix:function(e){return a.consequent.value===a.alternate.value?"Identifier"===a.test.type?e.replaceText(a,a.consequent.value.toString()):null:a.alternate.value?e.replaceText(a,r(a.test)):e.replaceText(a,function(e){return "BinaryExpression"===e.type&&AB.has(e.operator)||"UnaryExpression"===e.type&&"!"===e.operator}(a.test)?LA.getParenthesisedText(i,a.test):"!".concat(r(a.test)))}}):!n&&function(e){return "Identifier"===e.test.type&&"Identifier"===e.consequent.type&&e.test.name===e.consequent.name}(a)&&e.report({node:a,loc:a.consequent.loc.start,message:"Unnecessary use of conditional expression for default assignment.",fix:function(e){var t=LA.getPrecedence(a.alternate)<_B&&!LA.isParenthesised(i,a.alternate)?"(".concat(i.getText(a.alternate),")"):LA.getParenthesisedText(i,a.alternate),r=LA.getParenthesisedText(i,a.test);return e.replaceText(a,"".concat(r," || ").concat(t))}});}}}};function PB(e){return !!e.init}function IB(e){return !e.reachable}var BB=function(){function e(t){a(this,e),this.sourceCode=t,this.startNode=null,this.endNode=null;}return s(e,[{key:"contains",value:function(e){return e.range[0]>=this.startNode.range[0]&&e.range[1]<=this.endNode.range[1]}},{key:"isConsecutive",value:function(e){return this.contains(this.sourceCode.getTokenBefore(e))}},{key:"merge",value:function(e){this.endNode=e;}},{key:"reset",value:function(e){this.startNode=this.endNode=e;}},{key:"location",get:function(){return {start:this.startNode.loc.start,end:this.endNode.loc.end}}},{key:"isEmpty",get:function(){return !(this.startNode&&this.endNode)}}]),e}(),OB={meta:{type:"problem",docs:{description:"disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-unreachable"},schema:[]},create:function(e){function t(t){var i=null;if(t&&r.currentSegments.every(IB)){if(n.isEmpty)return void n.reset(t);if(n.contains(t))return;if(n.isConsecutive(t))return void n.merge(t);i=t;}n.isEmpty||e.report({message:"Unreachable code.",loc:n.location,node:n.startNode}),n.reset(i);}var r=null,n=new BB(e.getSourceCode());return {onCodePathStart:function(e){r=e;},onCodePathEnd:function(){r=r.upper;},BlockStatement:t,BreakStatement:t,ClassDeclaration:t,ContinueStatement:t,DebuggerStatement:t,DoWhileStatement:t,ExpressionStatement:t,ForInStatement:t,ForOfStatement:t,ForStatement:t,IfStatement:t,ImportDeclaration:t,LabeledStatement:t,ReturnStatement:t,SwitchStatement:t,ThrowStatement:t,TryStatement:t,VariableDeclaration:function(e){("var"!==e.kind||e.declarations.some(PB))&&t(e);},WhileStatement:t,WithStatement:t,ExportNamedDeclaration:t,ExportDefaultDeclaration:t,ExportAllDeclaration:t,"Program:exit":function(){t();}}}},LB=/^(?:Program|(?:Function|Class)(?:Declaration|Expression)|ArrowFunctionExpression)$/,NB=/^(?:Program|(?:Function|Class)(?:Declaration|Expression)|ArrowFunctionExpression|DoWhileStatement|WhileStatement|ForOfStatement|ForInStatement|ForStatement|SwitchStatement)$/,jB=/^(?:Program|(?:Function|Class)(?:Declaration|Expression)|ArrowFunctionExpression|DoWhileStatement|WhileStatement|ForOfStatement|ForInStatement|ForStatement)$/,RB={meta:{type:"problem",docs:{description:"disallow control flow statements in `finally` blocks",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-unsafe-finally"},schema:[]},create:function(e){function t(e){return "TryStatement"===e.parent.type&&e.parent.finalizer===e}function r(e,r){var n,i=!1;n="BreakStatement"!==e.type||e.label?"ContinueStatement"===e.type?jB:LB:NB;for(var a=e;a&&!n.test(a.type);a=a.parent)if(a.parent.label&&r&&a.parent.label.name===r.name&&(i=!0),t(a))return !(r&&i);return !1}function n(t){r(t,t.label)&&e.report({message:"Unsafe usage of {{nodeType}}.",data:{nodeType:t.type},node:t,line:t.loc.line,column:t.loc.column});}return {ReturnStatement:n,ThrowStatement:n,BreakStatement:n,ContinueStatement:n}}};var MB={meta:{type:"problem",docs:{description:"disallow negating the left operand of relational operators",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-unsafe-negation"},schema:[{type:"object",properties:{enforceForOrderingRelations:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:null,messages:{unexpected:"Unexpected negating the left operand of '{{operator}}' operator."}},create:function(e){var t=e.getSourceCode(),r=!0===(e.options[0]||{}).enforceForOrderingRelations;return {BinaryExpression:function(n){var i=r&&function(e){return "<"===e||">"===e||">="===e||"<="===e}(n.operator);(function(e){return "in"===e||"instanceof"===e}(n.operator)||i)&&function(e){return "UnaryExpression"===e.type&&"!"===e.operator}(n.left)&&!LA.isParenthesised(t,n.left)&&e.report({node:n,loc:n.left.loc,messageId:"unexpected",data:{operator:n.operator}});}}}},VB={meta:{type:"problem",docs:{description:"disallow unused variables",category:"Variables",recommended:!0,url:"https://eslint.org/docs/rules/no-unused-vars"},schema:[{oneOf:[{enum:["all","local"]},{type:"object",properties:{vars:{enum:["all","local"]},varsIgnorePattern:{type:"string"},args:{enum:["all","after-used","none"]},ignoreRestSiblings:{type:"boolean"},argsIgnorePattern:{type:"string"},caughtErrors:{enum:["all","none"]},caughtErrorsIgnorePattern:{type:"string"}}}]}]},create:function(e){function t(e){var t,r,n=e.defs&&e.defs[0]&&e.defs[0].type;"CatchClause"===n&&f.caughtErrorsIgnorePattern?(t="args",r=f.caughtErrorsIgnorePattern.toString()):"Parameter"===n&&f.argsIgnorePattern?(t="args",r=f.argsIgnorePattern.toString()):"Parameter"!==n&&f.varsIgnorePattern&&(t="vars",r=f.varsIgnorePattern.toString());var i=t?" Allowed unused ".concat(t," must match ").concat(r,"."):"";return "'{{name}}' is defined but never used.".concat(i)}function r(){var e=f.varsIgnorePattern?" Allowed unused vars must match ".concat(f.varsIgnorePattern.toString(),"."):"";return "'{{name}}' is assigned a value but never used.".concat(e)}function n(e){var t=e.defs[0];if(t){var r=t.node;if("VariableDeclarator"===r.type)r=r.parent;else if("Parameter"===t.type)return !1;return 0===r.parent.type.indexOf("Export")}return !1}function i(e){return !!f.ignoreRestSiblings&&e.defs.some((function(e){var t=e.name.parent,r=t.parent;return "Property"===t.type&&"ObjectPattern"===r.type&&p.test(r.properties[r.properties.length-1].type)}))}function a(e,t){return e.range[0]>=t.range[0]&&e.range[1]<=t.range[1]}function o(e,t){var r=LA.getUpperFunction(e);return r&&a(r,t)&&function(e,t){for(var r=e,n=e.parent;n&&a(n,t);){switch(n.type){case"SequenceExpression":if(n.expressions[n.expressions.length-1]!==r)return !1;break;case"CallExpression":case"NewExpression":return n.callee!==r;case"AssignmentExpression":case"TaggedTemplateExpression":case"YieldExpression":return !0;default:if(d.test(n.type))return !0}r=n,n=n.parent;}return !1}(r,t)}function s(e){var t=function(e){var t=[];return e.defs.forEach((function(e){var r=e.type,n=e.node;"FunctionName"===r&&t.push(n),"Variable"===r&&n.init&&("FunctionExpression"===n.init.type||"ArrowFunctionExpression"===n.init.type)&&t.push(n.init);})),t}(e),r=0<t.length,n=null;return e.references.some((function(e){if(function(e){var t=e.identifier.parent;return "VariableDeclarator"===t.type&&(t=t.parent.parent),"ForInStatement"===t.type&&(!!(t="BlockStatement"===t.body.type?t.body.body[0]:t.body)&&"ReturnStatement"===t.type)}(e))return !0;var i=function(e,t){var r=e.identifier,n=r.parent,i=n.parent;return e.isRead()&&("AssignmentExpression"===n.type&&"ExpressionStatement"===i.type&&n.left===r||"UpdateExpression"===n.type&&"ExpressionStatement"===i.type||t&&a(r,t)&&!o(r,t))}(e,n);return n=function(e,t){var r=e.identifier,n=r.parent,i=n.parent,o=e.from.variableScope!==e.resolved.scope.variableScope||LA.isInLoop(r);return t&&a(r,t)?t:"AssignmentExpression"!==n.type||"ExpressionStatement"!==i.type||r!==n.left||o?null:n.right}(e,n),function(e){return e.isRead()}(e)&&!i&&!(r&&function(e,t){for(var r=e.from;r;){if(0<=t.indexOf(r.block))return !0;r=r.upper;}return !1}(e,t))}))}function u(t){var r=t.defs[0],n=e.getDeclaredVariables(r.node);return !n.slice(n.indexOf(t)+1).some((function(e){return 0<e.references.length||e.eslintUsed}))}function c(e,t){var r,a,o=e.variables,l=e.childScopes;if("global"!==e.type||"all"===f.vars)for(r=0,a=o.length;r<a;++r){var p=o[r];if(("class"!==e.type||e.block.id!==p.identifiers[0])&&!(e.functionExpressionScope||p.eslintUsed||"function"===e.type&&"arguments"===p.name&&0===p.identifiers.length)){var h=p.defs[0];if(h){var d=h.type;if("CatchClause"===d){if("none"===f.caughtErrors)continue;if(f.caughtErrorsIgnorePattern&&f.caughtErrorsIgnorePattern.test(h.name.name))continue}if("Parameter"===d){if(("Property"===h.node.parent.type||"MethodDefinition"===h.node.parent.type)&&"set"===h.node.parent.kind)continue;if("none"===f.args)continue;if(f.argsIgnorePattern&&f.argsIgnorePattern.test(h.name.name))continue;if("after-used"===f.args&&LA.isFunction(h.name.parent)&&!u(p))continue}else if(f.varsIgnorePattern&&f.varsIgnorePattern.test(h.name.name))continue}s(p)||n(p)||i(p)||t.push(p);}}for(r=0,a=l.length;r<a;++r)c(l[r],t);return t}var l=e.getSourceCode(),p=/^(?:RestElement|(?:Experimental)?RestProperty)$/,f={vars:"all",args:"after-used",ignoreRestSiblings:!1,caughtErrors:"none"},h=e.options[0];h&&("string"==typeof h?f.vars=h:(f.vars=h.vars||f.vars,f.args=h.args||f.args,f.ignoreRestSiblings=h.ignoreRestSiblings||f.ignoreRestSiblings,f.caughtErrors=h.caughtErrors||f.caughtErrors,h.varsIgnorePattern&&(f.varsIgnorePattern=new RegExp(h.varsIgnorePattern,"u")),h.argsIgnorePattern&&(f.argsIgnorePattern=new RegExp(h.argsIgnorePattern,"u")),h.caughtErrorsIgnorePattern&&(f.caughtErrorsIgnorePattern=new RegExp(h.caughtErrorsIgnorePattern,"u"))));var d=/(?:Statement|Declaration)$/;return {"Program:exit":function(n){for(var i=c(e.getScope(),[]),a=0,o=i.length;a<o;++a){var s=i[a];if(0<s.defs.length)e.report({node:s.identifiers[0],message:s.references.some((function(e){return e.isWrite()}))?r():t(s),data:s});else if(s.eslintExplicitGlobalComments){var u=s.eslintExplicitGlobalComments[0];e.report({node:n,loc:LA.getNameLocationInGlobalDirectiveComment(l,u,s.name),message:t(s),data:s});}}}}}},UB=/^(?:(?:Function|Class)(?:Declaration|Expression)|ArrowFunctionExpression|CatchClause|ImportDeclaration|ExportNamedDeclaration)$/,qB=/^For(?:In|Of)Statement$/;function WB(e,t){return e&&e.range[0]<=t&&t<=e.range[1]}var $B={meta:{type:"problem",docs:{description:"disallow the use of variables before they are defined",category:"Variables",recommended:!1,url:"https://eslint.org/docs/rules/no-use-before-define"},schema:[{oneOf:[{enum:["nofunc"]},{type:"object",properties:{functions:{type:"boolean"},classes:{type:"boolean"},variables:{type:"boolean"}},additionalProperties:!1}]}]},create:function(e){function t(e,t){return function(e){return "FunctionName"===e.defs[0].type}(e)?n.functions:function(e,t){return "ClassName"===e.defs[0].type&&e.scope.variableScope!==t.from.variableScope}(e,t)?n.classes:!function(e,t){return "Variable"===e.defs[0].type&&e.scope.variableScope!==t.from.variableScope}(e,t)||n.variables}function r(n){n.references.forEach((function(r){var n=r.resolved;!r.init&&n&&0!==n.identifiers.length&&(!(n.identifiers[0].range[1]<r.identifier.range[1])||function(e,t){if(e.scope!==t.from)return !1;for(var r=e.identifiers[0].parent,n=t.identifier.range[1];r;){if("VariableDeclarator"===r.type){if(WB(r.init,n))return !0;if(qB.test(r.parent.parent.type)&&WB(r.parent.parent.right,n))return !0;break}if("AssignmentPattern"===r.type){if(WB(r.right,n))return !0}else if(UB.test(r.type))break;r=r.parent;}return !1}(n,r))&&t(n,r)&&e.report({node:r.identifier,message:"'{{name}}' was used before it was defined.",data:r.identifier});})),n.childScopes.forEach(r);}var n=function(e){var t=!0,r=!0,n=!0;return "string"==typeof e?t="nofunc"!=e:"object"==i(e)&&null!==e&&(t=!1!==e.functions,r=!1!==e.classes,n=!1!==e.variables),{functions:t,classes:r,variables:n}}(e.options[0]);return {Program:function(){r(e.getScope());}}}};var GB={meta:{type:"suggestion",docs:{description:"disallow unnecessary calls to `.call()` and `.apply()`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-call"},schema:[]},create:function(e){var t=e.getSourceCode();return {CallExpression:function(r){if(function(e){return "MemberExpression"===e.callee.type&&"Identifier"===e.callee.property.type&&!1===e.callee.computed&&("call"===e.callee.property.name&&1<=e.arguments.length||"apply"===e.callee.property.name&&2===e.arguments.length&&"ArrayExpression"===e.arguments[1].type)}(r)){var n=r.callee.object;(function(e,t,r){return e?LA.equalTokens(e,t,r):LA.isNullOrUndefined(t)})("MemberExpression"===n.type?n.object:null,r.arguments[0],t)&&e.report({node:r,message:"unnecessary '.{{name}}()'.",data:{name:r.callee.property.name}});}}}}},zB="Unnecessarily computed property [{{property}}] found.",HB={meta:{type:"suggestion",docs:{description:"disallow unnecessary computed property keys in objects and classes",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-computed-key"},schema:[{type:"object",properties:{enforceForClassMembers:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code"},create:function(e){function t(t){if(t.computed){var n,a=t.key,o=i(a.value);n="MethodDefinition"===t.type?t.static?"prototype":"constructor":"__proto__","Literal"===a.type&&("string"===o||"number"===o)&&a.value!==n&&e.report({node:t,message:zB,data:{property:r.getText(a)},fix:function(e){var n=r.getFirstToken(t,LA.isOpeningBracketToken),i=r.getFirstTokenBetween(t.key,t.value,LA.isClosingBracketToken),o=r.getTokensBetween(n,i,1);if(o.slice(0,-1).some((function(e,t){return r.getText().slice(e.range[1],o[t+1].range[0]).trim()})))return null;var s=r.getTokenBefore(n),u=(s.range[1]===n.range[0]&&!LA.canTokensBeAdjacent(s,r.getFirstToken(a))?" ":"")+a.raw;return e.replaceTextRange([n.range[0],i.range[1]],u)}});}}var r=e.getSourceCode();return {Property:t,MethodDefinition:e.options[0]&&e.options[0].enforceForClassMembers?t:Fy.lodash.noop}}};function KB(e){return "BinaryExpression"===e.type&&"+"===e.operator}function JB(e){return "+"===e.value&&"Punctuator"===e.type}var QB={meta:{type:"suggestion",docs:{description:"disallow unnecessary concatenation of literals or template literals",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-concat"},schema:[]},create:function(e){var t=e.getSourceCode();return {BinaryExpression:function(r){if("+"===r.operator){var n=function(e){for(var t=e.left;KB(t);)t=t.right;return t}(r),i=function(e){for(var t=e.right;KB(t);)t=t.left;return t}(r);if(LA.isStringLiteral(n)&&LA.isStringLiteral(i)&&LA.isTokenOnSameLine(n,i)){var a=t.getFirstTokenBetween(n,i,JB);e.report({node:r,loc:a.loc.start,message:"Unexpected string concatenation of literals."});}}}}}};function XB(e){return "Identifier"===e.type||"RestElement"===e.type}function YB(e,t){return "Identifier"===e.type&&"Identifier"===t.type&&e.name===t.name}function ZB(e,t){return YB(e,t)||function(e,t){return "RestElement"===e.type&&"SpreadElement"===t.type&&YB(e.argument,t.argument)}(e,t)}function eO(e,t){return function(e){return 1===e.length&&"ExpressionStatement"===e[0].type&&"CallExpression"===e[0].expression.type&&"Super"===e[0].expression.callee.type}(e)&&t.every(XB)&&(function(e){return 1===e.length&&"SpreadElement"===e[0].type&&"Identifier"===e[0].argument.type&&"arguments"===e[0].argument.name}(e[0].expression.arguments)||function(e,t){if(e.length!==t.length)return !1;for(var r=0;r<e.length;++r)if(!ZB(e[r],t[r]))return !1;return !0}(t,e[0].expression.arguments))}var tO={meta:{type:"suggestion",docs:{description:"disallow unnecessary constructors",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-constructor"},schema:[]},create:function(e){return {MethodDefinition:function(t){if("constructor"===t.kind){var r=t.value.body.body,n=t.value.params;(t.parent.parent.superClass?eO(r,n):0===r.length)&&e.report({node:t,message:"Useless constructor."});}}}}};function rO(e,t){return new Set(regeneratorRuntime.mark((function r(){return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.delegateYield(e,"t0",1);case 1:return r.delegateYield(t,"t1",2);case 2:case"end":return r.stop()}}),r)}))())}var nO=rO(new Set("\\nrvtbfux"),LA.LINEBREAKS),iO=new Set("\\bcdDfnpPrsStvwWxu0123456789]"),aO=rO(iO,new Set("^/.$*+?[{}|()Bk"));var oO={meta:{type:"suggestion",docs:{description:"disallow unnecessary escape characters",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-useless-escape",suggestion:!0},messages:{unnecessaryEscape:"Unnecessary escape character: \\{{character}}.",removeEscape:"Remove the `\\`. This maintains the current functionality.",escapeBackslash:"Replace the `\\` with `\\\\` to include the actual backslash character."},schema:[]},create:function(e){function t(t,r,n){var a=i.getLocFromIndex(i.getIndexFromLoc(t.loc.start)+r),o=i.getIndexFromLoc(t.loc.start)+r,s=[o,o+1];e.report({node:t,loc:{start:a,end:{line:a.line,column:a.column+1}},messageId:"unnecessaryEscape",data:{character:n},suggest:[{messageId:"removeEscape",fix:function(e){return e.removeRange(s)}},{messageId:"escapeBackslash",fix:function(e){return e.insertTextBeforeRange(s,"\\")}}]});}function r(e,r){var n,i="TemplateElement"===e.type,a=r[0][1],o=!nO.has(a);i?(n="`"===a,"$"===a?o="{"!==r.input[r.index+2]:"{"===a&&(o="$"!==r.input[r.index-1])):n=a===e.raw[0],o&&!n&&t(e,r.index+1,r[0].slice(1));}function n(e){var n="TemplateElement"===e.type;if(!(n&&e.parent&&e.parent.parent&&"TaggedTemplateExpression"===e.parent.parent.type&&e.parent===e.parent.parent.quasi))if("string"==typeof e.value||n){if("JSXAttribute"===e.parent.type||"JSXElement"===e.parent.type||"JSXFragment"===e.parent.type)return;for(var i,a=n?e.value.raw:e.raw.slice(1,-1),o=/\\(?:[\0-\/:-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;i=o.exec(a);)r(e,i);}else e.regex&&function(e){var t=[];return e.split("").reduce((function(e,r,n){if(!e.escapeNextChar){if("\\"===r)return Object.assign(e,{escapeNextChar:!0});if("["===r&&!e.inCharClass)return Object.assign(e,{inCharClass:!0,startingCharClass:!0});if("]"===r&&e.inCharClass)return t.length&&t[t.length-1].inCharClass&&(t[t.length-1].endsCharClass=!0),Object.assign(e,{inCharClass:!1,startingCharClass:!1})}return t.push({text:r,index:n,escaped:e.escapeNextChar,inCharClass:e.inCharClass,startsCharClass:e.startingCharClass,endsCharClass:!1}),Object.assign(e,{escapeNextChar:!1,startingCharClass:!1})}),{escapeNextChar:!1,inCharClass:!1,startingCharClass:!1}),t}(e.regex.pattern).filter((function(e){return "-"!==e.text||!e.inCharClass||e.startsCharClass||e.endsCharClass})).filter((function(e){return !("^"===e.text&&e.startsCharClass)})).filter((function(e){return e.escaped})).filter((function(e){return !(e.inCharClass?iO:aO).has(e.text)})).forEach((function(r){return t(e,r.index,r.text)}));}var i=e.getSourceCode();return {Literal:n,TemplateElement:n}}},sO={meta:{type:"suggestion",docs:{description:"disallow renaming import, export, and destructured assignments to the same name",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-rename"},fixable:"code",schema:[{type:"object",properties:{ignoreDestructuring:{type:"boolean",default:!1},ignoreImport:{type:"boolean",default:!1},ignoreExport:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(t,n,i,a){var o="Identifier"===n.type?n.name:n.value;return e.report({node:t,message:"{{type}} {{name}} unnecessarily renamed.",data:{name:o,type:a},fix:function(e){if(r.commentsExistBetween(n,i))return null;var t="AssignmentPattern"===i.type?r.getText(i):o;return e.replaceTextRange([n.range[0],i.range[1]],t)}})}var r=e.getSourceCode(),n=e.options[0]||{},i=!0===n.ignoreDestructuring,a=!0===n.ignoreImport,o=!0===n.ignoreExport;return {ObjectPattern:function(e){if(!i){var r=!0,n=!1,a=void 0;try{for(var o,s=e.properties[Symbol.iterator]();!(r=(o=s.next()).done);r=!0){var u=o.value;if("ExperimentalRestProperty"!==u.type)if(!u.shorthand&&"RestElement"!==u.type&&!u.computed)("Identifier"===u.key.type&&u.key.name||"Literal"===u.key.type&&u.key.value)===("AssignmentPattern"===u.value.type?u.value.left.name:u.value.name)&&t(u,u.key,u.value,"Destructuring assignment");}}catch(e){n=!0,a=e;}finally{try{r||null==s.return||s.return();}finally{if(n)throw a}}}},ImportSpecifier:function(e){a||e.imported.name===e.local.name&&e.imported.range[0]!==e.local.range[0]&&t(e,e.imported,e.local,"Import");},ExportSpecifier:function(e){o||e.local.name===e.exported.name&&e.local.range[0]!==e.exported.range[0]&&t(e,e.local,e.exported,"Export");}}}};function uO(e,t){var r=e.indexOf(t);-1!==r&&e.splice(r,1);}var cO={meta:{type:"suggestion",docs:{description:"disallow redundant return statements",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-return"},fixable:"code",schema:[]},create:function(e){function t(e){var t=a.get(e);return !t||t.returned}function r(e,n,i){var o=i||new WeakSet,s=!0,u=!1,c=void 0;try{for(var l,p=n[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){var f=l.value;f.reachable?e.push.apply(e,E(a.get(f).uselessReturns)):o.has(f)||(o.add(f),r(e,f.allPrevSegments.filter(t),o));}}catch(e){u=!0,c=e;}finally{try{s||null==p.return||p.return();}finally{if(u)throw c}}return e}function n(e){if(!e.reachable)return o.add(e),void e.allPrevSegments.filter(t).filter((function(e){return !o.has(e)})).forEach(n);var r=a.get(e),i=!0,s=!1,c=void 0;try{for(var l,p=r.uselessReturns[Symbol.iterator]();!(i=(l=p.next()).done);i=!0){var f=l.value;uO(u.uselessReturns,f);}}catch(e){s=!0,c=e;}finally{try{i||null==p.return||p.return();}finally{if(s)throw c}}r.uselessReturns=[];}function i(){u.codePath.currentSegments.forEach(n);}var a=new WeakMap,o=new WeakSet,s=e.getSourceCode(),u=null;return {onCodePathStart:function(e){u={upper:u,uselessReturns:[],codePath:e};},onCodePathEnd:function(){var t=!0,r=!1,n=void 0;try{for(var i,a=function(){var t=i.value;e.report({node:t,loc:t.loc,message:"Unnecessary return statement.",fix:function(e){return function(e){return LA.STATEMENT_LIST_PARENTS.has(e.parent.type)}(t)&&!s.getCommentsInside(t).length?new RT(e,s).retainEnclosingFunction(t).remove(t):null}});},o=u.uselessReturns[Symbol.iterator]();!(t=(i=o.next()).done);t=!0)a();}catch(e){r=!0,n=e;}finally{try{t||null==o.return||o.return();}finally{if(r)throw n}}u=u.upper;},onCodePathSegmentStart:function(e){var t={uselessReturns:r([],e.allPrevSegments),returned:!1};a.set(e,t);},ReturnStatement:function(e){if(e.argument&&i(),!(e.argument||LA.isInLoop(e)||function(e){for(var t=e;t&&t.parent&&!LA.isFunction(t);t=t.parent)if("TryStatement"===t.parent.type&&t.parent.finalizer===t)return !0;return !1}(e))&&u.codePath.currentSegments.some((function(e){return e.reachable}))){var t=!0,r=!1,n=void 0;try{for(var o,s=u.codePath.currentSegments[Symbol.iterator]();!(t=(o=s.next()).done);t=!0){var c=o.value,l=a.get(c);l&&(l.uselessReturns.push(e),l.returned=!0);}}catch(e){r=!0,n=e;}finally{try{t||null==s.return||s.return();}finally{if(r)throw n}}u.uselessReturns.push(e);}},ClassDeclaration:i,ContinueStatement:i,DebuggerStatement:i,DoWhileStatement:i,EmptyStatement:i,ExpressionStatement:i,ForInStatement:i,ForOfStatement:i,ForStatement:i,IfStatement:i,ImportDeclaration:i,LabeledStatement:i,SwitchStatement:i,ThrowStatement:i,TryStatement:i,VariableDeclaration:i,WhileStatement:i,WithStatement:i,ExportNamedDeclaration:i,ExportDefaultDeclaration:i,ExportAllDeclaration:i}}};function lO(e){return !!e.scope&&"global"===e.scope.type}function pO(e){for(var t=e;"function"!==t.type&&"global"!==t.type;)t=t.upper;return t}function fO(e){var t=pO(e.scope);return e.references.some((function(e){return pO(e.from)!==t}))}function hO(e){return ("ForOfStatement"===e.parent.type||"ForInStatement"===e.parent.type)&&e===e.parent.left}var dO=/^(?:Program|BlockStatement|SwitchStatement|ForStatement|ForInStatement|ForOfStatement)$/;function mO(e){return 2<=e.defs.length}function gO(e){return "let"===e.name}var yO={meta:{type:"suggestion",docs:{description:"require `let` or `const` instead of `var`",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/no-var"},schema:[],fixable:"code"},create:function(e){function t(t){return !!t.init&&e.getDeclaredVariables(t).some(function(e){var t=e.range[0],r=e.range[1];return function(e){var n=e.defs[0].name,i=n.range[0],a="AssignmentPattern"===n.parent.type?n.parent.right:null,o=a&&a.range[0],s=a&&a.range[1];return e.references.some((function(e){var n=e.identifier.range[0],u=e.identifier.range[1];return !e.init&&(n<i||null!==a&&n>=o&&u<=s||n>=t&&u<=r)}))}}(t.init))}function r(r){var n=e.getDeclaredVariables(r),i=function(e){for(var t=e;t;t=t.parent)if(dO.test(t.type))return t;return null}(r);if("SwitchCase"===r.parent.type||r.declarations.some(t)||n.some(lO)||n.some(mO)||n.some(function(e){function t(t){var r=e.range,n=t.identifier.range;return n[0]<r[0]||n[1]>r[1]}return function(e){return e.references.some(t)}}(i))||n.some(gO))return !1;if(LA.isInLoop(r)){if(n.some(fO))return !1;if(!hO(r)&&!function(e){return e.declarations.every((function(e){return null!==e.init}))}(r))return !1}return !!(hO(r)||"ForStatement"===r.parent.type&&r.parent.init===r||LA.STATEMENT_LIST_PARENTS.has(r.parent.type))}function n(t){e.report({node:t,message:"Unexpected var, use let or const instead.",fix:function(e){var n=i.getFirstToken(t,{filter:function(e){return "var"===e.value}});return r(t)?e.replaceText(n,"let"):null}});}var i=e.getSourceCode();return {"VariableDeclaration:exit":function(e){"var"===e.kind&&n(e);}}}},vO=Fy.lodash.escapeRegExp,xO={meta:{type:"suggestion",docs:{description:"disallow specified warning terms in comments",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-warning-comments"},schema:[{type:"object",properties:{terms:{type:"array",items:{type:"string"}},location:{enum:["start","anywhere"]}},additionalProperties:!1}]},create:function(e){function t(t){LA.isDirectiveComment(t)&&o.test(t.value)||function(e){var t=[];return s.forEach((function(r,n){r.test(e)&&t.push(i[n]);})),t}(t.value).forEach((function(r){e.report({node:t,message:"Unexpected '{{matchedTerm}}' comment.",data:{matchedTerm:r}});}));}var r=e.getSourceCode(),n=e.options[0]||{},i=n.terms||["todo","fixme","xxx"],a=n.location||"start",o=/\bno\x2Dwarning\x2Dcomments\b/,s=i.map((function(e){var t,r=vO(e),n="\\b",i=/[0-9A-Z_a-z]$/.test(e)?"\\b":"";return t="start"===a?"^\\s*":/^[0-9A-Z_a-z]/.test(e)?n:"","start"===a?new RegExp(t+r+i,"iu"):new RegExp(t+r+i+"|".concat(n)+e+n,"iu")}));return {Program:function(){r.getAllComments().filter((function(e){return "Shebang"!==e.type})).forEach(t);}}}},bO={meta:{type:"layout",docs:{description:"disallow whitespace before properties",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-whitespace-before-property"},fixable:"whitespace",schema:[]},create:function(e){function t(t,n,i){var a=t.computed?"":".";e.report({node:t,message:"Unexpected whitespace before property {{propName}}.",data:{propName:r.getText(t.property)},fix:function(e){return !t.computed&&LA.isDecimalInteger(t.object)?null:e.replaceTextRange([n.range[1],i.range[0]],a)}});}var r=e.getSourceCode();return {MemberExpression:function(e){var n,i;LA.isTokenOnSameLine(e.object,e.property)&&(e.computed?(n=r.getTokenBefore(e.property,LA.isOpeningBracketToken),i=r.getTokenBefore(n)):(n=r.getFirstToken(e.property),i=r.getTokenBefore(n,1)),r.isSpaceBetweenTokens(i,n)&&t(e,i,n));}}}},EO={enum:["beside","below","any"]},CO={meta:{type:"layout",docs:{description:"enforce the location of single-line statements",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/nonblock-statement-body-position"},fixable:"whitespace",schema:[EO,{properties:{overrides:{properties:{if:EO,else:EO,while:EO,do:EO,for:EO},additionalProperties:!1}},additionalProperties:!1}]},create:function(e){function t(t,n){var i=function(t){return e.options[1]&&e.options[1].overrides&&e.options[1].overrides[t]||e.options[0]||"beside"}(n);if("BlockStatement"!==t.type&&"any"!==i){var a=r.getTokenBefore(t);a.loc.end.line===t.loc.start.line&&"below"===i?e.report({node:t,message:"Expected a linebreak before this statement.",fix:function(e){return e.insertTextBefore(t,"\n")}}):a.loc.end.line!==t.loc.start.line&&"beside"===i&&e.report({node:t,message:"Expected no linebreak before this statement.",fix:function(e){return r.getText().slice(a.range[1],t.range[0]).trim()?null:e.replaceTextRange([a.range[1],t.range[0]]," ")}});}}var r=e.getSourceCode();return {IfStatement:function(e){t(e.consequent,"if"),e.alternate&&"IfStatement"!==e.alternate.type&&t(e.alternate,"else");},WhileStatement:function(e){return t(e.body,"while")},DoWhileStatement:function(e){return t(e.body,"do")},ForStatement:function(e){return t(e.body,"for")},ForInStatement:function(e){return t(e.body,"for")},ForOfStatement:function(e){return t(e.body,"for")}}}},SO={oneOf:[{enum:["always","never"]},{type:"object",properties:{multiline:{type:"boolean"},minProperties:{type:"integer",minimum:0},consistent:{type:"boolean"}},additionalProperties:!1,minProperties:1}]};function kO(e){var t=Number.POSITIVE_INFINITY,r=!1,n=t,i=!1;return e?"always"===e?n=0:"never"===e?n=t:(r=!!e.multiline,n=e.minProperties||t,i=!!e.consistent):i=!0,{multiline:r,minProperties:n,consistent:i}}var DO={meta:{type:"layout",docs:{description:"enforce consistent line breaks inside braces",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/object-curly-newline"},fixable:"whitespace",schema:[{oneOf:[SO,{type:"object",properties:{ObjectExpression:SO,ObjectPattern:SO,ImportDeclaration:SO,ExportDeclaration:SO},additionalProperties:!1,minProperties:1}]}]},create:function(e){function t(t){var i=n[t.type];if(("ImportDeclaration"!==t.type||t.specifiers.some((function(e){return "ImportSpecifier"===e.type})))&&("ExportNamedDeclaration"!==t.type||t.specifiers.some((function(e){return "ExportSpecifier"===e.type})))){var a=r.getFirstToken(t,(function(e){return "{"===e.value})),o=t.typeAnnotation?r.getTokenBefore(t.typeAnnotation):r.getLastToken(t,(function(e){return "}"===e.value})),s=r.getTokenAfter(a,{includeComments:!0}),u=r.getTokenBefore(o,{includeComments:!0}),c=function(e,t,r,n){var i;return (i="ObjectExpression"===e.type||"ObjectPattern"===e.type?e.properties:e.specifiers.filter((function(e){return "ImportSpecifier"===e.type||"ExportSpecifier"===e.type}))).length>=t.minProperties||t.multiline&&0<i.length&&r.loc.start.line!==n.loc.end.line}(t,i,s,u),l=LA.isCommentToken(s),p=LA.isCommentToken(u);if(s=r.getTokenAfter(a),u=r.getTokenBefore(o),c)LA.isTokenOnSameLine(a,s)&&e.report({message:"Expected a line break after this opening brace.",node:t,loc:a.loc.start,fix:function(e){return l?null:e.insertTextAfter(a,"\n")}}),LA.isTokenOnSameLine(u,o)&&e.report({message:"Expected a line break before this closing brace.",node:t,loc:o.loc.start,fix:function(e){return p?null:e.insertTextBefore(o,"\n")}});else {var f=i.consistent,h=!LA.isTokenOnSameLine(a,s),d=!LA.isTokenOnSameLine(u,o);(!f&&h||f&&h&&!d)&&e.report({message:"Unexpected line break after this opening brace.",node:t,loc:a.loc.start,fix:function(e){return l?null:e.removeRange([a.range[1],s.range[0]])}}),(!f&&d||f&&!h&&d)&&e.report({message:"Unexpected line break before this closing brace.",node:t,loc:o.loc.start,fix:function(e){return p?null:e.removeRange([u.range[1],o.range[0]])}});}}}var r=e.getSourceCode(),n=function(e){var t=Fy.lodash.overSome([Fy.lodash.isPlainObject,Fy.lodash.isString]);if(Fy.lodash.isPlainObject(e)&&Fy.lodash.some(e,t))return {ObjectExpression:kO(e.ObjectExpression),ObjectPattern:kO(e.ObjectPattern),ImportDeclaration:kO(e.ImportDeclaration),ExportNamedDeclaration:kO(e.ExportDeclaration)};var r=kO(e);return {ObjectExpression:r,ObjectPattern:r,ImportDeclaration:r,ExportNamedDeclaration:r}}(e.options[0]);return {ObjectExpression:t,ObjectPattern:t,ImportDeclaration:t,ExportNamedDeclaration:t}}},FO={meta:{type:"layout",docs:{description:"enforce consistent spacing inside braces",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/object-curly-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{arraysInObjects:{type:"boolean"},objectsInObjects:{type:"boolean"}},additionalProperties:!1}]},create:function(e){function t(t){return !!e.options[1]&&e.options[1][t]===!u}function r(t,r){var n=e.getSourceCode().getTokenAfter(r,{includeComments:!0});e.report({node:t,loc:{start:r.loc.end,end:n.loc.start},message:"There should be no space after '{{token}}'.",data:{token:r.value},fix:function(e){return e.removeRange([r.range[1],n.range[0]])}});}function n(t,r){var n=e.getSourceCode().getTokenBefore(r,{includeComments:!0});e.report({node:t,loc:{start:n.loc.end,end:r.loc.start},message:"There should be no space before '{{token}}'.",data:{token:r.value},fix:function(e){return e.removeRange([n.range[1],r.range[0]])}});}function i(t,r){e.report({node:t,loc:r.loc,message:"A space is required after '{{token}}'.",data:{token:r.value},fix:function(e){return e.insertTextAfter(r," ")}});}function a(t,r){e.report({node:t,loc:r.loc,message:"A space is required before '{{token}}'.",data:{token:r.value},fix:function(e){return e.insertTextBefore(r," ")}});}function o(e,t,o,s,u){if(LA.isTokenOnSameLine(t,o)){var p=c.isSpaceBetweenTokens(t,o);l.spaced&&!p&&i(e,t),!l.spaced&&p&&"Line"!==o.type&&r(e,t);}if(LA.isTokenOnSameLine(s,u)){var f=(l.arraysInObjectsException&&LA.isClosingBracketToken(s)||l.objectsInObjectsException&&LA.isClosingBraceToken(s))&&c.getNodeByRangeIndex(s.range[0]).type,h=l.arraysInObjectsException&&"ArrayExpression"===f||l.objectsInObjectsException&&("ObjectExpression"===f||"ObjectPattern"===f)?!l.spaced:l.spaced,d=c.isSpaceBetweenTokens(s,u);h&&!d&&a(e,u),!h&&d&&n(e,u);}}function s(e){if(0!==e.properties.length){var t=c.getFirstToken(e),r=function(e){var t=e.properties[e.properties.length-1];return c.getTokenAfter(t,LA.isClosingBraceToken)}(e);o(e,t,c.getTokenAfter(t,{includeComments:!0}),c.getTokenBefore(r,{includeComments:!0}),r);}}var u="always"===e.options[0],c=e.getSourceCode(),l={spaced:u,arraysInObjectsException:t("arraysInObjects"),objectsInObjectsException:t("objectsInObjects")};return {ObjectPattern:s,ObjectExpression:s,ImportDeclaration:function(e){if(0!==e.specifiers.length){var t=e.specifiers[0],r=e.specifiers[e.specifiers.length-1];if("ImportSpecifier"===r.type){"ImportSpecifier"!==t.type&&(t=e.specifiers[1]);var n=c.getTokenBefore(t),i=c.getTokenAfter(r,LA.isNotCommaToken);o(e,n,c.getTokenAfter(n,{includeComments:!0}),c.getTokenBefore(i,{includeComments:!0}),i);}}},ExportNamedDeclaration:function(e){if(0!==e.specifiers.length){var t=e.specifiers[0],r=e.specifiers[e.specifiers.length-1],n=c.getTokenBefore(t),i=c.getTokenAfter(r,LA.isNotCommaToken);o(e,n,c.getTokenAfter(n,{includeComments:!0}),c.getTokenBefore(i,{includeComments:!0}),i);}}}}},AO="always",wO="never",_O="methods",TO="properties",PO="consistent",IO="consistent-as-needed",BO={meta:{type:"suggestion",docs:{description:"require or disallow method and property shorthand syntax for object literals",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/object-shorthand"},fixable:"code",schema:{anyOf:[{type:"array",items:[{enum:["always","methods","properties","never","consistent","consistent-as-needed"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["always","methods","properties"]},{type:"object",properties:{avoidQuotes:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2},{type:"array",items:[{enum:["always","methods"]},{type:"object",properties:{ignoreConstructors:{type:"boolean"},avoidQuotes:{type:"boolean"},avoidExplicitReturnArrows:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]}},create:function(e){function t(e){return "set"!==e.kind&&"get"!==e.kind&&"SpreadElement"!==e.type&&"SpreadProperty"!==e.type&&"ExperimentalSpreadProperty"!==e.type}function r(e){return "Literal"===e.type&&"string"==typeof e.value}function n(e){return e.shorthand||e.method}function i(e){var t=e.value;return "FunctionExpression"===t.type?!t.id:!("Identifier"!==t.type)&&LA.getStaticPropertyName(e)===t.name}function a(r,a){var o=r.properties.filter(t);if(0<o.length){var s=o.filter(n);if(s.length!==o.length)if(0<s.length)e.report({node:r,message:"Unexpected mix of shorthand and non-shorthand properties."});else if(a){o.every(i)&&e.report({node:r,message:"Expected shorthand for all properties."});}}}function o(){E.unshift(new Set),e.getScope().variables.filter((function(e){return "arguments"===e.name})).forEach((function(e){e.references.map((function(e){return e.identifier})).forEach((function(e){return S.add(e)}));}));}function s(){E.shift();}function u(){E[0].forEach((function(e){return C.add(e)}));}var c=e.options[0]||AO,l=c===_O||c===AO,p=c===TO||c===AO,f=c===wO,h=c===PO,d=c===IO,m=e.options[1]||{},g=m.ignoreConstructors,y=m.avoidQuotes,v=!!m.avoidExplicitReturnArrows,x=e.getSourceCode(),b=/(?:[\0-#%-\/:-\^`-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,E=[],C=new WeakSet,S=new WeakSet;return {Program:o,FunctionDeclaration:o,FunctionExpression:o,"Program:exit":s,"FunctionDeclaration:exit":s,"FunctionExpression:exit":s,ArrowFunctionExpression:function(e){E[0].add(e);},"ArrowFunctionExpression:exit":function(e){E[0].delete(e);},ThisExpression:u,Super:u,MetaProperty:function(e){"new"===e.meta.name&&"target"===e.property.name&&u();},Identifier:function(e){S.has(e)&&u();},ObjectExpression:function(e){h?a(e,!1):d&&a(e,!0);},"Property:exit":function(t){var n=t.method||t.shorthand;if("ObjectPattern"!==t.parent.type&&"get"!==t.kind&&"set"!==t.kind&&(!t.computed||"FunctionExpression"===t.value.type||"ArrowFunctionExpression"===t.value.type))if(n)if(t.method&&(f||y&&r(t.key))){var i=f?"Expected longform method syntax.":"Expected longform method syntax for string literal keys.";e.report({node:t,message:i,fix:function(e){return function(e,t){var r=t.computed?x.getTokens(t).find((function(e){return "["===e.value})):x.getFirstToken(t.key),n=t.computed?x.getTokensBetween(t.key,t.value).find((function(e){return "]"===e.value})):x.getLastToken(t.key),i=x.text.slice(r.range[0],n.range[1]),a="function";return t.value.async&&(a="async ".concat(a)),t.value.generator&&(a="".concat(a,"*")),e.replaceTextRange([t.range[0],n.range[1]],"".concat(i,": ").concat(a))}(e,t)}});}else f&&e.report({node:t,message:"Expected longform property syntax.",fix:function(e){return e.insertTextAfter(t.key,": ".concat(t.key.name))}});else if(!l||t.value.id||"FunctionExpression"!==t.value.type&&"ArrowFunctionExpression"!==t.value.type){if("Identifier"===t.value.type&&t.key.name===t.value.name&&p)e.report({node:t,message:"Expected property shorthand.",fix:function(e){return e.replaceText(t,t.value.name)}});else if("Identifier"===t.value.type&&"Literal"===t.key.type&&t.key.value===t.value.name&&p){if(y)return;e.report({node:t,message:"Expected property shorthand.",fix:function(e){return e.replaceText(t,t.value.name)}});}}else {if(g&&"Identifier"===t.key.type&&function(e){var t=b.exec(e);if(!t)return !1;var r=e.charAt(t.index);return r===r.toUpperCase()}(t.key.name))return;if(y&&r(t.key))return;("FunctionExpression"===t.value.type||"ArrowFunctionExpression"===t.value.type&&"BlockStatement"===t.value.body.type&&v&&!C.has(t.value))&&e.report({node:t,message:"Expected method shorthand.",fix:function(e){return function(e,t){var r=t.computed?x.getFirstToken(t,LA.isOpeningBracketToken):x.getFirstToken(t.key),n=t.computed?x.getFirstTokenBetween(t.key,t.value,LA.isClosingBracketToken):x.getLastToken(t.key),i=x.text.slice(r.range[0],n.range[1]),a="";if(x.commentsExistBetween(n,t.value))return null;t.value.async&&(a+="async "),t.value.generator&&(a+="*");var o=[r.range[0],t.range[1]],s=a+i;if("FunctionExpression"===t.value.type){var u=x.getTokens(t.value).find((function(e){return "Keyword"===e.type&&"function"===e.value})),c=t.value.generator?x.getTokenAfter(u):u;return e.replaceTextRange(o,s+x.text.slice(c.range[1],t.value.range[1]))}var l,p=x.getTokenBefore(t.value.body,LA.isArrowToken),f=x.text.slice(p.range[1],t.value.range[1]),h=!1;if(l=0===t.value.params.length?x.getFirstToken(t.value,LA.isOpeningParenToken):x.getTokenBefore(t.value.params[0]),1===t.value.params.length){var d=LA.isOpeningParenToken(l),m=l.range[0]<t.range[0];h=!d||m;}var g=h?t.value.params[0].range[0]:l.range[0],y=x.getTokenBefore(p).range[1],v=x.text.slice(g,y),b=h?"(".concat(v,")"):v;return e.replaceTextRange(o,s+b+f)}(e,t)}});}}}}},OO={meta:{type:"suggestion",docs:{description:"enforce variables to be declared either together or separately in functions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/one-var"},fixable:"code",schema:[{oneOf:[{enum:["always","never","consecutive"]},{type:"object",properties:{separateRequires:{type:"boolean"},var:{enum:["always","never","consecutive"]},let:{enum:["always","never","consecutive"]},const:{enum:["always","never","consecutive"]}},additionalProperties:!1},{type:"object",properties:{initialized:{enum:["always","never","consecutive"]},uninitialized:{enum:["always","never","consecutive"]}},additionalProperties:!1}]}]},create:function(e){function t(){v.push({let:{initialized:!1,uninitialized:!1},const:{initialized:!1,uninitialized:!1}});}function r(){y.push({initialized:!1,uninitialized:!1}),t();}function n(){v.pop();}function a(){y.pop(),n();}function o(e){return e.init&&"CallExpression"===e.init.type&&"require"===e.init.callee.name}function s(e){for(var t={uninitialized:0,initialized:0},r=0;r<e.length;r++)null===e[r].init?t.uninitialized++:t.initialized++;return t}function u(e,t){var r=s(t),n=m[e]||{},i=function(e){var t;return "var"===e?t=y[y.length-1]:"let"===e?t=v[v.length-1].let:"const"==e&&(t=v[v.length-1].const),t}(e),a=t.some(o);return !(n.uninitialized===p&&n.initialized===p&&(i.uninitialized||i.initialized)&&!a||0<r.uninitialized&&n.uninitialized===p&&i.uninitialized||0<r.initialized&&n.initialized===p&&i.initialized&&!a||i.required&&a||(function(e,t,r){for(var n=0;n<t.length;n++)null===t[n].init?m[e]&&m[e].uninitialized===p&&(r.uninitialized=!0):m[e]&&m[e].initialized===p&&(m.separateRequires&&o(t[n])?r.required=!0:r.initialized=!0);}(e,t,i),0))}function c(e){var t=e[0],r=Array.isArray(t.parent.parent.body)?t.parent.parent.body:[],n=r.findIndex((function(e){return e.range[0]===t.parent.range[0]})),i=r[n-1];return function(e){var r=g.getTokenBefore(t),n=g.getTokenBefore(r),a=[];return i&&i.kind===g.getText(r)&&(";"===n.value?a.push(e.replaceText(n,",")):a.push(e.insertTextAfter(n,",")),a.push(e.replaceText(r,""))),a}}function l(e){return function(t){return e.declarations.map((function(r){var n=g.getTokenAfter(r);if(null===n)return null;var i=g.getTokenAfter(n,{includeComments:!0});if(","!==n.value)return null;if(i.range[0]===n.range[1])return t.replaceText(n,"; ".concat(e.kind," "));if(i.loc.start.line>n.loc.end.line||"Line"===i.type||"Block"===i.type){for(var a=i;"Line"===a.type||"Block"===a.type;)a=g.getTokenAfter(a,{includeComments:!0});return t.replaceTextRange([n.range[0],a.range[0]],";".concat(g.text.slice(n.range[1],a.range[0])).concat(e.kind," "))}return t.replaceText(n,"; ".concat(e.kind))})).filter((function(e){return e}))}}var p="always",f="never",h="consecutive",d=e.options[0]||"always",m={};"string"==typeof d?(m.var={uninitialized:d,initialized:d},m.let={uninitialized:d,initialized:d},m.const={uninitialized:d,initialized:d}):"object"==i(d)&&(m.separateRequires=!!d.separateRequires,m.var={uninitialized:d.var,initialized:d.var},m.let={uninitialized:d.let,initialized:d.let},m.const={uninitialized:d.const,initialized:d.const},Object.prototype.hasOwnProperty.call(d,"uninitialized")&&(m.var.uninitialized=d.uninitialized,m.let.uninitialized=d.uninitialized,m.const.uninitialized=d.uninitialized),Object.prototype.hasOwnProperty.call(d,"initialized")&&(m.var.initialized=d.initialized,m.let.initialized=d.initialized,m.const.initialized=d.initialized));var g=e.getSourceCode(),y=[],v=[];return {Program:r,FunctionDeclaration:r,FunctionExpression:r,ArrowFunctionExpression:r,BlockStatement:t,ForStatement:t,ForInStatement:t,ForOfStatement:t,SwitchStatement:t,VariableDeclaration:function(t){var r=t.parent,n=t.kind;if(m[n]){var i=t.declarations,a=s(i),d=i.some(o)&&!i.every(o);m[n].initialized===p&&m.separateRequires&&d&&e.report({node:t,message:"Split requires to be separated into a single block."});var g=r.body&&0<r.body.length&&r.body.indexOf(t)||0;if(0<g){var y=r.body[g-1],v="VariableDeclaration"===y.type,x=i.concat(y.declarations||[]);if(v&&y.kind===n&&(!x.some(o)||x.every(o))){var b=s(y.declarations);m[n].initialized===h&&m[n].uninitialized===h?e.report({node:t,message:"Combine this with the previous '{{type}}' statement.",data:{type:n},fix:c(i)}):m[n].initialized===h&&0<a.initialized&&0<b.initialized?e.report({node:t,message:"Combine this with the previous '{{type}}' statement with initialized variables.",data:{type:n},fix:c(i)}):m[n].uninitialized===h&&0<a.uninitialized&&0<b.uninitialized&&e.report({node:t,message:"Combine this with the previous '{{type}}' statement with uninitialized variables.",data:{type:n},fix:c(i)});}}if(!u(n,i))if(m[n].initialized===p&&m[n].uninitialized===p)e.report({node:t,message:"Combine this with the previous '{{type}}' statement.",data:{type:n},fix:c(i)});else if(m[n].initialized===p&&0<a.initialized&&e.report({node:t,message:"Combine this with the previous '{{type}}' statement with initialized variables.",data:{type:n},fix:c(i)}),m[n].uninitialized===p&&0<a.uninitialized){if(t.parent.left===t&&("ForInStatement"===t.parent.type||"ForOfStatement"===t.parent.type))return;e.report({node:t,message:"Combine this with the previous '{{type}}' statement with uninitialized variables.",data:{type:n},fix:c(i)});}if("ForStatement"!==r.type||r.init!==t)1<a.uninitialized+a.initialized&&(m[n].initialized===f&&m[n].uninitialized===f?e.report({node:t,message:"Split '{{type}}' declarations into multiple statements.",data:{type:n},fix:l(t)}):m[n].initialized===f&&0<a.initialized?e.report({node:t,message:"Split initialized '{{type}}' declarations into multiple statements.",data:{type:n},fix:l(t)}):m[n].uninitialized===f&&0<a.uninitialized&&e.report({node:t,message:"Split uninitialized '{{type}}' declarations into multiple statements.",data:{type:n},fix:l(t)}));}},"ForStatement:exit":n,"ForOfStatement:exit":n,"ForInStatement:exit":n,"SwitchStatement:exit":n,"BlockStatement:exit":n,"Program:exit":a,"FunctionDeclaration:exit":a,"FunctionExpression:exit":a,"ArrowFunctionExpression:exit":a}}};function LO(e){return 0<=["*","&","^","|"].indexOf(e)}function NO(e,t){if(e.type!==t.type)return !1;switch(e.type){case"Identifier":return e.name===t.name;case"Literal":return e.value===t.value;case"MemberExpression":return NO(e.object,t.object)&&NO(e.property,t.property);case"ThisExpression":return !0;default:return !1}}function jO(e){return "Identifier"===e.type||"MemberExpression"===e.type&&("Identifier"===e.object.type||"ThisExpression"===e.object.type)&&(!e.computed||"Literal"===e.property.type)}var RO={meta:{type:"suggestion",docs:{description:"require or disallow assignment operator shorthand where possible",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/operator-assignment"},schema:[{enum:["always","never"]}],fixable:"code",messages:{replaced:"Assignment can be replaced with operator assignment.",unexpected:"Unexpected operator assignment shorthand."}},create:function(e){function t(e){return r.getFirstTokenBetween(e.left,e.right,(function(t){return t.value===e.operator}))}var r=e.getSourceCode();return {AssignmentExpression:"never"===e.options[0]?function(n){"="!==n.operator&&e.report({node:n,messageId:"unexpected",fix:function(e){if(jO(n.left)){var i,a=r.getFirstToken(n),o=t(n),s=r.getText().slice(n.range[0],o.range[0]),u=n.operator.slice(0,-1);if(r.commentsExistBetween(a,o))return null;if(LA.getPrecedence(n.right)<=LA.getPrecedence({type:"BinaryExpression",operator:u})&&!LA.isParenthesised(r,n.right))i="".concat(r.text.slice(o.range[1],n.right.range[0]),"(").concat(r.getText(n.right),")");else {var c=r.getFirstToken(n.right),l="";o.range[1]!==c.range[0]||LA.canTokensBeAdjacent(u,c)||(l=" "),i="".concat(l).concat(r.text.slice(o.range[1],n.range[1]));}return e.replaceText(n,"".concat(s,"= ").concat(s).concat(u).concat(i))}return null}});}:function(n){if("="===n.operator&&"BinaryExpression"===n.right.type){var i=n.left,a=n.right,o=a.operator;(LO(o)||function(e){return 0<=["+","-","/","%","<<",">>",">>>","**"].indexOf(e)}(o))&&(NO(i,a.left)?e.report({node:n,messageId:"replaced",fix:function(e){if(jO(i)){var o=t(n),s=t(a),u=r.getText().slice(n.range[0],o.range[0]),c=r.getText().slice(s.range[1],n.right.range[1]);return r.commentsExistBetween(o,s)?null:e.replaceText(n,"".concat(u).concat(a.operator,"=").concat(c))}return null}}):NO(i,a.right)&&LO(o)&&e.report({node:n,messageId:"replaced"}));}}}}},MO={meta:{type:"layout",docs:{description:"enforce consistent linebreak style for operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/operator-linebreak"},schema:[{enum:["after","before","none",null]},{type:"object",properties:{overrides:{type:"object",properties:{anyOf:{type:"string",enum:["after","before","none","ignore"]}}}},additionalProperties:!1}],fixable:"code"},create:function(e){function t(t,r){var n=s.getTokenAfter(r,LA.isNotClosingParenToken),a=s.getTokenBefore(n),u=s.getTokenAfter(n),c=n.value,l=o[c],p=l||i,f=function(e,t){return function(r){var n,i,a=s.getTokenBefore(e),o=s.getTokenAfter(e),u=s.text.slice(a.range[1],e.range[0]),c=s.text.slice(e.range[1],o.range[0]);if(!LA.isTokenOnSameLine(a,e)!==!LA.isTokenOnSameLine(e,o)&&"none"!==t){if(s.getTokenBefore(e,{includeComments:!0})!==a&&s.getTokenAfter(e,{includeComments:!0})!==o)return null;n=c,i=u;}else {var l=LA.createGlobalLinebreakMatcher();if(n="before"===t||u.trim()?u:u.replace(l,""),i="after"===t||c.trim()?c:c.replace(l,""),n===u&&i===c)return null}return ""===i&&"Punctuator"===o.type&&"+-".includes(e.value)&&o.value===e.value&&(i+=" "),r.replaceTextRange([a.range[1],o.range[0]],n+e.value+i)}}(n,p);LA.isTokenOnSameLine(a,n)&&LA.isTokenOnSameLine(n,u)||("ignore"===l||LA.isTokenOnSameLine(a,n)||LA.isTokenOnSameLine(n,u)?"before"===p&&LA.isTokenOnSameLine(a,n)?e.report({node:t,loc:{line:n.loc.end.line,column:n.loc.end.column},message:"'{{operator}}' should be placed at the beginning of the line.",data:{operator:c},fix:f}):"after"===p&&LA.isTokenOnSameLine(n,u)?e.report({node:t,loc:{line:n.loc.end.line,column:n.loc.end.column},message:"'{{operator}}' should be placed at the end of the line.",data:{operator:c},fix:f}):"none"===p&&e.report({node:t,loc:{line:n.loc.end.line,column:n.loc.end.column},message:"There should be no line break before or after '{{operator}}'.",data:{operator:c},fix:f}):e.report({node:t,loc:{line:n.loc.end.line,column:n.loc.end.column},message:"Bad line breaking before and after '{{operator}}'.",data:{operator:c},fix:f}));}function r(e){t(e,e.left);}var n=!e.options[0],i=e.options[0]||"after",a=e.options[1]||{},o=a.overrides?Object.assign({},a.overrides):{};n&&!o["?"]&&(o["?"]="before"),n&&!o[":"]&&(o[":"]="before");var s=e.getSourceCode();return {BinaryExpression:r,LogicalExpression:r,AssignmentExpression:r,VariableDeclarator:function(e){e.init&&t(e,e.id);},ConditionalExpression:function(e){t(e,e.test),t(e,e.consequent);}}}},VO={meta:{type:"layout",docs:{description:"require or disallow padding within blocks",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/padded-blocks"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never"]},{type:"object",properties:{blocks:{enum:["always","never"]},switches:{enum:["always","never"]},classes:{enum:["always","never"]}},additionalProperties:!1,minProperties:1}]},{type:"object",properties:{allowSingleLineBlocks:{type:"boolean"}}}]},create:function(e){function t(e){return "Line"===e.type||"Block"===e.type}function r(e,t){return 2<=t.loc.start.line-e.loc.end.line}function n(e){var r,n=e;do{r=n,n=f.getTokenAfter(n,{includeComments:!0});}while(t(n)&&n.loc.start.line===r.loc.end.line);return n}function i(e){var r,n=e;do{r=n,n=f.getTokenBefore(n,{includeComments:!0});}while(t(n)&&n.loc.end.line===r.loc.start.line);return n}function a(t){var a=n(function(e){return "SwitchStatement"===e.type?f.getTokenBefore(e.cases[0]):f.getFirstToken(e)}(t)),s=f.getTokenBefore(a,{includeComments:!0}),u=i(f.getLastToken(t)),c=f.getTokenAfter(u,{includeComments:!0}),h=r(s,a),d=r(u,c);o.allowSingleLineBlocks&&LA.isTokenOnSameLine(s,c)||(function(e){switch(e.type){case"BlockStatement":return o.blocks;case"SwitchStatement":return o.switches;case"ClassBody":return o.classes;default:throw new Error("unreachable")}}(t)?(!h&&e.report({node:t,loc:{line:s.loc.start.line,column:s.loc.start.column},fix:function(e){return e.insertTextAfter(s,"\n")},message:l}),!d&&e.report({node:t,loc:{line:c.loc.end.line,column:c.loc.end.column-1},fix:function(e){return e.insertTextBefore(c,"\n")},message:l})):(h&&e.report({node:t,loc:{line:s.loc.start.line,column:s.loc.start.column},fix:function(e){return e.replaceTextRange([s.range[1],a.range[0]-a.loc.start.column],"\n")},message:p}),d&&e.report({node:t,loc:{line:c.loc.end.line,column:c.loc.end.column-1},message:p,fix:function(e){return e.replaceTextRange([u.range[1],c.range[0]-c.loc.start.column],"\n")}})));}var o={},s=e.options[0]||"always",u=e.options[1]||{};if("string"==typeof s){var c="always"===s;o.blocks=c,o.switches=c,o.classes=c;}else Object.prototype.hasOwnProperty.call(s,"blocks")&&(o.blocks="always"===s.blocks),Object.prototype.hasOwnProperty.call(s,"switches")&&(o.switches="always"===s.switches),Object.prototype.hasOwnProperty.call(s,"classes")&&(o.classes="always"===s.classes);Object.prototype.hasOwnProperty.call(u,"allowSingleLineBlocks")&&(o.allowSingleLineBlocks=!0===u.allowSingleLineBlocks);var l="Block must be padded by blank lines.",p="Block must not be padded by blank lines.",f=e.getSourceCode(),h={};return Object.prototype.hasOwnProperty.call(o,"switches")&&(h.SwitchStatement=function(e){0===e.cases.length||a(e);}),Object.prototype.hasOwnProperty.call(o,"blocks")&&(h.BlockStatement=function(e){0===e.body.length||a(e);}),Object.prototype.hasOwnProperty.call(o,"classes")&&(h.ClassBody=function(e){0===e.body.length||a(e);}),h}},UO=("[".concat(Array.from(LA.LINEBREAKS).join(""),"]"),/^([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*?)[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*;?)$/),qO=/^(?:module[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\.[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)?exports(?:[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\.|[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*\[|$)/,WO=/^require\(/;function $O(e){return {test:function(t,r){return r.getFirstToken(t).value===e}}}function GO(e){return {test:function(t,r){return t.loc.start.line===t.loc.end.line&&r.getFirstToken(t).value===e}}}function zO(e){return {test:function(t,r){return t.loc.start.line!==t.loc.end.line&&r.getFirstToken(t).value===e}}}function HO(e){return {test:function(t){return t.type===e}}}function KO(e){if("ExpressionStatement"===e.type){var t=e.expression;return "UnaryExpression"===t.type&&(t=t.argument),"CallExpression"===t.type&&LA.isFunction(t.callee)}return !1}function JO(e,t){if("DoWhileStatement"===t.type&&"BlockStatement"===t.body.type)return !0;if(KO(t))return !0;var r=e.getLastToken(t,LA.isNotSemicolonToken),n=r&&LA.isClosingBraceToken(r)?e.getNodeByRangeIndex(r.range[0]):null;return !!n&&("BlockStatement"===n.type||"SwitchStatement"===n.type)}function QO(e,t){return "ExpressionStatement"===e.type&&("Program"===e.parent.type||"BlockStatement"===e.parent.type&&LA.isFunction(e.parent.parent))&&"Literal"===e.expression.type&&"string"==typeof e.expression.value&&!LA.isParenthesised(t,e.expression)}function XO(e,t){if(QO(e,t)){var r=!0,n=!1,i=void 0;try{for(var a,o=e.parent.body[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;if(s===e)break;if(!QO(s,t))return !1}}catch(e){n=!0,i=e;}finally{try{r||null==o.return||o.return();}finally{if(n)throw i}}return !0}return !1}function YO(e,t){var r=e.getLastToken(t),n=e.getTokenBefore(r),i=e.getTokenAfter(r);return !!(n&&i&&n.range[0]>=t.range[0]&&LA.isSemicolonToken(r)&&r.loc.start.line!==n.loc.end.line&&r.loc.end.line===i.loc.start.line)?n:r}function ZO(e,t,r){return t+r}var eL={any:{verify:function(){}},never:{verify:function(e,t,r,n){0===n.length||e.report({node:r,message:"Unexpected blank line before this statement.",fix:function(t){if(2<=n.length)return null;var r=n[0][0],i=n[0][1],a=r.range[1],o=i.range[0],s=e.getSourceCode().text.slice(a,o).replace(UO,ZO);return t.replaceTextRange([a,o],s)}});}},always:{verify:function(e,t,r,n){0<n.length||e.report({node:r,message:"Expected blank line before this statement.",fix:function(n){var i=e.getSourceCode(),a=YO(i,t),o=i.getFirstTokenBetween(a,r,{includeComments:!0,filter:function(e){return !LA.isTokenOnSameLine(a,e)||(a=e,!1)}})||r,s=LA.isTokenOnSameLine(a,o)?"\n\n":"\n";return n.insertTextAfter(a,s)}});}}},tL={"*":{test:function(){return !0}},"block-like":{test:function(e,t){return JO(t,e)}},"cjs-export":{test:function(e,t){return "ExpressionStatement"===e.type&&"AssignmentExpression"===e.expression.type&&qO.test(t.getText(e.expression.left))}},"cjs-import":{test:function(e,t){return "VariableDeclaration"===e.type&&0<e.declarations.length&&!!e.declarations[0].init&&WO.test(t.getText(e.declarations[0].init))}},directive:{test:XO},expression:{test:function(e,t){return "ExpressionStatement"===e.type&&!XO(e,t)}},iife:{test:KO},"multiline-block-like":{test:function(e,t){return e.loc.start.line!==e.loc.end.line&&JO(t,e)}},"multiline-expression":{test:function(e,t){return e.loc.start.line!==e.loc.end.line&&"ExpressionStatement"===e.type&&!XO(e,t)}},"multiline-const":zO("const"),"multiline-let":zO("let"),"multiline-var":zO("var"),"singleline-const":GO("const"),"singleline-let":GO("let"),"singleline-var":GO("var"),block:HO("BlockStatement"),empty:HO("EmptyStatement"),function:HO("FunctionDeclaration"),break:$O("break"),case:$O("case"),class:$O("class"),const:$O("const"),continue:$O("continue"),debugger:$O("debugger"),default:$O("default"),do:$O("do"),export:$O("export"),for:$O("for"),if:$O("if"),import:$O("import"),let:$O("let"),return:$O("return"),switch:$O("switch"),throw:$O("throw"),try:$O("try"),var:$O("var"),while:$O("while"),with:$O("with")},rL={meta:{type:"layout",docs:{description:"require or disallow padding lines between statements",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/padding-line-between-statements"},fixable:"whitespace",schema:{definitions:{paddingType:{enum:Object.keys(eL)},statementType:{anyOf:[{enum:Object.keys(tL)},{type:"array",items:{enum:Object.keys(tL)},minItems:1,uniqueItems:!0,additionalItems:!1}]}},type:"array",items:{type:"object",properties:{blankLine:{$ref:"#/definitions/paddingType"},prev:{$ref:"#/definitions/statementType"},next:{$ref:"#/definitions/statementType"}},additionalProperties:!1,required:["blankLine","prev","next"]},additionalItems:!1}},create:function(e){function t(){u={upper:u,prevNode:null};}function r(){u=u.upper;}function n(e,t){for(var r=e;"LabeledStatement"===r.type;)r=r.body;return Array.isArray(t)?t.some(n.bind(null,r)):tL[t].test(r,o)}function i(e,t){for(var r=s.length-1;0<=r;--r){var i=s[r];if(n(e,i.prev)&&n(t,i.next))return eL[i.blankLine]}return eL.any}function a(t){var r=t.parent.type;if(LA.STATEMENT_LIST_PARENTS.has(r)||"SwitchStatement"===r){var n=u.prevNode;if(n){var a=i(n,t),s=function(e,t){var r=[],n=YO(o,e);if(2<=t.loc.start.line-n.loc.end.line)do{var i=o.getTokenAfter(n,{includeComments:!0});2<=i.loc.start.line-n.loc.end.line&&r.push([n,i]),n=i;}while(n.range[0]<t.range[0]);return r}(n,t);a.verify(e,n,t,s);}u.prevNode=t;}}var o=e.getSourceCode(),s=e.options||[],u=null;return {Program:t,BlockStatement:t,SwitchStatement:t,"Program:exit":r,"BlockStatement:exit":r,"SwitchStatement:exit":r,":statement":a,SwitchCase:function(e){a(e),t();},"SwitchCase:exit":r}}};var nL={meta:{type:"suggestion",docs:{description:"require using arrow functions for callbacks",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-arrow-callback"},schema:[{type:"object",properties:{allowNamedFunctions:{type:"boolean",default:!1},allowUnboundThis:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"code"},create:function(e){function t(){s.push({this:!1,super:!1,meta:!1});}function r(){return s.pop()}var n=e.options[0]||{},i=!1!==n.allowUnboundThis,a=n.allowNamedFunctions,o=e.getSourceCode(),s=[];return {Program:function(){s=[];},ThisExpression:function(){var e=s[s.length-1];e&&(e.this=!0);},Super:function(){var e=s[s.length-1];e&&(e.super=!0);},MetaProperty:function(e){var t=s[s.length-1];t&&function(e,t,r){return e.meta.name===t&&e.property.name===r}(e,"new","target")&&(t.meta=!0);},FunctionDeclaration:t,"FunctionDeclaration:exit":r,FunctionExpression:t,"FunctionExpression:exit":function(t){var n=r();if(!(a&&t.id&&t.id.name||t.generator)){var s=e.getDeclaredVariables(t)[0];if(!(function(e){return e&&"FunctionName"===e.defs[0].type}(s)&&0<s.references.length)){var u=function(e){for(var t=e.variables,r=0;r<t.length;++r){var n=t[r];if("arguments"===n.name)return 0===n.identifiers.length?n:null}return null}(e.getScope());if(!(u&&0<u.references.length)){var c=function(e){for(var t={isCallback:!1,isLexicalThis:!1},r=e,n=e.parent;r;){switch(n.type){case"LogicalExpression":case"ConditionalExpression":break;case"MemberExpression":if(n.object!==r||n.property.computed||"Identifier"!==n.property.type||"bind"!==n.property.name||"CallExpression"!==n.parent.type||n.parent.callee!==n)return t;t.isLexicalThis=1===n.parent.arguments.length&&"ThisExpression"===n.parent.arguments[0].type,n=n.parent;break;case"CallExpression":case"NewExpression":return n.callee!==r&&(t.isCallback=!0),t;default:return t}r=n,n=n.parent;}throw new Error("unreachable")}(t);!c.isCallback||i&&n.this&&!c.isLexicalThis||n.super||n.meta||e.report({node:t,message:"Unexpected function expression.",fix:function(e){if(!c.isLexicalThis&&n.this||function(e){return e.every((function(e){return "Identifier"===e.type}))&&e.length!==new Set(e.map((function(e){return e.name}))).size}(t.params))return null;var r=t.params.length?o.getTokenBefore(t.params[0]):o.getTokenBefore(t.body,1),i=o.getTokenBefore(t.body),a=t.async?"async ":"",s=o.text.slice(r.range[0],i.range[1]),u="".concat(a).concat(s," => ").concat(o.getText(t.body)),l=c.isLexicalThis?t.parent.parent:t,p="CallExpression"!==l.parent.type&&"ConditionalExpression"!==l.parent.type?"(".concat(u,")"):u;return e.replaceText(l,p)}});}}}}}}},iL=/^(?:(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+?Pattern|RestElement|SpreadProperty|ExperimentalRestProperty|Property)$/,aL=/^(?:Program|BlockStatement|SwitchCase)$/,oL=/^(?:VariableDeclarator|AssignmentExpression)$/;function sL(e,t){if(t.through.find((function(t){return t.resolved&&t.resolved.name===e})))return !0;var r=LA.getVariableByName(t,e);return null!==r&&r.defs.some((function(e){return "Parameter"===e.type}))}function uL(e){if(!e.isWrite())return null;for(var t=e.identifier.parent;iL.test(t.type);)t=t.parent;return oL.test(t.type)?t:null}function cL(e){switch(e.type){case"ObjectPattern":return e.properties.some((function(e){return !!e&&cL(e.argument||e.value)}));case"ArrayPattern":return e.elements.some((function(e){return !!e&&cL(e)}));case"AssignmentPattern":return cL(e.left);case"MemberExpression":return !0}return !1}function lL(e,t){if(e.eslintUsed&&"global"===e.scope.type)return null;for(var r=null,n=!1,i=e.references,a=0;a<i.length;++a){var o=i[a];if(o.isWrite()){if(null!==r&&r.identifier!==o.identifier)return null;var s=uL(o);if(null!==s&&void 0!==s.left){var u=s.left,c=!1,l=!1;if("ObjectPattern"===u.type)c=u.properties.filter((function(e){return e.value})).map((function(e){return e.value.name})).some((function(t){return sL(t,e.scope)})),l=cL(u);else if("ArrayPattern"===u.type){c=u.elements.map((function(e){return e&&e.name})).some((function(t){return sL(t,e.scope)})),l=cL(u);}if(c||l)return null}r=o;}else if(o.isRead()&&null===r){if(t)return null;n=!0;}}return null!==r&&r.from===e.scope&&function(e){for(var t=e.parent;iL.test(t.type);)t=t.parent;return "VariableDeclarator"===t.type||"AssignmentExpression"===t.type&&"ExpressionStatement"===t.parent.type&&aL.test(t.parent.parent.type)}(r.identifier)?n?e.defs[0].name:r.identifier:null}var pL={meta:{type:"suggestion",docs:{description:"require `const` declarations for variables that are never reassigned after declared",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-const"},fixable:"code",schema:[{type:"object",properties:{destructuring:{enum:["any","all"],default:"any"},ignoreReadBeforeAssign:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{useConst:"'{{name}}' is never reassigned. Use 'const' instead."}},create:function(e){function t(t){var r=t.filter(Boolean);if(t.length&&(i||r.length===t.length)){var a=function e(t,r,n){return !t||n(t)?null:t.type===r?t:e(t.parent,r,n)}(t[0],"VariableDeclaration",(function(e){return e.type.endsWith("Statement")})),o=null===a;if(!o&&0<a.declarations.length){var l=a.declarations[0];if(l.init){var p=l.init.parent;"VariableDeclarator"===p.type&&(p.id.name!==c&&(c=p.id.name,s=0),"ObjectPattern"===p.id.type&&p.init.name!==c&&(c=p.init.name,s=0),p.id!==u&&(u=p.id,s=0));}}var f=a&&("ForInStatement"===a.parent.type||"ForOfStatement"===a.parent.type||a.declarations.every((function(e){return e.init})))&&r.length===t.length;!o&&a.declarations&&1!==a.declarations.length&&a&&a.declarations&&1<=a.declarations.length&&(s+=r.length,f=f&&s===a.declarations.length),r.forEach((function(t){e.report({node:t,messageId:"useConst",data:t,fix:f?function(e){return e.replaceText(n.getFirstToken(a,(function(e){return e.value===a.kind})),"const")}:null});}));}}var r=e.options[0]||{},n=e.getSourceCode(),i="all"!==r.destructuring,a=!0===r.ignoreReadBeforeAssign,o=[],s=0,u=null,c="";return {"Program:exit":function(){(function(e,t){for(var r=new Map,n=0;n<e.length;++n)for(var i=e[n],a=i.references,o=lL(i,t),s=null,u=0;u<a.length;++u){var c=a[u],l=c.identifier;if(l!==s){s=l;var p=uL(c);p&&(r.has(p)?r.get(p).push(o):r.set(p,[o]));}}return r})(o,a).forEach(t);},VariableDeclaration:function(t){"let"!==t.kind||function(e){return "ForStatement"===e.parent.type&&e.parent.init===e}(t)||o.push.apply(o,E(e.getDeclaredVariables(t)));}}}},fL={meta:{type:"suggestion",docs:{description:"require destructuring from arrays and/or objects",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-destructuring"},fixable:"code",schema:[{oneOf:[{type:"object",properties:{VariableDeclarator:{type:"object",properties:{array:{type:"boolean"},object:{type:"boolean"}},additionalProperties:!1},AssignmentExpression:{type:"object",properties:{array:{type:"boolean"},object:{type:"boolean"}},additionalProperties:!1}},additionalProperties:!1},{type:"object",properties:{array:{type:"boolean"},object:{type:"boolean"}},additionalProperties:!1}]},{type:"object",properties:{enforceForRenamedProperties:{type:"boolean"}},additionalProperties:!1}]},create:function(e){function t(e,t){return s&&s[e]&&s[e][t]}function r(t,r,n){e.report({node:t,message:"Use {{type}} destructuring.",data:{type:r},fix:n});}function n(t,r){var n=r.init,i=e.getSourceCode();return t.replaceText(r,"{".concat(n.property.name,"} = ").concat(i.getText(n.object)))}function i(e,i,a){if("MemberExpression"===i.type&&"Super"!==i.object.type){if(function(e){return Number.isInteger(e.property.value)}(i))return void(t(a.type,"array")&&r(a,"array",null));var s=function(e){return "VariableDeclarator"===e.type&&"Identifier"===e.id.type&&"MemberExpression"===e.init.type&&e.id.name===e.init.property.name}(a)?function(e){return n(e,a)}:null;if(t(a.type,"object")&&o)return void r(a,"object",s);if(t(a.type,"object")){var u=i.property;("Literal"!==u.type||e.name!==u.value)&&("Identifier"!==u.type||e.name!==u.name||i.computed)||r(a,"object",s);}}}var a=e.options[0],o=e.options[1]&&e.options[1].enforceForRenamedProperties,s={VariableDeclarator:{array:!0,object:!0},AssignmentExpression:{array:!0,object:!0}};return a&&(s=void 0!==a.array||void 0!==a.object?{VariableDeclarator:a,AssignmentExpression:a}:a),{VariableDeclarator:function(e){e.init&&"MemberExpression"===e.init.type&&i(e.id,e.init,e);},AssignmentExpression:function(e){"="===e.operator&&i(e.left,e.right,e);}}}},hL=Fy.require$$0,dL=hL.CALL,mL=hL.ReferenceTracker,gL=LA.getPrecedence({type:"BinaryExpression",operator:"**"});function yL(e,t){return t?"(".concat(e,")"):e}var vL={meta:{type:"suggestion",docs:{description:"disallow the use of `Math.pow` in favor of the `**` operator",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/prefer-exponentiation-operator"},schema:[],fixable:"code",messages:{useExponentiation:"Use the '**' operator instead of 'Math.pow'."}},create:function(e){function t(t){e.report({node:t,messageId:"useExponentiation",fix:function(e){if(2!==t.arguments.length||t.arguments.some((function(e){return "SpreadElement"===e.type}))||0<r.getCommentsInside(t).length)return null;var n=t.arguments[0],i=t.arguments[1],a=r.getText(n),o=r.getText(i),s=function(e){return LA.getPrecedence(e)<=gL||"UnaryExpression"===e.type}(n),u=function(e){return LA.getPrecedence(e)<gL}(i),c=function(e,t){var r=e.parent;return ("ClassDeclaration"===r.type||r.type.endsWith("Expression")&&LA.getPrecedence(r)>=gL&&("BinaryExpression"!==r.type||"**"!==r.operator||r.right!==e)&&!(("CallExpression"===r.type||"NewExpression"===r.type)&&r.arguments.includes(e))&&!("MemberExpression"===r.type&&r.computed&&r.property===e)&&"ArrayExpression"!==r.type)&&!LA.isParenthesised(t,e)}(t,r),l="",p="";if(!c){if(!s){var f=r.getFirstToken(n),h=r.getTokenBefore(t);h&&h.range[1]===t.range[0]&&!LA.canTokensBeAdjacent(h,f)&&(l=" ");}if(!u){var d=r.getLastToken(i),m=r.getTokenAfter(t);m&&t.range[1]===m.range[0]&&!LA.canTokensBeAdjacent(d,m)&&(p=" ");}}var g=yL(a,s),y=yL(o,u),v=yL("".concat(g,"**").concat(y),c);return e.replaceText(t,"".concat(l).concat(v).concat(p))}});}var r=e.getSourceCode();return {Program:function(){var r=e.getScope(),n=new mL(r),i={Math:{pow:u({},dL,!0)}},a=!0,o=!1,s=void 0;try{for(var c,l=n.iterateGlobalReferences(i)[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){t(c.value.node);}}catch(e){o=!0,s=e;}finally{try{a||null==l.return||l.return();}finally{if(o)throw s}}}}}},xL=Fy.require$$0,bL=xL.CALL,EL=xL.CONSTRUCT,CL=xL.ReferenceTracker,SL=xL.getStringIfConstant,kL=new PA.RegExpParser,DL={meta:{type:"suggestion",docs:{description:"enforce using named capture group in regular expression",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/prefer-named-capture-group"},schema:[],messages:{required:"Capture group '{{group}}' should be converted to a named or non-capturing group."}},create:function(e){function t(t,r,n){var i;try{i=kL.parsePattern(t,0,t.length,n);}catch(e){return}PA.visitRegExpAST(i,{onCapturingGroupEnter:function(t){t.name||e.report({node:r,messageId:"required",data:{group:t.raw}});}});}return {Literal:function(e){e.regex&&t(e.regex.pattern,e,e.regex.flags.includes("u"));},Program:function(){var r,n=e.getScope(),i=new CL(n),a={RegExp:(r={},u(r,bL,!0),u(r,EL,!0),r)},o=!0,s=!1,c=void 0;try{for(var l,p=i.iterateGlobalReferences(a)[Symbol.iterator]();!(o=(l=p.next()).done);o=!0){var f=l.value.node,h=SL(f.arguments[0]),d=SL(f.arguments[1]);h&&t(h,f,d&&d.includes("u"));}}catch(e){s=!0,c=e;}finally{try{o||null==p.return||p.return();}finally{if(s)throw c}}}}}};var FL={meta:{type:"suggestion",docs:{description:"disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-numeric-literals"},schema:[],fixable:"code"},create:function(e){var t=e.getSourceCode(),r={2:"binary",8:"octal",16:"hexadecimal"},n={2:"0b",8:"0o",16:"0x"};return {CallExpression:function(i){if(2===i.arguments.length){var a=r[i.arguments[1].value];(function(e){switch(e.type){case"Identifier":return "parseInt"===e.name;case"MemberExpression":return "Identifier"===e.object.type&&"Number"===e.object.name&&"Identifier"===e.property.type&&"parseInt"===e.property.name}return !1})(i.callee)&&a&&"Literal"===i.arguments[0].type&&e.report({node:i,message:"Use {{radixName}} literals instead of {{functionName}}().",data:{radixName:a,functionName:t.getText(i.callee)},fix:function(e){if(t.getCommentsInside(i).length)return null;var r="".concat(n[i.arguments[1].value]).concat(i.arguments[0].value);if(+r!==parseInt(i.arguments[0].value,i.arguments[1].value))return null;var a=t.getTokenBefore(i),o=t.getTokenAfter(i),s="",u="";return a&&a.range[1]===i.range[0]&&!LA.canTokensBeAdjacent(a,r)&&(s=" "),o&&i.range[1]===o.range[0]&&!LA.canTokensBeAdjacent(r,o)&&(u=" "),e.replaceText(i,"".concat(s).concat(r).concat(u))}});}}}}},AL=Fy.require$$0,wL=AL.CALL,_L=AL.ReferenceTracker,TL=LA.isCommaToken,PL=LA.isOpeningParenToken,IL=LA.isClosingParenToken,BL=LA.isParenthesised,OL=/[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/;function LL(e){return e.arguments.some((function(e){return "SpreadElement"===e.type}))}function NL(e,t){var r=e.parent;switch(r.type){case"VariableDeclarator":case"ArrayExpression":case"ReturnStatement":case"CallExpression":case"Property":return !1;case"AssignmentExpression":return r.left===e&&!BL(t,e);default:return !BL(t,e)}}function jL(e,t){switch(e.type){case"AssignmentExpression":case"ArrowFunctionExpression":case"ConditionalExpression":return !BL(t,e);default:return !1}}function RL(e,t,r){for(var n=[r.getFirstToken(e),r.getLastToken(e)],i=r.getTokenBefore(e),a=r.getTokenAfter(e);i&&a&&i.range[0]>t.range[0]&&PL(i)&&IL(a);)n.push(i,a),i=r.getTokenBefore(i),a=r.getTokenAfter(a);return n.sort((function(e,t){return e.range[0]-t.range[0]}))}function ML(e,t){var r=t.text,n=e.range[0],i=t.getTokenBefore(e,{includeComments:!0});if(i&&"Line"===i.type)return n;for(;OL.test(r[n-1]||"");)n-=1;return n}function VL(e,t){for(var r=t.text,n=e.range[1];OL.test(r[n]||"");)n+=1;return n}function UL(e,t){return regeneratorRuntime.mark((function r(n){var i,a,o,s,u,c,l,p,f,h,d,m,g,y,v,x,b,E,C,S,k;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return i=t.getTokenAfter(e.callee,PL),a=t.getLastToken(e),r.next=3,n.remove(e.callee);case 3:if(!NL(e,t)){r.next=10;break}return r.next=6,n.replaceText(i,"({");case 6:return r.next=8,n.replaceText(a,"})");case 8:r.next=14;break;case 10:return r.next=12,n.replaceText(i,"{");case 12:return r.next=14,n.replaceText(a,"}");case 14:o=!0,s=!1,u=void 0,r.prev=17,c=e.arguments[Symbol.iterator]();case 19:if(o=(l=c.next()).done){r.next=73;break}if(p=l.value,f=RL(p,i,t),h=f.shift(),d=f.pop(),"ObjectExpression"!==p.type){r.next=61;break}m=t.getLastToken(p,1),g=t.getTokenAfter(d),y=!0,v=!1,x=void 0,r.prev=27,b=f[Symbol.iterator]();case 29:if(y=(E=b.next()).done){r.next=36;break}return C=E.value,r.next=33,n.remove(C);case 33:y=!0,r.next=29;break;case 36:r.next=42;break;case 38:r.prev=38,r.t0=r.catch(27),v=!0,x=r.t0;case 42:r.prev=42,r.prev=43,y||null==b.return||b.return();case 45:if(r.prev=45,!v){r.next=48;break}throw x;case 48:return r.finish(45);case 49:return r.finish(42);case 50:return S=[h.range[0],VL(h,t)],k=[Math.max(ML(d,t),S[1]),d.range[1]],r.next=53,n.removeRange(S);case 53:return r.next=55,n.removeRange(k);case 55:if(r.t1=(0===p.properties.length||TL(m))&&TL(g),!r.t1){r.next=59;break}return r.next=59,n.remove(g);case 59:r.next=70;break;case 61:if(!jL(p,t)){r.next=68;break}return r.next=64,n.insertTextBefore(h,"...(");case 64:return r.next=66,n.insertTextAfter(d,")");case 66:r.next=70;break;case 68:return r.next=70,n.insertTextBefore(h,"...");case 70:o=!0,r.next=19;break;case 73:r.next=79;break;case 75:r.prev=75,r.t2=r.catch(17),s=!0,u=r.t2;case 79:r.prev=79,r.prev=80,o||null==c.return||c.return();case 82:if(r.prev=82,!s){r.next=85;break}throw u;case 85:return r.finish(82);case 86:return r.finish(79);case 87:case"end":return r.stop()}}),r,null,[[17,75,79,87],[27,38,42,50],[43,,45,49],[80,,82,86]])}))}var qL={meta:{type:"suggestion",docs:{description:"disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/prefer-object-spread"},schema:[],fixable:"code",messages:{useSpreadMessage:"Use an object spread instead of `Object.assign` eg: `{ ...foo }`.",useLiteralMessage:"Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`."}},create:function(e){var t=e.getSourceCode();return {Program:function(){var r=e.getScope(),n=new _L(r),i={Object:{assign:u({},wL,!0)}},a=!0,o=!1,s=void 0;try{for(var c,l=n.iterateGlobalReferences(i)[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value.node;if(1<=p.arguments.length&&"ObjectExpression"===p.arguments[0].type&&!LL(p)){var f=1===p.arguments.length?"useLiteralMessage":"useSpreadMessage",h=UL(p,t);e.report({node:p,messageId:f,fix:h});}}}catch(e){o=!0,s=e;}finally{try{a||null==l.return||l.return();}finally{if(o)throw s}}}}}},WL={meta:{type:"suggestion",docs:{description:"require using Error objects as Promise rejection reasons",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/prefer-promise-reject-errors"},fixable:null,schema:[{type:"object",properties:{allowEmptyReject:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(t){(t.arguments.length||!r)&&(t.arguments.length&&LA.couldBeError(t.arguments[0])&&("Identifier"!==t.arguments[0].type||"undefined"!==t.arguments[0].name)||e.report({node:t,message:"Expected the Promise rejection reason to be an Error."}));}var r=e.options.length&&e.options[0].allowEmptyReject;return {CallExpression:function(e){(function(e){return "MemberExpression"===e.callee.type&&"Identifier"===e.callee.object.type&&"Promise"===e.callee.object.name&&"Identifier"===e.callee.property.type&&"reject"===e.callee.property.name})(e)&&t(e);},"NewExpression:exit":function(r){"Identifier"===r.callee.type&&"Promise"===r.callee.name&&r.arguments.length&&LA.isFunction(r.arguments[0])&&1<r.arguments[0].params.length&&"Identifier"===r.arguments[0].params[1].type&&e.getDeclaredVariables(r.arguments[0]).find((function(e){return e.name===r.arguments[0].params[1].name})).references.filter((function(e){return e.isRead()})).filter((function(e){return "CallExpression"===e.identifier.parent.type&&e.identifier===e.identifier.parent.callee})).forEach((function(e){return t(e.identifier.parent)}));}}}},$L={meta:{type:"suggestion",docs:{description:"require `Reflect` methods where applicable",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-reflect"},deprecated:!0,replacedBy:[],schema:[{type:"object",properties:{exceptions:{type:"array",items:{enum:["apply","call","delete","defineProperty","getOwnPropertyDescriptor","getPrototypeOf","setPrototypeOf","isExtensible","getOwnPropertyNames","preventExtensions"]},uniqueItems:!0}},additionalProperties:!1}]},create:function(e){function t(t,r,n){e.report({node:t,message:"Avoid using {{existing}}, instead use {{substitute}}.",data:{existing:r,substitute:n}});}var r={apply:"Function.prototype.apply",call:"Function.prototype.call",defineProperty:"Object.defineProperty",getOwnPropertyDescriptor:"Object.getOwnPropertyDescriptor",getPrototypeOf:"Object.getPrototypeOf",setPrototypeOf:"Object.setPrototypeOf",isExtensible:"Object.isExtensible",getOwnPropertyNames:"Object.getOwnPropertyNames",preventExtensions:"Object.preventExtensions"},n={apply:"Reflect.apply",call:"Reflect.apply",defineProperty:"Reflect.defineProperty",getOwnPropertyDescriptor:"Reflect.getOwnPropertyDescriptor",getPrototypeOf:"Reflect.getPrototypeOf",setPrototypeOf:"Reflect.setPrototypeOf",isExtensible:"Reflect.isExtensible",getOwnPropertyNames:"Reflect.getOwnPropertyNames",preventExtensions:"Reflect.preventExtensions"},i=(e.options[0]||{}).exceptions||[];return {CallExpression:function(e){var a=(e.callee.property||{}).name,o="Reflect"===(e.callee.object||{}).name,s=Object.prototype.hasOwnProperty.call(n,a),u=-1!==i.indexOf(a);!s||o||u||t(e,r[a],n[a]);},UnaryExpression:function(e){var r="delete"===e.operator,n="Identifier"===e.argument.type,a=-1!==i.indexOf("delete");!r||n||a||t(e,"the delete keyword","Reflect.deleteProperty");}}}},GL=Fy.require$$0,zL=GL.CALL,HL=GL.CONSTRUCT,KL=GL.ReferenceTracker,JL=GL.findVariable;function QL(e){return "TemplateLiteral"===e.type&&0===e.expressions.length}var XL={meta:{type:"suggestion",docs:{description:"disallow use of the `RegExp` constructor in favor of regular expression literals",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/prefer-regex-literals"},schema:[],messages:{unexpectedRegExp:"Use a regular expression literal instead of the 'RegExp' constructor."}},create:function(e){function t(t){var r=e.getScope(),n=JL(r,t);return null!==n&&"global"===n.scope.type&&0===n.defs.length}function r(e){return function(e){return "Literal"===e.type&&"string"==typeof e.value}(e)||QL(e)||function(e){return "TaggedTemplateExpression"===e.type&&"MemberExpression"===e.tag.type&&"Identifier"===e.tag.object.type&&"String"===e.tag.object.name&&t(e.tag.object)&&"raw"===LA.getStaticPropertyName(e.tag)&&QL(e.quasi)}(e)}return {Program:function(){var t,n=e.getScope(),i=new KL(n),a={RegExp:(t={},u(t,zL,!0),u(t,HL,!0),t)},o=!0,s=!1,c=void 0;try{for(var l,p=i.iterateGlobalReferences(a)[Symbol.iterator]();!(o=(l=p.next()).done);o=!0){var f=l.value.node,h=f.arguments;(1===h.length||2===h.length)&&h.every(r)&&e.report({node:f,messageId:"unexpectedRegExp"});}}catch(e){s=!0,c=e;}finally{try{o||null==p.return||p.return();}finally{if(s)throw c}}}}}};function YL(e){var t=e.identifier,r=t.parent;return "MemberExpression"!==r.type||r.object!==t||r.computed}var ZL={meta:{type:"suggestion",docs:{description:"require rest parameters instead of `arguments`",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-rest-params"},schema:[]},create:function(e){function t(t){e.report({node:t.identifier,loc:t.identifier.loc,message:"Use the rest parameters instead of 'arguments'."});}function r(){var r=function(e){for(var t=e.variables,r=0;r<t.length;++r){var n=t[r];if("arguments"===n.name)return 0===n.identifiers.length?n:null}return null}(e.getScope());r&&r.references.filter(YL).forEach(t);}return {"FunctionDeclaration:exit":r,"FunctionExpression:exit":r}}};var eN={meta:{type:"suggestion",docs:{description:"require spread operators instead of `.apply()`",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-spread"},schema:[],fixable:null},create:function(e){var t=e.getSourceCode();return {CallExpression:function(r){if(function(e){return "MemberExpression"===e.callee.type&&"Identifier"===e.callee.property.type&&"apply"===e.callee.property.name&&!1===e.callee.computed&&2===e.arguments.length&&"ArrayExpression"!==e.arguments[1].type&&"SpreadElement"!==e.arguments[1].type}(r)){var n=r.callee.object;(function(e,t,r){return e?LA.equalTokens(e,t,r):LA.isNullOrUndefined(t)})("MemberExpression"===n.type?n.object:null,r.arguments[0],t)&&e.report({node:r,message:"Use the spread operator instead of '.apply()'."});}}}}};function tN(e){return "BinaryExpression"===e.type&&"+"===e.operator}function rN(e){for(var t=e;tN(t.parent);)t=t.parent;return t}function nN(e){return tN(e)?nN(e.left)||nN(e.right):function(e){return !!("Literal"===e.type&&"string"==typeof e.value)&&LA.hasOctalEscapeSequence(e.raw)}(e)}function iN(e){return tN(e)?iN(e.right)||iN(e.left):!LA.isStringLiteral(e)}function aN(e){return "BinaryExpression"===e.type?aN(e.left):"TemplateLiteral"===e.type?e.expressions.length&&e.quasis.length&&e.quasis[0].range[0]===e.quasis[0].range[1]:"Literal"!==e.type||"string"!=typeof e.value}var oN={meta:{type:"suggestion",docs:{description:"require template literals instead of string concatenation",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/prefer-template"},schema:[],fixable:"code"},create:function(e){function t(e,t){var r=[e].concat(i.getTokensBetween(e,t)).concat(t),n=i.getText();return r.slice(0,-1).reduce((function(e,t,i){return e+n.slice(t.range[1],r[i+1].range[0])}),"")}function r(e,n,a){if("Literal"===e.type&&"string"==typeof e.value)return "`".concat(e.raw.slice(1,-1).replace(/\\*(\$\{|`)/g,(function(e){return e.lastIndexOf("\\")%2?"\\".concat(e):e})).replace(new RegExp("\\\\".concat(e.raw[0]),"gu"),e.raw[0]),"`");if("TemplateLiteral"===e.type)return i.getText(e);if(tN(e)&&function e(t){return tN(t)?e(t.right)||e(t.left):LA.isStringLiteral(t)}(e)&&iN(e)){var o=i.getFirstTokenBetween(e.left,e.right,(function(e){return "+"===e.value})),s=t(e.left,o),u=t(o,e.right),c=function(e){return "BinaryExpression"===e.type?aN(e.right):"TemplateLiteral"===e.type?e.expressions.length&&e.quasis.length&&e.quasis[e.quasis.length-1].range[0]===e.quasis[e.quasis.length-1].range[1]:"Literal"!==e.type||"string"!=typeof e.value}(e.left),l=aN(e.right);return c?r(e.left,n,s+u).slice(0,-1)+r(e.right,null,a).slice(1):l?r(e.left,n,null).slice(0,-1)+r(e.right,s+u,a).slice(1):"".concat(r(e.left,n,null)).concat(s,"+").concat(u).concat(r(e.right,a,null))}return "`${".concat(n||"").concat(i.getText(e)).concat(a||"","}`")}function n(t){if(LA.isStringLiteral(t)&&tN(t.parent)){var n=rN(t.parent);a[n.range[0]]||(a[n.range[0]]=!0,iN(n)&&e.report({node:n,message:"Unexpected string concatenation.",fix:function(e){return function(e,t){var n=rN(t.parent);return nN(n)?null:e.replaceText(n,r(n,null,null))}(e,t)}}));}}var i=e.getSourceCode(),a=Object.create(null);return {Program:function(){a=Object.create(null);},Literal:n,TemplateLiteral:n}}},sN={meta:{type:"suggestion",docs:{description:"require quotes around object literal property names",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/quote-props"},schema:{anyOf:[{type:"array",items:[{enum:["always","as-needed","consistent","consistent-as-needed"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["always","as-needed","consistent","consistent-as-needed"]},{type:"object",properties:{keywords:{type:"boolean"},unnecessary:{type:"boolean"},numbers:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},fixable:"code"},create:function(e){function t(e){return 0<=Aw.indexOf(e)}function r(e,t,r){return 1===t.length&&0===t[0].start&&t[0].end===e.length&&(0<=["Identifier","Keyword","Null","Boolean"].indexOf(t[0].type)||"Numeric"===t[0].type&&!r&&+t[0].value+""===t[0].value)}function n(e){return "Identifier"===e.type?e.name:e.value}function i(e){return "Literal"===e.type&&"string"==typeof e.value?g.getText(e):'"'.concat("Identifier"===e.type?e.name:e.value,'"')}function a(a){var o=a.key;if(!(a.method||a.computed||a.shorthand))if("Literal"===o.type&&"string"==typeof o.value){var s;try{s=Fy.espree.tokenize(o.value);}catch(e){return}if(1!==s.length)return;if(t(s[0].value)&&c)return;l&&r(o.value,s,p)&&e.report({node:a,message:f,data:{property:o.value},fix:function(e){return e.replaceText(o,n(o))}});}else c&&"Identifier"===o.type&&t(o.name)?e.report({node:a,message:m,data:{property:o.name},fix:function(e){return e.replaceText(o,i(o))}}):p&&"Literal"===o.type&&"number"==typeof o.value&&e.report({node:a,message:d,data:{property:o.value},fix:function(e){return e.replaceText(o,i(o))}});}function o(t){var r=t.key;t.method||t.computed||t.shorthand||"Literal"===r.type&&"string"==typeof r.value||e.report({node:t,message:h,data:{property:r.name||r.value},fix:function(e){return e.replaceText(r,i(r))}});}function s(a,o){var s=[],u=[],l=null,p=!1;a.properties.forEach((function(e){var n=e.key;if(n&&!e.method&&!e.computed&&!e.shorthand)if("Literal"!==n.type||"string"!=typeof n.value)c&&o&&"Identifier"===n.type&&t(n.name)?(u.push(e),p=!0,l=n.name):u.push(e);else if(s.push(e),o){var i;try{i=Fy.espree.tokenize(n.value);}catch(e){return void(p=!0)}p=p||!r(n.value,i)||c&&t(i[0].value);}})),o&&s.length&&!p?s.forEach((function(t){e.report({node:t,message:"Properties shouldn't be quoted as all quotes are redundant.",fix:function(e){return e.replaceText(t.key,n(t.key))}});})):u.length&&l?u.forEach((function(t){e.report({node:t,message:"Properties should be quoted as '{{property}}' is a reserved word.",data:{property:l},fix:function(e){return e.replaceText(t.key,i(t.key))}});})):s.length&&u.length&&u.forEach((function(t){e.report({node:t,message:"Inconsistently quoted property '{{key}}' found.",data:{key:t.key.name||t.key.value},fix:function(e){return e.replaceText(t.key,i(t.key))}});}));}var u=e.options[0],c=e.options[1]&&e.options[1].keywords,l=!e.options[1]||!1!==e.options[1].unnecessary,p=e.options[1]&&e.options[1].numbers,f="Unnecessarily quoted property '{{property}}' found.",h="Unquoted property '{{property}}' found.",d="Unquoted number literal '{{property}}' used as key.",m="Unquoted reserved word '{{property}}' used as key.",g=e.getSourceCode();return {Property:function(e){"always"!==u&&u||o(e),"as-needed"===u&&a(e);},ObjectExpression:function(e){"consistent"===u&&s(e,!1),"consistent-as-needed"===u&&s(e,!0);}}}},uN={double:{quote:'"',alternateQuote:"'",description:"doublequote"},single:{quote:"'",alternateQuote:'"',description:"singlequote"},backtick:{quote:"`",alternateQuote:'"',description:"backtick"}},cN=/(^|(?:[\0-\[\]-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))(\\\\)*[]/;uN.double.convert=uN.single.convert=uN.backtick.convert=function(e){var t=this.quote,r=e[0];return t===r?e:t+e.slice(1,-1).replace(/\\(\$\{|\r\n?|\n|(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))|["'`]|\$\{|(\r\n?|\n)/g,(function(e,n,i){return n===r||"`"===r&&"${"===n?n:e===t||"`"===t&&"${"===e?"\\".concat(e):i&&"`"===r?"\\n":e}))+t};var lN={meta:{type:"layout",docs:{description:"enforce the consistent use of either backticks, double, or single quotes",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/quotes"},fixable:"code",schema:[{enum:["single","double","backtick"]},{anyOf:[{enum:["avoid-escape"]},{type:"object",properties:{avoidEscape:{type:"boolean"},allowTemplateLiterals:{type:"boolean"}},additionalProperties:!1}]}]},create:function(e){function t(e){return "ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value}function r(e){var r=e.parent.parent;if("Program"!==r.type&&("BlockStatement"!==r.type||!LA.isFunction(r.parent)))return !1;for(var n=0;n<r.body.length;++n){var i=r.body[n];if(i===e.parent)return !0;if(!t(i))break}return !1}function n(e){var t=e.parent;switch(t.type){case"ExpressionStatement":return r(e);case"Property":case"MethodDefinition":return t.key===e&&!t.computed;case"ImportDeclaration":case"ExportNamedDeclaration":case"ExportAllDeclaration":return t.source===e;default:return !1}}var i=e.options[0],a=uN[i||"double"],o=e.options[1],s=o&&!0===o.allowTemplateLiterals,u=e.getSourceCode(),c=o&&!0===o.avoidEscape;return "avoid-escape"===o&&(c=!0),{Literal:function(t){var r=t.value,o=t.raw;if(a&&"string"==typeof r){var s="backtick"===i&&n(t)||function(e){return "JSXAttribute"===e.parent.type||"JSXElement"===e.parent.type||"JSXFragment"===e.parent.type}(t)||LA.isSurroundedBy(o,a.quote);!s&&c&&(s=LA.isSurroundedBy(o,a.alternateQuote)&&0<=o.indexOf(a.quote)),s||e.report({node:t,message:"Strings must use {{description}}.",data:{description:a.description},fix:function(e){return "backtick"===i&&LA.hasOctalEscapeSequence(o)?null:e.replaceText(t,a.convert(t.raw))}});}},TemplateLiteral:function(t){s||"backtick"===i||function(e){return "TaggedTemplateExpression"===e.parent.type&&e===e.parent.quasi||(0<e.expressions.length||!!(1<=e.quasis.length&&cN.test(e.quasis[0].value.raw)))}(t)||e.report({node:t,message:"Strings must use {{description}}.",data:{description:a.description},fix:function(e){return r(t)?null:e.replaceText(t,a.convert(u.getText(t)))}});}}}},pN="always",fN="as-needed";function hN(e){return 1<=e.defs.length}var dN={meta:{type:"suggestion",docs:{description:"enforce the consistent use of the radix argument when using `parseInt()`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/radix"},schema:[{enum:["always","as-needed"]}]},create:function(e){function t(t){var n=t.arguments;switch(n.length){case 0:e.report({node:t,message:"Missing parameters."});break;case 1:r===pN&&e.report({node:t,message:"Missing radix parameter."});break;default:r===fN&&function(e){return "Literal"===e.type&&10===e.value}(n[1])?e.report({node:t,message:"Redundant radix parameter."}):!function(e){return !("Literal"===e.type&&"number"!=typeof e.value||"Identifier"===e.type&&"undefined"===e.name)}(n[1])&&e.report({node:t,message:"Invalid radix parameter."});}}var r=e.options[0]||pN;return {"Program:exit":function(){var r,n=e.getScope();hN(r=LA.getVariableByName(n,"parseInt"))||r.references.forEach((function(e){var r=e.identifier;LA.isCallee(r)&&t(r.parent);})),hN(r=LA.getVariableByName(n,"Number"))||r.references.forEach((function(e){var r=e.identifier.parent;(function(e){return "MemberExpression"===e.type&&!e.computed&&"Identifier"===e.property.type&&"parseInt"===e.property.name})(r)&&LA.isCallee(r)&&t(r.parent);}));}}}};function mN(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map,r=!0,n=!1,i=void 0;try{for(var a,o=e.references[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;t.set(s.identifier,s);}}catch(e){n=!0,i=e;}finally{try{r||null==o.return||o.return();}finally{if(n)throw i}}var u=!0,c=!1,l=void 0;try{for(var p,f=e.childScopes[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var h=p.value;"function"!==h.type&&mN(h,t);}}catch(e){c=!0,l=e;}finally{try{u||null==f.return||f.return();}finally{if(c)throw l}}return t}var gN=function(){function e(){a(this,e),this.info=new WeakMap;}return s(e,[{key:"initialize",value:function(e){var t=new Set,r=new Set,n=!0,i=!1,a=void 0;try{for(var o,s=e.prevSegments[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var u=o.value,c=this.info.get(u);c&&(c.outdatedReadVariableNames.forEach(Set.prototype.add,t),c.freshReadVariableNames.forEach(Set.prototype.add,r));}}catch(e){i=!0,a=e;}finally{try{n||null==s.return||s.return();}finally{if(i)throw a}}this.info.set(e,{outdatedReadVariableNames:t,freshReadVariableNames:r});}},{key:"markAsRead",value:function(e,t){var r=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value,u=this.info.get(s);u&&u.freshReadVariableNames.add(t);}}catch(e){n=!0,i=e;}finally{try{r||null==o.return||o.return();}finally{if(n)throw i}}}},{key:"makeOutdated",value:function(e){var t=!0,r=!1,n=void 0;try{for(var i,a=e[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){var o=i.value,s=this.info.get(o);s&&(s.freshReadVariableNames.forEach(Set.prototype.add,s.outdatedReadVariableNames),s.freshReadVariableNames.clear());}}catch(e){r=!0,n=e;}finally{try{t||null==a.return||a.return();}finally{if(r)throw n}}}},{key:"isOutdated",value:function(e,t){var r=!0,n=!1,i=void 0;try{for(var a,o=e[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value,u=this.info.get(s);if(u&&u.outdatedReadVariableNames.has(t))return !0}}catch(e){n=!0,i=e;}finally{try{r||null==o.return||o.return();}finally{if(n)throw i}}return !1}}]),e}(),yN={meta:{type:"problem",docs:{description:"disallow assignments that can lead to race conditions due to usage of `await` or `yield`",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/require-atomic-updates"},fixable:null,schema:[],messages:{nonAtomicUpdate:"Possible race condition: `{{value}}` might be reassigned based on an outdated value of `{{value}}`."}},create:function(e){var t=e.getSourceCode(),r=new Map,n=new gN,i=null;return {onCodePathStart:function(t){var r=e.getScope(),n="function"===r.type&&(r.block.async||r.block.generator);i={upper:i,codePath:t,referenceMap:n?mN(r):null};},onCodePathEnd:function(){i=i.upper;},onCodePathSegmentStart:function(e){n.initialize(e);},Identifier:function(e){var t=i,a=t.codePath,o=t.referenceMap,s=o&&o.get(e);if(s){var u=s.identifier.name,c=s.resolved,l=function(e){if(e.writeExpr)return e.writeExpr;for(var t=e.identifier;t;){var r=t.parent.type;if("AssignmentExpression"===r&&t.parent.left===t)return t.parent.right;if("MemberExpression"!==r||t.parent.object!==t)break;t=t.parent;}return null}(s),p="MemberExpression"===s.identifier.parent.type;if(s.isRead()&&!(l&&"="===l.parent.operator)&&n.markAsRead(a.currentSegments,u),l&&l.parent.right===l&&!function(e,t){if(!e)return !1;if(t&&e.defs.some((function(e){return "Parameter"===e.type})))return !1;var r=e.scope.variableScope;return e.references.every((function(e){return e.from.variableScope===r}))}(c,p)){var f=r.get(l);f||(f=[],r.set(l,f)),f.push(s);}}},":expression:exit":function(a){var o=i,s=o.codePath;if(o.referenceMap){("AwaitExpression"===a.type||"YieldExpression"===a.type)&&n.makeOutdated(s.currentSegments);var u=r.get(a);if(u){r.delete(a);var c=!0,l=!1,p=void 0;try{for(var f,h=u[Symbol.iterator]();!(c=(f=h.next()).done);c=!0){var d=f.value.identifier.name;n.isOutdated(s.currentSegments,d)&&e.report({node:a.parent,messageId:"nonAtomicUpdate",data:{value:t.getText(a.parent.left)}});}}catch(e){l=!0,p=e;}finally{try{c||null==h.return||h.return();}finally{if(l)throw p}}}}}}}};function vN(e){return e[0].toUpperCase()+e.slice(1)}var xN={meta:{type:"suggestion",docs:{description:"disallow async functions which have no `await` expression",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/require-await"},schema:[]},create:function(e){function t(){i={upper:i,hasAwait:!1};}function r(t){!t.async||i.hasAwait||LA.isEmptyFunction(t)||e.report({node:t,loc:LA.getFunctionHeadLoc(t,n),message:"{{name}} has no 'await' expression.",data:{name:vN(LA.getFunctionNameWithKind(t))}}),i=i.upper;}var n=e.getSourceCode(),i=null;return {FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t,"FunctionDeclaration:exit":r,"FunctionExpression:exit":r,"ArrowFunctionExpression:exit":r,AwaitExpression:function(){i&&(i.hasAwait=!0);},ForOfStatement:function(e){!i||e.await&&(i.hasAwait=!0);}}}},bN={meta:{type:"suggestion",docs:{description:"require JSDoc comments",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/require-jsdoc"},schema:[{type:"object",properties:{require:{type:"object",properties:{ClassDeclaration:{type:"boolean",default:!1},MethodDefinition:{type:"boolean",default:!1},FunctionDeclaration:{type:"boolean",default:!0},ArrowFunctionExpression:{type:"boolean",default:!1},FunctionExpression:{type:"boolean",default:!1}},additionalProperties:!1,default:{}}},additionalProperties:!1}],deprecated:!0,replacedBy:[]},create:function(e){function t(t){e.report({node:t,message:"Missing JSDoc comment."});}function r(e){n.getJSDocComment(e)||t(e);}var n=e.getSourceCode(),i=Object.assign({FunctionDeclaration:!0,MethodDefinition:!1,ClassDeclaration:!1,ArrowFunctionExpression:!1,FunctionExpression:!1},e.options[0]&&e.options[0].require);return {FunctionDeclaration:function(e){i.FunctionDeclaration&&r(e);},FunctionExpression:function(e){(i.MethodDefinition&&"MethodDefinition"===e.parent.type||i.FunctionExpression&&("VariableDeclarator"===e.parent.type||"Property"===e.parent.type&&e===e.parent.value))&&r(e);},ClassDeclaration:function(e){i.ClassDeclaration&&r(e);},ArrowFunctionExpression:function(e){i.ArrowFunctionExpression&&"VariableDeclarator"===e.parent.type&&r(e);}}}},EN=Fy.require$$0,CN=EN.CALL,SN=EN.CONSTRUCT,kN=EN.ReferenceTracker,DN=EN.getStringIfConstant,FN={meta:{type:"suggestion",docs:{description:"enforce the use of `u` flag on RegExp",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/require-unicode-regexp"},messages:{requireUFlag:"Use the 'u' flag."},schema:[]},create:function(e){return {"Literal[regex]":function(t){(t.regex.flags||"").includes("u")||e.report({node:t,messageId:"requireUFlag"});},Program:function(){var t,r=e.getScope(),n=new kN(r),i={RegExp:(t={},u(t,CN,!0),u(t,SN,!0),t)},a=!0,o=!1,s=void 0;try{for(var c,l=n.iterateGlobalReferences(i)[Symbol.iterator]();!(a=(c=l.next()).done);a=!0){var p=c.value.node,f=p.arguments[1],h=DN(f,r);f&&("string"!=typeof h||h.includes("u"))||e.report({node:p,messageId:"requireUFlag"});}}catch(e){o=!0,s=e;}finally{try{a||null==l.return||l.return();}finally{if(o)throw s}}}}}},AN={meta:{type:"layout",docs:{description:"enforce consistent spacing before and after semicolons",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/semi-spacing"},fixable:"whitespace",schema:[{type:"object",properties:{before:{type:"boolean",default:!1},after:{type:"boolean",default:!0}},additionalProperties:!1}]},create:function(e){function t(t,r){if(LA.isSemicolonToken(t)){var n=t.loc.start;!function(e){var t=a.getTokenBefore(e);return t&&LA.isTokenOnSameLine(t,e)&&a.isSpaceBetweenTokens(t,e)}(t)?o&&e.report({node:r,loc:n,message:"Missing whitespace before semicolon.",fix:function(e){return e.insertTextBefore(t," ")}}):!o&&e.report({node:r,loc:n,message:"Unexpected whitespace before semicolon.",fix:function(e){var r=a.getTokenBefore(t);return e.removeRange([r.range[1],t.range[0]])}}),function(e){var t=a.getTokenBefore(e);return !(t&&LA.isTokenOnSameLine(e,t))}(t)||function(e){var t=a.getTokenAfter(e);return !(t&&LA.isTokenOnSameLine(e,t))}(t)||function(e){var t=a.getTokenAfter(e);return t&&LA.isClosingBraceToken(t)||LA.isClosingParenToken(t)}(t)||(function(e){var t=a.getTokenAfter(e);return t&&LA.isTokenOnSameLine(e,t)&&a.isSpaceBetweenTokens(e,t)}(t)?!s&&e.report({node:r,loc:n,message:"Unexpected whitespace after semicolon.",fix:function(e){var r=a.getTokenAfter(t);return e.removeRange([t.range[1],r.range[0]])}}):s&&e.report({node:r,loc:n,message:"Missing whitespace after semicolon.",fix:function(e){return e.insertTextAfter(t," ")}}));}}function r(e){t(a.getLastToken(e),e);}var n=e.options[0],a=e.getSourceCode(),o=!1,s=!0;return "object"==i(n)&&(o=n.before,s=n.after),{VariableDeclaration:r,ExpressionStatement:r,BreakStatement:r,ContinueStatement:r,DebuggerStatement:r,ReturnStatement:r,ThrowStatement:r,ImportDeclaration:r,ExportNamedDeclaration:r,ExportAllDeclaration:r,ExportDefaultDeclaration:r,ForStatement:function(e){e.init&&t(a.getTokenAfter(e.init),e),e.test&&t(a.getTokenAfter(e.test),e);}}}},wN=":matches(".concat("BreakStatement,ContinueStatement,DebuggerStatement,DoWhileStatement,ExportAllDeclaration,ExportDefaultDeclaration,ExportNamedDeclaration,ExpressionStatement,ImportDeclaration,ReturnStatement,ThrowStatement,VariableDeclaration",")");var _N={asc:function(e,t){return e<=t},ascI:function(e,t){return e.toLowerCase()<=t.toLowerCase()},ascN:function(e,t){return 0>=BA(e,t)},ascIN:function(e,t){return 0>=BA(e.toLowerCase(),t.toLowerCase())},desc:function(e,t){return _N.asc(t,e)},descI:function(e,t){return _N.ascI(t,e)},descN:function(e,t){return _N.ascN(t,e)},descIN:function(e,t){return _N.ascIN(t,e)}};function TN(e){return "(?:".concat(Fy.lodash.escapeRegExp(e),")")}function PN(e){return "".concat(TN(e),"+")}function IN(e){var t="";return 0===e.length?t+="\\s":(t+="(?:\\s|",1===e.length?t+=PN(e[0]):(t+="(?:",t+=e.map(PN).join("|"),t+=")"),t+="(?:$|[".concat(Array.from(LA.LINEBREAKS).join(""),"]))")),t}function BN(e,t){var r="^";return 1===e.length?r+=TN(e[0]):(r+="(?:",r+=e.map(TN).join("|"),r+=")"),r+="?",r+=IN(t),new RegExp(r,"u")}function ON(e){var t="^(".concat(e.map(TN).join("|"),")?[ \t]+");return new RegExp(t,"u")}function LN(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];if("ExpressionStatement"!==n.type||"Literal"!==n.expression.type||"use strict"!==n.expression.value)break;t[r]=n;}return t}function NN(e){return "Identifier"===e.type}function jN(e){return e.every(NN)}var RN=/\$\{$/,MN=/^\}/;function VN(e){return !!e&&"Identifier"===e.type&&"NaN"===e.name}function UN(e){return 0<=["<","<="].indexOf(e)}function qN(e){return "UnaryExpression"===e.type&&"-"===e.operator&&e.prefix&&"Literal"===e.argument.type&&"number"==typeof e.argument.value}function WN(e,t){return "Literal"===e.type?e:qN(e)?{type:"Literal",value:-e.argument.value,raw:"-".concat(e.argument.value)}:t?{type:"Literal",value:t,raw:t+""}:null}function $N(e,t){if(e.type!==t.type)return !1;switch(e.type){case"Identifier":return e.name===t.name;case"Literal":return e.value===t.value;case"MemberExpression":var r=LA.getStaticPropertyName(e);return null===r?e.computed===t.computed&&$N(e.object,t.object)&&$N(e.property,t.property):$N(e.object,t.object)&&r===LA.getStaticPropertyName(t);case"ThisExpression":return !0;default:return !1}}var GN={"accessor-pairs":MA,"array-bracket-newline":VA,"array-bracket-spacing":UA,"array-callback-return":KA,"array-element-newline":JA,"arrow-body-style":QA,"arrow-parens":YA,"arrow-spacing":ZA,"block-scoped-var":{meta:{type:"suggestion",docs:{description:"enforce the use of variables within the scope they are defined",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/block-scoped-var"},schema:[],messages:{outOfScope:"'{{name}}' used outside of binding context."}},create:function(e){function t(e){i.push(e.range);}function r(){i.pop();}function n(t){var r=t.identifier;e.report({node:r,messageId:"outOfScope",data:{name:r.name}});}var i=[];return {Program:function(e){i=[e.range];},BlockStatement:t,"BlockStatement:exit":r,ForStatement:t,"ForStatement:exit":r,ForInStatement:t,"ForInStatement:exit":r,ForOfStatement:t,"ForOfStatement:exit":r,SwitchStatement:t,"SwitchStatement:exit":r,CatchClause:t,"CatchClause:exit":r,VariableDeclaration:function(t){function r(e){var t=e.identifier.range;return t[0]<a[0]||t[1]>a[1]}if("var"===t.kind)for(var a=i[i.length-1],o=e.getDeclaredVariables(t),s=0;s<o.length;++s)o[s].references.filter(r).forEach(n);}}}},"block-spacing":ew,"brace-style":tw,"callback-return":{meta:{type:"suggestion",docs:{description:"require `return` statements after callbacks",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/callback-return"},schema:[{type:"array",items:{type:"string"}}],messages:{missingReturn:"Expected return with your callback function."}},create:function(e){function t(e,r){return e.parent?-1===r.indexOf(e.parent.type)?t(e.parent,r):e.parent:null}function r(e){return function e(t){if("Identifier"===t.type)return !0;if("MemberExpression"===t.type){if("Identifier"===t.object.type)return !0;if("MemberExpression"===t.object.type)return e(t.object)}return !1}(e.callee)&&-1<i.indexOf(a.getText(e.callee))}function n(e,t){return !(!t||"ExpressionStatement"!==t.type||t.expression!==e&&("BinaryExpression"!==t.expression.type&&"LogicalExpression"!==t.expression.type||t.expression.right!==e))}var i=e.options[0]||["callback","cb","next"],a=e.getSourceCode();return {CallExpression:function(i){if(r(i)){var a=t(i,["BlockStatement","ReturnStatement","ArrowFunctionExpression"])||{};if("ReturnStatement"!==a.type&&"ArrowFunctionExpression"!==a.type){if("BlockStatement"===a.type){var o=a.body[a.body.length-1];if(n(i,o)){var s=a.parent.type;if("FunctionExpression"===s||"FunctionDeclaration"===s||"ArrowFunctionExpression"===s)return}if("ReturnStatement"===o.type&&n(i,a.body[a.body.length-2]))return}t(i,["FunctionDeclaration","FunctionExpression","ArrowFunctionExpression"])&&e.report({node:i,messageId:"missingReturn"});}}}}}},camelcase:rw,"capitalized-comments":lw,"class-methods-use-this":pw,"comma-dangle":hw,"comma-spacing":dw,"comma-style":mw,complexity:gw,"computed-property-spacing":yw,"consistent-return":xw,"consistent-this":{meta:{type:"suggestion",docs:{description:"enforce consistent naming when capturing the current execution context",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/consistent-this"},schema:{type:"array",items:{type:"string",minLength:1},uniqueItems:!0},messages:{aliasNotAssignedToThis:"Designated alias '{{name}}' is not assigned to 'this'.",unexpectedAlias:"Unexpected alias '{{name}}' for 'this'."}},create:function(e){function t(t,r){e.report({node:t,messageId:"aliasNotAssignedToThis",data:{name:r}});}function r(r,n,i){var o="ThisExpression"===i.type;-1===a.indexOf(n)?o&&e.report({node:r,messageId:"unexpectedAlias",data:{name:n}}):(!o||r.operator&&"="!==r.operator)&&t(r,n);}function n(e,r){var n=r.set.get(e);n&&!n.defs.some((function(e){return "VariableDeclarator"===e.node.type&&null!==e.node.init}))&&(n.references.some((function(e){var t=e.writeExpr;return e.from===r&&t&&"ThisExpression"===t.type&&"="===t.parent.operator}))||n.defs.map((function(e){return e.node})).forEach((function(r){t(r,e);})));}function i(){var t=e.getScope();a.forEach((function(e){n(e,t);}));}var a=[];return 0===e.options.length?a.push("that"):a=e.options,{"Program:exit":i,"FunctionExpression:exit":i,"FunctionDeclaration:exit":i,VariableDeclarator:function(e){var t=e.id,n="ArrayPattern"===t.type||"ObjectPattern"===t.type;null===e.init||n||r(e,t.name,e.init);},AssignmentExpression:function(e){"Identifier"===e.left.type&&r(e,e.left.name,e.right);}}}},"constructor-super":Cw,curly:Sw,"default-case":Dw,"default-param-last":{meta:{type:"suggestion",docs:{description:"enforce default parameters to be last",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/default-param-last"},schema:[],messages:{shouldBeLast:"Default parameters should be last."}},create:function(e){function t(t){for(var r=!1,n=t.params.length-1;0<=n;n-=1){var i=t.params[n];"AssignmentPattern"===i.type||"RestElement"===i.type?r&&"AssignmentPattern"===i.type&&e.report({node:i,messageId:"shouldBeLast"}):r=!0;}}return {FunctionDeclaration:t,FunctionExpression:t,ArrowFunctionExpression:t}}},"dot-location":Fw,"dot-notation":Tw,"eol-last":Pw,eqeqeq:Iw,"for-direction":{meta:{type:"problem",docs:{description:'enforce "for" loop update clause moving the counter in the right direction.',category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/for-direction"},fixable:null,schema:[],messages:{incorrectDirection:"The update clause in this loop moves the variable in the wrong direction."}},create:function(e){function t(t){e.report({node:t,messageId:"incorrectDirection"});}function r(e,t){if("UnaryExpression"===e.right.type){if("-"===e.right.operator)return -t}else if("Identifier"===e.right.type)return 0;return t}return {ForStatement:function(e){if(e.test&&"BinaryExpression"===e.test.type&&"Identifier"===e.test.left.type&&e.update){var n,i=e.test.left.name,a=e.test.operator,o=e.update;if("<"===a||"<="===a)n=-1;else {if(">"!==a&&">="!==a)return;n=1;}"UpdateExpression"===o.type?function(e,t){if("Identifier"===e.argument.type&&e.argument.name===t){if("++"===e.operator)return 1;if("--"===e.operator)return -1}return 0}(o,i)===n&&t(e):"AssignmentExpression"===o.type&&function(e,t){if(e.left.name===t){if("+="===e.operator)return r(e,1);if("-="===e.operator)return r(e,-1)}return 0}(o,i)===n&&t(e);}}}}},"func-call-spacing":Bw,"func-name-matching":Nw,"func-names":jw,"func-style":{meta:{type:"suggestion",docs:{description:"enforce the consistent use of either `function` declarations or expressions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/func-style"},schema:[{enum:["declaration","expression"]},{type:"object",properties:{allowArrowFunctions:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{expression:"Expected a function expression.",declaration:"Expected a function declaration."}},create:function(e){var t=e.options[0],r=e.options[1]&&e.options[1].allowArrowFunctions,n="declaration"===t,i=[],a={FunctionDeclaration:function(t){i.push(!1),n||"ExportDefaultDeclaration"===t.parent.type||e.report({node:t,messageId:"expression"});},"FunctionDeclaration:exit":function(){i.pop();},FunctionExpression:function(t){i.push(!1),n&&"VariableDeclarator"===t.parent.type&&e.report({node:t.parent,messageId:"declaration"});},"FunctionExpression:exit":function(){i.pop();},ThisExpression:function(){0<i.length&&(i[i.length-1]=!0);}};return r||(a.ArrowFunctionExpression=function(){i.push(!1);},a["ArrowFunctionExpression:exit"]=function(t){var r=i.pop();n&&!r&&"VariableDeclarator"===t.parent.type&&e.report({node:t.parent,messageId:"declaration"});}),a}},"function-call-argument-newline":{meta:{type:"layout",docs:{description:"enforce line breaks between arguments of a function call",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/function-call-argument-newline"},fixable:"whitespace",schema:[{enum:["always","never","consistent"]}],messages:{unexpectedLineBreak:"There should be no line break here.",missingLineBreak:"There should be a line break after this argument."}},create:function(e){function t(t,r){for(var i=1;i<t.arguments.length;i++){var a=n.getLastToken(t.arguments[i-1]),o=n.getFirstToken(t.arguments[i]);if(r.check(a,o)){var s=n.getTokenBefore(o,{includeComments:!0}),u="Line"===s.type;e.report({node:t,loc:{start:s.loc.end,end:o.loc.start},messageId:r.messageId,fix:u?null:r.createFix(o,s)});}}}function r(r){if(!(2>r.arguments.length)){var a=e.options[0]||"always";if("never"===a)t(r,i.unexpected);else if("always"===a)t(r,i.missing);else if("consistent"===a){var o=n.getLastToken(r.arguments[0]),s=n.getFirstToken(r.arguments[1]);o.loc.end.line===s.loc.start.line?t(r,i.unexpected):t(r,i.missing);}}}var n=e.getSourceCode(),i={unexpected:{messageId:"unexpectedLineBreak",check:function(e,t){return e.loc.end.line!==t.loc.start.line},createFix:function(e,t){return function(r){return r.replaceTextRange([t.range[1],e.range[0]]," ")}}},missing:{messageId:"missingLineBreak",check:function(e,t){return e.loc.end.line===t.loc.start.line},createFix:function(e,t){return function(r){return r.replaceTextRange([t.range[1],e.range[0]],"\n")}}}};return {CallExpression:r,NewExpression:r}}},"function-paren-newline":Rw,"generator-star-spacing":Vw,"getter-return":$w,"global-require":zw,"grouped-accessor-pairs":Kw,"guard-for-in":{meta:{type:"suggestion",docs:{description:"require `for-in` loops to include an `if` statement",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/guard-for-in"},schema:[],messages:{wrap:"The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}},create:function(e){return {ForInStatement:function(t){var r=t.body;if(!("EmptyStatement"===r.type||"IfStatement"===r.type||"BlockStatement"===r.type&&0===r.body.length||"BlockStatement"===r.type&&1===r.body.length&&"IfStatement"===r.body[0].type)){if("BlockStatement"===r.type&&1<=r.body.length&&"IfStatement"===r.body[0].type){var n=r.body[0];if("ContinueStatement"===n.consequent.type)return;if("BlockStatement"===n.consequent.type&&1===n.consequent.body.length&&"ContinueStatement"===n.consequent.body[0].type)return}e.report({node:t,messageId:"wrap"});}}}}},"handle-callback-err":Jw,"id-blacklist":{meta:{type:"suggestion",docs:{description:"disallow specified identifiers",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/id-blacklist"},schema:{type:"array",items:{type:"string"},uniqueItems:!0},messages:{blacklisted:"Identifier '{{name}}' is blacklisted."}},create:function(e){function t(e){return -1!==i.indexOf(e)}function r(e,r){return "CallExpression"!==e.type&&"NewExpression"!==e.type&&t(r)}function n(t){e.report({node:t,messageId:"blacklisted",data:{name:t.name}});}var i=e.options;return {Identifier:function(e){var i=e.name,a="MemberExpression"===e.parent.type?e.parent.parent:e.parent;"MemberExpression"===e.parent.type?"Identifier"===e.parent.object.type&&e.parent.object.name===e.name?t(i)&&n(e):"AssignmentExpression"===a.type&&("MemberExpression"!==a.right.type||"MemberExpression"===a.left.type&&a.left.property.name===e.name)&&t(i)&&n(e):(e.parent.type,r(a,i)&&n(e));}}}},"id-length":{meta:{type:"suggestion",docs:{description:"enforce minimum and maximum identifier lengths",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/id-length"},schema:[{type:"object",properties:{min:{type:"integer",default:2},max:{type:"integer"},exceptions:{type:"array",uniqueItems:!0,items:{type:"string"}},properties:{enum:["always","never"]}},additionalProperties:!1}],messages:{tooShort:"Identifier name '{{name}}' is too short (< {{min}}).",tooLong:"Identifier name '{{name}}' is too long (> {{max}})."}},create:function(e){var t=e.options[0]||{},r=void 0===t.min?2:t.min,n=void 0===t.max?1/0:t.max,i="never"!==t.properties,a=(t.exceptions?t.exceptions:[]).reduce((function(e,t){return e[t]=!0,e}),{}),o={MemberExpression:i&&function(e){return !e.computed&&(e.parent.left===e&&"AssignmentExpression"===e.parent.type||"Property"===e.parent.type&&e.parent.value===e&&"ObjectPattern"===e.parent.parent.type&&e.parent.parent.parent.left===e.parent.parent)},AssignmentPattern:function(e,t){return e.left===t},VariableDeclarator:function(e,t){return e.id===t},Property:i&&function(e,t){return e.key===t},ImportDefaultSpecifier:!0,RestElement:!0,FunctionExpression:!0,ArrowFunctionExpression:!0,ClassDeclaration:!0,FunctionDeclaration:!0,MethodDefinition:!0,CatchClause:!0};return {Identifier:function(t){var i=t.name,s=t.parent,u=i.length<r,c=i.length>n;if((u||c)&&!a[i]){var l=o[s.type];l&&(!0===l||l(s,t))&&e.report({node:t,messageId:u?"tooShort":"tooLong",data:{name:i,min:r,max:n}});}}}}},"id-match":Qw,"implicit-arrow-linebreak":Zw,"indent-legacy":e_,indent:o_,"init-declarations":c_,"jsx-quotes":p_,"key-spacing":m_,"keyword-spacing":F_,"line-comment-position":A_,"linebreak-style":w_,"lines-around-comment":__,"lines-around-directive":T_,"lines-between-class-members":P_,"max-classes-per-file":{meta:{type:"suggestion",docs:{description:"enforce a maximum number of classes per file",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/max-classes-per-file"},schema:[{type:"integer",minimum:1}],messages:{maximumExceeded:"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}."}},create:function(e){var t=e.options[0]||1,r=0;return {Program:function(){r=0;},"Program:exit":function(n){r>t&&e.report({node:n,messageId:"maximumExceeded",data:{classCount:r,max:t}});},"ClassDeclaration, ClassExpression":function(){r++;}}}},"max-depth":I_,"max-len":L_,"max-lines-per-function":N_,"max-lines":j_,"max-nested-callbacks":R_,"max-params":M_,"max-statements-per-line":V_,"max-statements":U_,"multiline-comment-style":q_,"multiline-ternary":W_,"new-cap":H_,"new-parens":K_,"newline-after-var":J_,"newline-before-return":Q_,"newline-per-chained-call":X_,"no-alert":tT,"no-array-constructor":{meta:{type:"suggestion",docs:{description:"disallow `Array` constructors",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-array-constructor"},schema:[],messages:{preferLiteral:"The array literal notation [] is preferable."}},create:function(e){function t(t){1!==t.arguments.length&&"Identifier"===t.callee.type&&"Array"===t.callee.name&&e.report({node:t,messageId:"preferLiteral"});}return {CallExpression:t,NewExpression:t}}},"no-async-promise-executor":{meta:{type:"problem",docs:{description:"disallow using an async function as a Promise executor",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-async-promise-executor"},fixable:null,schema:[],messages:{async:"Promise executor functions should not be async."}},create:function(e){return {"NewExpression[callee.name='Promise'][arguments.0.async=true]":function(t){e.report({node:e.getSourceCode().getFirstToken(t.arguments[0],(function(e){return "async"===e.value})),messageId:"async"});}}}},"no-await-in-loop":iT,"no-bitwise":oT,"no-buffer-constructor":{meta:{type:"problem",docs:{description:"disallow use of the `Buffer()` constructor",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-buffer-constructor"},schema:[],messages:{deprecated:"{{expr}} is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead."}},create:function(e){return {"CallExpression[callee.name='Buffer'], NewExpression[callee.name='Buffer']":function(t){e.report({node:t,messageId:"deprecated",data:{expr:"CallExpression"===t.type?"Buffer()":"new Buffer()"}});}}}},"no-caller":{meta:{type:"suggestion",docs:{description:"disallow the use of `arguments.caller` or `arguments.callee`",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-caller"},schema:[],messages:{unexpected:"Avoid arguments.{{prop}}."}},create:function(e){return {MemberExpression:function(t){var r=t.object.name,n=t.property.name;"arguments"===r&&!t.computed&&n&&n.match(/^calle[er]$/)&&e.report({node:t,messageId:"unexpected",data:{prop:n}});}}}},"no-case-declarations":{meta:{type:"suggestion",docs:{description:"disallow lexical declarations in case clauses",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-case-declarations"},schema:[],messages:{unexpected:"Unexpected lexical declaration in case block."}},create:function(e){function t(e){switch(e.type){case"FunctionDeclaration":case"ClassDeclaration":return !0;case"VariableDeclaration":return "var"!==e.kind;default:return !1}}return {SwitchCase:function(r){for(var n=0;n<r.consequent.length;n++){var i=r.consequent[n];t(i)&&e.report({node:i,messageId:"unexpected"});}}}}},"no-catch-shadow":sT,"no-class-assign":uT,"no-compare-neg-zero":cT,"no-cond-assign":fT,"no-confusing-arrow":hT,"no-console":dT,"no-const-assign":mT,"no-constant-condition":vT,"no-constructor-return":{meta:{type:"problem",docs:{description:"disallow returning value from constructor",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-constructor-return"},schema:{},fixable:null,messages:{unexpected:"Unexpected return statement in constructor."}},create:function(e){var t=[];return {onCodePathStart:function(e,r){t.push(r);},onCodePathEnd:function(){t.pop();},ReturnStatement:function(r){var n=t[t.length-1];!n.parent||"MethodDefinition"===n.parent.type&&"constructor"===n.parent.kind&&(r.parent.parent===n||r.argument)&&e.report({node:r,messageId:"unexpected"});}}}},"no-continue":{meta:{type:"suggestion",docs:{description:"disallow `continue` statements",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-continue"},schema:[],messages:{unexpected:"Unexpected use of continue statement."}},create:function(e){return {ContinueStatement:function(t){e.report({node:t,messageId:"unexpected"});}}}},"no-control-regex":ET,"no-debugger":{meta:{type:"problem",docs:{description:"disallow the use of `debugger`",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-debugger"},fixable:null,schema:[],messages:{unexpected:"Unexpected 'debugger' statement."}},create:function(e){return {DebuggerStatement:function(t){e.report({node:t,messageId:"unexpected"});}}}},"no-delete-var":{meta:{type:"suggestion",docs:{description:"disallow deleting variables",category:"Variables",recommended:!0,url:"https://eslint.org/docs/rules/no-delete-var"},schema:[],messages:{unexpected:"Variables should not be deleted."}},create:function(e){return {UnaryExpression:function(t){"delete"===t.operator&&"Identifier"===t.argument.type&&e.report({node:t,messageId:"unexpected"});}}}},"no-div-regex":{meta:{type:"suggestion",docs:{description:"disallow division operators explicitly at the beginning of regular expressions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-div-regex"},fixable:"code",schema:[],messages:{unexpected:"A regular expression literal can be confused with '/='."}},create:function(e){var t=e.getSourceCode();return {Literal:function(r){var n=t.getFirstToken(r);"RegularExpression"===n.type&&"="===n.value[1]&&e.report({node:r,messageId:"unexpected",fix:function(e){return e.replaceTextRange([n.range[0]+1,n.range[0]+2],"[=]")}});}}}},"no-dupe-args":{meta:{type:"problem",docs:{description:"disallow duplicate arguments in `function` definitions",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-dupe-args"},schema:[],messages:{unexpected:"Duplicate param '{{name}}'."}},create:function(e){function t(e){return "Parameter"===e.type}function r(r){for(var n=e.getDeclaredVariables(r),i=0;i<n.length;++i){var a=n[i];2<=a.defs.filter(t).length&&e.report({node:r,messageId:"unexpected",data:{name:a.name}});}}return {FunctionDeclaration:r,FunctionExpression:r}}},"no-dupe-class-members":CT,"no-dupe-else-if":AT,"no-dupe-keys":PT,"no-duplicate-case":IT,"no-duplicate-imports":jT,"no-else-return":MT,"no-empty-character-class":UT,"no-empty-function":qT,"no-empty-pattern":{meta:{type:"problem",docs:{description:"disallow empty destructuring patterns",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-empty-pattern"},schema:[],messages:{unexpected:"Unexpected empty {{type}} pattern."}},create:function(e){return {ObjectPattern:function(t){0===t.properties.length&&e.report({node:t,messageId:"unexpected",data:{type:"object"}});},ArrayPattern:function(t){0===t.elements.length&&e.report({node:t,messageId:"unexpected",data:{type:"array"}});}}}},"no-empty":WT,"no-eq-null":{meta:{type:"suggestion",docs:{description:"disallow `null` comparisons without type-checking operators",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-eq-null"},schema:[],messages:{unexpected:"Use '===' to compare with null."}},create:function(e){return {BinaryExpression:function(t){var r="=="===t.operator||"!="===t.operator;("Literal"===t.right.type&&"null"===t.right.raw&&r||"Literal"===t.left.type&&"null"===t.left.raw&&r)&&e.report({node:t,messageId:"unexpected"});}}}},"no-eval":KT,"no-ex-assign":JT,"no-extend-native":XT,"no-extra-bind":ZT,"no-extra-boolean-cast":eP,"no-extra-label":tP,"no-extra-parens":nP,"no-extra-semi":iP,"no-fallthrough":sP,"no-floating-decimal":uP,"no-func-assign":cP,"no-global-assign":{meta:{type:"suggestion",docs:{description:"disallow assignments to native objects or read-only global variables",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-global-assign"},schema:[{type:"object",properties:{exceptions:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1}]},create:function(e){function t(t,r,n){var i=t.identifier;!1===t.init&&t.isWrite()&&(0===r||n[r-1].identifier!==i)&&e.report({node:i,message:"Read-only global '{{name}}' should not be modified.",data:i});}function r(e){!1===e.writeable&&-1===i.indexOf(e.name)&&e.references.forEach(t);}var n=e.options[0],i=n&&n.exceptions||[];return {Program:function(){e.getScope().variables.forEach(r);}}}},"no-implicit-coercion":dP,"no-implicit-globals":{meta:{type:"suggestion",docs:{description:"disallow declarations in the global scope",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-implicit-globals"},schema:[{type:"object",properties:{lexicalBindings:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{globalNonLexicalBinding:"Unexpected {{kind}} declaration in the global scope, wrap in an IIFE for a local variable, assign as global property for a global variable.",globalLexicalBinding:"Unexpected {{kind}} declaration in the global scope, wrap in a block or in an IIFE.",globalVariableLeak:"Global variable leak, declare the variable if it is intended to be local.",assignmentToReadonlyGlobal:"Unexpected assignment to read-only global variable.",redeclarationOfReadonlyGlobal:"Unexpected redeclaration of read-only global variable."}},create:function(e){function t(t,r,n){e.report({node:t,messageId:r,data:{kind:n}});}var r=e.options[0]&&!0===e.options[0].lexicalBindings;return {Program:function(){var n=e.getScope();n.variables.forEach((function(e){var n=!1===e.writeable;!0===e.writeable||e.defs.forEach((function(e){var i=e.node;("FunctionName"===e.type||"Variable"===e.type&&"var"===e.parent.kind)&&(n?t(i,"redeclarationOfReadonlyGlobal"):t(i,"globalNonLexicalBinding","FunctionName"===e.type?"function":"'".concat(e.parent.kind,"'"))),r&&("ClassName"===e.type||"Variable"===e.type&&("let"===e.parent.kind||"const"===e.parent.kind))&&(n?t(i,"redeclarationOfReadonlyGlobal"):t(i,"globalLexicalBinding","ClassName"===e.type?"class":"'".concat(e.parent.kind,"'")));}));})),n.implicit.variables.forEach((function(e){var r,i=n.set.get(e.name);if(i){if(i.writeable)return;r="assignmentToReadonlyGlobal";}else r="globalVariableLeak";e.defs.forEach((function(e){t(e.node,r);}));}));}}}},"no-implied-eval":{meta:{type:"suggestion",docs:{description:"disallow the use of `eval()`-like methods",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-implied-eval"},schema:[]},create:function(e){function t(e){return e?e[e.length-1]:null}function r(e){var t="MemberExpression"===e.callee.type;return ("Identifier"===e.callee.type&&a.test(e.callee.name)||t&&function(e){var t=e.object,r=e.property,n=a.test(r.name)||a.test(r.value);return "window"===t.name&&n}(e.callee))&&e.arguments.length}function n(e){return e.parent===t(t(o))&&("CallExpression"!==e.parent.type||e===e.parent.arguments[0])}function i(t){if(n(t)){var r=o.pop();e.report({node:r[0],message:"Implied eval. Consider passing a function instead of a string."});}}var a=/^(setTimeout|setInterval|execScript)$/,o=[];return {CallExpression:function(e){r(e)&&o.push([e]);},"CallExpression:exit":function(e){e===t(t(o))&&o.pop();},BinaryExpression:function(e){"+"===e.operator&&n(e)&&t(o).push(e);},"BinaryExpression:exit":function(e){e===t(t(o))&&t(o).pop();},Literal:function(e){"string"==typeof e.value&&i(e);},TemplateLiteral:function(e){i(e);}}}},"no-import-assign":EP,"no-inline-comments":CP,"no-inner-declarations":{meta:{type:"problem",docs:{description:"disallow variable or `function` declarations in nested blocks",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-inner-declarations"},schema:[{enum:["functions","both"]}]},create:function(e){function t(t){var r=function(){for(var t=e.getAncestors(),r=t.pop(),n=1;r&&0>["Program","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression"].indexOf(r.type);)n+=1,r=t.pop();return {type:r.type,distance:n}}();"Program"===r.type&&1===r.distance||2===r.distance||e.report({node:t,message:"Move {{type}} declaration to {{body}} root.",data:{type:"FunctionDeclaration"===t.type?"function":"variable",body:"Program"===r.type?"program":"function body"}});}return {FunctionDeclaration:t,VariableDeclaration:function(r){"both"===e.options[0]&&"var"===r.kind&&t(r);}}}},"no-invalid-regexp":FP,"no-invalid-this":AP,"no-irregular-whitespace":IP,"no-iterator":{meta:{type:"suggestion",docs:{description:"disallow the use of the `__iterator__` property",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-iterator"},schema:[]},create:function(e){return {MemberExpression:function(t){(t.property&&"Identifier"===t.property.type&&"__iterator__"===t.property.name&&!t.computed||"Literal"===t.property.type&&"__iterator__"===t.property.value)&&e.report({node:t,message:"Reserved name '__iterator__'."});}}}},"no-label-var":BP,"no-labels":OP,"no-lone-blocks":{meta:{type:"suggestion",docs:{description:"disallow unnecessary nested blocks",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-lone-blocks"},schema:[]},create:function(e){function t(t){var r="BlockStatement"===t.parent.type?"Nested block is redundant.":"Block is redundant.";e.report({node:t,message:r});}function r(e){return "BlockStatement"===e.parent.type||"Program"===e.parent.type||"SwitchCase"===e.parent.type&&(e.parent.consequent[0]!==e||1!==e.parent.consequent.length)}function n(){if(0!==a.length){var t=e.getAncestors().pop();a[a.length-1]===t&&a.pop();}}var i,a=[];return i={BlockStatement:function(e){r(e)&&t(e);}},6<=e.parserOptions.ecmaVersion&&((i={BlockStatement:function(e){r(e)&&a.push(e);},"BlockStatement:exit":function(e){0<a.length&&a[a.length-1]===e?(a.pop(),t(e)):"BlockStatement"===e.parent.type&&1===e.parent.body.length&&t(e);}}).VariableDeclaration=function(e){("let"===e.kind||"const"===e.kind)&&n();},i.FunctionDeclaration=function(){e.getScope().isStrict&&n();},i.ClassDeclaration=n),i}},"no-lonely-if":{meta:{type:"suggestion",docs:{description:"disallow `if` statements as the only statement in `else` blocks",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-lonely-if"},schema:[],fixable:"code"},create:function(e){var t=e.getSourceCode();return {IfStatement:function(r){var n=e.getAncestors(),i=n.pop(),a=n.pop();i&&"BlockStatement"===i.type&&1===i.body.length&&a&&"IfStatement"===a.type&&i===a.alternate&&e.report({node:r,message:"Unexpected if as the only statement in an else block.",fix:function(e){var n=t.getFirstToken(i),a=t.getLastToken(i),o=t.getTokenBefore(n),s=t.getTokenAfter(a),u=t.getLastToken(r.consequent),c=t.getText();return c.slice(n.range[1],r.range[0]).trim()||c.slice(r.range[1],a.range[0]).trim()?null:"BlockStatement"!==r.consequent.type&&";"!==u.value&&s&&(r.consequent.loc.end.line===s.loc.start.line||/^[\(\+\x2D\/\[`]/.test(s.value)||"++"===u.value||"--"===u.value)?null:e.replaceTextRange([n.range[0],a.range[1]],(o.range[1]===n.range[0]?" ":"")+t.getText(r))}});}}}},"no-loop-func":jP,"no-magic-numbers":{meta:{type:"suggestion",docs:{description:"disallow magic numbers",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-magic-numbers"},schema:[{type:"object",properties:{detectObjects:{type:"boolean",default:!1},enforceConst:{type:"boolean",default:!1},ignore:{type:"array",items:{type:"number"},uniqueItems:!0},ignoreArrayIndexes:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{useConst:"Number constants declarations must use 'const'.",noMagic:"No magic number: {{raw}}."}},create:function(e){function t(e){return -1!==o.indexOf(e)}function r(e){return "MemberExpression"===e.type&&s}var n=e.options[0]||{},i=!!n.detectObjects,a=!!n.enforceConst,o=n.ignore||[],s=!!n.ignoreArrayIndexes;return {Literal:function(n){var o,s,u,c,l=i?[]:["ObjectExpression","Property","AssignmentExpression"];(function(e){return "number"==typeof e.value})(n)&&("UnaryExpression"===n.parent.type&&"-"===n.parent.operator?(s=(o=n.parent).parent,u=-n.value,c="-".concat(n.raw)):(o=n,s=n.parent,u=n.value,c=n.raw),t(u)||function(e,t){return "CallExpression"===e.type&&t===e.arguments[1]&&("parseInt"===e.callee.name||"MemberExpression"===e.callee.type&&"Number"===e.callee.object.name&&"parseInt"===e.callee.property.name)}(s,o)||r(s)||function(e){return 0===e.type.indexOf("JSX")}(s)||("VariableDeclarator"===s.type?a&&"const"!==s.parent.kind&&e.report({node:o,messageId:"useConst"}):(-1===l.indexOf(s.type)||"AssignmentExpression"===s.type&&"Identifier"===s.left.type)&&e.report({node:o,messageId:"noMagic",data:{raw:c}})));}}}},"no-misleading-character-class":nI,"no-mixed-operators":hI,"no-mixed-requires":dI,"no-mixed-spaces-and-tabs":{meta:{type:"layout",docs:{description:"disallow mixed spaces and tabs for indentation",category:"Stylistic Issues",recommended:!0,url:"https://eslint.org/docs/rules/no-mixed-spaces-and-tabs"},schema:[{enum:["smart-tabs",!0,!1]}]},create:function(e){function t(e,t,r){return !!(t<e.start.line)||t===e.start.line&&r<e.start.column}function r(e,t,r){return !!(t>e.end.line)||t===e.end.line&&r>e.end.column}var n,i=e.getSourceCode(),a=[];switch(e.options[0]){case!0:case"smart-tabs":n=!0;break;default:n=!1;}return {TemplateElement:function(e){a.push(e.loc);},"Program:exit":function(o){var s=/^(?=[\t ]*(\t | \t))/,u=i.lines;i.getAllComments().forEach((function(e){a.push(e.loc);})),a.sort((function(e,r){return t(e,r.start.line,r.start.column)?1:t(r,e.start.line,r.start.column)?-1:0})),n&&(s=/^(?=[\t ]* \t)/),u.forEach((function(n,i){var u=s.exec(n);if(u){for(var c=i+1,l=u.index+1,p=0;p<a.length;p++)if(!t(a[p],c,l)&&!r(a[p],c,l))return;e.report({node:o,loc:{line:c,column:l},message:"Mixed spaces and tabs."});}}));}}}},"no-multi-assign":{meta:{type:"suggestion",docs:{description:"disallow use of chained assignment expressions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-multi-assign"},schema:[]},create:function(e){return {AssignmentExpression:function(t){-1!==["AssignmentExpression","VariableDeclarator"].indexOf(t.parent.type)&&e.report({node:t,message:"Unexpected chained assignment."});}}}},"no-multi-spaces":mI,"no-multi-str":gI,"no-multiple-empty-lines":yI,"no-native-reassign":{meta:{type:"suggestion",docs:{description:"disallow assignments to native objects or read-only global variables",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-native-reassign"},deprecated:!0,replacedBy:["no-global-assign"],schema:[{type:"object",properties:{exceptions:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1}]},create:function(e){function t(t,r,n){var i=t.identifier;!1===t.init&&t.isWrite()&&(0===r||n[r-1].identifier!==i)&&e.report({node:i,message:"Read-only global '{{name}}' should not be modified.",data:i});}function r(e){!1===e.writeable&&-1===i.indexOf(e.name)&&e.references.forEach(t);}var n=e.options[0],i=n&&n.exceptions||[];return {Program:function(){e.getScope().variables.forEach(r);}}}},"no-negated-condition":{meta:{type:"suggestion",docs:{description:"disallow negated conditions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-negated-condition"},schema:[]},create:function(e){function t(e){return function(e){return "UnaryExpression"===e.type&&"!"===e.operator}(e.test)||function(e){return "BinaryExpression"===e.type&&("!="===e.operator||"!=="===e.operator)}(e.test)}return {IfStatement:function(r){!function(e){return e.alternate&&"IfStatement"!==e.alternate.type}(r)||t(r)&&e.report({node:r,message:"Unexpected negated condition."});},ConditionalExpression:function(r){t(r)&&e.report({node:r,message:"Unexpected negated condition."});}}}},"no-negated-in-lhs":{meta:{type:"problem",docs:{description:"disallow negating the left operand in `in` expressions",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-negated-in-lhs"},replacedBy:["no-unsafe-negation"],deprecated:!0,schema:[]},create:function(e){return {BinaryExpression:function(t){"in"===t.operator&&"UnaryExpression"===t.left.type&&"!"===t.left.operator&&e.report({node:t,message:"The 'in' expression's left operand is negated."});}}}},"no-nested-ternary":{meta:{type:"suggestion",docs:{description:"disallow nested ternary expressions",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-nested-ternary"},schema:[]},create:function(e){return {ConditionalExpression:function(t){("ConditionalExpression"===t.alternate.type||"ConditionalExpression"===t.consequent.type)&&e.report({node:t,message:"Do not nest ternary expressions."});}}}},"no-new-func":{meta:{type:"suggestion",docs:{description:"disallow `new` operators with the `Function` object",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-new-func"},schema:[]},create:function(e){function t(t){e.report({node:t,message:"The Function constructor is eval."});}return {"NewExpression[callee.name = 'Function']":t,"CallExpression[callee.name = 'Function']":t}}},"no-new-object":{meta:{type:"suggestion",docs:{description:"disallow `Object` constructors",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-new-object"},schema:[]},create:function(e){return {NewExpression:function(t){"Object"===t.callee.name&&e.report({node:t,message:"The object literal notation {} is preferrable."});}}}},"no-new-require":{meta:{type:"suggestion",docs:{description:"disallow `new` operators with calls to `require`",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-new-require"},schema:[]},create:function(e){return {NewExpression:function(t){"Identifier"===t.callee.type&&"require"===t.callee.name&&e.report({node:t,message:"Unexpected use of new with require."});}}}},"no-new-symbol":{meta:{type:"problem",docs:{description:"disallow `new` operators with the `Symbol` object",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/no-new-symbol"},schema:[]},create:function(e){return {"Program:exit":function(){var t=e.getScope().set.get("Symbol");t&&0===t.defs.length&&t.references.forEach((function(t){var r=t.identifier;r.parent&&"NewExpression"===r.parent.type&&e.report({node:r,message:"`Symbol` cannot be called as a constructor."});}));}}}},"no-new-wrappers":{meta:{type:"suggestion",docs:{description:"disallow `new` operators with the `String`, `Number`, and `Boolean` objects",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-new-wrappers"},schema:[]},create:function(e){return {NewExpression:function(t){-1<["String","Number","Boolean","Math","JSON"].indexOf(t.callee.name)&&e.report({node:t,message:"Do not use {{fn}} as a constructor.",data:{fn:t.callee.name}});}}}},"no-new":{meta:{type:"suggestion",docs:{description:"disallow `new` operators outside of assignments or comparisons",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-new"},schema:[]},create:function(e){return {"ExpressionStatement > NewExpression":function(t){e.report({node:t.parent,message:"Do not use 'new' for side effects."});}}}},"no-obj-calls":CI,"no-octal-escape":{meta:{type:"suggestion",docs:{description:"disallow octal escape sequences in string literals",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-octal-escape"},schema:[],messages:{octalEscapeSequence:"Don't use octal: '\\{{sequence}}'. Use '\\u....' instead."}},create:function(e){return {Literal:function(t){if("string"==typeof t.value){var r=t.raw.match(/^(?:(?:[\0-\[\]-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|\\(?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))*?\\([0-3][0-7]{1,2}|[4-7][0-7]|0(?=[89])|[1-7])/);r&&e.report({node:t,messageId:"octalEscapeSequence",data:{sequence:r[1]}});}}}}},"no-octal":{meta:{type:"suggestion",docs:{description:"disallow octal literals",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-octal"},schema:[]},create:function(e){return {Literal:function(t){"number"==typeof t.value&&/^0[0-9]/.test(t.raw)&&e.report({node:t,message:"Octal literals should not be used."});}}}},"no-param-reassign":kI,"no-path-concat":{meta:{type:"suggestion",docs:{description:"disallow string concatenation with `__dirname` and `__filename`",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-path-concat"},schema:[]},create:function(e){var t=/^__(?:dir|file)name$/;return {BinaryExpression:function(r){var n=r.left,i=r.right;"+"===r.operator&&("Identifier"===n.type&&t.test(n.name)||"Identifier"===i.type&&t.test(i.name))&&e.report({node:r,message:"Use path.join() or path.resolve() instead of + to create paths."});}}}},"no-plusplus":DI,"no-process-env":{meta:{type:"suggestion",docs:{description:"disallow the use of `process.env`",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-process-env"},schema:[]},create:function(e){return {MemberExpression:function(t){var r=t.object.name,n=t.property.name;"process"===r&&!t.computed&&n&&"env"===n&&e.report({node:t,message:"Unexpected use of process.env."});}}}},"no-process-exit":{meta:{type:"suggestion",docs:{description:"disallow the use of `process.exit()`",category:"Node.js and CommonJS",recommended:!1,url:"https://eslint.org/docs/rules/no-process-exit"},schema:[]},create:function(e){return {"CallExpression > MemberExpression.callee[object.name = 'process'][property.name = 'exit']":function(t){e.report({node:t.parent,message:"Don't use process.exit(); throw an error instead."});}}}},"no-proto":{meta:{type:"suggestion",docs:{description:"disallow the use of the `__proto__` property",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-proto"},schema:[]},create:function(e){return {MemberExpression:function(t){(t.property&&"Identifier"===t.property.type&&"__proto__"===t.property.name&&!t.computed||"Literal"===t.property.type&&"__proto__"===t.property.value)&&e.report({node:t,message:"The '__proto__' property is deprecated."});}}}},"no-prototype-builtins":{meta:{type:"problem",docs:{description:"disallow calling some `Object.prototype` methods directly on objects",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-prototype-builtins"},schema:[]},create:function(e){var t=["hasOwnProperty","isPrototypeOf","propertyIsEnumerable"];return {CallExpression:function(r){if("MemberExpression"===r.callee.type&&!r.callee.computed){var n=r.callee.property.name;-1<t.indexOf(n)&&e.report({message:"Do not access Object.prototype method '{{prop}}' from target object.",loc:r.callee.property.loc.start,data:{prop:n},node:r});}}}}},"no-redeclare":FI,"no-regex-spaces":TI,"no-restricted-globals":BI,"no-restricted-imports":LI,"no-restricted-modules":MI,"no-restricted-properties":VI,"no-restricted-syntax":UI,"no-return-assign":WI,"no-return-await":GI,"no-script-url":{meta:{type:"suggestion",docs:{description:"disallow `javascript:` urls",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-script-url"},schema:[]},create:function(e){return {Literal:function(t){t.value&&"string"==typeof t.value&&(0===t.value.toLowerCase().indexOf("javascript:")&&e.report({node:t,message:"Script URL is a form of eval."}));}}}},"no-self-assign":KI,"no-self-compare":JI,"no-sequences":QI,"no-setter-return":eB,"no-shadow-restricted-names":rB,"no-shadow":nB,"no-spaced-func":{meta:{type:"layout",docs:{description:"disallow spacing between function identifiers and their applications (deprecated)",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-spaced-func"},deprecated:!0,replacedBy:["func-call-spacing"],fixable:"whitespace",schema:[]},create:function(e){function t(t){for(var n=r.getLastToken(t.callee),i=n,a=r.getTokenAfter(n);a&&a.range[1]<t.range[1]&&"("!==a.value;)i=a,a=r.getTokenAfter(a);a&&a.range[1]<t.range[1]&&r.isSpaceBetweenTokens(i,a)&&e.report({node:t,loc:n.loc.start,message:"Unexpected space between function name and paren.",fix:function(e){return e.removeRange([i.range[1],a.range[0]])}});}var r=e.getSourceCode();return {CallExpression:t,NewExpression:t}}},"no-sparse-arrays":{meta:{type:"problem",docs:{description:"disallow sparse arrays",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/no-sparse-arrays"},schema:[]},create:function(e){return {ArrayExpression:function(t){-1<t.elements.indexOf(null)&&e.report({node:t,message:"Unexpected comma in middle of array."});}}}},"no-sync":iB,"no-tabs":sB,"no-template-curly-in-string":{meta:{type:"problem",docs:{description:"disallow template literal placeholder syntax in regular strings",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/no-template-curly-in-string"},schema:[]},create:function(e){var t=/\$\{(?:[\0-\|~-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+\}/;return {Literal:function(r){"string"==typeof r.value&&t.test(r.value)&&e.report({node:r,message:"Unexpected template string expression."});}}}},"no-ternary":{meta:{type:"suggestion",docs:{description:"disallow ternary operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-ternary"},schema:[]},create:function(e){return {ConditionalExpression:function(t){e.report({node:t,message:"Ternary operator used."});}}}},"no-this-before-super":uB,"no-throw-literal":cB,"no-trailing-spaces":lB,"no-undef-init":pB,"no-undef":fB,"no-undefined":hB,"no-underscore-dangle":{meta:{type:"suggestion",docs:{description:"disallow dangling underscores in identifiers",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/no-underscore-dangle"},schema:[{type:"object",properties:{allow:{type:"array",items:{type:"string"}},allowAfterThis:{type:"boolean",default:!1},allowAfterSuper:{type:"boolean",default:!1},allowAfterThisConstructor:{type:"boolean",default:!1},enforceInMethodNames:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e){return a.some((function(t){return t===e}))}function r(e){var t=e.length;return "_"!==e&&("_"===e[0]||"_"===e[t-1])}function n(t){var n=t.key.name,i="MethodDefinition"===t.type||"Property"===t.type&&t.method;void 0!==n&&c&&i&&r(n)&&e.report({node:t,message:"Unexpected dangling '_' in '{{identifier}}'.",data:{identifier:n}});}var i=e.options[0]||{},a=i.allow?i.allow:[],o=void 0!==i.allowAfterThis&&i.allowAfterThis,s=void 0!==i.allowAfterSuper&&i.allowAfterSuper,u=void 0!==i.allowAfterThisConstructor&&i.allowAfterThisConstructor,c=void 0!==i.enforceInMethodNames&&i.enforceInMethodNames;return {FunctionDeclaration:function(n){if(n.id){var i=n.id.name;void 0!==i&&r(i)&&!t(i)&&e.report({node:n,message:"Unexpected dangling '_' in '{{identifier}}'.",data:{identifier:i}});}},VariableDeclarator:function(n){var i=n.id.name;void 0===i||!r(i)||function(e){return "_"===e}(i)||t(i)||e.report({node:n,message:"Unexpected dangling '_' in '{{identifier}}'.",data:{identifier:i}});},MemberExpression:function(n){var i=n.property.name,a="ThisExpression"===n.object.type,c="Super"===n.object.type,l=function(e){return "MemberExpression"===e.object.type&&"constructor"===e.object.property.name&&"ThisExpression"===e.object.object.type}(n);void 0===i||!r(i)||a&&o||c&&s||l&&u||function(e){return "__proto__"===e}(i)||t(i)||e.report({node:n,message:"Unexpected dangling '_' in '{{identifier}}'.",data:{identifier:i}});},MethodDefinition:n,Property:n}}},"no-unexpected-multiline":dB,"no-unmodified-loop-condition":FB,"no-unneeded-ternary":TB,"no-unreachable":OB,"no-unsafe-finally":RB,"no-unsafe-negation":MB,"no-unused-expressions":{meta:{type:"suggestion",docs:{description:"disallow unused expressions",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-unused-expressions"},schema:[{type:"object",properties:{allowShortCircuit:{type:"boolean",default:!1},allowTernary:{type:"boolean",default:!1},allowTaggedTemplates:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e){return "ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value}function r(e){return function(e,t){for(var r=0;r<t.length;++r)if(!e(t[r]))return t.slice(0,r);return t.slice()}(t,e.body)}var n=e.options[0]||{},i=n.allowShortCircuit||!1,a=n.allowTernary||!1,o=n.allowTaggedTemplates||!1;return {ExpressionStatement:function(t){(function e(t){return a&&"ConditionalExpression"===t.type?e(t.consequent)&&e(t.alternate):i&&"LogicalExpression"===t.type?e(t.right):!(!o||"TaggedTemplateExpression"!==t.type)||/^(?:Assignment|Call|New|Update|Yield|Await)Expression$/.test(t.type)||"UnaryExpression"===t.type&&0<=["delete","void"].indexOf(t.operator)})(t.expression)||function(e,t){var n=t[t.length-1],i=t[t.length-2];return ("Program"===n.type||"BlockStatement"===n.type&&/Function/.test(i.type))&&0<=r(n).indexOf(e)}(t,e.getAncestors())||e.report({node:t,message:"Expected an assignment or function call and instead saw an expression."});}}}},"no-unused-labels":{meta:{type:"suggestion",docs:{description:"disallow unused labels",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-unused-labels"},schema:[],fixable:"code",messages:{unused:"'{{name}}:' is defined but never used."}},create:function(e){function t(e){if(e.label)for(var t=e.label.name,r=n;r;){if(r.label===t){r.used=!0;break}r=r.upper;}}var r=e.getSourceCode(),n=null;return {LabeledStatement:function(e){n={label:e.label.name,used:!1,upper:n};},"LabeledStatement:exit":function(t){n.used||e.report({node:t.label,messageId:"unused",data:t.label,fix:function(e){return r.getTokenAfter(t.label,{includeComments:!0})===r.getTokenBefore(t.body,{includeComments:!0})?e.removeRange([t.range[0],t.body.range[0]]):null}}),n=n.upper;},BreakStatement:t,ContinueStatement:t}}},"no-unused-vars":VB,"no-use-before-define":$B,"no-useless-call":GB,"no-useless-catch":{meta:{type:"suggestion",docs:{description:"disallow unnecessary `catch` clauses",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-useless-catch"},schema:[]},create:function(e){return {CatchClause:function(t){t.param&&"Identifier"===t.param.type&&t.body.body.length&&"ThrowStatement"===t.body.body[0].type&&"Identifier"===t.body.body[0].argument.type&&t.body.body[0].argument.name===t.param.name&&(t.parent.finalizer?e.report({node:t,message:"Unnecessary catch clause."}):e.report({node:t.parent,message:"Unnecessary try/catch wrapper."}));}}}},"no-useless-computed-key":HB,"no-useless-concat":QB,"no-useless-constructor":tO,"no-useless-escape":oO,"no-useless-rename":sO,"no-useless-return":cO,"no-var":yO,"no-void":{meta:{type:"suggestion",docs:{description:"disallow `void` operators",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/no-void"},schema:[]},create:function(e){return {UnaryExpression:function(t){"void"===t.operator&&e.report({node:t,message:"Expected 'undefined' and instead saw 'void'."});}}}},"no-warning-comments":xO,"no-whitespace-before-property":bO,"no-with":{meta:{type:"suggestion",docs:{description:"disallow `with` statements",category:"Best Practices",recommended:!0,url:"https://eslint.org/docs/rules/no-with"},schema:[]},create:function(e){return {WithStatement:function(t){e.report({node:t,message:"Unexpected use of 'with' statement."});}}}},"nonblock-statement-body-position":CO,"object-curly-newline":DO,"object-curly-spacing":FO,"object-property-newline":{meta:{type:"layout",docs:{description:"enforce placing object properties on separate lines",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/object-property-newline"},schema:[{type:"object",properties:{allowAllPropertiesOnSameLine:{type:"boolean",default:!1},allowMultiplePropertiesPerLine:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"whitespace"},create:function(e){var t=e.options[0]&&(e.options[0].allowAllPropertiesOnSameLine||e.options[0].allowMultiplePropertiesPerLine),r=t?"Object properties must go on a new line if they aren't all on the same line.":"Object properties must go on a new line.",n=e.getSourceCode();return {ObjectExpression:function(i){if(t&&1<i.properties.length){var a=n.getFirstToken(i.properties[0]),o=n.getLastToken(i.properties[i.properties.length-1]);if(a.loc.end.line===o.loc.start.line)return}for(var s=function(t){var a=n.getLastToken(i.properties[t-1]),o=n.getFirstToken(i.properties[t]);a.loc.end.line===o.loc.start.line&&e.report({node:i,loc:o.loc.start,message:r,fix:function(e){var t=[n.getTokenBefore(o).range[1],o.range[0]];return n.text.slice(t[0],t[1]).trim()?null:e.replaceTextRange(t,"\n")}});},u=1;u<i.properties.length;u++)s(u);}}}},"object-shorthand":BO,"one-var-declaration-per-line":{meta:{type:"suggestion",docs:{description:"require or disallow newlines around variable declarations",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/one-var-declaration-per-line"},schema:[{enum:["always","initializations"]}],fixable:"whitespace"},create:function(e){var t="always"===e.options[0];return {VariableDeclaration:function(r){var n;(function(e){return "ForStatement"===e||"ForInStatement"===e||"ForOfStatement"===e})(r.parent.type)||r.declarations.forEach((function(i){n&&n.loc.end.line===i.loc.start.line&&(t||n.init||i.init)&&e.report({node:r,message:"Expected variable declaration to be on a new line.",loc:i.loc.start,fix:function(e){return e.insertTextBefore(i,"\n")}}),n=i;}));}}}},"one-var":OO,"operator-assignment":RO,"operator-linebreak":MO,"padded-blocks":VO,"padding-line-between-statements":rL,"prefer-arrow-callback":nL,"prefer-const":pL,"prefer-destructuring":fL,"prefer-exponentiation-operator":vL,"prefer-named-capture-group":DL,"prefer-numeric-literals":FL,"prefer-object-spread":qL,"prefer-promise-reject-errors":WL,"prefer-reflect":$L,"prefer-regex-literals":XL,"prefer-rest-params":ZL,"prefer-spread":eN,"prefer-template":oN,"quote-props":sN,quotes:lN,radix:dN,"require-atomic-updates":yN,"require-await":xN,"require-jsdoc":bN,"require-unicode-regexp":FN,"require-yield":{meta:{type:"suggestion",docs:{description:"require generator functions to contain `yield`",category:"ECMAScript 6",recommended:!0,url:"https://eslint.org/docs/rules/require-yield"},schema:[]},create:function(e){function t(e){e.generator&&n.push(0);}function r(t){t.generator&&(0===n.pop()&&0<t.body.body.length&&e.report({node:t,message:"This generator function does not have 'yield'."}));}var n=[];return {FunctionDeclaration:t,"FunctionDeclaration:exit":r,FunctionExpression:t,"FunctionExpression:exit":r,YieldExpression:function(){0<n.length&&(n[n.length-1]+=1);}}}},"rest-spread-spacing":{meta:{type:"layout",docs:{description:"enforce spacing between rest and spread operators and their expressions",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/rest-spread-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]}]},create:function(e){function t(t){var i,a=r.getFirstToken(t),o=r.getTokenAfter(a),s=r.isSpaceBetweenTokens(a,o);switch(t.type){case"SpreadElement":i="spread","ObjectExpression"===t.parent.type&&(i+=" property");break;case"RestElement":i="rest","ObjectPattern"===t.parent.type&&(i+=" property");break;case"ExperimentalSpreadProperty":i="spread property";break;case"ExperimentalRestProperty":i="rest property";break;default:return}n&&!s?e.report({node:t,loc:{line:a.loc.end.line,column:a.loc.end.column},message:"Expected whitespace after {{type}} operator.",data:{type:i},fix:function(e){return e.replaceTextRange([a.range[1],o.range[0]]," ")}}):!n&&s&&e.report({node:t,loc:{line:a.loc.end.line,column:a.loc.end.column},message:"Unexpected whitespace after {{type}} operator.",data:{type:i},fix:function(e){return e.removeRange([a.range[1],o.range[0]])}});}var r=e.getSourceCode(),n="always"===e.options[0];return {SpreadElement:t,RestElement:t,ExperimentalSpreadProperty:t,ExperimentalRestProperty:t}}},"semi-spacing":AN,"semi-style":{meta:{type:"layout",docs:{description:"enforce location of semicolons",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/semi-style"},schema:[{enum:["last","first"]}],fixable:"whitespace"},create:function(e){var t;function r(t,r){var i=n.getTokenBefore(t),a=n.getTokenAfter(t),o=!i||LA.isTokenOnSameLine(i,t),s=!a||LA.isTokenOnSameLine(t,a);("last"!==r||o)&&("first"!==r||s)||e.report({loc:t.loc,message:"Expected this semicolon to be at {{pos}}.",data:{pos:"last"===r?"the end of the previous line":"the beginning of the next line"},fix:function(e){if(i&&a&&n.commentsExistBetween(i,a))return null;var o=i?i.range[1]:t.range[0],s=a?a.range[0]:t.range[1],u="last"===r?";\n":"\n;";return e.replaceTextRange([o,s],u)}});}var n=e.getSourceCode(),i=e.options[0]||"last";return u(t={},wN,(function(e){if("first"!==i||!function(e){var t=e.parent.type;if("IfStatement"===t&&e.parent.consequent===e&&e.parent.alternate)return !0;if("DoWhileStatement"===t)return !0;var r=function(e){var t=e.type;return "BlockStatement"===t||"Program"===t?e.body:"SwitchCase"===t?e.consequent:null}(e.parent);return null!==r&&r[r.length-1]===e}(e)){var t=n.getLastToken(e);LA.isSemicolonToken(t)&&r(t,i);}})),u(t,"ForStatement",(function(e){var t=e.init&&n.getTokenAfter(e.init,LA.isSemicolonToken),i=e.test&&n.getTokenAfter(e.test,LA.isSemicolonToken);t&&r(t,"last"),i&&r(i,"last");})),t}},semi:{meta:{type:"layout",docs:{description:"require or disallow semicolons instead of ASI",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/semi"},fixable:"code",schema:{anyOf:[{type:"array",items:[{enum:["never"]},{type:"object",properties:{beforeStatementContinuationChars:{enum:["always","any","never"]}},additionalProperties:!1}],minItems:0,maxItems:2},{type:"array",items:[{enum:["always"]},{type:"object",properties:{omitLastInOneLineBlock:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]}},create:function(e){function t(t,r){var n,i,a,o=p.getLastToken(t);r?(n="Extra semicolon.",a=o.loc,i=function(e){return new RT(e,p).retainSurroundingTokens(o).remove(o)}):(n="Missing semicolon.",a={start:o.loc.end,end:LA.getNextLocation(p,o.loc.end)},i=function(e){return e.insertTextAfter(o,";")}),e.report({node:t,loc:a,message:n,fix:i});}function r(e){var t=e.type;return "DoWhileStatement"!==t&&"BreakStatement"!==t&&"ContinueStatement"!==t&&"DebuggerStatement"!==t&&"ImportDeclaration"!==t&&"ExportAllDeclaration"!==t&&("ReturnStatement"===t?!!e.argument:"ExportNamedDeclaration"===t?!!e.declaration:!function(e){if(!LA.isClosingBraceToken(e))return !1;var t=p.getNodeByRangeIndex(e.range[0]);return "BlockStatement"===t.type&&"ArrowFunctionExpression"===t.parent.type}(p.getLastToken(e,1)))}function n(e){return !!e&&o.test(e.value)&&"++"!==e.value&&"--"!==e.value}function i(e){return !(!function(e){var t=p.getTokenAfter(e);return !t||LA.isClosingBraceToken(t)||LA.isSemicolonToken(t)}(p.getLastToken(e))&&(function(e){var t=p.getLastToken(e,1),r=p.getTokenAfter(e);return !!r&&LA.isTokenOnSameLine(t,r)}(e)||("never"!==l||r(e))&&n(p.getTokenAfter(e))))}function a(e){var r=LA.isSemicolonToken(p.getLastToken(e));if(u)r&&i(e)?t(e,!0):!r&&"always"===l&&n(p.getTokenAfter(e))&&t(e);else {var a=c&&function(e){var t=e.parent,r=p.getTokenAfter(e);return !(!r||"}"!==r.value||!t||"BlockStatement"!==t.type||t.loc.start.line!==t.loc.end.line)}(e);r&&a?t(e,!0):!r&&!a&&t(e);}}var o=/^[\(\+\x2D\/\[`]/,s=e.options[1],u="never"===e.options[0],c=!(!s||!s.omitLastInOneLineBlock),l=s&&s.beforeStatementContinuationChars||"any",p=e.getSourceCode();return {VariableDeclaration:function(e){var t=e.parent;"ForStatement"===t.type&&t.init===e||/^For(?:In|Of)Statement/.test(t.type)&&t.left===e||a(e);},ExpressionStatement:a,ReturnStatement:a,ThrowStatement:a,DoWhileStatement:a,DebuggerStatement:a,BreakStatement:a,ContinueStatement:a,ImportDeclaration:a,ExportAllDeclaration:a,ExportNamedDeclaration:function(e){e.declaration||a(e);},ExportDefaultDeclaration:function(e){/(?:Class|Function)Declaration/.test(e.declaration.type)||a(e);}}}},"sort-imports":{meta:{type:"suggestion",docs:{description:"enforce sorted import declarations within modules",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/sort-imports"},schema:[{type:"object",properties:{ignoreCase:{type:"boolean",default:!1},memberSyntaxSortOrder:{type:"array",items:{enum:["none","all","multiple","single"]},uniqueItems:!0,minItems:4,maxItems:4},ignoreDeclarationSort:{type:"boolean",default:!1},ignoreMemberSort:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code"},create:function(e){function t(e){return s.indexOf(function(e){return 0===e.specifiers.length?"none":"ImportNamespaceSpecifier"===e.specifiers[0].type?"all":1===e.specifiers.length?"single":"multiple"}(e))}function r(e){return e.specifiers[0]?e.specifiers[0].local.name:null}var n=e.options[0]||{},i=n.ignoreCase||!1,a=n.ignoreDeclarationSort||!1,o=n.ignoreMemberSort||!1,s=n.memberSyntaxSortOrder||["none","all","multiple","single"],u=e.getSourceCode(),c=null;return {ImportDeclaration:function(n){if(!a){if(c){var l=t(n),p=t(c),f=r(n),h=r(c);i&&(h=h&&h.toLowerCase(),f=f&&f.toLowerCase()),l===p?h&&f&&f<h&&e.report({node:n,message:"Imports should be sorted alphabetically."}):l<p&&e.report({node:n,message:"Expected '{{syntaxA}}' syntax before '{{syntaxB}}' syntax.",data:{syntaxA:s[l],syntaxB:s[p]}});}c=n;}if(!o){var d=n.specifiers.filter((function(e){return "ImportSpecifier"===e.type})),m=i?function(e){return e.local.name.toLowerCase()}:function(e){return e.local.name},g=d.map(m).findIndex((function(e,t,r){return r[t-1]>e}));-1!==g&&e.report({node:d[g],message:"Member '{{memberName}}' of the import declaration should be sorted alphabetically.",data:{memberName:d[g].local.name},fix:function(e){return d.some((function(e){return u.getCommentsBefore(e).length||u.getCommentsAfter(e).length}))?null:e.replaceTextRange([d[0].range[0],d[d.length-1].range[1]],d.slice().sort((function(e,t){return m(e)>m(t)?1:-1})).reduce((function(e,t,r){var n=r===d.length-1?"":u.getText().slice(d[r].range[1],d[r+1].range[0]);return e+u.getText(t)+n}),""))}});}}}}},"sort-keys":{meta:{type:"suggestion",docs:{description:"require object keys to be sorted",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/sort-keys"},schema:[{enum:["asc","desc"]},{type:"object",properties:{caseSensitive:{type:"boolean",default:!0},natural:{type:"boolean",default:!1},minKeys:{type:"integer",minimum:2,default:2}},additionalProperties:!1}]},create:function(e){var t=e.options[0]||"asc",r=e.options[1],n=r&&!1===r.caseSensitive,i=r&&r.natural,a=r&&r.minKeys,o=_N[t+(n?"I":"")+(i?"N":"")],s=null;return {ObjectExpression:function(e){s={upper:s,prevName:null,numKeys:e.properties.length};},"ObjectExpression:exit":function(){s=s.upper;},SpreadElement:function(e){"ObjectExpression"===e.parent.type&&(s.prevName=null);},Property:function(r){if("ObjectPattern"!==r.parent.type){var u=s.prevName,c=s.numKeys,l=function(e){var t=LA.getStaticPropertyName(e);return null===t?e.key.name||null:t}(r);null!==l&&(s.prevName=l),null===u||null===l||c<a||!o(u,l)&&e.report({node:r,loc:r.key.loc,message:"Expected object keys to be in {{natual}}{{insensitive}}{{order}}ending order. '{{thisName}}' should be before '{{prevName}}'.",data:{thisName:l,prevName:u,order:t,insensitive:n?"insensitive ":"",natual:i?"natural ":""}});}}}}},"sort-vars":{meta:{type:"suggestion",docs:{description:"require variables within the same declaration block to be sorted",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/sort-vars"},schema:[{type:"object",properties:{ignoreCase:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code"},create:function(e){var t=(e.options[0]||{}).ignoreCase||!1,r=e.getSourceCode();return {VariableDeclaration:function(n){var i=n.declarations.filter((function(e){return "Identifier"===e.id.type})),a=t?function(e){return e.id.name.toLowerCase()}:function(e){return e.id.name},o=i.some((function(e){return null!==e.init&&"Literal"!==e.init.type})),s=!1;i.slice(1).reduce((function(t,n){var u=a(t);return a(n)<u?(e.report({node:n,message:"Variables within the same declaration block should be sorted alphabetically.",fix:function(e){return o||s?null:e.replaceTextRange([i[0].range[0],i[i.length-1].range[1]],i.slice().sort((function(e,t){return a(e)>a(t)?1:-1})).reduce((function(e,t,n){var a=n===i.length-1?"":r.getText().slice(i[n].range[1],i[n+1].range[0]);return e+r.getText(t)+a}),""))}}),s=!0,t):n}),i[0]);}}}},"space-before-blocks":{meta:{type:"layout",docs:{description:"enforce consistent spacing before blocks",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/space-before-blocks"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never"]},{type:"object",properties:{keywords:{enum:["always","never","off"]},functions:{enum:["always","never","off"]},classes:{enum:["always","never","off"]}},additionalProperties:!1}]}]},create:function(e){function t(t){var r=n.getTokenBefore(t);if(r&&!function(e){return "Punctuator"===e.type&&"=>"===e.value||"Keyword"===e.type}(r)&&LA.isTokenOnSameLine(r,t)){var i,p,f=n.isSpaceBetweenTokens(r,t),h=e.getAncestors().pop();"FunctionExpression"===h.type||"FunctionDeclaration"===h.type?(i=a,p=u):"ClassBody"===t.type?(i=s,p=l):(i=o,p=c),i&&!f?e.report({node:t,message:"Missing space before opening brace.",fix:function(e){return e.insertTextBefore(t," ")}}):p&&f&&e.report({node:t,message:"Unexpected space before opening brace.",fix:function(e){return e.removeRange([r.range[1],t.range[0]])}});}}var r=e.options[0],n=e.getSourceCode(),a=!0,o=!0,s=!0,u=!1,c=!1,l=!1;return "object"==i(r)?(a="always"===r.functions,o="always"===r.keywords,s="always"===r.classes,u="never"===r.functions,c="never"===r.keywords,l="never"===r.classes):"never"===r&&(a=!1,o=!1,s=!1,u=!0,c=!0,l=!0),{BlockStatement:t,ClassBody:t,SwitchStatement:function(e){var r=e.cases;t(0<r.length?n.getTokenBefore(r[0]):n.getLastToken(e,1));}}}},"space-before-function-paren":{meta:{type:"layout",docs:{description:"enforce consistent spacing before `function` definition opening parenthesis",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/space-before-function-paren"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never"]},{type:"object",properties:{anonymous:{enum:["always","never","ignore"]},named:{enum:["always","never","ignore"]},asyncArrow:{enum:["always","never","ignore"]}},additionalProperties:!1}]}]},create:function(e){function t(e){if("ArrowFunctionExpression"!==e.type){if(function(e){if(e.id)return !0;var t=e.parent;return "MethodDefinition"===t.type||"Property"===t.type&&("get"===t.kind||"set"===t.kind||t.method)}(e))return o.named||a;if(!e.generator)return o.anonymous||a}else if(e.async&&LA.isOpeningParenToken(n.getFirstToken(e,{skip:1})))return o.asyncArrow||a;return "ignore"}function r(r){var i=t(r);if("ignore"!==i){var a=n.getFirstToken(r,LA.isOpeningParenToken),o=n.getTokenBefore(a),s=n.isSpaceBetweenTokens(o,a);s&&"never"===i?e.report({node:r,loc:o.loc.end,message:"Unexpected space before function parentheses.",fix:function(e){var t=n.getCommentsBefore(a);return t.some((function(e){return "Line"===e.type}))?null:e.replaceTextRange([o.range[1],a.range[0]],t.reduce((function(e,t){return e+n.getText(t)}),""))}}):!s&&"always"===i&&e.report({node:r,loc:o.loc.end,message:"Missing space before function parentheses.",fix:function(e){return e.insertTextAfter(o," ")}});}}var n=e.getSourceCode(),a="string"==typeof e.options[0]?e.options[0]:"always",o="object"==i(e.options[0])?e.options[0]:{};return {ArrowFunctionExpression:r,FunctionDeclaration:r,FunctionExpression:r}}},"space-in-parens":{meta:{type:"layout",docs:{description:"enforce consistent spacing inside parentheses",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/space-in-parens"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{exceptions:{type:"array",items:{enum:["{}","[]","()","empty"]},uniqueItems:!0}},additionalProperties:!1}],messages:{missingOpeningSpace:"There must be a space after this paren.",missingClosingSpace:"There must be a space before this paren.",rejectedOpeningSpace:"There should be no space after this paren.",rejectedClosingSpace:"There should be no space before this paren."}},create:function(e){function t(e){return s.openers.includes(e.value)}function r(e){return s.closers.includes(e.value)}function n(e,r){return !p.isSpaceBetweenTokens(e,r)&&(l.empty||!LA.isClosingParenToken(r))&&(u?!t(r):t(r))}function i(e,r){return !!LA.isTokenOnSameLine(e,r)&&"Line"!==r.type&&!!p.isSpaceBetweenTokens(e,r)&&(u?t(r):!t(r))}function a(e,t){return !p.isSpaceBetweenTokens(e,t)&&(l.empty||!LA.isOpeningParenToken(e))&&(u?!r(e):r(e))}function o(e,t){return !!LA.isTokenOnSameLine(e,t)&&!!p.isSpaceBetweenTokens(e,t)&&(u?r(e):!r(e))}var s,u="always"===e.options[0],c=e.options[1]&&e.options[1].exceptions||[],l={};c.length&&(l.braceException=c.includes("{}"),l.bracketException=c.includes("[]"),l.parenException=c.includes("()"),l.empty=c.includes("empty"));var p=e.getSourceCode();return {Program:function(t){s=function(){var e=[],t=[];return l.braceException&&(e.push("{"),t.push("}")),l.bracketException&&(e.push("["),t.push("]")),l.parenException&&(e.push("("),t.push(")")),l.empty&&(e.push(")"),t.push("(")),{openers:e,closers:t}}();var r=p.tokensAndComments;r.forEach((function(s,u){var c=r[u-1],l=r[u+1];(LA.isOpeningParenToken(s)||LA.isClosingParenToken(s))&&("("===s.value&&n(s,l)&&e.report({node:t,loc:s.loc,messageId:"missingOpeningSpace",fix:function(e){return e.insertTextAfter(s," ")}}),"("===s.value&&i(s,l)&&e.report({node:t,loc:{start:s.loc.end,end:l.loc.start},messageId:"rejectedOpeningSpace",fix:function(e){return e.removeRange([s.range[1],l.range[0]])}}),")"===s.value&&a(c,s)&&e.report({node:t,loc:s.loc,messageId:"missingClosingSpace",fix:function(e){return e.insertTextBefore(s," ")}}),")"===s.value&&o(c,s)&&e.report({node:t,loc:{start:c.loc.end,end:s.loc.start},messageId:"rejectedClosingSpace",fix:function(e){return e.removeRange([c.range[1],s.range[0]])}}));}));}}}},"space-infix-ops":{meta:{type:"layout",docs:{description:"require spacing around infix operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/space-infix-ops"},fixable:"whitespace",schema:[{type:"object",properties:{int32Hint:{type:"boolean",default:!1}},additionalProperties:!1}]},create:function(e){function t(e,t,r){var n=a.getFirstTokenBetween(e,t,(function(e){return e.value===r})),i=a.getTokenBefore(n),o=a.getTokenAfter(n);return a.isSpaceBetweenTokens(i,n)&&a.isSpaceBetweenTokens(n,o)?null:n}function r(t,r){e.report({node:t,loc:r.loc,message:"Operator '{{operator}}' must be spaced.",data:{operator:r.value},fix:function(e){var t=a.getTokenBefore(r),n=a.getTokenAfter(r),i="";return 0==r.range[0]-t.range[1]&&(i=" "),i+=r.value,0==n.range[0]-r.range[1]&&(i+=" "),e.replaceText(r,i)}});}function n(e){var n=t(e.left.typeAnnotation?e.left.typeAnnotation:e.left,e.right,e.operator||"=");n&&(!i||!a.getText(e).endsWith("|0"))&&r(e,n);}var i=!!e.options[0]&&!0===e.options[0].int32Hint,a=e.getSourceCode();return {AssignmentExpression:n,AssignmentPattern:n,BinaryExpression:n,LogicalExpression:n,ConditionalExpression:function(e){var n=t(e.test,e.consequent,"?"),i=t(e.consequent,e.alternate,":");n?r(e,n):i&&r(e,i);},VariableDeclarator:function(e){var n=e.id.typeAnnotation?e.id.typeAnnotation:e.id,i=e.init;if(i){var a=t(n,i,"=");a&&r(e,a);}}}}},"space-unary-ops":{meta:{type:"layout",docs:{description:"enforce consistent spacing before or after unary operators",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/space-unary-ops"},fixable:"whitespace",schema:[{type:"object",properties:{words:{type:"boolean",default:!0},nonwords:{type:"boolean",default:!1},overrides:{type:"object",additionalProperties:{type:"boolean"}}},additionalProperties:!1}],messages:{unexpectedBefore:"Unexpected space before unary operator '{{operator}}'.",unexpectedAfter:"Unexpected space after unary operator '{{operator}}'.",unexpectedAfterWord:"Unexpected space after unary word operator '{{word}}'.",wordOperator:"Unary word operator '{{word}}' must be followed by whitespace.",operator:"Unary operator '{{operator}}' must be followed by whitespace.",beforeUnaryExpressions:"Space is required before unary expressions '{{token}}'."}},create:function(e){function t(e){return c.overrides&&Object.prototype.hasOwnProperty.call(c.overrides,e)}function r(e){return c.overrides[e]}function n(t,r,n,i){n.range[0]===r.range[1]&&e.report({node:t,messageId:"wordOperator",data:{word:i},fix:function(e){return e.insertTextAfter(r," ")}});}function i(t,r,n,i){LA.canTokensBeAdjacent(r,n)&&n.range[0]>r.range[1]&&e.report({node:t,messageId:"unexpectedAfterWord",data:{word:i},fix:function(e){return e.removeRange([r.range[1],n.range[0]])}});}function a(e,a,o,s){t(s)?r(s)?n(e,a,o,s):i(e,a,o,s):c.words?n(e,a,o,s):i(e,a,o,s);}function o(t,r,n){if(t.prefix){if(function(e){return e&&"UnaryExpression"===e.type&&"!"===e.argument.operator&&e.argument&&"UnaryExpression"===e.argument.type&&"!"===e.argument.operator}(t))return;r.range[1]===n.range[0]&&e.report({node:t,messageId:"operator",data:{operator:r.value},fix:function(e){return e.insertTextAfter(r," ")}});}else r.range[1]===n.range[0]&&e.report({node:t,messageId:"beforeUnaryExpressions",data:{token:n.value},fix:function(e){return e.insertTextBefore(n," ")}});}function s(t,r,n){t.prefix?n.range[0]>r.range[1]&&e.report({node:t,messageId:"unexpectedAfter",data:{operator:r.value},fix:function(e){return LA.canTokensBeAdjacent(r,n)?e.removeRange([r.range[1],n.range[0]]):null}}):n.range[0]>r.range[1]&&e.report({node:t,messageId:"unexpectedBefore",data:{operator:n.value},fix:function(e){return e.removeRange([r.range[1],n.range[0]])}});}function u(e){var n="UpdateExpression"!==e.type||e.prefix?l.getFirstTokens(e,2):l.getLastTokens(e,2),i=n[0],u=n[1];if("NewExpression"!==e.type&&!e.prefix||"Keyword"!==i.type){var p=e.prefix?n[0].value:n[1].value;t(p)?r(p)?o(e,i,u):s(e,i,u):c.nonwords?o(e,i,u):s(e,i,u);}else a(e,i,u,i.value);}var c=e.options[0]||{words:!0,nonwords:!1},l=e.getSourceCode();return {UnaryExpression:u,UpdateExpression:u,NewExpression:u,YieldExpression:function(e){var t=l.getFirstTokens(e,3);!e.argument||e.delegate||a(e,t[0],t[1],"yield");},AwaitExpression:function(e){var t=l.getFirstTokens(e,3);a(e,t[0],t[1],"await");}}}},"spaced-comment":{meta:{type:"suggestion",docs:{description:"enforce consistent spacing after the `//` or `/*` in a comment",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/spaced-comment"},fixable:"whitespace",schema:[{enum:["always","never"]},{type:"object",properties:{exceptions:{type:"array",items:{type:"string"}},markers:{type:"array",items:{type:"string"}},line:{type:"object",properties:{exceptions:{type:"array",items:{type:"string"}},markers:{type:"array",items:{type:"string"}}},additionalProperties:!1},block:{type:"object",properties:{exceptions:{type:"array",items:{type:"string"}},markers:{type:"array",items:{type:"string"}},balanced:{type:"boolean",default:!1}},additionalProperties:!1}},additionalProperties:!1}]},create:function(e){function t(t,r,n,i){var o="block"===t.type.toLowerCase()?"/*":"//";e.report({node:t,fix:function(e){var r=t.range[0],i=r+2;return a?(n&&(i+=n[0].length),e.insertTextAfterRange([r,i]," ")):(i+=n[0].length,e.replaceTextRange([r,i],o+(n[1]?n[1]:"")))},message:r,data:{refChar:i}});}function r(t,r,n){e.report({node:t,fix:function(e){if(a)return e.insertTextAfterRange([t.range[0],t.range[1]-2]," ");var r=t.range[1]-2,i=r-n[0].length;return e.replaceTextRange([i,r],"")},message:r});}function n(e){var n=e.type.toLowerCase(),i=u[n],o="block"===n?"/*":"//";if(0!==e.value.length&&!i.markers.has(e.value)){var c=i.beginRegex.exec(e.value),l=i.endRegex.exec(e.value);if(a){if(!c){var p=i.captureMarker.exec(e.value),f=p?o+p[0]:o;i.hasExceptions?t(e,"Expected exception block, space or tab after '{{refChar}}' in comment.",p,f):t(e,"Expected space or tab after '{{refChar}}' in comment.",p,f);}s&&"block"===n&&!l&&r(e,"Expected space or tab before '*/' in comment.");}else c&&(c[1]?t(e,"Unexpected space or tab after marker ({{refChar}}) in comment.",c,c[1]):t(e,"Unexpected space or tab after '{{refChar}}' in comment.",c,o)),s&&"block"===n&&l&&r(e,"Unexpected space or tab before '*/' in comment.",l);}}var i=e.getSourceCode(),a="never"!==e.options[0],o=e.options[1]||{},s=o.block&&o.block.balanced,u=["block","line"].reduce((function(e,t){var r=function(e){return -1===e.indexOf("*")?e.concat("*"):e}(o[t]&&o[t].markers||o.markers||[]),n=o[t]&&o[t].exceptions||o.exceptions||[];return e[t]={beginRegex:a?BN(r,n):ON(r),endRegex:s&&a?new RegExp("".concat(IN(n),"$"),"u"):new RegExp("[ \t]+$","u"),hasExceptions:0<n.length,captureMarker:new RegExp("^(".concat(r.map(TN).join("|"),")"),"u"),markers:new Set(r)},e}),{});return {Program:function(){i.getAllComments().filter((function(e){return "Shebang"!==e.type})).forEach(n);}}}},strict:{meta:{type:"suggestion",docs:{description:"require or disallow strict mode directives",category:"Strict Mode",recommended:!1,url:"https://eslint.org/docs/rules/strict"},schema:[{enum:["never","global","function","safe"]}],fixable:"code",messages:{function:"Use the function form of 'use strict'.",global:"Use the global form of 'use strict'.",multiple:"Multiple 'use strict' directives.",never:"Strict mode is not permitted.",unnecessary:"Unnecessary 'use strict' directive.",module:"'use strict' is unnecessary inside of modules.",implied:"'use strict' is unnecessary when implied strict mode is enabled.",unnecessaryInClasses:"'use strict' is unnecessary inside of classes.",nonSimpleParameterList:"'use strict' directive inside a function with non-simple parameter list throws a syntax error since ES2016.",wrap:"Wrap {{name}} in a function with 'use strict' directive."}},create:function(e){function t(e){return "multiple"===e||"unnecessary"===e||"module"===e||"implied"===e||"unnecessaryInClasses"===e}function r(e){return function(t){return t.remove(e)}}function n(t,n,i,a,o){t.slice(n,i).forEach((function(t){e.report({node:t,messageId:a,fix:o?r(t):null});}));}function i(e,t,r){n(e,0,e.length,t,r);}function a(e,t,r){n(e,1,e.length,t,r);}function o(t,n){var i=0<p.length,o=0===l.length&&0===p.length,s=0<l.length&&l[l.length-1],u=0<n.length;u?(jN(t.params)?s?e.report({node:n[0],messageId:"unnecessary",fix:r(n[0])}):i&&e.report({node:n[0],messageId:"unnecessaryInClasses",fix:r(n[0])}):e.report({node:n[0],messageId:"nonSimpleParameterList"}),a(n,"multiple",!0)):o&&(jN(t.params)?e.report({node:t,messageId:"function"}):e.report({node:t,messageId:"wrap",data:{name:LA.getFunctionNameWithKind(t)}})),l.push(s||u);}function s(){l.pop();}function u(r){var n="BlockStatement"===r.body.type?LN(r.body.body):[];"function"===f?o(r,n):0<n.length&&(jN(r.params)?i(n,f,t(f)):(e.report({node:n[0],messageId:"nonSimpleParameterList"}),a(n,"multiple",!0)));}var c=e.parserOptions.ecmaFeatures||{},l=[],p=[],f=e.options[0]||"safe";c.impliedStrict?f="implied":"safe"===f&&(f=c.globalReturn?"global":"function");var h={Program:function(r){var n=LN(r.body);"module"===r.sourceType&&(f="module"),"global"===f?(0<r.body.length&&0===n.length&&e.report({node:r,messageId:"global"}),a(n,"multiple",!0)):i(n,f,t(f));},FunctionDeclaration:u,FunctionExpression:u,ArrowFunctionExpression:u};return "function"===f&&Object.assign(h,{ClassBody:function(){p.push(!0);},"ClassBody:exit":function(){p.pop();},"FunctionDeclaration:exit":s,"FunctionExpression:exit":s,"ArrowFunctionExpression:exit":s}),h}},"switch-colon-spacing":{meta:{type:"layout",docs:{description:"enforce spacing around colons of switch statements",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/switch-colon-spacing"},schema:[{type:"object",properties:{before:{type:"boolean",default:!1},after:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"whitespace",messages:{expectedBefore:"Expected space(s) before this colon.",expectedAfter:"Expected space(s) after this colon.",unexpectedBefore:"Unexpected space(s) before this colon.",unexpectedAfter:"Unexpected space(s) after this colon."}},create:function(e){function t(e,t,r){return LA.isClosingBraceToken(t)||!LA.isTokenOnSameLine(e,t)||n.isSpaceBetweenTokens(e,t)===r}function r(e,t,r,i){return function(e,t){return null!==n.getFirstTokenBetween(e,t,{includeComments:!0,filter:LA.isCommentToken})}(t,r)?null:i?e.insertTextAfter(t," "):e.removeRange([t.range[1],r.range[0]])}var n=e.getSourceCode(),i=e.options[0]||{},a=!0===i.before,o=!1!==i.after;return {SwitchCase:function(i){var s=function(e){return e.test?n.getTokenAfter(e.test,LA.isColonToken):n.getFirstToken(e,1)}(i),u=n.getTokenBefore(s),c=n.getTokenAfter(s);t(u,s,a)||e.report({node:i,loc:s.loc,messageId:a?"expectedBefore":"unexpectedBefore",fix:function(e){return r(e,u,s,a)}}),t(s,c,o)||e.report({node:i,loc:s.loc,messageId:o?"expectedAfter":"unexpectedAfter",fix:function(e){return r(e,s,c,o)}});}}}},"symbol-description":{meta:{type:"suggestion",docs:{description:"require symbol descriptions",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/symbol-description"},fixable:null,schema:[],messages:{expected:"Expected Symbol to have a description."}},create:function(e){function t(t){0===t.arguments.length&&e.report({node:t,messageId:"expected"});}return {"Program:exit":function(){var r=e.getScope(),n=LA.getVariableByName(r,"Symbol");n&&0===n.defs.length&&n.references.forEach((function(e){var r=e.identifier;LA.isCallee(r)&&t(r.parent);}));}}}},"template-curly-spacing":{meta:{type:"layout",docs:{description:"require or disallow spacing around embedded expressions of template strings",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/template-curly-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]}],messages:{expectedBefore:"Expected space(s) before '}'.",expectedAfter:"Expected space(s) after '${'.",unexpectedBefore:"Unexpected space(s) before '}'.",unexpectedAfter:"Unexpected space(s) after '${'."}},create:function(e){function t(t){var r=n.getTokenBefore(t);r&&MN.test(t.value)&&LA.isTokenOnSameLine(r,t)&&n.isSpaceBetweenTokens(r,t)!==i&&e.report({loc:t.loc.start,messageId:"".concat(a,"Before"),fix:function(e){return i?e.insertTextBefore(t," "):e.removeRange([r.range[1],t.range[0]])}});}function r(t){var r=n.getTokenAfter(t);r&&RN.test(t.value)&&LA.isTokenOnSameLine(t,r)&&n.isSpaceBetweenTokens(t,r)!==i&&e.report({loc:{line:t.loc.end.line,column:t.loc.end.column-2},messageId:"".concat(a,"After"),fix:function(e){return i?e.insertTextAfter(t," "):e.removeRange([t.range[1],r.range[0]])}});}var n=e.getSourceCode(),i="always"===e.options[0],a=i?"expected":"unexpected";return {TemplateElement:function(e){var i=n.getFirstToken(e);t(i),r(i);}}}},"template-tag-spacing":{meta:{type:"layout",docs:{description:"require or disallow spacing between template tags and their literals",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/template-tag-spacing"},fixable:"whitespace",schema:[{enum:["always","never"]}],messages:{unexpected:"Unexpected space between template tag and template literal.",missing:"Missing space between template tag and template literal."}},create:function(e){var t="always"!==e.options[0],r=e.getSourceCode();return {TaggedTemplateExpression:function(n){var i=r.getTokenBefore(n.quasi),a=r.getFirstToken(n.quasi),o=r.isSpaceBetweenTokens(i,a);t&&o?e.report({node:n,loc:i.loc.start,messageId:"unexpected",fix:function(e){var t=r.getCommentsBefore(n.quasi);return t.some((function(e){return "Line"===e.type}))?null:e.replaceTextRange([i.range[1],a.range[0]],t.reduce((function(e,t){return e+r.getText(t)}),""))}}):!t&&!o&&e.report({node:n,loc:i.loc.start,messageId:"missing",fix:function(e){return e.insertTextAfter(i," ")}});}}}},"unicode-bom":{meta:{type:"layout",docs:{description:"require or disallow Unicode byte order mark (BOM)",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/unicode-bom"},fixable:"whitespace",schema:[{enum:["always","never"]}],messages:{expected:"Expected Unicode BOM (Byte Order Mark).",unexpected:"Unexpected Unicode BOM (Byte Order Mark)."}},create:function(e){return {Program:function(t){var r=e.getSourceCode(),n={column:0,line:1},i=e.options[0]||"never";r.hasBOM||"always"!==i?r.hasBOM&&"never"===i&&e.report({node:t,loc:n,messageId:"unexpected",fix:function(e){return e.removeRange([-1,0])}}):e.report({node:t,loc:n,messageId:"expected",fix:function(e){return e.insertTextBeforeRange([0,1],"\ufeff")}});}}}},"use-isnan":{meta:{type:"problem",docs:{description:"require calls to `isNaN()` when checking for `NaN`",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/use-isnan"},schema:[{type:"object",properties:{enforceForSwitchCase:{type:"boolean",default:!1},enforceForIndexOf:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{comparisonWithNaN:"Use the isNaN function to compare with NaN.",switchNaN:"'switch(NaN)' can never match a case clause. Use Number.isNaN instead of the switch.",caseNaN:"'case NaN' can never match. Use Number.isNaN before the switch.",indexOfNaN:"Array prototype method '{{ methodName }}' cannot find NaN."}},create:function(e){var t=e.options[0]&&e.options[0].enforceForSwitchCase,r=e.options[0]&&e.options[0].enforceForIndexOf,n={BinaryExpression:function(t){/^(?:[<>]|[!=]=)=?$/.test(t.operator)&&(VN(t.left)||VN(t.right))&&e.report({node:t,messageId:"comparisonWithNaN"});}};return t&&(n.SwitchStatement=function(t){VN(t.discriminant)&&e.report({node:t,messageId:"switchNaN"});var r=!0,n=!1,i=void 0;try{for(var a,o=t.cases[Symbol.iterator]();!(r=(a=o.next()).done);r=!0){var s=a.value;VN(s.test)&&e.report({node:s,messageId:"caseNaN"});}}catch(e){n=!0,i=e;}finally{try{r||null==o.return||o.return();}finally{if(n)throw i}}}),r&&(n.CallExpression=function(t){var r=t.callee;if("MemberExpression"===r.type){var n=LA.getStaticPropertyName(r);("indexOf"===n||"lastIndexOf"===n)&&1===t.arguments.length&&VN(t.arguments[0])&&e.report({node:t,messageId:"indexOfNaN",data:{methodName:n}});}}),n}},"valid-jsdoc":{meta:{type:"suggestion",docs:{description:"enforce valid JSDoc comments",category:"Possible Errors",recommended:!1,url:"https://eslint.org/docs/rules/valid-jsdoc"},schema:[{type:"object",properties:{prefer:{type:"object",additionalProperties:{type:"string"}},preferType:{type:"object",additionalProperties:{type:"string"}},requireReturn:{type:"boolean",default:!0},requireParamDescription:{type:"boolean",default:!0},requireReturnDescription:{type:"boolean",default:!0},matchDescription:{type:"string"},requireReturnType:{type:"boolean",default:!0},requireParamType:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"code",messages:{unexpectedTag:"Unexpected @{{title}} tag; function has no return statement.",expected:"Expected JSDoc for '{{name}}' but found '{{jsdocName}}'.",use:"Use @{{name}} instead.",useType:"Use '{{expectedTypeName}}' instead of '{{currentTypeName}}'.",syntaxError:"JSDoc syntax error.",missingBrace:"JSDoc type missing brace.",missingParamDesc:"Missing JSDoc parameter description for '{{name}}'.",missingParamType:"Missing JSDoc parameter type for '{{name}}'.",missingReturnType:"Missing JSDoc return type.",missingReturnDesc:"Missing JSDoc return description.",missingReturn:"Missing JSDoc @{{returns}} for function.",missingParam:"Missing JSDoc for parameter '{{name}}'.",duplicateParam:"Duplicate JSDoc parameter '{{name}}'.",unsatisfiedDesc:"JSDoc description does not satisfy the regex pattern."},deprecated:!0,replacedBy:[]},create:function(e){function t(e){return "ClassExpression"===e.type||"ClassDeclaration"===e.type}function r(e){v.push({returnPresent:"ArrowFunctionExpression"===e.type&&"BlockStatement"!==e.body.type||t(e)||e.async});}function n(e){return null===e.type||"void"===e.type.name||"UndefinedLiteral"===e.type.type}function i(e){var t;return e.name?t=e:e.expression&&(t=e.expression),{currentType:t,expectedTypeName:t&&g[t.name]}}function a(e,t){return {start:l.getLocFromIndex(e.range[0]+2+t.range[0]),end:l.getLocFromIndex(e.range[0]+2+t.range[1])}}function o(t,r){if(r&&function(e){return "UndefinedLiteral"!==e&&"NullLiteral"!==e&&"NullableLiteral"!==e&&"FunctionType"!==e&&"AllLiteral"!==e}(r.type)){var n=[],s=[];switch(r.type){case"TypeApplication":s="UnionType"===r.applications[0].type?r.applications[0].elements:r.applications,n.push(i(r));break;case"RecordType":s=r.fields;break;case"UnionType":case"ArrayType":s=r.elements;break;case"FieldType":r.value&&n.push(i(r.value));break;default:n.push(i(r));}s.forEach(o.bind(null,t)),n.forEach((function(r){r.expectedTypeName&&r.expectedTypeName!==r.currentType.name&&e.report({node:t,messageId:"useType",loc:a(t,r.currentType),data:{currentTypeName:r.currentType.name,expectedTypeName:r.expectedTypeName},fix:function(e){return e.replaceTextRange(r.currentType.range.map((function(e){return t.range[0]+2+e})),r.expectedTypeName)}});}));}}function s(r){var i,s=l.getJSDocComment(r),g=v.pop(),x=Object.create(null),b=[],E=!1,C=!1,S=!1,k=!1,D=!1;if(s){var F;try{F=OA.parse(s.value,{strict:!0,unwrap:!0,sloppy:!0,range:!0});}catch(t){return void(/brace[s\u017F]/i.test(t.message)?e.report({node:s,messageId:"missingBrace"}):e.report({node:s,messageId:"syntaxError"}))}F.tags.forEach((function(t){switch(t.title.toLowerCase()){case"param":case"arg":case"argument":b.push(t);break;case"return":case"returns":E=!0,i=t;break;case"constructor":case"class":C=!0;break;case"override":case"inheritdoc":k=!0;break;case"abstract":case"virtual":D=!0;break;case"interface":S=!0;}if(Object.prototype.hasOwnProperty.call(c,t.title)&&t.title!==c[t.title]){var r=a(s,t);e.report({node:s,messageId:"use",loc:{start:r.start,end:{line:r.start.line,column:r.start.column+"@".concat(t.title).length}},data:{name:c[t.title]},fix:function(e){return e.replaceTextRange([s.range[0]+t.range[0]+3,s.range[0]+t.range[0]+t.title.length+3],c[t.title])}});}y&&t.type&&o(s,t.type);})),b.forEach((function(t){m&&!t.type&&e.report({node:s,messageId:"missingParamType",loc:a(s,t),data:{name:t.name}}),!t.description&&f&&e.report({node:s,messageId:"missingParamDesc",loc:a(s,t),data:{name:t.name}}),x[t.name]?e.report({node:s,messageId:"duplicateParam",loc:a(s,t),data:{name:t.name}}):-1===t.name.indexOf(".")&&(x[t.name]=t);})),E&&(p||g.returnPresent||null!==i.type&&n(i)||D?(d&&!i.type&&e.report({node:s,messageId:"missingReturnType"}),!n(i)&&!i.description&&h&&e.report({node:s,messageId:"missingReturnDesc"})):e.report({node:s,messageId:"unexpectedTag",loc:a(s,i),data:{title:i.title}})),k||E||C||S||"get"===r.parent.kind||"constructor"===r.parent.kind||"set"===r.parent.kind||t(r)||!p&&(!g.returnPresent||r.async)||e.report({node:s,messageId:"missingReturn",data:{returns:c.returns||"returns"}});var A=Object.keys(x);if(r.params&&r.params.forEach((function(t,r){var n="AssignmentPattern"===t.type?t.left:t;if("Identifier"===n.type){var i=n.name;A[r]&&i!==A[r]?e.report({node:s,messageId:"expected",loc:a(s,x[A[r]]),data:{name:i,jsdocName:A[r]}}):!x[i]&&!k&&e.report({node:s,messageId:"missingParam",data:{name:i}});}})),u.matchDescription)new RegExp(u.matchDescription,"u").test(F.description)||e.report({node:s,messageId:"unsatisfiedDesc"});}}var u=e.options[0]||{},c=u.prefer||{},l=e.getSourceCode(),p=!1!==u.requireReturn,f=!1!==u.requireParamDescription,h=!1!==u.requireReturnDescription,d=!1!==u.requireReturnType,m=!1!==u.requireParamType,g=u.preferType||{},y=0!==Object.keys(g).length,v=[];return {ArrowFunctionExpression:r,FunctionExpression:r,FunctionDeclaration:r,ClassExpression:r,ClassDeclaration:r,"ArrowFunctionExpression:exit":s,"FunctionExpression:exit":s,"FunctionDeclaration:exit":s,"ClassExpression:exit":s,"ClassDeclaration:exit":s,ReturnStatement:function(e){var t=v[v.length-1];t&&null!==e.argument&&(t.returnPresent=!0);}}}},"valid-typeof":{meta:{type:"problem",docs:{description:"enforce comparing `typeof` expressions against valid strings",category:"Possible Errors",recommended:!0,url:"https://eslint.org/docs/rules/valid-typeof"},schema:[{type:"object",properties:{requireStringLiterals:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{invalidValue:"Invalid typeof comparison value.",notString:"Typeof comparisons should be to string literals."}},create:function(e){function t(e){return "UnaryExpression"===e.type&&"typeof"===e.operator}var r=["symbol","undefined","object","boolean","number","string","function","bigint"],n=["==","===","!=","!=="],i=e.options[0]&&e.options[0].requireStringLiterals;return {UnaryExpression:function(a){if(t(a)){var o=e.getAncestors().pop();if("BinaryExpression"===o.type&&-1!==n.indexOf(o.operator)){var s=o.left===a?o.right:o.left;if("Literal"===s.type||"TemplateLiteral"===s.type&&!s.expressions.length){var u="Literal"===s.type?s.value:s.quasis[0].value.cooked;-1===r.indexOf(u)&&e.report({node:s,messageId:"invalidValue"});}else i&&!t(s)&&e.report({node:s,messageId:"notString"});}}}}}},"vars-on-top":{meta:{type:"suggestion",docs:{description:"require `var` declarations be placed at the top of their containing scope",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/vars-on-top"},schema:[],messages:{top:"All 'var' declarations must be at the top of the function scope."}},create:function(e){function t(e){return "ExpressionStatement"===e.type&&"Literal"===e.expression.type&&"string"==typeof e.expression.value}function r(e){return "ImportDeclaration"===e.type||"ImportSpecifier"===e.type||"ImportDefaultSpecifier"===e.type||"ImportNamespaceSpecifier"===e.type}function n(e){return "VariableDeclaration"===e.type||"ExportNamedDeclaration"===e.type&&e.declaration&&"VariableDeclaration"===e.declaration.type}function i(e,i){for(var a=i.length,o=0;o<a&&(t(i[o])||r(i[o]));++o);for(;o<a;++o){if(!n(i[o]))return !1;if(i[o]===e)return !0}return !1}function a(t,r){i(t,r.body)||e.report({node:t,messageId:"top"});}function o(t,r,n){/Function/.test(n.type)&&"BlockStatement"===r.type&&i(t,r.body)||e.report({node:t,messageId:"top"});}return {"VariableDeclaration[kind='var']":function(e){"ExportNamedDeclaration"===e.parent.type?a(e.parent,e.parent.parent):"Program"===e.parent.type?a(e,e.parent):o(e,e.parent,e.parent.parent);}}}},"wrap-iife":{meta:{type:"layout",docs:{description:"require parentheses around immediate `function` invocations",category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/wrap-iife"},schema:[{enum:["outside","inside","any"]},{type:"object",properties:{functionPrototypeMethods:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code",messages:{wrapInvocation:"Wrap an immediate function invocation in parentheses.",wrapExpression:"Wrap only the function expression in parens.",moveInvocation:"Move the invocation into the parens that contain the function."}},create:function(e){function t(e){return LA.isParenthesised(a,e)}function r(e){var t=e.callee;return "FunctionExpression"===t.type?t:!i||"MemberExpression"!==t.type||"FunctionExpression"!==t.object.type||"call"!==LA.getStaticPropertyName(t)&&"apply"!==LA.getStaticPropertyName(t)?null:t.object}var n=e.options[0]||"outside",i=e.options[1]&&e.options[1].functionPrototypeMethods,a=e.getSourceCode();return {CallExpression:function(i){var o=r(i);if(o){var s=t(i),u=t(o);s||u?"inside"!==n||u?"outside"===n&&!s&&e.report({node:i,messageId:"moveInvocation",fix:function(e){var t=a.getTokenAfter(o);return e.replaceTextRange([t.range[0],i.range[1]],"".concat(a.getText().slice(t.range[1],i.range[1]),")"))}}):e.report({node:i,messageId:"wrapExpression",fix:function(e){var t=a.getTokenAfter(i);return e.replaceTextRange([o.range[1],t.range[1]],")".concat(a.getText().slice(o.range[1],t.range[0])))}}):e.report({node:i,messageId:"wrapInvocation",fix:function(e){var t="inside"===n?o:i;return e.replaceText(t,"(".concat(a.getText(t),")"))}});}}}}},"wrap-regex":{meta:{type:"layout",docs:{description:"require parenthesis around regex literals",category:"Stylistic Issues",recommended:!1,url:"https://eslint.org/docs/rules/wrap-regex"},schema:[],fixable:"code",messages:{requireParens:"Wrap the regexp literal in parens to disambiguate the slash."}},create:function(e){var t=e.getSourceCode();return {Literal:function(r){if("RegularExpression"===t.getFirstToken(r).type){var n=t.getTokenBefore(r),i=t.getTokenAfter(r),a=e.getAncestors(),o=a[a.length-1];"MemberExpression"!==o.type||o.object!==r||n&&"("===n.value&&i&&")"===i.value||e.report({node:r,messageId:"requireParens",fix:function(e){return e.replaceText(r,"(".concat(t.getText(r),")"))}});}}}}},"yield-star-spacing":{meta:{type:"layout",docs:{description:"require or disallow spacing around the `*` in `yield*` expressions",category:"ECMAScript 6",recommended:!1,url:"https://eslint.org/docs/rules/yield-star-spacing"},fixable:"whitespace",schema:[{oneOf:[{enum:["before","after","both","neither"]},{type:"object",properties:{before:{type:"boolean"},after:{type:"boolean"}},additionalProperties:!1}]}],messages:{missingBefore:"Missing space before *.",missingAfter:"Missing space after *.",unexpectedBefore:"Unexpected space before *.",unexpectedAfter:"Unexpected space after *."}},create:function(e){function t(t,i,a){if(r.isSpaceBetweenTokens(i,a)!==n[t]){var o,s="*"===i.value,u=n[t],c=s?i:a;o=u?"before"===t?"missingBefore":"missingAfter":"before"===t?"unexpectedBefore":"unexpectedAfter",e.report({node:c,messageId:o,fix:function(e){return u?s?e.insertTextAfter(c," "):e.insertTextBefore(c," "):e.removeRange([i.range[1],a.range[0]])}});}}var r=e.getSourceCode(),n=function(e){return e&&"string"!=typeof e?e:{before:{before:!0,after:!1},after:{before:!1,after:!0},both:{before:!0,after:!0},neither:{before:!1,after:!1}}[e||"after"]}(e.options[0]);return {YieldExpression:function(e){if(e.delegate){var n=r.getFirstTokens(e,3),i=n[0],a=n[1],o=n[2];t("before",i,a),t("after",a,o);}}}}},yoda:{meta:{type:"suggestion",docs:{description:'require or disallow "Yoda" conditions',category:"Best Practices",recommended:!1,url:"https://eslint.org/docs/rules/yoda"},schema:[{enum:["always","never"]},{type:"object",properties:{exceptRange:{type:"boolean",default:!1},onlyEquality:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code",messages:{expected:"Expected literal to be on the {{expectedSide}} side of {{operator}}."}},create:function(e){function t(e){var t=e.left,r=e.right;return "LogicalExpression"===e.type&&"BinaryExpression"===t.type&&"BinaryExpression"===r.type&&UN(t.operator)&&UN(r.operator)&&(function(){var n,i;return "&&"===e.operator&&(n=WN(t.left))&&(i=WN(r.right,Number.POSITIVE_INFINITY))&&n.value<=i.value&&$N(t.right,r.left)}()||function(){var n,i;return "||"===e.operator&&(n=WN(t.right,Number.NEGATIVE_INFINITY))&&(i=WN(r.left))&&n.value<=i.value&&$N(t.left,r.right)}())&&LA.isParenthesised(o,e)}function r(e){var t=o.getTokenBefore(e),r=o.getFirstTokenBetween(e.left,e.right,(function(t){return t.value===e.operator})),n=o.getText().slice(o.getTokenBefore(r).range[1],r.range[0]),i=o.getText().slice(r.range[1],o.getTokenAfter(r).range[0]),a=o.getText().slice(e.range[0],o.getTokenBefore(r).range[1]),u=o.getTokenAfter(r),c=o.getText().slice(u.range[0],e.range[1]),l="";return t&&t.range[1]===e.range[0]&&!LA.canTokensBeAdjacent(t,u)&&(l=" "),l+c+n+s[r.value]+i+a}var n="always"===e.options[0],i=e.options[1]&&e.options[1].exceptRange,a=e.options[1]&&e.options[1].onlyEquality,o=e.getSourceCode(),s={"===":"===","!==":"!==","==":"==","!=":"!=","<":">",">":"<","<=":">=",">=":"<="};return {BinaryExpression:function(o){var s=n?o.left:o.right,u=n?o.right:o.left;"Literal"!==u.type&&!qN(u)||"Literal"===s.type||qN(s)||!function(e){return /^(==|===)$/.test(e)}(o.operator)&&a||!function(e){return /^(==|===|!=|!==|<|>|<=|>=)$/.test(e)}(o.operator)||i&&t(e.getAncestors().pop())||e.report({node:o,messageId:"expected",data:{operator:o.operator,expectedSide:n?"left":"right"},fix:function(e){return e.replaceText(o,r(o))}});}}}}},zN=function(e){function t(){var e;return a(this,t),(e=v(this,h(t).call(this))).defineRules(GN),e}return f(t,AD.linter_1),t}();

   const editor = new EditorView({
     doc: "\n\n\n\n\n\n\n", //TODO: multiple lines at creation
     extensions: [
       basicSetup,
       javascript(),
       lintGutter(),
       // @ts-ignore: ts2350
       linter(esLint(new zN())),
       EditorView.updateListener.of((update) => {
         const codeedited = new CustomEvent("codeedited", {
           detail: update.state.doc.toString(),
         });
         document.getElementById("codeeditor").dispatchEvent(codeedited);
       }),
     ],
     parent: document.getElementById("codeeditor"),
   });

   exports.editor = editor;

   Object.defineProperty(exports, '__esModule', { value: true });

   return exports;

})({});
